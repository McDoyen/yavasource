// This file was generated by Mendix Modeler 7.7.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package replacement.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the Replacement module
	public static void apply_ReplacementCode(IContext context, replacement.proxies.ReplacementCode _replacementCode)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReplacementCode", _replacementCode == null ? null : _replacementCode.getMendixObject());
			Core.execute(context, "Replacement.Apply_ReplacementCode", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static metamodel.proxies.PrimitiveTypeEnum attributeMemberType(IContext context, replacement.proxies.ReplacementItem _replacementItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReplacementItem", _replacementItem == null ? null : _replacementItem.getMendixObject());
			java.lang.String result = (java.lang.String)Core.execute(context, "Replacement.AttributeMemberType", params);
			if (result == null)
				return null;
			return metamodel.proxies.PrimitiveTypeEnum.valueOf(result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditReplacementCode_AfterCommit(IContext context, replacement.proxies.ReplacementCode _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Replacement.AuditReplacementCode_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditReplacementCode_AfterDelete(IContext context, replacement.proxies.ReplacementCode _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Replacement.AuditReplacementCode_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditReplacementCode_GetAuditRecord(IContext context, replacement.proxies.ReplacementCode _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Replacement.AuditReplacementCode_GetAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditReplacementItem_AfterCommit(IContext context, replacement.proxies.ReplacementItem _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Replacement.AuditReplacementItem_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditReplacementItem_AfterDelete(IContext context, replacement.proxies.ReplacementItem _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Replacement.AuditReplacementItem_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditReplacementValidation_AfterCommit(IContext context, replacement.proxies.ReplacementValidation _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Replacement.AuditReplacementValidation_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditReplacementValidation_AfterDelete(IContext context, replacement.proxies.ReplacementValidation _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Replacement.AuditReplacementValidation_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditReplacementValidation_GetAuditRecord(IContext context, replacement.proxies.ReplacementValidation _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Replacement.AuditReplacementValidation_GetAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean cancelReplacementItem(IContext context, replacement.proxies.ReplacementItem _replacementItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReplacementItem", _replacementItem == null ? null : _replacementItem.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Replacement.CancelReplacementItem", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void changeReference(IContext context, replacement.proxies.ReplacementItem _replacementItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReplacementItem", _replacementItem == null ? null : _replacementItem.getMendixObject());
			Core.execute(context, "Replacement.ChangeReference", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void changeReferencedObject(IContext context, replacement.proxies.ReplacementItem _replacementItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReplacementItem", _replacementItem == null ? null : _replacementItem.getMendixObject());
			Core.execute(context, "Replacement.ChangeReferencedObject", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void changeReferenceType(IContext context, replacement.proxies.ReplacementItem _replacementItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReplacementItem", _replacementItem == null ? null : _replacementItem.getMendixObject());
			Core.execute(context, "Replacement.ChangeReferenceType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void changeRefresh(IContext context, replacement.proxies.ReplacementItem _replacementItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReplacementItem", _replacementItem == null ? null : _replacementItem.getMendixObject());
			Core.execute(context, "Replacement.ChangeRefresh", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void changeType(IContext context, replacement.proxies.ReplacementItem _replacementItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReplacementItem", _replacementItem == null ? null : _replacementItem.getMendixObject());
			Core.execute(context, "Replacement.ChangeType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean checkUsage_Boolean(IContext context, replacement.proxies.ReplacementCode _replacementCode)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReplacementCode", _replacementCode == null ? null : _replacementCode.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Replacement.CheckUsage_Boolean", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String checkUsage_String(IContext context, replacement.proxies.ReplacementCode _replacementCode)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReplacementCode", _replacementCode == null ? null : _replacementCode.getMendixObject());
			return (java.lang.String)Core.execute(context, "Replacement.CheckUsage_String", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean checkUsageBeforeDelete(IContext context, replacement.proxies.ReplacementCode _replacementCode)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReplacementCode", _replacementCode == null ? null : _replacementCode.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Replacement.CheckUsageBeforeDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyReplacementCode(IContext context, replacement.proxies.ReplacementCode _replacementCode)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReplacementCode", _replacementCode == null ? null : _replacementCode.getMendixObject());
			Core.execute(context, "Replacement.CopyReplacementCode", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyReplacementCodeList(IContext context, java.util.List<replacement.proxies.ReplacementCode> _replacementCodeList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_replacementCodeList = null;
			if (_replacementCodeList != null)
			{
				listparam_replacementCodeList = new java.util.ArrayList<IMendixObject>();
				for (replacement.proxies.ReplacementCode obj : _replacementCodeList)
					listparam_replacementCodeList.add(obj.getMendixObject());
			}
			params.put("ReplacementCodeList", listparam_replacementCodeList);
			Core.execute(context, "Replacement.CopyReplacementCodeList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyReplacementItem(IContext context, replacement.proxies.ReplacementItem _replacementItem, replacement.proxies.ReplacementCode _newReplacementCode)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReplacementItem", _replacementItem == null ? null : _replacementItem.getMendixObject());
			params.put("NewReplacementCode", _newReplacementCode == null ? null : _newReplacementCode.getMendixObject());
			Core.execute(context, "Replacement.CopyReplacementItem", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getNewReplacementCodeName(IContext context, java.lang.String _code)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Code", _code);
			return (java.lang.String)Core.execute(context, "Replacement.GetNewReplacementCodeName", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<metamodel.proxies.MendixRelation> getReference(IContext context, replacement.proxies.ReplacementItem _replacementItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReplacementItem", _replacementItem == null ? null : _replacementItem.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Replacement.GetReference", params);
			java.util.List<metamodel.proxies.MendixRelation> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<metamodel.proxies.MendixRelation>();
				for (IMendixObject obj : objs)
					result.add(metamodel.proxies.MendixRelation.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<replacement.proxies.ReplacementCode> getReferenceCode(IContext context, replacement.proxies.ReplacementItem _replacementItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReplacementItem", _replacementItem == null ? null : _replacementItem.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Replacement.GetReferenceCode", params);
			java.util.List<replacement.proxies.ReplacementCode> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<replacement.proxies.ReplacementCode>();
				for (IMendixObject obj : objs)
					result.add(replacement.proxies.ReplacementCode.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<metamodel.proxies.MendixEntity> getReferencedObject(IContext context, replacement.proxies.ReplacementItem _replacementItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReplacementItem", _replacementItem == null ? null : _replacementItem.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Replacement.GetReferencedObject", params);
			java.util.List<metamodel.proxies.MendixEntity> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<metamodel.proxies.MendixEntity>();
				for (IMendixObject obj : objs)
					result.add(metamodel.proxies.MendixEntity.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void newReplacementItem(IContext context, replacement.proxies.ReplacementCode _replacementCode)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReplacementCode", _replacementCode == null ? null : _replacementCode.getMendixObject());
			Core.execute(context, "Replacement.NewReplacementItem", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openPossibleEmailTemplateReplacementCodes(IContext context, emailplus.proxies.MessageTemplate _emailTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("EmailTemplate", _emailTemplate == null ? null : _emailTemplate.getMendixObject());
			Core.execute(context, "Replacement.OpenPossibleEmailTemplateReplacementCodes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openPossibleNotificationReplacementCodes(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Replacement.OpenPossibleNotificationReplacementCodes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openPossibleTransitionMessageReplacementCodes(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Replacement.OpenPossibleTransitionMessageReplacementCodes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static metamodel.proxies.PrimitiveTypeEnum referencedAttributeMemberType(IContext context, replacement.proxies.ReplacementItem _replacementItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReplacementItem", _replacementItem == null ? null : _replacementItem.getMendixObject());
			java.lang.String result = (java.lang.String)Core.execute(context, "Replacement.ReferencedAttributeMemberType", params);
			if (result == null)
				return null;
			return metamodel.proxies.PrimitiveTypeEnum.valueOf(result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void saveAndOpen(IContext context, replacement.proxies.ReplacementCode _replacementCode)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReplacementCode", _replacementCode == null ? null : _replacementCode.getMendixObject());
			Core.execute(context, "Replacement.SaveAndOpen", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void selectReplacementCodeToCopy(IContext context, replacement.proxies.ReplacementCode _replacementCode, replacement.proxies.ReplacementValidation _replacementValidation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReplacementCode", _replacementCode == null ? null : _replacementCode.getMendixObject());
			params.put("ReplacementValidation", _replacementValidation == null ? null : _replacementValidation.getMendixObject());
			Core.execute(context, "Replacement.SelectReplacementCodeToCopy", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void showUsage(IContext context, replacement.proxies.ReplacementCode _replacementCode)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReplacementCode", _replacementCode == null ? null : _replacementCode.getMendixObject());
			Core.execute(context, "Replacement.ShowUsage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateReplacementCode(IContext context, replacement.proxies.ReplacementCode _replacementCode)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReplacementCode", _replacementCode == null ? null : _replacementCode.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Replacement.ValidateReplacementCode", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateReplacementItem(IContext context, replacement.proxies.ReplacementItem _replacementItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReplacementItem", _replacementItem == null ? null : _replacementItem.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Replacement.ValidateReplacementItem", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}