// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package replacement.proxies;

public class ReplacementCode
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject replacementCodeMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Replacement.ReplacementCode";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Code("Code"),
		Description("Description"),
		BodyText("BodyText"),
		IsUsed("IsUsed"),
		ReplacementCode_MendixEntity("Replacement.ReplacementCode_MendixEntity");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public ReplacementCode(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Replacement.ReplacementCode"));
	}

	protected ReplacementCode(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject replacementCodeMendixObject)
	{
		if (replacementCodeMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Replacement.ReplacementCode", replacementCodeMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Replacement.ReplacementCode");

		this.replacementCodeMendixObject = replacementCodeMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'ReplacementCode.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static replacement.proxies.ReplacementCode initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return replacement.proxies.ReplacementCode.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static replacement.proxies.ReplacementCode initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new replacement.proxies.ReplacementCode(context, mendixObject);
	}

	public static replacement.proxies.ReplacementCode load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return replacement.proxies.ReplacementCode.initialize(context, mendixObject);
	}

	public static java.util.List<replacement.proxies.ReplacementCode> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<replacement.proxies.ReplacementCode> result = new java.util.ArrayList<replacement.proxies.ReplacementCode>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Replacement.ReplacementCode" + xpathConstraint))
			result.add(replacement.proxies.ReplacementCode.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Code
	 */
	public final java.lang.String getCode()
	{
		return getCode(getContext());
	}

	/**
	 * @param context
	 * @return value of Code
	 */
	public final java.lang.String getCode(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Code.toString());
	}

	/**
	 * Set value of Code
	 * @param code
	 */
	public final void setCode(java.lang.String code)
	{
		setCode(getContext(), code);
	}

	/**
	 * Set value of Code
	 * @param context
	 * @param code
	 */
	public final void setCode(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String code)
	{
		getMendixObject().setValue(context, MemberNames.Code.toString(), code);
	}

	/**
	 * @return value of Description
	 */
	public final java.lang.String getDescription()
	{
		return getDescription(getContext());
	}

	/**
	 * @param context
	 * @return value of Description
	 */
	public final java.lang.String getDescription(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Description.toString());
	}

	/**
	 * Set value of Description
	 * @param description
	 */
	public final void setDescription(java.lang.String description)
	{
		setDescription(getContext(), description);
	}

	/**
	 * Set value of Description
	 * @param context
	 * @param description
	 */
	public final void setDescription(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String description)
	{
		getMendixObject().setValue(context, MemberNames.Description.toString(), description);
	}

	/**
	 * @return value of BodyText
	 */
	public final java.lang.String getBodyText()
	{
		return getBodyText(getContext());
	}

	/**
	 * @param context
	 * @return value of BodyText
	 */
	public final java.lang.String getBodyText(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.BodyText.toString());
	}

	/**
	 * Set value of BodyText
	 * @param bodytext
	 */
	public final void setBodyText(java.lang.String bodytext)
	{
		setBodyText(getContext(), bodytext);
	}

	/**
	 * Set value of BodyText
	 * @param context
	 * @param bodytext
	 */
	public final void setBodyText(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String bodytext)
	{
		getMendixObject().setValue(context, MemberNames.BodyText.toString(), bodytext);
	}

	/**
	 * @return value of IsUsed
	 */
	public final java.lang.Boolean getIsUsed()
	{
		return getIsUsed(getContext());
	}

	/**
	 * @param context
	 * @return value of IsUsed
	 */
	public final java.lang.Boolean getIsUsed(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsUsed.toString());
	}

	/**
	 * Set value of IsUsed
	 * @param isused
	 */
	public final void setIsUsed(java.lang.Boolean isused)
	{
		setIsUsed(getContext(), isused);
	}

	/**
	 * Set value of IsUsed
	 * @param context
	 * @param isused
	 */
	public final void setIsUsed(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean isused)
	{
		getMendixObject().setValue(context, MemberNames.IsUsed.toString(), isused);
	}

	/**
	 * @return value of ReplacementCode_MendixEntity
	 */
	public final metamodel.proxies.MendixEntity getReplacementCode_MendixEntity() throws com.mendix.core.CoreException
	{
		return getReplacementCode_MendixEntity(getContext());
	}

	/**
	 * @param context
	 * @return value of ReplacementCode_MendixEntity
	 */
	public final metamodel.proxies.MendixEntity getReplacementCode_MendixEntity(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		metamodel.proxies.MendixEntity result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ReplacementCode_MendixEntity.toString());
		if (identifier != null)
			result = metamodel.proxies.MendixEntity.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ReplacementCode_MendixEntity
	 * @param replacementcode_mendixentity
	 */
	public final void setReplacementCode_MendixEntity(metamodel.proxies.MendixEntity replacementcode_mendixentity)
	{
		setReplacementCode_MendixEntity(getContext(), replacementcode_mendixentity);
	}

	/**
	 * Set value of ReplacementCode_MendixEntity
	 * @param context
	 * @param replacementcode_mendixentity
	 */
	public final void setReplacementCode_MendixEntity(com.mendix.systemwideinterfaces.core.IContext context, metamodel.proxies.MendixEntity replacementcode_mendixentity)
	{
		if (replacementcode_mendixentity == null)
			getMendixObject().setValue(context, MemberNames.ReplacementCode_MendixEntity.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ReplacementCode_MendixEntity.toString(), replacementcode_mendixentity.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return replacementCodeMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final replacement.proxies.ReplacementCode that = (replacement.proxies.ReplacementCode) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Replacement.ReplacementCode";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
