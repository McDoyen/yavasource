// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package emailplus.proxies;

public enum MessageSource
{
	Action_Function_Push_Notification(new java.lang.String[][] { new java.lang.String[] { "en_US", "Action Function Push Notification" }, new java.lang.String[] { "nl_NL", "Actiefunctie push notificatie" }, new java.lang.String[] { "de_DE", "Aktion Push-Benachrichtigungs-Funktion" } }),
	Approval_Request(new java.lang.String[][] { new java.lang.String[] { "en_US", "Approval Request" }, new java.lang.String[] { "nl_NL", "Goedkeuringsverzoek" }, new java.lang.String[] { "de_DE", "Abnahme-Anfrage" } }),
	Approval_Result(new java.lang.String[][] { new java.lang.String[] { "en_US", "Approval Result" }, new java.lang.String[] { "nl_NL", "Goedkeuringsresultaat" }, new java.lang.String[] { "de_DE", "Abnahme-Ergebnis    " } }),
	Aspect_Change(new java.lang.String[][] { new java.lang.String[] { "en_US", "Aspect Change" }, new java.lang.String[] { "nl_NL", "Aspect wijziging" }, new java.lang.String[] { "de_DE", "Aspekt ändern" } }),
	Automatic_Solve_From_Other_Request(new java.lang.String[][] { new java.lang.String[] { "en_US", "Automatic Solve From Other Request" }, new java.lang.String[] { "nl_NL", "Automatische oplossing vanuit een ander verzoek" }, new java.lang.String[] { "de_DE", "Automatische Lösung durch andere Anfragen" } }),
	Automatic_Close_From_Other_Request(new java.lang.String[][] { new java.lang.String[] { "en_US", "Automatic Close From Other Request" }, new java.lang.String[] { "nl_NL", "Automatische afsluiting vanuit een ander verzoek" }, new java.lang.String[] { "de_DE", "Automatischer Abschluss durch andere Anfragen" } }),
	Cancel_From_Workflow(new java.lang.String[][] { new java.lang.String[] { "en_US", "Cancel From Workflow" }, new java.lang.String[] { "nl_NL", "Annuleer vanuit workflow" }, new java.lang.String[] { "de_DE", "Workflow abbrechen" } }),
	Cancel_Planned_Request(new java.lang.String[][] { new java.lang.String[] { "en_US", "Cancel Planned Request" }, new java.lang.String[] { "nl_NL", "Gepland verzoek annuleren" }, new java.lang.String[] { "de_DE", "Geplanten Request abbrechen" } }),
	Queued_Cancel(new java.lang.String[][] { new java.lang.String[] { "en_US", "Cancel Queued Request" }, new java.lang.String[] { "nl_NL", "Wachtrij verzoek geannuleerd" } }),
	CI_Support(new java.lang.String[][] { new java.lang.String[] { "en_US", "CI Support" }, new java.lang.String[] { "nl_NL", "CI Support" }, new java.lang.String[] { "de_DE", "CI Support" } }),
	Delivery(new java.lang.String[][] { new java.lang.String[] { "en_US", "Delivery" }, new java.lang.String[] { "nl_NL", "Levering" }, new java.lang.String[] { "de_DE", "Zulieferung " } }),
	Incoming(new java.lang.String[][] { new java.lang.String[] { "en_US", "Incoming Message" }, new java.lang.String[] { "nl_NL", "Inkomend" }, new java.lang.String[] { "de_DE", "Eingehende" } }),
	ProcessFree(new java.lang.String[][] { new java.lang.String[] { "en_US", "Manual" }, new java.lang.String[] { "nl_NL", "Handmatig" }, new java.lang.String[] { "de_DE", "Manual" } }),
	Matrix_Change(new java.lang.String[][] { new java.lang.String[] { "en_US", "Matrix Change" }, new java.lang.String[] { "nl_NL", "Matrix wijziging" }, new java.lang.String[] { "de_DE", "Matrix ändern" } }),
	ProcessNotification(new java.lang.String[][] { new java.lang.String[] { "en_US", "Notification" }, new java.lang.String[] { "nl_NL", "Notificatie" }, new java.lang.String[] { "de_DE", "Benachrichtigung " } }),
	Phase_Change(new java.lang.String[][] { new java.lang.String[] { "en_US", "Phase Change" }, new java.lang.String[] { "nl_NL", "Fasewijziging" }, new java.lang.String[] { "de_DE", "Phasenwechsel" } }),
	Portal_Cancel(new java.lang.String[][] { new java.lang.String[] { "en_US", "Portal Cancel" }, new java.lang.String[] { "nl_NL", "Portaal annuleren" }, new java.lang.String[] { "de_DE", "Portal abbrechen." } }),
	Portal_Close(new java.lang.String[][] { new java.lang.String[] { "en_US", "Portal Close" }, new java.lang.String[] { "nl_NL", "Portaal afsluiten" }, new java.lang.String[] { "de_DE", "Portal schließen" } }),
	Portal_Reject(new java.lang.String[][] { new java.lang.String[] { "en_US", "Portal Reject" }, new java.lang.String[] { "nl_NL", "Portaal afwijzen" }, new java.lang.String[] { "de_DE", "Portal ablehnen." } }),
	Questionnaire(new java.lang.String[][] { new java.lang.String[] { "en_US", "Questionnaire" }, new java.lang.String[] { "nl_NL", "Vragenlijst" }, new java.lang.String[] { "de_DE", "Fragenbogen " } }),
	ProcessReminder(new java.lang.String[][] { new java.lang.String[] { "en_US", "Reminder" }, new java.lang.String[] { "nl_NL", "Herinnering" }, new java.lang.String[] { "de_DE", "Erinnerung" } }),
	ReplyToIncoming(new java.lang.String[][] { new java.lang.String[] { "en_US", "Reply To Incoming" }, new java.lang.String[] { "nl_NL", "Antwoord aan inkomende" }, new java.lang.String[] { "de_DE", "Antwort auf eingehende" } }),
	RequestEvent(new java.lang.String[][] { new java.lang.String[] { "en_US", "Request Event" }, new java.lang.String[] { "nl_NL", "Verzoek event" }, new java.lang.String[] { "de_DE", "Anfrage-Ereignis" } }),
	State_Change(new java.lang.String[][] { new java.lang.String[] { "en_US", "State Change" }, new java.lang.String[] { "nl_NL", "Statuswijziging" }, new java.lang.String[] { "de_DE", "Statuswechsel" } }),
	Start_Planned_Request(new java.lang.String[][] { new java.lang.String[] { "en_US", "Start Planned Request" }, new java.lang.String[] { "nl_NL", "Start gepland verzoek" }, new java.lang.String[] { "de_DE", "Geplante Anfrage starten" } }),
	Take_Over(new java.lang.String[][] { new java.lang.String[] { "en_US", "Take Over" }, new java.lang.String[] { "nl_NL", "Overnemen" }, new java.lang.String[] { "de_DE", "Übernehmen" } }),
	Take_Ownership(new java.lang.String[][] { new java.lang.String[] { "en_US", "Take Ownership" }, new java.lang.String[] { "nl_NL", "Eigenaar worden" }, new java.lang.String[] { "de_DE", "Eigentümerschaft übernehmen" } });

	private java.util.Map<java.lang.String, java.lang.String> captions;

	private MessageSource(java.lang.String[][] captionStrings)
	{
		this.captions = new java.util.HashMap<java.lang.String, java.lang.String>();
		for (java.lang.String[] captionString : captionStrings)
			captions.put(captionString[0], captionString[1]);
	}

	public java.lang.String getCaption(java.lang.String languageCode)
	{
		if (captions.containsKey(languageCode))
			return captions.get(languageCode);
		return captions.get("en_US");
	}

	public java.lang.String getCaption()
	{
		return captions.get("en_US");
	}
}
