// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package emailplus.proxies;

public class MessageRecipient
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject messageRecipientMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "EmailPlus.MessageRecipient";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		RecipientType("RecipientType"),
		IsReadInternally("IsReadInternally"),
		DeleteEntry("DeleteEntry"),
		MessageRecipient_Message("EmailPlus.MessageRecipient_Message"),
		MessageRecipient_Person("EmailPlus.MessageRecipient_Person"),
		MessageRecipient_Contact_Info("EmailPlus.MessageRecipient_Contact_Info");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public MessageRecipient(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "EmailPlus.MessageRecipient"));
	}

	protected MessageRecipient(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject messageRecipientMendixObject)
	{
		if (messageRecipientMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("EmailPlus.MessageRecipient", messageRecipientMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a EmailPlus.MessageRecipient");

		this.messageRecipientMendixObject = messageRecipientMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'MessageRecipient.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static emailplus.proxies.MessageRecipient initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return emailplus.proxies.MessageRecipient.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static emailplus.proxies.MessageRecipient initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new emailplus.proxies.MessageRecipient(context, mendixObject);
	}

	public static emailplus.proxies.MessageRecipient load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return emailplus.proxies.MessageRecipient.initialize(context, mendixObject);
	}

	public static java.util.List<emailplus.proxies.MessageRecipient> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<emailplus.proxies.MessageRecipient> result = new java.util.ArrayList<emailplus.proxies.MessageRecipient>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//EmailPlus.MessageRecipient" + xpathConstraint))
			result.add(emailplus.proxies.MessageRecipient.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * Set value of RecipientType
	 * @param recipienttype
	 */
	public final emailplus.proxies.MessageRecipientTypeEnum getRecipientType()
	{
		return getRecipientType(getContext());
	}

	/**
	 * @param context
	 * @return value of RecipientType
	 */
	public final emailplus.proxies.MessageRecipientTypeEnum getRecipientType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.RecipientType.toString());
		if (obj == null)
			return null;

		return emailplus.proxies.MessageRecipientTypeEnum.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of RecipientType
	 * @param recipienttype
	 */
	public final void setRecipientType(emailplus.proxies.MessageRecipientTypeEnum recipienttype)
	{
		setRecipientType(getContext(), recipienttype);
	}

	/**
	 * Set value of RecipientType
	 * @param context
	 * @param recipienttype
	 */
	public final void setRecipientType(com.mendix.systemwideinterfaces.core.IContext context, emailplus.proxies.MessageRecipientTypeEnum recipienttype)
	{
		if (recipienttype != null)
			getMendixObject().setValue(context, MemberNames.RecipientType.toString(), recipienttype.toString());
		else
			getMendixObject().setValue(context, MemberNames.RecipientType.toString(), null);
	}

	/**
	 * @return value of IsReadInternally
	 */
	public final java.lang.Boolean getIsReadInternally()
	{
		return getIsReadInternally(getContext());
	}

	/**
	 * @param context
	 * @return value of IsReadInternally
	 */
	public final java.lang.Boolean getIsReadInternally(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsReadInternally.toString());
	}

	/**
	 * Set value of IsReadInternally
	 * @param isreadinternally
	 */
	public final void setIsReadInternally(java.lang.Boolean isreadinternally)
	{
		setIsReadInternally(getContext(), isreadinternally);
	}

	/**
	 * Set value of IsReadInternally
	 * @param context
	 * @param isreadinternally
	 */
	public final void setIsReadInternally(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean isreadinternally)
	{
		getMendixObject().setValue(context, MemberNames.IsReadInternally.toString(), isreadinternally);
	}

	/**
	 * @return value of DeleteEntry
	 */
	public final java.lang.Boolean getDeleteEntry()
	{
		return getDeleteEntry(getContext());
	}

	/**
	 * @param context
	 * @return value of DeleteEntry
	 */
	public final java.lang.Boolean getDeleteEntry(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.DeleteEntry.toString());
	}

	/**
	 * Set value of DeleteEntry
	 * @param deleteentry
	 */
	public final void setDeleteEntry(java.lang.Boolean deleteentry)
	{
		setDeleteEntry(getContext(), deleteentry);
	}

	/**
	 * Set value of DeleteEntry
	 * @param context
	 * @param deleteentry
	 */
	public final void setDeleteEntry(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean deleteentry)
	{
		getMendixObject().setValue(context, MemberNames.DeleteEntry.toString(), deleteentry);
	}

	/**
	 * @return value of MessageRecipient_Message
	 */
	public final emailplus.proxies.Message getMessageRecipient_Message() throws com.mendix.core.CoreException
	{
		return getMessageRecipient_Message(getContext());
	}

	/**
	 * @param context
	 * @return value of MessageRecipient_Message
	 */
	public final emailplus.proxies.Message getMessageRecipient_Message(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		emailplus.proxies.Message result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.MessageRecipient_Message.toString());
		if (identifier != null)
			result = emailplus.proxies.Message.load(context, identifier);
		return result;
	}

	/**
	 * Set value of MessageRecipient_Message
	 * @param messagerecipient_message
	 */
	public final void setMessageRecipient_Message(emailplus.proxies.Message messagerecipient_message)
	{
		setMessageRecipient_Message(getContext(), messagerecipient_message);
	}

	/**
	 * Set value of MessageRecipient_Message
	 * @param context
	 * @param messagerecipient_message
	 */
	public final void setMessageRecipient_Message(com.mendix.systemwideinterfaces.core.IContext context, emailplus.proxies.Message messagerecipient_message)
	{
		if (messagerecipient_message == null)
			getMendixObject().setValue(context, MemberNames.MessageRecipient_Message.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.MessageRecipient_Message.toString(), messagerecipient_message.getMendixObject().getId());
	}

	/**
	 * @return value of MessageRecipient_Person
	 */
	public final nap.proxies.Person getMessageRecipient_Person() throws com.mendix.core.CoreException
	{
		return getMessageRecipient_Person(getContext());
	}

	/**
	 * @param context
	 * @return value of MessageRecipient_Person
	 */
	public final nap.proxies.Person getMessageRecipient_Person(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		nap.proxies.Person result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.MessageRecipient_Person.toString());
		if (identifier != null)
			result = nap.proxies.Person.load(context, identifier);
		return result;
	}

	/**
	 * Set value of MessageRecipient_Person
	 * @param messagerecipient_person
	 */
	public final void setMessageRecipient_Person(nap.proxies.Person messagerecipient_person)
	{
		setMessageRecipient_Person(getContext(), messagerecipient_person);
	}

	/**
	 * Set value of MessageRecipient_Person
	 * @param context
	 * @param messagerecipient_person
	 */
	public final void setMessageRecipient_Person(com.mendix.systemwideinterfaces.core.IContext context, nap.proxies.Person messagerecipient_person)
	{
		if (messagerecipient_person == null)
			getMendixObject().setValue(context, MemberNames.MessageRecipient_Person.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.MessageRecipient_Person.toString(), messagerecipient_person.getMendixObject().getId());
	}

	/**
	 * @return value of MessageRecipient_Contact_Info
	 */
	public final java.util.List<nap.proxies.Contact_Info> getMessageRecipient_Contact_Info() throws com.mendix.core.CoreException
	{
		return getMessageRecipient_Contact_Info(getContext());
	}

	/**
	 * @param context
	 * @return value of MessageRecipient_Contact_Info
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<nap.proxies.Contact_Info> getMessageRecipient_Contact_Info(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<nap.proxies.Contact_Info> result = new java.util.ArrayList<nap.proxies.Contact_Info>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.MessageRecipient_Contact_Info.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(nap.proxies.Contact_Info.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of MessageRecipient_Contact_Info
	 * @param messagerecipient_contact_info
	 */
	public final void setMessageRecipient_Contact_Info(java.util.List<nap.proxies.Contact_Info> messagerecipient_contact_info)
	{
		setMessageRecipient_Contact_Info(getContext(), messagerecipient_contact_info);
	}

	/**
	 * Set value of MessageRecipient_Contact_Info
	 * @param context
	 * @param messagerecipient_contact_info
	 */
	public final void setMessageRecipient_Contact_Info(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<nap.proxies.Contact_Info> messagerecipient_contact_info)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (nap.proxies.Contact_Info proxyObject : messagerecipient_contact_info)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.MessageRecipient_Contact_Info.toString(), identifiers);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return messageRecipientMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final emailplus.proxies.MessageRecipient that = (emailplus.proxies.MessageRecipient) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "EmailPlus.MessageRecipient";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
