// This file was generated by Mendix Modeler 7.7.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package emailplus.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the EmailPlus module
	public static void apply_MessageTemplate(IContext context, emailplus.proxies.MessageTemplate _emailTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("EmailTemplate", _emailTemplate == null ? null : _emailTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.Apply_MessageTemplate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditEmailAccount_AfterCommit(IContext context, emailplus.proxies.EmailAccount _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "EmailPlus.AuditEmailAccount_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditEmailAccount_AfterDelete(IContext context, emailplus.proxies.EmailAccount _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "EmailPlus.AuditEmailAccount_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditEmailAccount_GetAuditRecord(IContext context, emailplus.proxies.EmailAccount _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "EmailPlus.AuditEmailAccount_GetAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditEmailSettings_AfterCommit(IContext context, emailplus.proxies.EmailSettings _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "EmailPlus.AuditEmailSettings_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditEmailSettings_AfterDelete(IContext context, emailplus.proxies.EmailSettings _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "EmailPlus.AuditEmailSettings_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditEmailSettings_GetAuditRecord(IContext context, emailplus.proxies.EmailSettings _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "EmailPlus.AuditEmailSettings_GetAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditMessageTemplate_AfterCommit(IContext context, emailplus.proxies.MessageTemplate _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "EmailPlus.AuditMessageTemplate_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditMessageTemplate_AfterDelete(IContext context, emailplus.proxies.MessageTemplate _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "EmailPlus.AuditMessageTemplate_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditMessageTemplate_GetAuditRecord(IContext context, emailplus.proxies.MessageTemplate _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "EmailPlus.AuditMessageTemplate_GetAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bC_IncomingMessageRequestTemplate(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "EmailPlus.BC_IncomingMessageRequestTemplate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3937] Wrapper flow;
	 * Call all [Before Commit]-microflows from this microflow. This way it is possible to determine the order of execution.
	 */
	public static boolean bC_Message(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "EmailPlus.BC_Message", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 3734
	 * The attachment cannot be deleted if there are still other messages linked to this attachment.
	 */
	public static boolean bD_CheckRelatedAttachments(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "EmailPlus.BD_CheckRelatedAttachments", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void checkAndProcessMessageTrigger(IContext context, emailplus.proxies.Message _message, emailplus.proxies.EmailMessage _emailMessage)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			params.put("EmailMessage", _emailMessage == null ? null : _emailMessage.getMendixObject());
			Core.execute(context, "EmailPlus.CheckAndProcessMessageTrigger", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean checkDefaultMatrix(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "EmailPlus.CheckDefaultMatrix", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static emailplus.proxies.Message checkForTrigger_IncomingMessage(IContext context, emailplus.proxies.Message _message, emailplus.proxies.EmailMessage _emailMessage)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			params.put("EmailMessage", _emailMessage == null ? null : _emailMessage.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "EmailPlus.CheckForTrigger_IncomingMessage", params);
			return result == null ? null : emailplus.proxies.Message.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<emailplus.proxies.IncomingMessageTrigger> checkForTriggerByAddress(IContext context, java.lang.String _inputString)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputString", _inputString);
			java.util.List<IMendixObject> objs = Core.execute(context, "EmailPlus.CheckForTriggerByAddress", params);
			java.util.List<emailplus.proxies.IncomingMessageTrigger> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<emailplus.proxies.IncomingMessageTrigger>();
				for (IMendixObject obj : objs)
					result.add(emailplus.proxies.IncomingMessageTrigger.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * Centrale EMail box - hoe kunnen we onderscheid maken wie de emails gaat verwerken omdat er straks ATM en ICT emails in staan. (#192985)
	 */
	public static java.util.List<emailplus.proxies.IncomingMessageTrigger> checkForTriggerByInbox(IContext context, emailplus.proxies.EmailMessage _emailMessage)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("EmailMessage", _emailMessage == null ? null : _emailMessage.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "EmailPlus.CheckForTriggerByInbox", params);
			java.util.List<emailplus.proxies.IncomingMessageTrigger> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<emailplus.proxies.IncomingMessageTrigger>();
				for (IMendixObject obj : objs)
					result.add(emailplus.proxies.IncomingMessageTrigger.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<emailplus.proxies.IncomingMessageTrigger> checkForTriggerBySubject(IContext context, java.lang.String _inputString)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputString", _inputString);
			java.util.List<IMendixObject> objs = Core.execute(context, "EmailPlus.CheckForTriggerBySubject", params);
			java.util.List<emailplus.proxies.IncomingMessageTrigger> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<emailplus.proxies.IncomingMessageTrigger>();
				for (IMendixObject obj : objs)
					result.add(emailplus.proxies.IncomingMessageTrigger.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean checkIfHasAttachments(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "EmailPlus.CheckIfHasAttachments", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void cI_SetAspect(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, java.lang.Long _contractCount, slm.proxies.Contract_Type _contractType, java.lang.Long _maxDropDownResultSize, boolean _withReceivingOrganisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("ContractCount", _contractCount);
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("MaxDropDownResultSize", _maxDropDownResultSize);
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			Core.execute(context, "EmailPlus.CI_SetAspect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<cmdb.proxies.ConfigurationItem> cIList_All_EntityAccess(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			java.util.List<IMendixObject> objs = Core.execute(context, "EmailPlus.CIList_All_EntityAccess", params);
			java.util.List<cmdb.proxies.ConfigurationItem> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<cmdb.proxies.ConfigurationItem>();
				for (IMendixObject obj : objs)
					result.add(cmdb.proxies.ConfigurationItem.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long cIList_Count(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			return (java.lang.Long)Core.execute(context, "EmailPlus.CIList_Count", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static cmdb.proxies.ConfigurationItem cIList_First(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			IMendixObject result = (IMendixObject)Core.execute(context, "EmailPlus.CIList_First", params);
			return result == null ? null : cmdb.proxies.ConfigurationItem.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<cmdb.proxies.ConfigurationItem> cIList_SLA_All_EntityAccess(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "EmailPlus.CIList_SLA_All_EntityAccess", params);
			java.util.List<cmdb.proxies.ConfigurationItem> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<cmdb.proxies.ConfigurationItem>();
				for (IMendixObject obj : objs)
					result.add(cmdb.proxies.ConfigurationItem.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<cmdb.proxies.ConfigurationItem> cIList_SLA_All_PopUp(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "EmailPlus.CIList_SLA_All_PopUp", params);
			java.util.List<cmdb.proxies.ConfigurationItem> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<cmdb.proxies.ConfigurationItem>();
				for (IMendixObject obj : objs)
					result.add(cmdb.proxies.ConfigurationItem.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void contract_SetAspect(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, slm.proxies.Contract_Type _contractType, java.lang.Long _maxDropDownResultSize, boolean _withReceivingOrganisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("MaxDropDownResultSize", _maxDropDownResultSize);
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			Core.execute(context, "EmailPlus.Contract_SetAspect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Contract> contractList_All_EntityAccess(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			java.util.List<IMendixObject> objs = Core.execute(context, "EmailPlus.ContractList_All_EntityAccess", params);
			java.util.List<slm.proxies.Contract> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Contract>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Contract.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long contractList_Count(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			return (java.lang.Long)Core.execute(context, "EmailPlus.ContractList_Count", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static slm.proxies.Contract contractList_First(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			IMendixObject result = (IMendixObject)Core.execute(context, "EmailPlus.ContractList_First", params);
			return result == null ? null : slm.proxies.Contract.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Contract> contractList_SLA_All_EntityAccess(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "EmailPlus.ContractList_SLA_All_EntityAccess", params);
			java.util.List<slm.proxies.Contract> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Contract>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Contract.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Contract> contractList_SLA_All_PopUp(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "EmailPlus.ContractList_SLA_All_PopUp", params);
			java.util.List<slm.proxies.Contract> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Contract>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Contract.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static process.proxies.Request copyRequestTemplateToRequest(IContext context, emailplus.proxies.IncomingMessageTrigger _incomingMessageTrigger, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageTrigger", _incomingMessageTrigger == null ? null : _incomingMessageTrigger.getMendixObject());
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("Message", _message == null ? null : _message.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "EmailPlus.CopyRequestTemplateToRequest", params);
			return result == null ? null : process.proxies.Request.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyTemplate(IContext context, emailplus.proxies.MessageTemplate _emailTemplatePlus)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("EmailTemplatePlus", _emailTemplatePlus == null ? null : _emailTemplatePlus.getMendixObject());
			Core.execute(context, "EmailPlus.CopyTemplate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 1193549 configurable subject for manual emails
	 */
	public static void copyTemplateToEmail(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			Core.execute(context, "EmailPlus.CopyTemplateToEmail", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String createTokenCode(IContext context, java.lang.String _token, java.lang.String _tag)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Token", _token);
			params.put("Tag", _tag);
			return (java.lang.String)Core.execute(context, "EmailPlus.CreateTokenCode", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deliveringOrganisation_SetAspect(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, java.lang.Long _contractCount, slm.proxies.Contract_Type _contractType, java.lang.Long _maxDropDownResultSize, boolean _withReceivingOrganisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("ContractCount", _contractCount);
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("MaxDropDownResultSize", _maxDropDownResultSize);
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			Core.execute(context, "EmailPlus.DeliveringOrganisation_SetAspect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<nap.proxies.Organisation> deliveringOrganisationList_All_EntityAccess(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			java.util.List<IMendixObject> objs = Core.execute(context, "EmailPlus.DeliveringOrganisationList_All_EntityAccess", params);
			java.util.List<nap.proxies.Organisation> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<nap.proxies.Organisation>();
				for (IMendixObject obj : objs)
					result.add(nap.proxies.Organisation.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long deliveringOrganisationList_Count(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			return (java.lang.Long)Core.execute(context, "EmailPlus.DeliveringOrganisationList_Count", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static nap.proxies.Organisation deliveringOrganisationList_First(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			IMendixObject result = (IMendixObject)Core.execute(context, "EmailPlus.DeliveringOrganisationList_First", params);
			return result == null ? null : nap.proxies.Organisation.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<nap.proxies.Organisation> deliveringOrganisationList_SLA_All_EntityAccess(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "EmailPlus.DeliveringOrganisationList_SLA_All_EntityAccess", params);
			java.util.List<nap.proxies.Organisation> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<nap.proxies.Organisation>();
				for (IMendixObject obj : objs)
					result.add(nap.proxies.Organisation.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<nap.proxies.Organisation> deliveringOrganisationList_SLA_All_PopUp(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "EmailPlus.DeliveringOrganisationList_SLA_All_PopUp", params);
			java.util.List<nap.proxies.Organisation> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<nap.proxies.Organisation>();
				for (IMendixObject obj : objs)
					result.add(nap.proxies.Organisation.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<nap.proxies.Organisation> dS_CallerOrganisation(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "EmailPlus.DS_CallerOrganisation", params);
			java.util.List<nap.proxies.Organisation> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<nap.proxies.Organisation>();
				for (IMendixObject obj : objs)
					result.add(nap.proxies.Organisation.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<categories.proxies.Category> dS_GetCategoryListOpening_Childs(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "EmailPlus.DS_GetCategoryListOpening_Childs", params);
			java.util.List<categories.proxies.Category> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<categories.proxies.Category>();
				for (IMendixObject obj : objs)
					result.add(categories.proxies.Category.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<categories.proxies.Category> dS_GetCategoryListOpening_Root(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "EmailPlus.DS_GetCategoryListOpening_Root", params);
			java.util.List<categories.proxies.Category> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<categories.proxies.Category>();
				for (IMendixObject obj : objs)
					result.add(categories.proxies.Category.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<nap.proxies.Location> dS_GetLocationsByPerson(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "EmailPlus.DS_GetLocationsByPerson", params);
			java.util.List<nap.proxies.Location> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<nap.proxies.Location>();
				for (IMendixObject obj : objs)
					result.add(nap.proxies.Location.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<nap.proxies.Room> dS_GetRoomsByRequestLocation(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "EmailPlus.DS_GetRoomsByRequestLocation", params);
			java.util.List<nap.proxies.Room> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<nap.proxies.Room>();
				for (IMendixObject obj : objs)
					result.add(nap.proxies.Room.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<nap.proxies.Organisation> dS_ReceivingOrganisation(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "EmailPlus.DS_ReceivingOrganisation", params);
			java.util.List<nap.proxies.Organisation> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<nap.proxies.Organisation>();
				for (IMendixObject obj : objs)
					result.add(nap.proxies.Organisation.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean emptyImpactPossible(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			return (java.lang.Boolean)Core.execute(context, "EmailPlus.EmptyImpactPossible", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean emptyPriorityPossible(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			return (java.lang.Boolean)Core.execute(context, "EmailPlus.EmptyPriorityPossible", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean emptyUrgencyPossible(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			return (java.lang.Boolean)Core.execute(context, "EmailPlus.EmptyUrgencyPossible", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean encryptPassword(IContext context, emailplus.proxies.EmailAccount _emailAccount)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "EmailPlus.EncryptPassword", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void fetchIncomingMail(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "EmailPlus.FetchIncomingMail", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void fill_IUP_combination_by_Impact_Urgency_Priority(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.Fill_IUP_combination_by_Impact_Urgency_Priority", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void find_Contract_Organisation_Change_SLA_New(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.Find_Contract_Organisation_Change_SLA_New", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void findMessageForInboxReply(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			Core.execute(context, "EmailPlus.FindMessageForInboxReply", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void findRequestForRepliedMessage(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			Core.execute(context, "EmailPlus.FindRequestForRepliedMessage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean foundContract(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "EmailPlus.FoundContract", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void get_Commitment_WithContract(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, slm.proxies.Contract _contract)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("Contract", _contract == null ? null : _contract.getMendixObject());
			Core.execute(context, "EmailPlus.Get_Commitment_WithContract", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static slm_notifications.proxies.ResolveTimeBy getCommitmentResolveTimeBy(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			java.lang.String result = (java.lang.String)Core.execute(context, "EmailPlus.GetCommitmentResolveTimeBy", params);
			if (result == null)
				return null;
			return slm_notifications.proxies.ResolveTimeBy.valueOf(result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static statetransition.proxies.Matrix getDefaultMatrix(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "EmailPlus.GetDefaultMatrix", params);
			return result == null ? null : statetransition.proxies.Matrix.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<emailplus.proxies.EmailSettings> getEmailSettings(IContext context, emailplus.proxies.EmailAccount _emailAccount)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "EmailPlus.GetEmailSettings", params);
			java.util.List<emailplus.proxies.EmailSettings> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<emailplus.proxies.EmailSettings>();
				for (IMendixObject obj : objs)
					result.add(emailplus.proxies.EmailSettings.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static nap.proxies.Organisation getOrganisationForIncomingEmail(IContext context, emailplus.proxies.EmailMessage _emailMessage, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("EmailMessage", _emailMessage == null ? null : _emailMessage.getMendixObject());
			params.put("Person", _person == null ? null : _person.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "EmailPlus.GetOrganisationForIncomingEmail", params);
			return result == null ? null : nap.proxies.Organisation.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static nap.proxies.Person getPersonForIncomingEmail(IContext context, emailplus.proxies.EmailMessage _emailMessage)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("EmailMessage", _emailMessage == null ? null : _emailMessage.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "EmailPlus.GetPersonForIncomingEmail", params);
			return result == null ? null : nap.proxies.Person.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void getRecipients(IContext context, emailplus.proxies.Message _message, java.lang.String _recipientsString, emailplus.proxies.MessageRecipientTypeEnum _messageRecipientTypeEnum, boolean _isFrom)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			params.put("RecipientsString", _recipientsString);
			params.put("MessageRecipientTypeEnum", _messageRecipientTypeEnum == null ? null : _messageRecipientTypeEnum.name());
			params.put("IsFrom", _isFrom);
			Core.execute(context, "EmailPlus.GetRecipients", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getToken(IContext context, java.lang.String _tagName, java.lang.String _source)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TagName", _tagName);
			params.put("Source", _source);
			return (java.lang.String)Core.execute(context, "EmailPlus.GetToken", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void handleCategories(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, slm.proxies.Contract _contract)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("Contract", _contract == null ? null : _contract.getMendixObject());
			Core.execute(context, "EmailPlus.HandleCategories", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void impact_SetAspect(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, slm.proxies.Contract_Type _contractType, java.lang.Long _maxDropDownResultSize, java.lang.Long _contractCount, boolean _withReceivingOrganisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("MaxDropDownResultSize", _maxDropDownResultSize);
			params.put("ContractCount", _contractCount);
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			Core.execute(context, "EmailPlus.Impact_SetAspect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Impact> impactList_All_EntityAccess(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			java.util.List<IMendixObject> objs = Core.execute(context, "EmailPlus.ImpactList_All_EntityAccess", params);
			java.util.List<slm.proxies.Impact> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Impact>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Impact.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long impactList_Count(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			return (java.lang.Long)Core.execute(context, "EmailPlus.ImpactList_Count", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static slm.proxies.Impact impactList_First(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			IMendixObject result = (IMendixObject)Core.execute(context, "EmailPlus.ImpactList_First", params);
			return result == null ? null : slm.proxies.Impact.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Impact> impactList_SLA_All_EntityAccess(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "EmailPlus.ImpactList_SLA_All_EntityAccess", params);
			java.util.List<slm.proxies.Impact> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Impact>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Impact.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Impact> impactList_SLA_All_PopUp(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "EmailPlus.ImpactList_SLA_All_PopUp", params);
			java.util.List<slm.proxies.Impact> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Impact>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Impact.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void incomingMessageAddress_Create(IContext context, emailplus.proxies.IncomingMessageTrigger _incomingMessageTrigger)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageTrigger", _incomingMessageTrigger == null ? null : _incomingMessageTrigger.getMendixObject());
			Core.execute(context, "EmailPlus.IncomingMessageAddress_Create", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void incomingMessageAddress_Save(IContext context, emailplus.proxies.IncomingMessageAddress _incomingMessageAddress)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageAddress", _incomingMessageAddress == null ? null : _incomingMessageAddress.getMendixObject());
			Core.execute(context, "EmailPlus.IncomingMessageAddress_Save", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean incomingMessageAddress_Validate(IContext context, emailplus.proxies.IncomingMessageAddress _incomingMessageAddress)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageAddress", _incomingMessageAddress == null ? null : _incomingMessageAddress.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "EmailPlus.IncomingMessageAddress_Validate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void incomingMessageSubject_Create(IContext context, emailplus.proxies.IncomingMessageTrigger _incomingMessageTrigger)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageTrigger", _incomingMessageTrigger == null ? null : _incomingMessageTrigger.getMendixObject());
			Core.execute(context, "EmailPlus.IncomingMessageSubject_Create", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void incomingMessageSubject_Save(IContext context, emailplus.proxies.IncomingMessageSubject _incomingMessageSubject)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageSubject", _incomingMessageSubject == null ? null : _incomingMessageSubject.getMendixObject());
			Core.execute(context, "EmailPlus.IncomingMessageSubject_Save", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean incomingMessageSubject_Validate(IContext context, emailplus.proxies.IncomingMessageSubject _incomingMessageSubject)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageSubject", _incomingMessageSubject == null ? null : _incomingMessageSubject.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "EmailPlus.IncomingMessageSubject_Validate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long iUPCombinationList_Count(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			return (java.lang.Long)Core.execute(context, "EmailPlus.IUPCombinationList_Count", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static slm.proxies.IUP_Combination iUPCombinationList_First(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "EmailPlus.IUPCombinationList_First", params);
			return result == null ? null : slm.proxies.IUP_Combination.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AddLocation(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_AddLocation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CallingOnBehalfOfCallingOnBehalfOfActive(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_CallingOnBehalfOfCallingOnBehalfOfActive", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CallingOnBehalfOfCallingOnBehalfOfInActive(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_CallingOnBehalfOfCallingOnBehalfOfInActive", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CallingOnBehalfOfRequesterActive(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_CallingOnBehalfOfRequesterActive", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CallingOnBehalfOfRequesterInActive(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_CallingOnBehalfOfRequesterInActive", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearAspectFields_SLA(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_ClearAspectFields_SLA", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearRequestCaller(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_ClearRequestCaller", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearRequestPerson(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_ClearRequestPerson", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearServiceProcess_SLA(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_ClearServiceProcess_SLA", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClosePage(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "EmailPlus.IVK_ClosePage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CreateNewIncomingMessageRequestTemplate(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "EmailPlus.IVK_CreateNewIncomingMessageRequestTemplate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_EmailAccountCancel(IContext context, emailplus.proxies.EmailAccount _emailAccount)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_EmailAccountCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_EmailAccountSave(IContext context, emailplus.proxies.EmailAccount _emailAccount)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_EmailAccountSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_EmailAccountSaveAndClose(IContext context, emailplus.proxies.EmailAccount _emailAccount)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_EmailAccountSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_EmailSettingCancel(IContext context, emailplus.proxies.EmailSettings _emailSetting)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("EmailSetting", _emailSetting == null ? null : _emailSetting.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_EmailSettingCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_EmailSettingSave(IContext context, emailplus.proxies.EmailSettings _emailSetting)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("EmailSetting", _emailSetting == null ? null : _emailSetting.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_EmailSettingSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_EmailSettingSaveAndClose(IContext context, emailplus.proxies.EmailSettings _emailSetting)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("EmailSetting", _emailSetting == null ? null : _emailSetting.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_EmailSettingSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_IncomingMessageRequestTemplate_SelectServiceProcess(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_IncomingMessageRequestTemplate_SelectServiceProcess", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_IncomingMessageRequestTemplate_SelectSLACI(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_IncomingMessageRequestTemplate_SelectSLACI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_IncomingMessageRequestTemplate_SelectSLAContract(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_IncomingMessageRequestTemplate_SelectSLAContract", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_IncomingMessageRequestTemplate_SelectSLADeliveringOrganisation(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_IncomingMessageRequestTemplate_SelectSLADeliveringOrganisation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_IncomingMessageRequestTemplate_SelectSLAImpact(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_IncomingMessageRequestTemplate_SelectSLAImpact", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_IncomingMessageRequestTemplate_SelectSLAPriority(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_IncomingMessageRequestTemplate_SelectSLAPriority", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_IncomingMessageRequestTemplate_SelectSLAService(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_IncomingMessageRequestTemplate_SelectSLAService", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_IncomingMessageRequestTemplate_SelectSLAUrgency(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_IncomingMessageRequestTemplate_SelectSLAUrgency", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MessageAttachmentDropZoneClose(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_MessageAttachmentDropZoneClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MessageAttachmentSaveAndClose(IContext context, emailplus.proxies.MessageAttachment _messageAttachment)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MessageAttachment", _messageAttachment == null ? null : _messageAttachment.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_MessageAttachmentSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MessageImageSaveAndClose(IContext context, emailplus.proxies.MessageImage _messageImage)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MessageImage", _messageImage == null ? null : _messageImage.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_MessageImageSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MessageTemplateCancel(IContext context, emailplus.proxies.MessageTemplate _messageTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MessageTemplate", _messageTemplate == null ? null : _messageTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_MessageTemplateCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MessageTemplateSaveAndClose(IContext context, emailplus.proxies.MessageTemplate _messageTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MessageTemplate", _messageTemplate == null ? null : _messageTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_MessageTemplateSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MessageTriggerCancel(IContext context, emailplus.proxies.IncomingMessageTrigger _messageTrigger)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MessageTrigger", _messageTrigger == null ? null : _messageTrigger.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_MessageTriggerCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MessageTriggerSave(IContext context, emailplus.proxies.IncomingMessageTrigger _messageTrigger)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MessageTrigger", _messageTrigger == null ? null : _messageTrigger.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_MessageTriggerSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MessageTriggerSaveAndClose(IContext context, emailplus.proxies.IncomingMessageTrigger _messageTrigger)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MessageTrigger", _messageTrigger == null ? null : _messageTrigger.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_MessageTriggerSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenEmailAccounts(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "EmailPlus.IVK_OpenEmailAccounts", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenEmailSettings(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "EmailPlus.IVK_OpenEmailSettings", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenEmailTemplates(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "EmailPlus.IVK_OpenEmailTemplates", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenIncomingMessageRequestTemplates(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "EmailPlus.IVK_OpenIncomingMessageRequestTemplates", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenIncomingMessageTriggers(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "EmailPlus.IVK_OpenIncomingMessageTriggers", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RequestTemplate_Save(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_RequestTemplate_Save", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RequestTemplate_SaveAndClose(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_RequestTemplate_SaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RequestTemplateCancel(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _requestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RequestTemplate", _requestTemplate == null ? null : _requestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_RequestTemplateCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RetryMessageProcessing(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_RetryMessageProcessing", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectIncomingMessageRequestTemplateServiceProcess(IContext context, slm.proxies.Service_Process _service_Process, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Service_Process", _service_Process == null ? null : _service_Process.getMendixObject());
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_SelectIncomingMessageRequestTemplateServiceProcess", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectIncomingMessageRequestTemplateSLACI(IContext context, cmdb.proxies.ConfigurationItem _configurationItem, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ConfigurationItem", _configurationItem == null ? null : _configurationItem.getMendixObject());
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_SelectIncomingMessageRequestTemplateSLACI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectIncomingMessageRequestTemplateSLAContract(IContext context, slm.proxies.Contract _contract, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Contract", _contract == null ? null : _contract.getMendixObject());
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_SelectIncomingMessageRequestTemplateSLAContract", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectIncomingMessageRequestTemplateSLADeliveringOrganisation(IContext context, nap.proxies.Organisation _deliveringOrganisation, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DeliveringOrganisation", _deliveringOrganisation == null ? null : _deliveringOrganisation.getMendixObject());
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_SelectIncomingMessageRequestTemplateSLADeliveringOrganisation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectIncomingMessageRequestTemplateSLAImpact(IContext context, slm.proxies.Impact _impact, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Impact", _impact == null ? null : _impact.getMendixObject());
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_SelectIncomingMessageRequestTemplateSLAImpact", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectIncomingMessageRequestTemplateSLAPriority(IContext context, slm.proxies.Priority _priority, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Priority", _priority == null ? null : _priority.getMendixObject());
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_SelectIncomingMessageRequestTemplateSLAPriority", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectIncomingMessageRequestTemplateSLAService(IContext context, slm.proxies.Service _service, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Service", _service == null ? null : _service.getMendixObject());
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_SelectIncomingMessageRequestTemplateSLAService", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectIncomingMessageRequestTemplateSLAUrgency(IContext context, slm.proxies.Urgency _urgency, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Urgency", _urgency == null ? null : _urgency.getMendixObject());
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_SelectIncomingMessageRequestTemplateSLAUrgency", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ViewMessageEmailMessage(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			Core.execute(context, "EmailPlus.IVK_ViewMessageEmailMessage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void linkSeriesOfRepliesToRequestRecursive(IContext context, emailplus.proxies.Message _message, java.lang.Long _recursionCounter)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			params.put("RecursionCounter", _recursionCounter);
			Core.execute(context, "EmailPlus.LinkSeriesOfRepliesToRequestRecursive", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3937] Renamed with prefix "MCa_"
	 */
	public static boolean mCa_SetSendReceivedDateField(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "EmailPlus.MCa_SetSendReceivedDateField", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String messageReplaces_FreeTag(IContext context, java.lang.String _message, java.lang.String _replaceText, java.lang.String _freeTag)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message);
			params.put("ReplaceText", _replaceText);
			params.put("FreeTag", _freeTag);
			return (java.lang.String)Core.execute(context, "EmailPlus.MessageReplaces_FreeTag", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String messageReplaces_Generic(IContext context, java.lang.String _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message);
			return (java.lang.String)Core.execute(context, "EmailPlus.MessageReplaces_Generic", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String messageReplaces_RequestPlus(IContext context, process.proxies.Request _request, java.lang.String _message, java.lang.String _extraText)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Message", _message);
			params.put("ExtraText", _extraText);
			return (java.lang.String)Core.execute(context, "EmailPlus.MessageReplaces_RequestPlus", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_AppendSignatureToMessage(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			Core.execute(context, "EmailPlus.OC_AppendSignatureToMessage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_SourceCaller(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.OC_SourceCaller", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oCh_HandleLocationChange(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.OCh_HandleLocationChange", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oCh_HandleRoomChange(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.OCh_HandleRoomChange", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oCh_RequestCaller(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.OCh_RequestCaller", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oCh_RequestCallerOrganisation(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.OCh_RequestCallerOrganisation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oCh_RequestPerson(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.OCh_RequestPerson", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oCh_SetPersonIsCaller(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.OCh_SetPersonIsCaller", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oCh_SetReceivingOrganisationIsCallerOrganisation(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.OCh_SetReceivingOrganisationIsCallerOrganisation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void priority_SetAspect(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, slm.proxies.Contract_Type _contractType, java.lang.Long _maxDropDownResultSize, java.lang.Long _contractCount, boolean _withReceivingOrganisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("MaxDropDownResultSize", _maxDropDownResultSize);
			params.put("ContractCount", _contractCount);
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			Core.execute(context, "EmailPlus.Priority_SetAspect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Priority> priorityList_All_EntityAccess(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			java.util.List<IMendixObject> objs = Core.execute(context, "EmailPlus.PriorityList_All_EntityAccess", params);
			java.util.List<slm.proxies.Priority> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Priority>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Priority.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long priorityList_Count(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			return (java.lang.Long)Core.execute(context, "EmailPlus.PriorityList_Count", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static slm.proxies.Priority priorityList_First(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			IMendixObject result = (IMendixObject)Core.execute(context, "EmailPlus.PriorityList_First", params);
			return result == null ? null : slm.proxies.Priority.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Priority> priorityList_SLA_All_EntityAccess(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "EmailPlus.PriorityList_SLA_All_EntityAccess", params);
			java.util.List<slm.proxies.Priority> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Priority>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Priority.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Priority> priorityList_SLA_All_PopUp(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "EmailPlus.PriorityList_SLA_All_PopUp", params);
			java.util.List<slm.proxies.Priority> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Priority>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Priority.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void refreshAccount(IContext context, emailplus.proxies.EmailAccount _emailAccount)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
			Core.execute(context, "EmailPlus.RefreshAccount", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3109] Added Boolean as check for the " inner loop"
	 * if ';' is not found, use end of the string as end for the substring and set StopLoop to true
	 * Prevent look up of Contact Info with empty strings as Detail
	 * Do not go into the inner loop if Address is empty
	 * 
	 */
	public static void relateMultipleEmailAdressesToPersons(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			Core.execute(context, "EmailPlus.RelateMultipleEmailAdressesToPersons", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void reProcessEmail(IContext context, emailplus.proxies.EmailMessage _emailMessage)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("EmailMessage", _emailMessage == null ? null : _emailMessage.getMendixObject());
			Core.execute(context, "EmailPlus.ReProcessEmail", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void requestTemplate_Create(IContext context, emailplus.proxies.IncomingMessageTrigger _incomingMessageTrigger)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageTrigger", _incomingMessageTrigger == null ? null : _incomingMessageTrigger.getMendixObject());
			Core.execute(context, "EmailPlus.RequestTemplate_Create", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void requestTemplate_SaveClose(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.RequestTemplate_SaveClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean requestTemplate_Validate(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "EmailPlus.RequestTemplate_Validate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean requestTemplateAssociated(IContext context, emailplus.proxies.IncomingMessageTrigger _incomingMessageTrigger)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageTrigger", _incomingMessageTrigger == null ? null : _incomingMessageTrigger.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "EmailPlus.RequestTemplateAssociated", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean sanitizeMessageHTML(IContext context, emailplus.proxies.Message _message, boolean _fromGUI)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			params.put("FromGUI", _fromGUI);
			return (java.lang.Boolean)Core.execute(context, "EmailPlus.SanitizeMessageHTML", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean sanitizeMessageRequestTemplateHTML(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "EmailPlus.SanitizeMessageRequestTemplateHTML", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3937] Added checks if outgoing e-mails should be redirected, and clears CC and BCC in that case, followed by setting the To field.
	 */
	public static void sendEmailMessage(IContext context, emailplus.proxies.EmailMessage _emailMessage, boolean _attachReplyToken, boolean _fromGUI)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("EmailMessage", _emailMessage == null ? null : _emailMessage.getMendixObject());
			params.put("AttachReplyToken", _attachReplyToken);
			params.put("FromGUI", _fromGUI);
			Core.execute(context, "EmailPlus.SendEmailMessage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sendEmailsAsyncOrAsRetry(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "EmailPlus.SendEmailsAsyncOrAsRetry", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean sendMessage(IContext context, emailplus.proxies.Message _message, boolean _attachReplyToken, boolean _fromGUI)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			params.put("AttachReplyToken", _attachReplyToken);
			params.put("FromGUI", _fromGUI);
			return (java.lang.Boolean)Core.execute(context, "EmailPlus.SendMessage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sendProcessNotificationMail(IContext context, emailplus.proxies.MessageTemplate _messageTemplate, process.proxies.Request _request, process.proxies.Notification _notification, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MessageTemplate", _messageTemplate == null ? null : _messageTemplate.getMendixObject());
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Notification", _notification == null ? null : _notification.getMendixObject());
			params.put("Message", _message == null ? null : _message.getMendixObject());
			Core.execute(context, "EmailPlus.SendProcessNotificationMail", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sendProcessReminderMail(IContext context, process.proxies.Request _request, process.proxies.Reminder _reminder, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Reminder", _reminder == null ? null : _reminder.getMendixObject());
			params.put("Message", _message == null ? null : _message.getMendixObject());
			Core.execute(context, "EmailPlus.SendProcessReminderMail", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sendProcessTransitionNotificationMail(IContext context, emailplus.proxies.Message _message, emailplus.proxies.MessageTemplate _messageTemplate, process.proxies.Request _request, java.lang.String _extraText, statetransition.proxies.TransitionMessage _transitionMessage)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			params.put("MessageTemplate", _messageTemplate == null ? null : _messageTemplate.getMendixObject());
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ExtraText", _extraText);
			params.put("TransitionMessage", _transitionMessage == null ? null : _transitionMessage.getMendixObject());
			Core.execute(context, "EmailPlus.SendProcessTransitionNotificationMail", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sendRequestEventMail(IContext context, emailplus.proxies.MessageTemplate _messageTemplate, process.proxies.Request _request, emailplus.proxies.Message _message, nap.proxies.NotificationSubscription _notificationSubscription)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MessageTemplate", _messageTemplate == null ? null : _messageTemplate.getMendixObject());
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Message", _message == null ? null : _message.getMendixObject());
			params.put("NotificationSubscription", _notificationSubscription == null ? null : _notificationSubscription.getMendixObject());
			Core.execute(context, "EmailPlus.SendRequestEventMail", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void service_SetAspect(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, java.lang.Long _contractCount, slm.proxies.Contract_Type _contractType, java.lang.Long _maxDropDownResultSize, boolean _withReceivingOrganisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("ContractCount", _contractCount);
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("MaxDropDownResultSize", _maxDropDownResultSize);
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			Core.execute(context, "EmailPlus.Service_SetAspect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Service> serviceList_All_EntityAccess(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			java.util.List<IMendixObject> objs = Core.execute(context, "EmailPlus.ServiceList_All_EntityAccess", params);
			java.util.List<slm.proxies.Service> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Service>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Service.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long serviceList_Count(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			return (java.lang.Long)Core.execute(context, "EmailPlus.ServiceList_Count", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static slm.proxies.Service serviceList_First(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			IMendixObject result = (IMendixObject)Core.execute(context, "EmailPlus.ServiceList_First", params);
			return result == null ? null : slm.proxies.Service.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Service> serviceList_SLA_All_EntityAccess(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "EmailPlus.ServiceList_SLA_All_EntityAccess", params);
			java.util.List<slm.proxies.Service> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Service>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Service.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Service> serviceList_SLA_All_PopUp(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "EmailPlus.ServiceList_SLA_All_PopUp", params);
			java.util.List<slm.proxies.Service> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Service>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Service.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void serviceProcess_SetAspect(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, java.lang.Long _contractCount, slm.proxies.Contract_Type _contractType, java.lang.Long _maxDropDownResultSize, boolean _withReceivingOrganisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("ContractCount", _contractCount);
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("MaxDropDownResultSize", _maxDropDownResultSize);
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			Core.execute(context, "EmailPlus.ServiceProcess_SetAspect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Service_Process> serviceProcessList_All_EntityAccess(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			java.util.List<IMendixObject> objs = Core.execute(context, "EmailPlus.ServiceProcessList_All_EntityAccess", params);
			java.util.List<slm.proxies.Service_Process> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Service_Process>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Service_Process.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long serviceProcessList_Count(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			return (java.lang.Long)Core.execute(context, "EmailPlus.ServiceProcessList_Count", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static slm.proxies.Service_Process serviceProcessList_First(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			IMendixObject result = (IMendixObject)Core.execute(context, "EmailPlus.ServiceProcessList_First", params);
			return result == null ? null : slm.proxies.Service_Process.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Service_Process> serviceProcessList_SLA_All_EntityAccess(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "EmailPlus.ServiceProcessList_SLA_All_EntityAccess", params);
			java.util.List<slm.proxies.Service_Process> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Service_Process>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Service_Process.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Service_Process> serviceProcessList_SLA_All_PopUp(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "EmailPlus.ServiceProcessList_SLA_All_PopUp", params);
			java.util.List<slm.proxies.Service_Process> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Service_Process>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Service_Process.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setAspects(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, slm.proxies.Contract_Type _contractType, boolean _ignoreContract, boolean _ignoreServiceProcess, boolean _ignoreService, boolean _ignoreDeliveringOrganisation, boolean _ignoreImpact, boolean _ignoreCI, boolean _ignoreUrgency, boolean _ignorePriority, boolean _withReceivingOrganisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("IgnoreContract", _ignoreContract);
			params.put("IgnoreServiceProcess", _ignoreServiceProcess);
			params.put("IgnoreService", _ignoreService);
			params.put("IgnoreDeliveringOrganisation", _ignoreDeliveringOrganisation);
			params.put("IgnoreImpact", _ignoreImpact);
			params.put("IgnoreCI", _ignoreCI);
			params.put("IgnoreUrgency", _ignoreUrgency);
			params.put("IgnorePriority", _ignorePriority);
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			Core.execute(context, "EmailPlus.SetAspects", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setAspects_SLA(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.SetAspects_SLA", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setCallerLocationByDefault(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.SetCallerLocationByDefault", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setDefaultIncomingPort(IContext context, emailplus.proxies.EmailSettings _emailSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("EmailSettings", _emailSettings == null ? null : _emailSettings.getMendixObject());
			Core.execute(context, "EmailPlus.SetDefaultIncomingPort", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setDefaultOutgoingPort(IContext context, emailplus.proxies.EmailSettings _emailSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("EmailSettings", _emailSettings == null ? null : _emailSettings.getMendixObject());
			Core.execute(context, "EmailPlus.SetDefaultOutgoingPort", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setOrResetProcessType(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, slm.proxies.Contract _contract)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("Contract", _contract == null ? null : _contract.getMendixObject());
			Core.execute(context, "EmailPlus.SetOrResetProcessType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3937] Stripping HTML tags does not result in a correct plain text value.
	 */
	public static boolean setPlainMessageWhenHTMLMessage(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "EmailPlus.SetPlainMessageWhenHTMLMessage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setSamePersonByDefault(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			Core.execute(context, "EmailPlus.SetSamePersonByDefault", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String stripHTMLTAGS_AutomaticEmail(IContext context, java.lang.String _hTMLString)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("HTMLString", _hTMLString);
			return (java.lang.String)Core.execute(context, "EmailPlus.StripHTMLTAGS_AutomaticEmail", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void urgency_SetAspect(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, slm.proxies.Contract_Type _contractType, java.lang.Long _maxDropDownResultSize, java.lang.Long _contractCount, boolean _withReceivingOrganisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("MaxDropDownResultSize", _maxDropDownResultSize);
			params.put("ContractCount", _contractCount);
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			Core.execute(context, "EmailPlus.Urgency_SetAspect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Urgency> urgencyList_All_EntityAccess(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			java.util.List<IMendixObject> objs = Core.execute(context, "EmailPlus.UrgencyList_All_EntityAccess", params);
			java.util.List<slm.proxies.Urgency> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Urgency>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Urgency.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long urgencyList_Count(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			return (java.lang.Long)Core.execute(context, "EmailPlus.UrgencyList_Count", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static slm.proxies.Urgency urgencyList_First(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			IMendixObject result = (IMendixObject)Core.execute(context, "EmailPlus.UrgencyList_First", params);
			return result == null ? null : slm.proxies.Urgency.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Urgency> urgencyList_SLA_All_EntityAccess(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "EmailPlus.UrgencyList_SLA_All_EntityAccess", params);
			java.util.List<slm.proxies.Urgency> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Urgency>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Urgency.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Urgency> urgencyList_SLA_All_PopUp(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "EmailPlus.UrgencyList_SLA_All_PopUp", params);
			java.util.List<slm.proxies.Urgency> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Urgency>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Urgency.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validate_NAPFields_IncomingMessageRequestTemplate(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "EmailPlus.Validate_NAPFields_IncomingMessageRequestTemplate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validate_SLM_Aspects(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "EmailPlus.Validate_SLM_Aspects", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * Centrale EMail box - hoe kunnen we onderscheid maken wie de emails gaat verwerken omdat er straks ATM en ICT emails in staan. (#192985) - removed option to have only one recieve account
	 */
	public static boolean validateEmailAccount(IContext context, emailplus.proxies.EmailAccount _emailAccount)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "EmailPlus.ValidateEmailAccount", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3937] Added check for Redirection, if RedirectOutgoingMail is true, a redirect address should be given. No format check is performed on the redirect address. (Lotus Notes for example does not require a '@'-sign)
	 */
	public static boolean validateEmailSettings(IContext context, emailplus.proxies.EmailSettings _emailSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("EmailSettings", _emailSettings == null ? null : _emailSettings.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "EmailPlus.ValidateEmailSettings", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateIncomingMessageRequestTemplate(IContext context, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "EmailPlus.ValidateIncomingMessageRequestTemplate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateMessageAndProcessIncomingMessage(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "EmailPlus.ValidateMessageAndProcessIncomingMessage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateMessageForRequestTemplate(IContext context, emailplus.proxies.IncomingMessageTrigger _incomingMessageTrigger, emailplus.proxies.IncomingMessageRequestTemplate _incomingMessageRequestTemplate, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingMessageTrigger", _incomingMessageTrigger == null ? null : _incomingMessageTrigger.getMendixObject());
			params.put("IncomingMessageRequestTemplate", _incomingMessageRequestTemplate == null ? null : _incomingMessageRequestTemplate.getMendixObject());
			params.put("Message", _message == null ? null : _message.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "EmailPlus.ValidateMessageForRequestTemplate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateMessageTemplate(IContext context, emailplus.proxies.MessageTemplate _emailTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("EmailTemplate", _emailTemplate == null ? null : _emailTemplate.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "EmailPlus.ValidateMessageTemplate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateMultipleEmailAdresses(IContext context, java.lang.String _address)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Address", _address);
			return (java.lang.Boolean)Core.execute(context, "EmailPlus.ValidateMultipleEmailAdresses", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void view_AllPublishedEmail_ActivityStream(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			Core.execute(context, "EmailPlus.View_AllPublishedEmail_ActivityStream", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}