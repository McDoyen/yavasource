// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package emailplus.proxies;

public class IncomingMessageTrigger
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject incomingMessageTriggerMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "EmailPlus.IncomingMessageTrigger";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		TriggerName("TriggerName"),
		TriggerDescription("TriggerDescription"),
		RequestCreateAs("RequestCreateAs"),
		TemplateAssociated("TemplateAssociated"),
		IncomingMessageTrigger_IncomingMessageRequestTemplate("EmailPlus.IncomingMessageTrigger_IncomingMessageRequestTemplate"),
		IncomingMessageTrigger_EmailAccount("EmailPlus.IncomingMessageTrigger_EmailAccount");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public IncomingMessageTrigger(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "EmailPlus.IncomingMessageTrigger"));
	}

	protected IncomingMessageTrigger(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject incomingMessageTriggerMendixObject)
	{
		if (incomingMessageTriggerMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("EmailPlus.IncomingMessageTrigger", incomingMessageTriggerMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a EmailPlus.IncomingMessageTrigger");

		this.incomingMessageTriggerMendixObject = incomingMessageTriggerMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'IncomingMessageTrigger.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static emailplus.proxies.IncomingMessageTrigger initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return emailplus.proxies.IncomingMessageTrigger.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static emailplus.proxies.IncomingMessageTrigger initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new emailplus.proxies.IncomingMessageTrigger(context, mendixObject);
	}

	public static emailplus.proxies.IncomingMessageTrigger load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return emailplus.proxies.IncomingMessageTrigger.initialize(context, mendixObject);
	}

	public static java.util.List<emailplus.proxies.IncomingMessageTrigger> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<emailplus.proxies.IncomingMessageTrigger> result = new java.util.ArrayList<emailplus.proxies.IncomingMessageTrigger>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//EmailPlus.IncomingMessageTrigger" + xpathConstraint))
			result.add(emailplus.proxies.IncomingMessageTrigger.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of TriggerName
	 */
	public final java.lang.String getTriggerName()
	{
		return getTriggerName(getContext());
	}

	/**
	 * @param context
	 * @return value of TriggerName
	 */
	public final java.lang.String getTriggerName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.TriggerName.toString());
	}

	/**
	 * Set value of TriggerName
	 * @param triggername
	 */
	public final void setTriggerName(java.lang.String triggername)
	{
		setTriggerName(getContext(), triggername);
	}

	/**
	 * Set value of TriggerName
	 * @param context
	 * @param triggername
	 */
	public final void setTriggerName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String triggername)
	{
		getMendixObject().setValue(context, MemberNames.TriggerName.toString(), triggername);
	}

	/**
	 * @return value of TriggerDescription
	 */
	public final java.lang.String getTriggerDescription()
	{
		return getTriggerDescription(getContext());
	}

	/**
	 * @param context
	 * @return value of TriggerDescription
	 */
	public final java.lang.String getTriggerDescription(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.TriggerDescription.toString());
	}

	/**
	 * Set value of TriggerDescription
	 * @param triggerdescription
	 */
	public final void setTriggerDescription(java.lang.String triggerdescription)
	{
		setTriggerDescription(getContext(), triggerdescription);
	}

	/**
	 * Set value of TriggerDescription
	 * @param context
	 * @param triggerdescription
	 */
	public final void setTriggerDescription(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String triggerdescription)
	{
		getMendixObject().setValue(context, MemberNames.TriggerDescription.toString(), triggerdescription);
	}

	/**
	 * Set value of RequestCreateAs
	 * @param requestcreateas
	 */
	public final emailplus.proxies.CreateRequestAs getRequestCreateAs()
	{
		return getRequestCreateAs(getContext());
	}

	/**
	 * @param context
	 * @return value of RequestCreateAs
	 */
	public final emailplus.proxies.CreateRequestAs getRequestCreateAs(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.RequestCreateAs.toString());
		if (obj == null)
			return null;

		return emailplus.proxies.CreateRequestAs.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of RequestCreateAs
	 * @param requestcreateas
	 */
	public final void setRequestCreateAs(emailplus.proxies.CreateRequestAs requestcreateas)
	{
		setRequestCreateAs(getContext(), requestcreateas);
	}

	/**
	 * Set value of RequestCreateAs
	 * @param context
	 * @param requestcreateas
	 */
	public final void setRequestCreateAs(com.mendix.systemwideinterfaces.core.IContext context, emailplus.proxies.CreateRequestAs requestcreateas)
	{
		if (requestcreateas != null)
			getMendixObject().setValue(context, MemberNames.RequestCreateAs.toString(), requestcreateas.toString());
		else
			getMendixObject().setValue(context, MemberNames.RequestCreateAs.toString(), null);
	}

	/**
	 * @return value of TemplateAssociated
	 */
	public final java.lang.Boolean getTemplateAssociated()
	{
		return getTemplateAssociated(getContext());
	}

	/**
	 * @param context
	 * @return value of TemplateAssociated
	 */
	public final java.lang.Boolean getTemplateAssociated(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.TemplateAssociated.toString());
	}

	/**
	 * Set value of TemplateAssociated
	 * @param templateassociated
	 */
	public final void setTemplateAssociated(java.lang.Boolean templateassociated)
	{
		setTemplateAssociated(getContext(), templateassociated);
	}

	/**
	 * Set value of TemplateAssociated
	 * @param context
	 * @param templateassociated
	 */
	public final void setTemplateAssociated(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean templateassociated)
	{
		getMendixObject().setValue(context, MemberNames.TemplateAssociated.toString(), templateassociated);
	}

	/**
	 * @return value of IncomingMessageTrigger_IncomingMessageRequestTemplate
	 */
	public final emailplus.proxies.IncomingMessageRequestTemplate getIncomingMessageTrigger_IncomingMessageRequestTemplate() throws com.mendix.core.CoreException
	{
		return getIncomingMessageTrigger_IncomingMessageRequestTemplate(getContext());
	}

	/**
	 * @param context
	 * @return value of IncomingMessageTrigger_IncomingMessageRequestTemplate
	 */
	public final emailplus.proxies.IncomingMessageRequestTemplate getIncomingMessageTrigger_IncomingMessageRequestTemplate(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		emailplus.proxies.IncomingMessageRequestTemplate result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.IncomingMessageTrigger_IncomingMessageRequestTemplate.toString());
		if (identifier != null)
			result = emailplus.proxies.IncomingMessageRequestTemplate.load(context, identifier);
		return result;
	}

	/**
	 * Set value of IncomingMessageTrigger_IncomingMessageRequestTemplate
	 * @param incomingmessagetrigger_incomingmessagerequesttemplate
	 */
	public final void setIncomingMessageTrigger_IncomingMessageRequestTemplate(emailplus.proxies.IncomingMessageRequestTemplate incomingmessagetrigger_incomingmessagerequesttemplate)
	{
		setIncomingMessageTrigger_IncomingMessageRequestTemplate(getContext(), incomingmessagetrigger_incomingmessagerequesttemplate);
	}

	/**
	 * Set value of IncomingMessageTrigger_IncomingMessageRequestTemplate
	 * @param context
	 * @param incomingmessagetrigger_incomingmessagerequesttemplate
	 */
	public final void setIncomingMessageTrigger_IncomingMessageRequestTemplate(com.mendix.systemwideinterfaces.core.IContext context, emailplus.proxies.IncomingMessageRequestTemplate incomingmessagetrigger_incomingmessagerequesttemplate)
	{
		if (incomingmessagetrigger_incomingmessagerequesttemplate == null)
			getMendixObject().setValue(context, MemberNames.IncomingMessageTrigger_IncomingMessageRequestTemplate.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.IncomingMessageTrigger_IncomingMessageRequestTemplate.toString(), incomingmessagetrigger_incomingmessagerequesttemplate.getMendixObject().getId());
	}

	/**
	 * @return value of IncomingMessageTrigger_EmailAccount
	 */
	public final emailplus.proxies.EmailAccount getIncomingMessageTrigger_EmailAccount() throws com.mendix.core.CoreException
	{
		return getIncomingMessageTrigger_EmailAccount(getContext());
	}

	/**
	 * @param context
	 * @return value of IncomingMessageTrigger_EmailAccount
	 */
	public final emailplus.proxies.EmailAccount getIncomingMessageTrigger_EmailAccount(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		emailplus.proxies.EmailAccount result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.IncomingMessageTrigger_EmailAccount.toString());
		if (identifier != null)
			result = emailplus.proxies.EmailAccount.load(context, identifier);
		return result;
	}

	/**
	 * Set value of IncomingMessageTrigger_EmailAccount
	 * @param incomingmessagetrigger_emailaccount
	 */
	public final void setIncomingMessageTrigger_EmailAccount(emailplus.proxies.EmailAccount incomingmessagetrigger_emailaccount)
	{
		setIncomingMessageTrigger_EmailAccount(getContext(), incomingmessagetrigger_emailaccount);
	}

	/**
	 * Set value of IncomingMessageTrigger_EmailAccount
	 * @param context
	 * @param incomingmessagetrigger_emailaccount
	 */
	public final void setIncomingMessageTrigger_EmailAccount(com.mendix.systemwideinterfaces.core.IContext context, emailplus.proxies.EmailAccount incomingmessagetrigger_emailaccount)
	{
		if (incomingmessagetrigger_emailaccount == null)
			getMendixObject().setValue(context, MemberNames.IncomingMessageTrigger_EmailAccount.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.IncomingMessageTrigger_EmailAccount.toString(), incomingmessagetrigger_emailaccount.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return incomingMessageTriggerMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final emailplus.proxies.IncomingMessageTrigger that = (emailplus.proxies.IncomingMessageTrigger) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "EmailPlus.IncomingMessageTrigger";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
