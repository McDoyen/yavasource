// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package emailplus.proxies;

/**
 * [3937] Replaced microflow for ‘After Commit’ event handler;
 */
public class MessageTemplate
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject messageTemplateMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "EmailPlus.MessageTemplate";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Name("Name"),
		HTMLMessage("HTMLMessage"),
		Subject("Subject"),
		DefaultTemplateFor("DefaultTemplateFor"),
		MessageTemplateType("MessageTemplateType"),
		MessageTemplate_Attachment("EmailPlus.MessageTemplate_Attachment");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public MessageTemplate(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "EmailPlus.MessageTemplate"));
	}

	protected MessageTemplate(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject messageTemplateMendixObject)
	{
		if (messageTemplateMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("EmailPlus.MessageTemplate", messageTemplateMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a EmailPlus.MessageTemplate");

		this.messageTemplateMendixObject = messageTemplateMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'MessageTemplate.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static emailplus.proxies.MessageTemplate initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return emailplus.proxies.MessageTemplate.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static emailplus.proxies.MessageTemplate initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new emailplus.proxies.MessageTemplate(context, mendixObject);
	}

	public static emailplus.proxies.MessageTemplate load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return emailplus.proxies.MessageTemplate.initialize(context, mendixObject);
	}

	public static java.util.List<emailplus.proxies.MessageTemplate> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<emailplus.proxies.MessageTemplate> result = new java.util.ArrayList<emailplus.proxies.MessageTemplate>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//EmailPlus.MessageTemplate" + xpathConstraint))
			result.add(emailplus.proxies.MessageTemplate.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Name
	 */
	public final java.lang.String getName()
	{
		return getName(getContext());
	}

	/**
	 * @param context
	 * @return value of Name
	 */
	public final java.lang.String getName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Name.toString());
	}

	/**
	 * Set value of Name
	 * @param name
	 */
	public final void setName(java.lang.String name)
	{
		setName(getContext(), name);
	}

	/**
	 * Set value of Name
	 * @param context
	 * @param name
	 */
	public final void setName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String name)
	{
		getMendixObject().setValue(context, MemberNames.Name.toString(), name);
	}

	/**
	 * @return value of HTMLMessage
	 */
	public final java.lang.String getHTMLMessage()
	{
		return getHTMLMessage(getContext());
	}

	/**
	 * @param context
	 * @return value of HTMLMessage
	 */
	public final java.lang.String getHTMLMessage(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.HTMLMessage.toString());
	}

	/**
	 * Set value of HTMLMessage
	 * @param htmlmessage
	 */
	public final void setHTMLMessage(java.lang.String htmlmessage)
	{
		setHTMLMessage(getContext(), htmlmessage);
	}

	/**
	 * Set value of HTMLMessage
	 * @param context
	 * @param htmlmessage
	 */
	public final void setHTMLMessage(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String htmlmessage)
	{
		getMendixObject().setValue(context, MemberNames.HTMLMessage.toString(), htmlmessage);
	}

	/**
	 * @return value of Subject
	 */
	public final java.lang.String getSubject()
	{
		return getSubject(getContext());
	}

	/**
	 * @param context
	 * @return value of Subject
	 */
	public final java.lang.String getSubject(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Subject.toString());
	}

	/**
	 * Set value of Subject
	 * @param subject
	 */
	public final void setSubject(java.lang.String subject)
	{
		setSubject(getContext(), subject);
	}

	/**
	 * Set value of Subject
	 * @param context
	 * @param subject
	 */
	public final void setSubject(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String subject)
	{
		getMendixObject().setValue(context, MemberNames.Subject.toString(), subject);
	}

	/**
	 * Set value of DefaultTemplateFor
	 * @param defaulttemplatefor
	 */
	public final emailplus.proxies.DefaultTemplateForEnum getDefaultTemplateFor()
	{
		return getDefaultTemplateFor(getContext());
	}

	/**
	 * @param context
	 * @return value of DefaultTemplateFor
	 */
	public final emailplus.proxies.DefaultTemplateForEnum getDefaultTemplateFor(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.DefaultTemplateFor.toString());
		if (obj == null)
			return null;

		return emailplus.proxies.DefaultTemplateForEnum.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of DefaultTemplateFor
	 * @param defaulttemplatefor
	 */
	public final void setDefaultTemplateFor(emailplus.proxies.DefaultTemplateForEnum defaulttemplatefor)
	{
		setDefaultTemplateFor(getContext(), defaulttemplatefor);
	}

	/**
	 * Set value of DefaultTemplateFor
	 * @param context
	 * @param defaulttemplatefor
	 */
	public final void setDefaultTemplateFor(com.mendix.systemwideinterfaces.core.IContext context, emailplus.proxies.DefaultTemplateForEnum defaulttemplatefor)
	{
		if (defaulttemplatefor != null)
			getMendixObject().setValue(context, MemberNames.DefaultTemplateFor.toString(), defaulttemplatefor.toString());
		else
			getMendixObject().setValue(context, MemberNames.DefaultTemplateFor.toString(), null);
	}

	/**
	 * Set value of MessageTemplateType
	 * @param messagetemplatetype
	 */
	public final emailplus.proxies.MessageTemplateTypeEnum getMessageTemplateType()
	{
		return getMessageTemplateType(getContext());
	}

	/**
	 * @param context
	 * @return value of MessageTemplateType
	 */
	public final emailplus.proxies.MessageTemplateTypeEnum getMessageTemplateType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.MessageTemplateType.toString());
		if (obj == null)
			return null;

		return emailplus.proxies.MessageTemplateTypeEnum.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of MessageTemplateType
	 * @param messagetemplatetype
	 */
	public final void setMessageTemplateType(emailplus.proxies.MessageTemplateTypeEnum messagetemplatetype)
	{
		setMessageTemplateType(getContext(), messagetemplatetype);
	}

	/**
	 * Set value of MessageTemplateType
	 * @param context
	 * @param messagetemplatetype
	 */
	public final void setMessageTemplateType(com.mendix.systemwideinterfaces.core.IContext context, emailplus.proxies.MessageTemplateTypeEnum messagetemplatetype)
	{
		if (messagetemplatetype != null)
			getMendixObject().setValue(context, MemberNames.MessageTemplateType.toString(), messagetemplatetype.toString());
		else
			getMendixObject().setValue(context, MemberNames.MessageTemplateType.toString(), null);
	}

	/**
	 * @return value of MessageTemplate_Attachment
	 */
	public final java.util.List<emailplus.proxies.MessageAttachment> getMessageTemplate_Attachment() throws com.mendix.core.CoreException
	{
		return getMessageTemplate_Attachment(getContext());
	}

	/**
	 * @param context
	 * @return value of MessageTemplate_Attachment
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<emailplus.proxies.MessageAttachment> getMessageTemplate_Attachment(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<emailplus.proxies.MessageAttachment> result = new java.util.ArrayList<emailplus.proxies.MessageAttachment>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.MessageTemplate_Attachment.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(emailplus.proxies.MessageAttachment.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of MessageTemplate_Attachment
	 * @param messagetemplate_attachment
	 */
	public final void setMessageTemplate_Attachment(java.util.List<emailplus.proxies.MessageAttachment> messagetemplate_attachment)
	{
		setMessageTemplate_Attachment(getContext(), messagetemplate_attachment);
	}

	/**
	 * Set value of MessageTemplate_Attachment
	 * @param context
	 * @param messagetemplate_attachment
	 */
	public final void setMessageTemplate_Attachment(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<emailplus.proxies.MessageAttachment> messagetemplate_attachment)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (emailplus.proxies.MessageAttachment proxyObject : messagetemplate_attachment)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.MessageTemplate_Attachment.toString(), identifiers);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return messageTemplateMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final emailplus.proxies.MessageTemplate that = (emailplus.proxies.MessageTemplate) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "EmailPlus.MessageTemplate";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
