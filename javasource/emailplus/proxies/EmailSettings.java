// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package emailplus.proxies;

public class EmailSettings
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject emailSettingsMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "EmailPlus.EmailSettings";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		ServerType("ServerType"),
		SMTPHost("SMTPHost"),
		SMTPPort("SMTPPort"),
		SMTPAuth("SMTPAuth"),
		SMTPUseSSL("SMTPUseSSL"),
		SMTPUseTLS("SMTPUseTLS"),
		IncomingEmailType("IncomingEmailType"),
		POP3_IMAP_Host("POP3_IMAP_Host"),
		POP3_IMAP_Port("POP3_IMAP_Port"),
		POP3_IMAP_UseSSL("POP3_IMAP_UseSSL"),
		POP3_IMAP_UseTLS("POP3_IMAP_UseTLS"),
		IMAP_Folder("IMAP_Folder"),
		Description("Description"),
		IMAP_MoveToFolder("IMAP_MoveToFolder"),
		IMAP_MoveOnError("IMAP_MoveOnError"),
		RedirectOutgoingMail("RedirectOutgoingMail"),
		RedirectToAddress("RedirectToAddress"),
		LogRawContentOnError("LogRawContentOnError"),
		StoreRawContent("StoreRawContent");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public EmailSettings(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "EmailPlus.EmailSettings"));
	}

	protected EmailSettings(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject emailSettingsMendixObject)
	{
		if (emailSettingsMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("EmailPlus.EmailSettings", emailSettingsMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a EmailPlus.EmailSettings");

		this.emailSettingsMendixObject = emailSettingsMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'EmailSettings.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static emailplus.proxies.EmailSettings initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return emailplus.proxies.EmailSettings.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static emailplus.proxies.EmailSettings initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new emailplus.proxies.EmailSettings(context, mendixObject);
	}

	public static emailplus.proxies.EmailSettings load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return emailplus.proxies.EmailSettings.initialize(context, mendixObject);
	}

	public static java.util.List<emailplus.proxies.EmailSettings> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<emailplus.proxies.EmailSettings> result = new java.util.ArrayList<emailplus.proxies.EmailSettings>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//EmailPlus.EmailSettings" + xpathConstraint))
			result.add(emailplus.proxies.EmailSettings.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * Set value of ServerType
	 * @param servertype
	 */
	public final emailplus.proxies.EmailSendReceiveBothEnum getServerType()
	{
		return getServerType(getContext());
	}

	/**
	 * @param context
	 * @return value of ServerType
	 */
	public final emailplus.proxies.EmailSendReceiveBothEnum getServerType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.ServerType.toString());
		if (obj == null)
			return null;

		return emailplus.proxies.EmailSendReceiveBothEnum.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of ServerType
	 * @param servertype
	 */
	public final void setServerType(emailplus.proxies.EmailSendReceiveBothEnum servertype)
	{
		setServerType(getContext(), servertype);
	}

	/**
	 * Set value of ServerType
	 * @param context
	 * @param servertype
	 */
	public final void setServerType(com.mendix.systemwideinterfaces.core.IContext context, emailplus.proxies.EmailSendReceiveBothEnum servertype)
	{
		if (servertype != null)
			getMendixObject().setValue(context, MemberNames.ServerType.toString(), servertype.toString());
		else
			getMendixObject().setValue(context, MemberNames.ServerType.toString(), null);
	}

	/**
	 * @return value of SMTPHost
	 */
	public final java.lang.String getSMTPHost()
	{
		return getSMTPHost(getContext());
	}

	/**
	 * @param context
	 * @return value of SMTPHost
	 */
	public final java.lang.String getSMTPHost(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.SMTPHost.toString());
	}

	/**
	 * Set value of SMTPHost
	 * @param smtphost
	 */
	public final void setSMTPHost(java.lang.String smtphost)
	{
		setSMTPHost(getContext(), smtphost);
	}

	/**
	 * Set value of SMTPHost
	 * @param context
	 * @param smtphost
	 */
	public final void setSMTPHost(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String smtphost)
	{
		getMendixObject().setValue(context, MemberNames.SMTPHost.toString(), smtphost);
	}

	/**
	 * @return value of SMTPPort
	 */
	public final java.lang.Integer getSMTPPort()
	{
		return getSMTPPort(getContext());
	}

	/**
	 * @param context
	 * @return value of SMTPPort
	 */
	public final java.lang.Integer getSMTPPort(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.SMTPPort.toString());
	}

	/**
	 * Set value of SMTPPort
	 * @param smtpport
	 */
	public final void setSMTPPort(java.lang.Integer smtpport)
	{
		setSMTPPort(getContext(), smtpport);
	}

	/**
	 * Set value of SMTPPort
	 * @param context
	 * @param smtpport
	 */
	public final void setSMTPPort(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer smtpport)
	{
		getMendixObject().setValue(context, MemberNames.SMTPPort.toString(), smtpport);
	}

	/**
	 * @return value of SMTPAuth
	 */
	public final java.lang.Boolean getSMTPAuth()
	{
		return getSMTPAuth(getContext());
	}

	/**
	 * @param context
	 * @return value of SMTPAuth
	 */
	public final java.lang.Boolean getSMTPAuth(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.SMTPAuth.toString());
	}

	/**
	 * Set value of SMTPAuth
	 * @param smtpauth
	 */
	public final void setSMTPAuth(java.lang.Boolean smtpauth)
	{
		setSMTPAuth(getContext(), smtpauth);
	}

	/**
	 * Set value of SMTPAuth
	 * @param context
	 * @param smtpauth
	 */
	public final void setSMTPAuth(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean smtpauth)
	{
		getMendixObject().setValue(context, MemberNames.SMTPAuth.toString(), smtpauth);
	}

	/**
	 * @return value of SMTPUseSSL
	 */
	public final java.lang.Boolean getSMTPUseSSL()
	{
		return getSMTPUseSSL(getContext());
	}

	/**
	 * @param context
	 * @return value of SMTPUseSSL
	 */
	public final java.lang.Boolean getSMTPUseSSL(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.SMTPUseSSL.toString());
	}

	/**
	 * Set value of SMTPUseSSL
	 * @param smtpusessl
	 */
	public final void setSMTPUseSSL(java.lang.Boolean smtpusessl)
	{
		setSMTPUseSSL(getContext(), smtpusessl);
	}

	/**
	 * Set value of SMTPUseSSL
	 * @param context
	 * @param smtpusessl
	 */
	public final void setSMTPUseSSL(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean smtpusessl)
	{
		getMendixObject().setValue(context, MemberNames.SMTPUseSSL.toString(), smtpusessl);
	}

	/**
	 * @return value of SMTPUseTLS
	 */
	public final java.lang.Boolean getSMTPUseTLS()
	{
		return getSMTPUseTLS(getContext());
	}

	/**
	 * @param context
	 * @return value of SMTPUseTLS
	 */
	public final java.lang.Boolean getSMTPUseTLS(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.SMTPUseTLS.toString());
	}

	/**
	 * Set value of SMTPUseTLS
	 * @param smtpusetls
	 */
	public final void setSMTPUseTLS(java.lang.Boolean smtpusetls)
	{
		setSMTPUseTLS(getContext(), smtpusetls);
	}

	/**
	 * Set value of SMTPUseTLS
	 * @param context
	 * @param smtpusetls
	 */
	public final void setSMTPUseTLS(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean smtpusetls)
	{
		getMendixObject().setValue(context, MemberNames.SMTPUseTLS.toString(), smtpusetls);
	}

	/**
	 * Set value of IncomingEmailType
	 * @param incomingemailtype
	 */
	public final emailplus.proxies.IncomingEmailType getIncomingEmailType()
	{
		return getIncomingEmailType(getContext());
	}

	/**
	 * @param context
	 * @return value of IncomingEmailType
	 */
	public final emailplus.proxies.IncomingEmailType getIncomingEmailType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.IncomingEmailType.toString());
		if (obj == null)
			return null;

		return emailplus.proxies.IncomingEmailType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of IncomingEmailType
	 * @param incomingemailtype
	 */
	public final void setIncomingEmailType(emailplus.proxies.IncomingEmailType incomingemailtype)
	{
		setIncomingEmailType(getContext(), incomingemailtype);
	}

	/**
	 * Set value of IncomingEmailType
	 * @param context
	 * @param incomingemailtype
	 */
	public final void setIncomingEmailType(com.mendix.systemwideinterfaces.core.IContext context, emailplus.proxies.IncomingEmailType incomingemailtype)
	{
		if (incomingemailtype != null)
			getMendixObject().setValue(context, MemberNames.IncomingEmailType.toString(), incomingemailtype.toString());
		else
			getMendixObject().setValue(context, MemberNames.IncomingEmailType.toString(), null);
	}

	/**
	 * @return value of POP3_IMAP_Host
	 */
	public final java.lang.String getPOP3_IMAP_Host()
	{
		return getPOP3_IMAP_Host(getContext());
	}

	/**
	 * @param context
	 * @return value of POP3_IMAP_Host
	 */
	public final java.lang.String getPOP3_IMAP_Host(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.POP3_IMAP_Host.toString());
	}

	/**
	 * Set value of POP3_IMAP_Host
	 * @param pop3_imap_host
	 */
	public final void setPOP3_IMAP_Host(java.lang.String pop3_imap_host)
	{
		setPOP3_IMAP_Host(getContext(), pop3_imap_host);
	}

	/**
	 * Set value of POP3_IMAP_Host
	 * @param context
	 * @param pop3_imap_host
	 */
	public final void setPOP3_IMAP_Host(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String pop3_imap_host)
	{
		getMendixObject().setValue(context, MemberNames.POP3_IMAP_Host.toString(), pop3_imap_host);
	}

	/**
	 * @return value of POP3_IMAP_Port
	 */
	public final java.lang.Integer getPOP3_IMAP_Port()
	{
		return getPOP3_IMAP_Port(getContext());
	}

	/**
	 * @param context
	 * @return value of POP3_IMAP_Port
	 */
	public final java.lang.Integer getPOP3_IMAP_Port(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.POP3_IMAP_Port.toString());
	}

	/**
	 * Set value of POP3_IMAP_Port
	 * @param pop3_imap_port
	 */
	public final void setPOP3_IMAP_Port(java.lang.Integer pop3_imap_port)
	{
		setPOP3_IMAP_Port(getContext(), pop3_imap_port);
	}

	/**
	 * Set value of POP3_IMAP_Port
	 * @param context
	 * @param pop3_imap_port
	 */
	public final void setPOP3_IMAP_Port(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer pop3_imap_port)
	{
		getMendixObject().setValue(context, MemberNames.POP3_IMAP_Port.toString(), pop3_imap_port);
	}

	/**
	 * @return value of POP3_IMAP_UseSSL
	 */
	public final java.lang.Boolean getPOP3_IMAP_UseSSL()
	{
		return getPOP3_IMAP_UseSSL(getContext());
	}

	/**
	 * @param context
	 * @return value of POP3_IMAP_UseSSL
	 */
	public final java.lang.Boolean getPOP3_IMAP_UseSSL(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.POP3_IMAP_UseSSL.toString());
	}

	/**
	 * Set value of POP3_IMAP_UseSSL
	 * @param pop3_imap_usessl
	 */
	public final void setPOP3_IMAP_UseSSL(java.lang.Boolean pop3_imap_usessl)
	{
		setPOP3_IMAP_UseSSL(getContext(), pop3_imap_usessl);
	}

	/**
	 * Set value of POP3_IMAP_UseSSL
	 * @param context
	 * @param pop3_imap_usessl
	 */
	public final void setPOP3_IMAP_UseSSL(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean pop3_imap_usessl)
	{
		getMendixObject().setValue(context, MemberNames.POP3_IMAP_UseSSL.toString(), pop3_imap_usessl);
	}

	/**
	 * @return value of POP3_IMAP_UseTLS
	 */
	public final java.lang.Boolean getPOP3_IMAP_UseTLS()
	{
		return getPOP3_IMAP_UseTLS(getContext());
	}

	/**
	 * @param context
	 * @return value of POP3_IMAP_UseTLS
	 */
	public final java.lang.Boolean getPOP3_IMAP_UseTLS(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.POP3_IMAP_UseTLS.toString());
	}

	/**
	 * Set value of POP3_IMAP_UseTLS
	 * @param pop3_imap_usetls
	 */
	public final void setPOP3_IMAP_UseTLS(java.lang.Boolean pop3_imap_usetls)
	{
		setPOP3_IMAP_UseTLS(getContext(), pop3_imap_usetls);
	}

	/**
	 * Set value of POP3_IMAP_UseTLS
	 * @param context
	 * @param pop3_imap_usetls
	 */
	public final void setPOP3_IMAP_UseTLS(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean pop3_imap_usetls)
	{
		getMendixObject().setValue(context, MemberNames.POP3_IMAP_UseTLS.toString(), pop3_imap_usetls);
	}

	/**
	 * @return value of IMAP_Folder
	 */
	public final java.lang.String getIMAP_Folder()
	{
		return getIMAP_Folder(getContext());
	}

	/**
	 * @param context
	 * @return value of IMAP_Folder
	 */
	public final java.lang.String getIMAP_Folder(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.IMAP_Folder.toString());
	}

	/**
	 * Set value of IMAP_Folder
	 * @param imap_folder
	 */
	public final void setIMAP_Folder(java.lang.String imap_folder)
	{
		setIMAP_Folder(getContext(), imap_folder);
	}

	/**
	 * Set value of IMAP_Folder
	 * @param context
	 * @param imap_folder
	 */
	public final void setIMAP_Folder(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String imap_folder)
	{
		getMendixObject().setValue(context, MemberNames.IMAP_Folder.toString(), imap_folder);
	}

	/**
	 * @return value of Description
	 */
	public final java.lang.String getDescription()
	{
		return getDescription(getContext());
	}

	/**
	 * @param context
	 * @return value of Description
	 */
	public final java.lang.String getDescription(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Description.toString());
	}

	/**
	 * Set value of Description
	 * @param description
	 */
	public final void setDescription(java.lang.String description)
	{
		setDescription(getContext(), description);
	}

	/**
	 * Set value of Description
	 * @param context
	 * @param description
	 */
	public final void setDescription(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String description)
	{
		getMendixObject().setValue(context, MemberNames.Description.toString(), description);
	}

	/**
	 * @return value of IMAP_MoveToFolder
	 */
	public final java.lang.String getIMAP_MoveToFolder()
	{
		return getIMAP_MoveToFolder(getContext());
	}

	/**
	 * @param context
	 * @return value of IMAP_MoveToFolder
	 */
	public final java.lang.String getIMAP_MoveToFolder(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.IMAP_MoveToFolder.toString());
	}

	/**
	 * Set value of IMAP_MoveToFolder
	 * @param imap_movetofolder
	 */
	public final void setIMAP_MoveToFolder(java.lang.String imap_movetofolder)
	{
		setIMAP_MoveToFolder(getContext(), imap_movetofolder);
	}

	/**
	 * Set value of IMAP_MoveToFolder
	 * @param context
	 * @param imap_movetofolder
	 */
	public final void setIMAP_MoveToFolder(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String imap_movetofolder)
	{
		getMendixObject().setValue(context, MemberNames.IMAP_MoveToFolder.toString(), imap_movetofolder);
	}

	/**
	 * @return value of IMAP_MoveOnError
	 */
	public final java.lang.Boolean getIMAP_MoveOnError()
	{
		return getIMAP_MoveOnError(getContext());
	}

	/**
	 * @param context
	 * @return value of IMAP_MoveOnError
	 */
	public final java.lang.Boolean getIMAP_MoveOnError(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IMAP_MoveOnError.toString());
	}

	/**
	 * Set value of IMAP_MoveOnError
	 * @param imap_moveonerror
	 */
	public final void setIMAP_MoveOnError(java.lang.Boolean imap_moveonerror)
	{
		setIMAP_MoveOnError(getContext(), imap_moveonerror);
	}

	/**
	 * Set value of IMAP_MoveOnError
	 * @param context
	 * @param imap_moveonerror
	 */
	public final void setIMAP_MoveOnError(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean imap_moveonerror)
	{
		getMendixObject().setValue(context, MemberNames.IMAP_MoveOnError.toString(), imap_moveonerror);
	}

	/**
	 * @return value of RedirectOutgoingMail
	 */
	public final java.lang.Boolean getRedirectOutgoingMail()
	{
		return getRedirectOutgoingMail(getContext());
	}

	/**
	 * @param context
	 * @return value of RedirectOutgoingMail
	 */
	public final java.lang.Boolean getRedirectOutgoingMail(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.RedirectOutgoingMail.toString());
	}

	/**
	 * Set value of RedirectOutgoingMail
	 * @param redirectoutgoingmail
	 */
	public final void setRedirectOutgoingMail(java.lang.Boolean redirectoutgoingmail)
	{
		setRedirectOutgoingMail(getContext(), redirectoutgoingmail);
	}

	/**
	 * Set value of RedirectOutgoingMail
	 * @param context
	 * @param redirectoutgoingmail
	 */
	public final void setRedirectOutgoingMail(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean redirectoutgoingmail)
	{
		getMendixObject().setValue(context, MemberNames.RedirectOutgoingMail.toString(), redirectoutgoingmail);
	}

	/**
	 * @return value of RedirectToAddress
	 */
	public final java.lang.String getRedirectToAddress()
	{
		return getRedirectToAddress(getContext());
	}

	/**
	 * @param context
	 * @return value of RedirectToAddress
	 */
	public final java.lang.String getRedirectToAddress(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.RedirectToAddress.toString());
	}

	/**
	 * Set value of RedirectToAddress
	 * @param redirecttoaddress
	 */
	public final void setRedirectToAddress(java.lang.String redirecttoaddress)
	{
		setRedirectToAddress(getContext(), redirecttoaddress);
	}

	/**
	 * Set value of RedirectToAddress
	 * @param context
	 * @param redirecttoaddress
	 */
	public final void setRedirectToAddress(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String redirecttoaddress)
	{
		getMendixObject().setValue(context, MemberNames.RedirectToAddress.toString(), redirecttoaddress);
	}

	/**
	 * @return value of LogRawContentOnError
	 */
	public final java.lang.Boolean getLogRawContentOnError()
	{
		return getLogRawContentOnError(getContext());
	}

	/**
	 * @param context
	 * @return value of LogRawContentOnError
	 */
	public final java.lang.Boolean getLogRawContentOnError(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.LogRawContentOnError.toString());
	}

	/**
	 * Set value of LogRawContentOnError
	 * @param lograwcontentonerror
	 */
	public final void setLogRawContentOnError(java.lang.Boolean lograwcontentonerror)
	{
		setLogRawContentOnError(getContext(), lograwcontentonerror);
	}

	/**
	 * Set value of LogRawContentOnError
	 * @param context
	 * @param lograwcontentonerror
	 */
	public final void setLogRawContentOnError(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean lograwcontentonerror)
	{
		getMendixObject().setValue(context, MemberNames.LogRawContentOnError.toString(), lograwcontentonerror);
	}

	/**
	 * @return value of StoreRawContent
	 */
	public final java.lang.Boolean getStoreRawContent()
	{
		return getStoreRawContent(getContext());
	}

	/**
	 * @param context
	 * @return value of StoreRawContent
	 */
	public final java.lang.Boolean getStoreRawContent(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.StoreRawContent.toString());
	}

	/**
	 * Set value of StoreRawContent
	 * @param storerawcontent
	 */
	public final void setStoreRawContent(java.lang.Boolean storerawcontent)
	{
		setStoreRawContent(getContext(), storerawcontent);
	}

	/**
	 * Set value of StoreRawContent
	 * @param context
	 * @param storerawcontent
	 */
	public final void setStoreRawContent(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean storerawcontent)
	{
		getMendixObject().setValue(context, MemberNames.StoreRawContent.toString(), storerawcontent);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return emailSettingsMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final emailplus.proxies.EmailSettings that = (emailplus.proxies.EmailSettings) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "EmailPlus.EmailSettings";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
