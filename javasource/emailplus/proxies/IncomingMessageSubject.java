// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package emailplus.proxies;

public class IncomingMessageSubject
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject incomingMessageSubjectMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "EmailPlus.IncomingMessageSubject";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Subject("Subject"),
		IncomingMessageSubject_IncomingMessageTrigger("EmailPlus.IncomingMessageSubject_IncomingMessageTrigger");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public IncomingMessageSubject(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "EmailPlus.IncomingMessageSubject"));
	}

	protected IncomingMessageSubject(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject incomingMessageSubjectMendixObject)
	{
		if (incomingMessageSubjectMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("EmailPlus.IncomingMessageSubject", incomingMessageSubjectMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a EmailPlus.IncomingMessageSubject");

		this.incomingMessageSubjectMendixObject = incomingMessageSubjectMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'IncomingMessageSubject.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static emailplus.proxies.IncomingMessageSubject initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return emailplus.proxies.IncomingMessageSubject.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static emailplus.proxies.IncomingMessageSubject initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new emailplus.proxies.IncomingMessageSubject(context, mendixObject);
	}

	public static emailplus.proxies.IncomingMessageSubject load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return emailplus.proxies.IncomingMessageSubject.initialize(context, mendixObject);
	}

	public static java.util.List<emailplus.proxies.IncomingMessageSubject> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<emailplus.proxies.IncomingMessageSubject> result = new java.util.ArrayList<emailplus.proxies.IncomingMessageSubject>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//EmailPlus.IncomingMessageSubject" + xpathConstraint))
			result.add(emailplus.proxies.IncomingMessageSubject.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Subject
	 */
	public final java.lang.String getSubject()
	{
		return getSubject(getContext());
	}

	/**
	 * @param context
	 * @return value of Subject
	 */
	public final java.lang.String getSubject(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Subject.toString());
	}

	/**
	 * Set value of Subject
	 * @param subject
	 */
	public final void setSubject(java.lang.String subject)
	{
		setSubject(getContext(), subject);
	}

	/**
	 * Set value of Subject
	 * @param context
	 * @param subject
	 */
	public final void setSubject(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String subject)
	{
		getMendixObject().setValue(context, MemberNames.Subject.toString(), subject);
	}

	/**
	 * @return value of IncomingMessageSubject_IncomingMessageTrigger
	 */
	public final emailplus.proxies.IncomingMessageTrigger getIncomingMessageSubject_IncomingMessageTrigger() throws com.mendix.core.CoreException
	{
		return getIncomingMessageSubject_IncomingMessageTrigger(getContext());
	}

	/**
	 * @param context
	 * @return value of IncomingMessageSubject_IncomingMessageTrigger
	 */
	public final emailplus.proxies.IncomingMessageTrigger getIncomingMessageSubject_IncomingMessageTrigger(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		emailplus.proxies.IncomingMessageTrigger result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.IncomingMessageSubject_IncomingMessageTrigger.toString());
		if (identifier != null)
			result = emailplus.proxies.IncomingMessageTrigger.load(context, identifier);
		return result;
	}

	/**
	 * Set value of IncomingMessageSubject_IncomingMessageTrigger
	 * @param incomingmessagesubject_incomingmessagetrigger
	 */
	public final void setIncomingMessageSubject_IncomingMessageTrigger(emailplus.proxies.IncomingMessageTrigger incomingmessagesubject_incomingmessagetrigger)
	{
		setIncomingMessageSubject_IncomingMessageTrigger(getContext(), incomingmessagesubject_incomingmessagetrigger);
	}

	/**
	 * Set value of IncomingMessageSubject_IncomingMessageTrigger
	 * @param context
	 * @param incomingmessagesubject_incomingmessagetrigger
	 */
	public final void setIncomingMessageSubject_IncomingMessageTrigger(com.mendix.systemwideinterfaces.core.IContext context, emailplus.proxies.IncomingMessageTrigger incomingmessagesubject_incomingmessagetrigger)
	{
		if (incomingmessagesubject_incomingmessagetrigger == null)
			getMendixObject().setValue(context, MemberNames.IncomingMessageSubject_IncomingMessageTrigger.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.IncomingMessageSubject_IncomingMessageTrigger.toString(), incomingmessagesubject_incomingmessagetrigger.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return incomingMessageSubjectMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final emailplus.proxies.IncomingMessageSubject that = (emailplus.proxies.IncomingMessageSubject) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "EmailPlus.IncomingMessageSubject";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
