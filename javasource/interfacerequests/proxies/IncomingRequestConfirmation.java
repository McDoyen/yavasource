// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package interfacerequests.proxies;

public class IncomingRequestConfirmation extends interfaceshared.proxies.IncomingConfirmation
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "InterfaceRequests.IncomingRequestConfirmation";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		ConfirmationMessageID("ConfirmationMessageID"),
		InterfaceName("InterfaceName"),
		ExternalReferenceID("ExternalReferenceID"),
		InternalReferenceID("InternalReferenceID"),
		SuccessfullyProcessed("SuccessfullyProcessed"),
		MessageID("MessageID"),
		MessageType("MessageType"),
		MessageDirection("MessageDirection"),
		Status("Status"),
		RetrievedInterfaceName("RetrievedInterfaceName"),
		CreatedByCustomMessage("CreatedByCustomMessage"),
		RequestResponse_IncomingRequestConfirmation("InterfaceRequests.RequestResponse_IncomingRequestConfirmation"),
		IncomingConfirmation_OutgoingMessage("InterfaceShared.IncomingConfirmation_OutgoingMessage"),
		IncomingMessage_SynchronousResponse("InterfaceShared.IncomingMessage_SynchronousResponse"),
		BooleanWrapper_Message("InterfaceShared.BooleanWrapper_Message"),
		Message_IndexData("InterfaceShared.Message_IndexData"),
		Message_InterfaceMessageConfiguration("InterfaceShared.Message_InterfaceMessageConfiguration"),
		Message_InterfaceConfiguration("InterfaceShared.Message_InterfaceConfiguration");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public IncomingRequestConfirmation(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "InterfaceRequests.IncomingRequestConfirmation"));
	}

	protected IncomingRequestConfirmation(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject incomingRequestConfirmationMendixObject)
	{
		super(context, incomingRequestConfirmationMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("InterfaceRequests.IncomingRequestConfirmation", incomingRequestConfirmationMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a InterfaceRequests.IncomingRequestConfirmation");
	}

	/**
	 * @deprecated Use 'IncomingRequestConfirmation.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static interfacerequests.proxies.IncomingRequestConfirmation initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return interfacerequests.proxies.IncomingRequestConfirmation.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static interfacerequests.proxies.IncomingRequestConfirmation initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new interfacerequests.proxies.IncomingRequestConfirmation(context, mendixObject);
	}

	public static interfacerequests.proxies.IncomingRequestConfirmation load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return interfacerequests.proxies.IncomingRequestConfirmation.initialize(context, mendixObject);
	}

	public static java.util.List<interfacerequests.proxies.IncomingRequestConfirmation> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<interfacerequests.proxies.IncomingRequestConfirmation> result = new java.util.ArrayList<interfacerequests.proxies.IncomingRequestConfirmation>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//InterfaceRequests.IncomingRequestConfirmation" + xpathConstraint))
			result.add(interfacerequests.proxies.IncomingRequestConfirmation.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of RequestResponse_IncomingRequestConfirmation
	 */
	public final interfacerequests.proxies.RequestResponse getRequestResponse_IncomingRequestConfirmation() throws com.mendix.core.CoreException
	{
		return getRequestResponse_IncomingRequestConfirmation(getContext());
	}

	/**
	 * @param context
	 * @return value of RequestResponse_IncomingRequestConfirmation
	 */
	public final interfacerequests.proxies.RequestResponse getRequestResponse_IncomingRequestConfirmation(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfacerequests.proxies.RequestResponse result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.RequestResponse_IncomingRequestConfirmation.toString());
		if (identifier != null)
			result = interfacerequests.proxies.RequestResponse.load(context, identifier);
		return result;
	}

	/**
	 * Set value of RequestResponse_IncomingRequestConfirmation
	 * @param requestresponse_incomingrequestconfirmation
	 */
	public final void setRequestResponse_IncomingRequestConfirmation(interfacerequests.proxies.RequestResponse requestresponse_incomingrequestconfirmation)
	{
		setRequestResponse_IncomingRequestConfirmation(getContext(), requestresponse_incomingrequestconfirmation);
	}

	/**
	 * Set value of RequestResponse_IncomingRequestConfirmation
	 * @param context
	 * @param requestresponse_incomingrequestconfirmation
	 */
	public final void setRequestResponse_IncomingRequestConfirmation(com.mendix.systemwideinterfaces.core.IContext context, interfacerequests.proxies.RequestResponse requestresponse_incomingrequestconfirmation)
	{
		if (requestresponse_incomingrequestconfirmation == null)
			getMendixObject().setValue(context, MemberNames.RequestResponse_IncomingRequestConfirmation.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.RequestResponse_IncomingRequestConfirmation.toString(), requestresponse_incomingrequestconfirmation.getMendixObject().getId());
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final interfacerequests.proxies.IncomingRequestConfirmation that = (interfacerequests.proxies.IncomingRequestConfirmation) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "InterfaceRequests.IncomingRequestConfirmation";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
