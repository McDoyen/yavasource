// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package interfacerequests.proxies;

public class Room extends interfaceshared.proxies.AuditableEntity
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "InterfaceRequests.Room";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		RoomName("RoomName"),
		FloorName("FloorName"),
		Location_Room("InterfaceRequests.Location_Room"),
		Room_RoomContainerExpertDesk("InterfaceRequests.Room_RoomContainerExpertDesk");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Room(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "InterfaceRequests.Room"));
	}

	protected Room(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject roomMendixObject)
	{
		super(context, roomMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("InterfaceRequests.Room", roomMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a InterfaceRequests.Room");
	}

	/**
	 * @deprecated Use 'Room.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static interfacerequests.proxies.Room initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return interfacerequests.proxies.Room.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static interfacerequests.proxies.Room initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new interfacerequests.proxies.Room(context, mendixObject);
	}

	public static interfacerequests.proxies.Room load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return interfacerequests.proxies.Room.initialize(context, mendixObject);
	}

	public static java.util.List<interfacerequests.proxies.Room> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<interfacerequests.proxies.Room> result = new java.util.ArrayList<interfacerequests.proxies.Room>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//InterfaceRequests.Room" + xpathConstraint))
			result.add(interfacerequests.proxies.Room.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of RoomName
	 */
	public final java.lang.String getRoomName()
	{
		return getRoomName(getContext());
	}

	/**
	 * @param context
	 * @return value of RoomName
	 */
	public final java.lang.String getRoomName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.RoomName.toString());
	}

	/**
	 * Set value of RoomName
	 * @param roomname
	 */
	public final void setRoomName(java.lang.String roomname)
	{
		setRoomName(getContext(), roomname);
	}

	/**
	 * Set value of RoomName
	 * @param context
	 * @param roomname
	 */
	public final void setRoomName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String roomname)
	{
		getMendixObject().setValue(context, MemberNames.RoomName.toString(), roomname);
	}

	/**
	 * @return value of FloorName
	 */
	public final java.lang.String getFloorName()
	{
		return getFloorName(getContext());
	}

	/**
	 * @param context
	 * @return value of FloorName
	 */
	public final java.lang.String getFloorName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.FloorName.toString());
	}

	/**
	 * Set value of FloorName
	 * @param floorname
	 */
	public final void setFloorName(java.lang.String floorname)
	{
		setFloorName(getContext(), floorname);
	}

	/**
	 * Set value of FloorName
	 * @param context
	 * @param floorname
	 */
	public final void setFloorName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String floorname)
	{
		getMendixObject().setValue(context, MemberNames.FloorName.toString(), floorname);
	}

	/**
	 * @return value of Location_Room
	 */
	public final interfacerequests.proxies.Location getLocation_Room() throws com.mendix.core.CoreException
	{
		return getLocation_Room(getContext());
	}

	/**
	 * @param context
	 * @return value of Location_Room
	 */
	public final interfacerequests.proxies.Location getLocation_Room(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfacerequests.proxies.Location result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Location_Room.toString());
		if (identifier != null)
			result = interfacerequests.proxies.Location.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Location_Room
	 * @param location_room
	 */
	public final void setLocation_Room(interfacerequests.proxies.Location location_room)
	{
		setLocation_Room(getContext(), location_room);
	}

	/**
	 * Set value of Location_Room
	 * @param context
	 * @param location_room
	 */
	public final void setLocation_Room(com.mendix.systemwideinterfaces.core.IContext context, interfacerequests.proxies.Location location_room)
	{
		if (location_room == null)
			getMendixObject().setValue(context, MemberNames.Location_Room.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Location_Room.toString(), location_room.getMendixObject().getId());
	}

	/**
	 * @return value of Room_RoomContainerExpertDesk
	 */
	public final interfacerequests.proxies.RoomContainerExpertDesk getRoom_RoomContainerExpertDesk() throws com.mendix.core.CoreException
	{
		return getRoom_RoomContainerExpertDesk(getContext());
	}

	/**
	 * @param context
	 * @return value of Room_RoomContainerExpertDesk
	 */
	public final interfacerequests.proxies.RoomContainerExpertDesk getRoom_RoomContainerExpertDesk(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfacerequests.proxies.RoomContainerExpertDesk result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Room_RoomContainerExpertDesk.toString());
		if (identifier != null)
			result = interfacerequests.proxies.RoomContainerExpertDesk.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Room_RoomContainerExpertDesk
	 * @param room_roomcontainerexpertdesk
	 */
	public final void setRoom_RoomContainerExpertDesk(interfacerequests.proxies.RoomContainerExpertDesk room_roomcontainerexpertdesk)
	{
		setRoom_RoomContainerExpertDesk(getContext(), room_roomcontainerexpertdesk);
	}

	/**
	 * Set value of Room_RoomContainerExpertDesk
	 * @param context
	 * @param room_roomcontainerexpertdesk
	 */
	public final void setRoom_RoomContainerExpertDesk(com.mendix.systemwideinterfaces.core.IContext context, interfacerequests.proxies.RoomContainerExpertDesk room_roomcontainerexpertdesk)
	{
		if (room_roomcontainerexpertdesk == null)
			getMendixObject().setValue(context, MemberNames.Room_RoomContainerExpertDesk.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Room_RoomContainerExpertDesk.toString(), room_roomcontainerexpertdesk.getMendixObject().getId());
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final interfacerequests.proxies.Room that = (interfacerequests.proxies.Room) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "InterfaceRequests.Room";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
