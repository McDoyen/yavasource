// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package workflowtemplate.proxies;

public class RequestNode extends workflowtemplate.proxies.Node
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "WorkflowTemplate.RequestNode";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		TaskOrRequest("TaskOrRequest"),
		RelationType("RelationType"),
		DefaultOpenEndTimeCommitmentDurationType("DefaultOpenEndTimeCommitmentDurationType"),
		DefaultOpenEndTimeCommitmentDuration("DefaultOpenEndTimeCommitmentDuration"),
		ShortDescription("ShortDescription"),
		DetailDescription("DetailDescription"),
		DetailDescriptionNoHTML("DetailDescriptionNoHTML"),
		InstanceID("InstanceID"),
		Order("Order"),
		Name("Name"),
		NodeType("NodeType"),
		TempInsertType("TempInsertType"),
		HasFromNodes("HasFromNodes"),
		HasToNodes("HasToNodes"),
		ValidationText("ValidationText"),
		Valid("Valid"),
		ResetChart("ResetChart"),
		RequestNode_TemplateRequest("WorkflowTemplate.RequestNode_TemplateRequest"),
		Node_Workflow("WorkflowTemplate.Node_Workflow"),
		TempInsertAfterNodeTemplate("WorkflowTemplate.TempInsertAfterNodeTemplate"),
		EndNode_WorkflowResult("WorkflowTemplate.EndNode_WorkflowResult");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public RequestNode(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "WorkflowTemplate.RequestNode"));
	}

	protected RequestNode(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject requestNodeMendixObject)
	{
		super(context, requestNodeMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("WorkflowTemplate.RequestNode", requestNodeMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a WorkflowTemplate.RequestNode");
	}

	/**
	 * @deprecated Use 'RequestNode.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static workflowtemplate.proxies.RequestNode initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return workflowtemplate.proxies.RequestNode.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static workflowtemplate.proxies.RequestNode initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new workflowtemplate.proxies.RequestNode(context, mendixObject);
	}

	public static workflowtemplate.proxies.RequestNode load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return workflowtemplate.proxies.RequestNode.initialize(context, mendixObject);
	}

	public static java.util.List<workflowtemplate.proxies.RequestNode> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<workflowtemplate.proxies.RequestNode> result = new java.util.ArrayList<workflowtemplate.proxies.RequestNode>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//WorkflowTemplate.RequestNode" + xpathConstraint))
			result.add(workflowtemplate.proxies.RequestNode.initialize(context, obj));
		return result;
	}

	/**
	 * Set value of TaskOrRequest
	 * @param taskorrequest
	 */
	public final workflowshared.proxies.TaskOrTicketEnum getTaskOrRequest()
	{
		return getTaskOrRequest(getContext());
	}

	/**
	 * @param context
	 * @return value of TaskOrRequest
	 */
	public final workflowshared.proxies.TaskOrTicketEnum getTaskOrRequest(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.TaskOrRequest.toString());
		if (obj == null)
			return null;

		return workflowshared.proxies.TaskOrTicketEnum.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of TaskOrRequest
	 * @param taskorrequest
	 */
	public final void setTaskOrRequest(workflowshared.proxies.TaskOrTicketEnum taskorrequest)
	{
		setTaskOrRequest(getContext(), taskorrequest);
	}

	/**
	 * Set value of TaskOrRequest
	 * @param context
	 * @param taskorrequest
	 */
	public final void setTaskOrRequest(com.mendix.systemwideinterfaces.core.IContext context, workflowshared.proxies.TaskOrTicketEnum taskorrequest)
	{
		if (taskorrequest != null)
			getMendixObject().setValue(context, MemberNames.TaskOrRequest.toString(), taskorrequest.toString());
		else
			getMendixObject().setValue(context, MemberNames.TaskOrRequest.toString(), null);
	}

	/**
	 * Set value of RelationType
	 * @param relationtype
	 */
	public final process.proxies.RelationTypes getRelationType()
	{
		return getRelationType(getContext());
	}

	/**
	 * @param context
	 * @return value of RelationType
	 */
	public final process.proxies.RelationTypes getRelationType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.RelationType.toString());
		if (obj == null)
			return null;

		return process.proxies.RelationTypes.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of RelationType
	 * @param relationtype
	 */
	public final void setRelationType(process.proxies.RelationTypes relationtype)
	{
		setRelationType(getContext(), relationtype);
	}

	/**
	 * Set value of RelationType
	 * @param context
	 * @param relationtype
	 */
	public final void setRelationType(com.mendix.systemwideinterfaces.core.IContext context, process.proxies.RelationTypes relationtype)
	{
		if (relationtype != null)
			getMendixObject().setValue(context, MemberNames.RelationType.toString(), relationtype.toString());
		else
			getMendixObject().setValue(context, MemberNames.RelationType.toString(), null);
	}

	/**
	 * Set value of DefaultOpenEndTimeCommitmentDurationType
	 * @param defaultopenendtimecommitmentdurationtype
	 */
	public final servicecatalogue.proxies.DeliveryDurationType getDefaultOpenEndTimeCommitmentDurationType()
	{
		return getDefaultOpenEndTimeCommitmentDurationType(getContext());
	}

	/**
	 * @param context
	 * @return value of DefaultOpenEndTimeCommitmentDurationType
	 */
	public final servicecatalogue.proxies.DeliveryDurationType getDefaultOpenEndTimeCommitmentDurationType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.DefaultOpenEndTimeCommitmentDurationType.toString());
		if (obj == null)
			return null;

		return servicecatalogue.proxies.DeliveryDurationType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of DefaultOpenEndTimeCommitmentDurationType
	 * @param defaultopenendtimecommitmentdurationtype
	 */
	public final void setDefaultOpenEndTimeCommitmentDurationType(servicecatalogue.proxies.DeliveryDurationType defaultopenendtimecommitmentdurationtype)
	{
		setDefaultOpenEndTimeCommitmentDurationType(getContext(), defaultopenendtimecommitmentdurationtype);
	}

	/**
	 * Set value of DefaultOpenEndTimeCommitmentDurationType
	 * @param context
	 * @param defaultopenendtimecommitmentdurationtype
	 */
	public final void setDefaultOpenEndTimeCommitmentDurationType(com.mendix.systemwideinterfaces.core.IContext context, servicecatalogue.proxies.DeliveryDurationType defaultopenendtimecommitmentdurationtype)
	{
		if (defaultopenendtimecommitmentdurationtype != null)
			getMendixObject().setValue(context, MemberNames.DefaultOpenEndTimeCommitmentDurationType.toString(), defaultopenendtimecommitmentdurationtype.toString());
		else
			getMendixObject().setValue(context, MemberNames.DefaultOpenEndTimeCommitmentDurationType.toString(), null);
	}

	/**
	 * @return value of DefaultOpenEndTimeCommitmentDuration
	 */
	public final java.lang.Integer getDefaultOpenEndTimeCommitmentDuration()
	{
		return getDefaultOpenEndTimeCommitmentDuration(getContext());
	}

	/**
	 * @param context
	 * @return value of DefaultOpenEndTimeCommitmentDuration
	 */
	public final java.lang.Integer getDefaultOpenEndTimeCommitmentDuration(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.DefaultOpenEndTimeCommitmentDuration.toString());
	}

	/**
	 * Set value of DefaultOpenEndTimeCommitmentDuration
	 * @param defaultopenendtimecommitmentduration
	 */
	public final void setDefaultOpenEndTimeCommitmentDuration(java.lang.Integer defaultopenendtimecommitmentduration)
	{
		setDefaultOpenEndTimeCommitmentDuration(getContext(), defaultopenendtimecommitmentduration);
	}

	/**
	 * Set value of DefaultOpenEndTimeCommitmentDuration
	 * @param context
	 * @param defaultopenendtimecommitmentduration
	 */
	public final void setDefaultOpenEndTimeCommitmentDuration(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer defaultopenendtimecommitmentduration)
	{
		getMendixObject().setValue(context, MemberNames.DefaultOpenEndTimeCommitmentDuration.toString(), defaultopenendtimecommitmentduration);
	}

	/**
	 * @return value of ShortDescription
	 */
	public final java.lang.String getShortDescription()
	{
		return getShortDescription(getContext());
	}

	/**
	 * @param context
	 * @return value of ShortDescription
	 */
	public final java.lang.String getShortDescription(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ShortDescription.toString());
	}

	/**
	 * Set value of ShortDescription
	 * @param shortdescription
	 */
	public final void setShortDescription(java.lang.String shortdescription)
	{
		setShortDescription(getContext(), shortdescription);
	}

	/**
	 * Set value of ShortDescription
	 * @param context
	 * @param shortdescription
	 */
	public final void setShortDescription(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String shortdescription)
	{
		getMendixObject().setValue(context, MemberNames.ShortDescription.toString(), shortdescription);
	}

	/**
	 * @return value of DetailDescription
	 */
	public final java.lang.String getDetailDescription()
	{
		return getDetailDescription(getContext());
	}

	/**
	 * @param context
	 * @return value of DetailDescription
	 */
	public final java.lang.String getDetailDescription(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.DetailDescription.toString());
	}

	/**
	 * Set value of DetailDescription
	 * @param detaildescription
	 */
	public final void setDetailDescription(java.lang.String detaildescription)
	{
		setDetailDescription(getContext(), detaildescription);
	}

	/**
	 * Set value of DetailDescription
	 * @param context
	 * @param detaildescription
	 */
	public final void setDetailDescription(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String detaildescription)
	{
		getMendixObject().setValue(context, MemberNames.DetailDescription.toString(), detaildescription);
	}

	/**
	 * @return value of DetailDescriptionNoHTML
	 */
	public final java.lang.String getDetailDescriptionNoHTML()
	{
		return getDetailDescriptionNoHTML(getContext());
	}

	/**
	 * @param context
	 * @return value of DetailDescriptionNoHTML
	 */
	public final java.lang.String getDetailDescriptionNoHTML(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.DetailDescriptionNoHTML.toString());
	}

	/**
	 * Set value of DetailDescriptionNoHTML
	 * @param detaildescriptionnohtml
	 */
	public final void setDetailDescriptionNoHTML(java.lang.String detaildescriptionnohtml)
	{
		setDetailDescriptionNoHTML(getContext(), detaildescriptionnohtml);
	}

	/**
	 * Set value of DetailDescriptionNoHTML
	 * @param context
	 * @param detaildescriptionnohtml
	 */
	public final void setDetailDescriptionNoHTML(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String detaildescriptionnohtml)
	{
		getMendixObject().setValue(context, MemberNames.DetailDescriptionNoHTML.toString(), detaildescriptionnohtml);
	}

	/**
	 * @return value of RequestNode_TemplateRequest
	 */
	public final scheduling.proxies.TemplateRequest getRequestNode_TemplateRequest() throws com.mendix.core.CoreException
	{
		return getRequestNode_TemplateRequest(getContext());
	}

	/**
	 * @param context
	 * @return value of RequestNode_TemplateRequest
	 */
	public final scheduling.proxies.TemplateRequest getRequestNode_TemplateRequest(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		scheduling.proxies.TemplateRequest result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.RequestNode_TemplateRequest.toString());
		if (identifier != null)
			result = scheduling.proxies.TemplateRequest.load(context, identifier);
		return result;
	}

	/**
	 * Set value of RequestNode_TemplateRequest
	 * @param requestnode_templaterequest
	 */
	public final void setRequestNode_TemplateRequest(scheduling.proxies.TemplateRequest requestnode_templaterequest)
	{
		setRequestNode_TemplateRequest(getContext(), requestnode_templaterequest);
	}

	/**
	 * Set value of RequestNode_TemplateRequest
	 * @param context
	 * @param requestnode_templaterequest
	 */
	public final void setRequestNode_TemplateRequest(com.mendix.systemwideinterfaces.core.IContext context, scheduling.proxies.TemplateRequest requestnode_templaterequest)
	{
		if (requestnode_templaterequest == null)
			getMendixObject().setValue(context, MemberNames.RequestNode_TemplateRequest.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.RequestNode_TemplateRequest.toString(), requestnode_templaterequest.getMendixObject().getId());
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final workflowtemplate.proxies.RequestNode that = (workflowtemplate.proxies.RequestNode) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "WorkflowTemplate.RequestNode";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
