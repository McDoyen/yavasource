// This file was generated by Mendix Modeler 7.7.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package mendix.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the Mendix module
	public static boolean account_SetDomainByUser(IContext context, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Mendix.Account_SetDomainByUser", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void addLabelsOfDomain(IContext context, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			Core.execute(context, "Mendix.AddLabelsOfDomain", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean afterStartUp(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.Boolean)Core.execute(context, "Mendix.AfterStartUp", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean afterStartup_LoginListener(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.Boolean)Core.execute(context, "Mendix.AfterStartup_LoginListener", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void analysis_CloseForm(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Mendix.Analysis_CloseForm", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean applyAccount(IContext context, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Mendix.ApplyAccount", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void applyAccountAndClose(IContext context, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			Core.execute(context, "Mendix.ApplyAccountAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean applyAccountProfile(IContext context, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Mendix.ApplyAccountProfile", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void applyAccountProfileAndClose(IContext context, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			Core.execute(context, "Mendix.ApplyAccountProfileAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void applyDateTimeFormat(IContext context, mendix.proxies.DateTimeFormat _dateTimeFormat)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DateTimeFormat", _dateTimeFormat == null ? null : _dateTimeFormat.getMendixObject());
			Core.execute(context, "Mendix.ApplyDateTimeFormat", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditAccount_AfterCommit(IContext context, system.proxies.User _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Mendix.AuditAccount_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditAccount_AfterDelete(IContext context, system.proxies.User _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Mendix.AuditAccount_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditAccount_GetAuditRecord(IContext context, system.proxies.User _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Mendix.AuditAccount_GetAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditI18NCode_AfterCommit(IContext context, mendix.proxies.I18N_Code _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Mendix.AuditI18NCode_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditI18NCode_AfterDelete(IContext context, mendix.proxies.I18N_Code _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Mendix.AuditI18NCode_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditI18NCode_GetAuditRecord(IContext context, mendix.proxies.I18N_Code _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Mendix.AuditI18NCode_GetAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditI18NTranslation_AfterCommit(IContext context, mendix.proxies.I18N_Translation _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Mendix.AuditI18NTranslation_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditI18NTranslation_AfterDelete(IContext context, mendix.proxies.I18N_Translation _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Mendix.AuditI18NTranslation_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditIDateTimeFormat_AfterCommit(IContext context, mendix.proxies.DateTimeFormat _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Mendix.AuditIDateTimeFormat_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditIDateTimeFormat_AfterDelete(IContext context, mendix.proxies.DateTimeFormat _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Mendix.AuditIDateTimeFormat_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditIDateTimeFormat_GetAuditRecord(IContext context, mendix.proxies.DateTimeFormat _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Mendix.AuditIDateTimeFormat_GetAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditServer_AfterCommit(IContext context, mendix.proxies.Server _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Mendix.AuditServer_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditServer_AfterDelete(IContext context, mendix.proxies.Server _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Mendix.AuditServer_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditServer_GetAuditRecord(IContext context, mendix.proxies.Server _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Mendix.AuditServer_GetAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bC_MicroflowUpdateDependentEntries(IContext context, mendix.proxies.Microflow _microflow)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Microflow", _microflow == null ? null : _microflow.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Mendix.BC_MicroflowUpdateDependentEntries", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bCo_Account(IContext context, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Mendix.BCo_Account", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bCo_LicensePool(IContext context, mendix.proxies.LicensePool _licensePool)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LicensePool", _licensePool == null ? null : _licensePool.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Mendix.BCo_LicensePool", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void beforeShutdown(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Mendix.BeforeShutdown", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void checkPasswordAtLogin(IContext context, system.proxies.User _anonymousUser, system.proxies.User _signedInUser)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AnonymousUser", _anonymousUser == null ? null : _anonymousUser.getMendixObject());
			params.put("SignedInUser", _signedInUser == null ? null : _signedInUser.getMendixObject());
			Core.execute(context, "Mendix.CheckPasswordAtLogin", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void checkSystemFileDocuments(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Mendix.CheckSystemFileDocuments", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean checkWebserviceUser_AssociatedPerson(IContext context, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Mendix.CheckWebserviceUser_AssociatedPerson", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void cleanUpScheduledEventInformation(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Mendix.CleanUpScheduledEventInformation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean clearPersonOnDelete(IContext context, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Mendix.ClearPersonOnDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void clearSystemFileDocument(IContext context, system.proxies.FileDocument _fileDocument)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FileDocument", _fileDocument == null ? null : _fileDocument.getMendixObject());
			Core.execute(context, "Mendix.ClearSystemFileDocument", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long computeCurrentNamedUsers(IContext context, mendix.proxies.LicensePool _licensePool)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LicensePool", _licensePool == null ? null : _licensePool.getMendixObject());
			return (java.lang.Long)Core.execute(context, "Mendix.ComputeCurrentNamedUsers", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyAccount(IContext context, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			Core.execute(context, "Mendix.CopyAccount", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyAccountList(IContext context, java.util.List<mendix.proxies.Account> _accountList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_accountList = null;
			if (_accountList != null)
			{
				listparam_accountList = new java.util.ArrayList<IMendixObject>();
				for (mendix.proxies.Account obj : _accountList)
					listparam_accountList.add(obj.getMendixObject());
			}
			params.put("AccountList", listparam_accountList);
			Core.execute(context, "Mendix.CopyAccountList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyDateTimeFormatList(IContext context, java.util.List<mendix.proxies.DateTimeFormat> _dateTimeFormatList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_dateTimeFormatList = null;
			if (_dateTimeFormatList != null)
			{
				listparam_dateTimeFormatList = new java.util.ArrayList<IMendixObject>();
				for (mendix.proxies.DateTimeFormat obj : _dateTimeFormatList)
					listparam_dateTimeFormatList.add(obj.getMendixObject());
			}
			params.put("DateTimeFormatList", listparam_dateTimeFormatList);
			Core.execute(context, "Mendix.CopyDateTimeFormatList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static mendix.proxies.PasswordEntity createPasswordEntityForAccount(IContext context, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Mendix.createPasswordEntityForAccount", params);
			return result == null ? null : mendix.proxies.PasswordEntity.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deleteAllScheduledEvents(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Mendix.DeleteAllScheduledEvents", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean deleteUserQueries(IContext context, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Mendix.DeleteUserQueries", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean determineAccountIsCreated(IContext context, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Mendix.determineAccountIsCreated", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void domainSwitch(IContext context, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			Core.execute(context, "Mendix.DomainSwitch", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void evt_CreateSharedQueriesForNewUser(IContext context, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			Core.execute(context, "Mendix.Evt_CreateSharedQueriesForNewUser", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean expertDeskSetDefaultLicensePool(IContext context, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Mendix.ExpertDeskSetDefaultLicensePool", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void generic_CloseForm(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Mendix.Generic_CloseForm", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void generic_DoNothing(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Mendix.Generic_DoNothing", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static mendix.proxies.Account generic_GetCurrentAccount(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "Mendix.Generic_GetCurrentAccount", params);
			return result == null ? null : mendix.proxies.Account.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static nap.proxies.Person generic_GetCurrentPerson(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "Mendix.Generic_GetCurrentPerson", params);
			return result == null ? null : nap.proxies.Person.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean generic_GetProgressNotes(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.Boolean)Core.execute(context, "Mendix.Generic_GetProgressNotes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static queryrequests.proxies.QueryPanel generic_GetQueryPanelForCurrentUser(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "Mendix.Generic_GetQueryPanelForCurrentUser", params);
			return result == null ? null : queryrequests.proxies.QueryPanel.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getActiveButtonHTML(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.String)Core.execute(context, "Mendix.getActiveButtonHTML", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getAMActiveButton(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.String)Core.execute(context, "Mendix.getAMActiveButton", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getAMButton(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.String)Core.execute(context, "Mendix.getAMButton", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getAMLabelTooltip(IContext context, java.lang.String _inputString)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputString", _inputString);
			return (java.lang.String)Core.execute(context, "Mendix.getAMLabelTooltip", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<da.proxies.Label> getDefaultLabelList(IContext context, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Mendix.GetDefaultLabelList", params);
			java.util.List<da.proxies.Label> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<da.proxies.Label>();
				for (IMendixObject obj : objs)
					result.add(da.proxies.Label.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getINActiveButton(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.String)Core.execute(context, "Mendix.getINActiveButton", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getINButton(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.String)Core.execute(context, "Mendix.getINButton", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getINLabelTooltip(IContext context, java.lang.String _inputString)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputString", _inputString);
			return (java.lang.String)Core.execute(context, "Mendix.getINLabelTooltip", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getMSGActiveButton(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.String)Core.execute(context, "Mendix.getMSGActiveButton", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getMSGButton(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.String)Core.execute(context, "Mendix.getMSGButton", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getMSGLabelTooltip(IContext context, java.lang.String _inputString)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputString", _inputString);
			return (java.lang.String)Core.execute(context, "Mendix.getMSGLabelTooltip", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getNormalButtonHTML(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.String)Core.execute(context, "Mendix.getNormalButtonHTML", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getPDActiveButton(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.String)Core.execute(context, "Mendix.getPDActiveButton", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getPDButton(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.String)Core.execute(context, "Mendix.getPDButton", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getPDLabelTooltip(IContext context, java.lang.String _inputString)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputString", _inputString);
			return (java.lang.String)Core.execute(context, "Mendix.getPDLabelTooltip", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<nap.proxies.Person> getPersonsWithSameDomain(IContext context, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Mendix.GetPersonsWithSameDomain", params);
			java.util.List<nap.proxies.Person> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<nap.proxies.Person>();
				for (IMendixObject obj : objs)
					result.add(nap.proxies.Person.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<system.proxies.UserRole> getPortalUserRoles(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.List<IMendixObject> objs = Core.execute(context, "Mendix.GetPortalUserRoles", params);
			java.util.List<system.proxies.UserRole> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<system.proxies.UserRole>();
				for (IMendixObject obj : objs)
					result.add(system.proxies.UserRole.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<mendix.proxies.Server> getServers(IContext context, importexport.proxies.ImportExportSetting _importExportSetting)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ImportExportSetting", _importExportSetting == null ? null : _importExportSetting.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Mendix.GetServers", params);
			java.util.List<mendix.proxies.Server> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<mendix.proxies.Server>();
				for (IMendixObject obj : objs)
					result.add(mendix.proxies.Server.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getSMActiveButton(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.String)Core.execute(context, "Mendix.getSMActiveButton", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getSMButton(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.String)Core.execute(context, "Mendix.getSMButton", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getSMLabelTooltip(IContext context, java.lang.String _inputString)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputString", _inputString);
			return (java.lang.String)Core.execute(context, "Mendix.getSMLabelTooltip", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getTranslatedText(IContext context, java.lang.String _code, system.proxies.Language _language, system.proxies.User _user)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Code", _code);
			params.put("Language", _language == null ? null : _language.getMendixObject());
			params.put("User", _user == null ? null : _user.getMendixObject());
			return (java.lang.String)Core.execute(context, "Mendix.GetTranslatedText", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static system.proxies.Language getUserLanguage(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "Mendix.GetUserLanguage", params);
			return result == null ? null : system.proxies.Language.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getUserLanguageCode(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.String)Core.execute(context, "Mendix.GetUserLanguageCode", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void goToURL(IContext context, java.lang.String _uRL, boolean _toNewBrowserWindow)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("URL", _uRL);
			params.put("ToNewBrowserWindow", _toNewBrowserWindow);
			Core.execute(context, "Mendix.GoToURL", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean hasRole(IContext context, system.proxies.User _user, java.lang.String _roleStr)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("User", _user == null ? null : _user.getMendixObject());
			params.put("RoleStr", _roleStr);
			return (java.lang.Boolean)Core.execute(context, "Mendix.HasRole", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean hasRoleInSemiColonList(IContext context, system.proxies.User _user, java.lang.String _roleListStr)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("User", _user == null ? null : _user.getMendixObject());
			params.put("RoleListStr", _roleListStr);
			return (java.lang.Boolean)Core.execute(context, "Mendix.HasRoleInSemiColonList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void initializeLicensePoolHelper(IContext context, java.util.List<system.proxies.UserRole> _toCheckUserRoleList, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_toCheckUserRoleList = null;
			if (_toCheckUserRoleList != null)
			{
				listparam_toCheckUserRoleList = new java.util.ArrayList<IMendixObject>();
				for (system.proxies.UserRole obj : _toCheckUserRoleList)
					listparam_toCheckUserRoleList.add(obj.getMendixObject());
			}
			params.put("ToCheckUserRoleList", listparam_toCheckUserRoleList);
			params.put("Account", _account == null ? null : _account.getMendixObject());
			Core.execute(context, "Mendix.InitializeLicensePoolHelper", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void initializeLicensePools_LicencePoolOverview(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Mendix.InitializeLicensePools_LicencePoolOverview", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void invokeAdminChangePassword(IContext context, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			Core.execute(context, "Mendix.invokeAdminChangePassword", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean isMxAdminUser_microflow(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.Boolean)Core.execute(context, "Mendix.IsMxAdminUser_microflow", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Account_SingleSelectCancel(IContext context, importexport.proxies.ImportExportSetting _importExportSetting)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ImportExportSetting", _importExportSetting == null ? null : _importExportSetting.getMendixObject());
			Core.execute(context, "Mendix.IVK_Account_SingleSelectCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AccountCancel(IContext context, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			Core.execute(context, "Mendix.IVK_AccountCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AccountNonClean_For_Initilizing_Only_OverviewClose(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Mendix.IVK_AccountNonClean_For_Initilizing_Only_OverviewClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DateGen(IContext context, mendix.proxies.DayWeekMonthSettings _dayWeekMonthSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DayWeekMonthSettings", _dayWeekMonthSettings == null ? null : _dayWeekMonthSettings.getMendixObject());
			Core.execute(context, "Mendix.IVK_DateGen", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DateTimeFormatCancel(IContext context, mendix.proxies.DateTimeFormat _dateTimeFormat)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DateTimeFormat", _dateTimeFormat == null ? null : _dateTimeFormat.getMendixObject());
			Core.execute(context, "Mendix.IVK_DateTimeFormatCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DateTimeFormatSave(IContext context, mendix.proxies.DateTimeFormat _dateTimeFormat)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DateTimeFormat", _dateTimeFormat == null ? null : _dateTimeFormat.getMendixObject());
			Core.execute(context, "Mendix.IVK_DateTimeFormatSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DateTimeFormatSaveAndClose(IContext context, mendix.proxies.DateTimeFormat _dateTimeFormat)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DateTimeFormat", _dateTimeFormat == null ? null : _dateTimeFormat.getMendixObject());
			Core.execute(context, "Mendix.IVK_DateTimeFormatSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DateTimeFormatSaveAndNew(IContext context, mendix.proxies.DateTimeFormat _dateTimeFormat)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DateTimeFormat", _dateTimeFormat == null ? null : _dateTimeFormat.getMendixObject());
			Core.execute(context, "Mendix.IVK_DateTimeFormatSaveAndNew", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DayWeekMonthSettingsCancel(IContext context, mendix.proxies.DayWeekMonthSettings _dayWeekMonthSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DayWeekMonthSettings", _dayWeekMonthSettings == null ? null : _dayWeekMonthSettings.getMendixObject());
			Core.execute(context, "Mendix.IVK_DayWeekMonthSettingsCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DayWeekMonthSettingsSave(IContext context, mendix.proxies.DayWeekMonthSettings _dayWeekMonthSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DayWeekMonthSettings", _dayWeekMonthSettings == null ? null : _dayWeekMonthSettings.getMendixObject());
			Core.execute(context, "Mendix.IVK_DayWeekMonthSettingsSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DayWeekMonthSettingsSaveAndClose(IContext context, mendix.proxies.DayWeekMonthSettings _dayWeekMonthSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DayWeekMonthSettings", _dayWeekMonthSettings == null ? null : _dayWeekMonthSettings.getMendixObject());
			Core.execute(context, "Mendix.IVK_DayWeekMonthSettingsSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_I18N_CodeCancel(IContext context, mendix.proxies.I18N_Code _i18N_Code)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("I18N_Code", _i18N_Code == null ? null : _i18N_Code.getMendixObject());
			Core.execute(context, "Mendix.IVK_I18N_CodeCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_I18N_CodeListSaveAndNew(IContext context, java.util.List<mendix.proxies.I18N_Code> _i18NCodeList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_i18NCodeList = null;
			if (_i18NCodeList != null)
			{
				listparam_i18NCodeList = new java.util.ArrayList<IMendixObject>();
				for (mendix.proxies.I18N_Code obj : _i18NCodeList)
					listparam_i18NCodeList.add(obj.getMendixObject());
			}
			params.put("I18NCodeList", listparam_i18NCodeList);
			Core.execute(context, "Mendix.IVK_I18N_CodeListSaveAndNew", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_I18N_CodeSave(IContext context, mendix.proxies.I18N_Code _i18N_Code)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("I18N_Code", _i18N_Code == null ? null : _i18N_Code.getMendixObject());
			Core.execute(context, "Mendix.IVK_I18N_CodeSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_I18N_CodeSaveAndClose(IContext context, mendix.proxies.I18N_Code _i18N_Code)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("I18N_Code", _i18N_Code == null ? null : _i18N_Code.getMendixObject());
			Core.execute(context, "Mendix.IVK_I18N_CodeSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_I18N_CodeSaveAndNew(IContext context, mendix.proxies.I18N_Code _i18NCode)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("I18NCode", _i18NCode == null ? null : _i18NCode.getMendixObject());
			Core.execute(context, "Mendix.IVK_I18N_CodeSaveAndNew", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_I18N_Translation_SaveAndNew(IContext context, mendix.proxies.I18N_Translation _i18NTranslation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("I18NTranslation", _i18NTranslation == null ? null : _i18NTranslation.getMendixObject());
			Core.execute(context, "Mendix.IVK_I18N_Translation_SaveAndNew", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_I18N_TranslationCancel(IContext context, mendix.proxies.I18N_Translation _i18N_Translation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("I18N_Translation", _i18N_Translation == null ? null : _i18N_Translation.getMendixObject());
			Core.execute(context, "Mendix.IVK_I18N_TranslationCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_I18N_TranslationSave(IContext context, mendix.proxies.I18N_Translation _i18N_Translation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("I18N_Translation", _i18N_Translation == null ? null : _i18N_Translation.getMendixObject());
			Core.execute(context, "Mendix.IVK_I18N_TranslationSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_I18N_TranslationSaveAndClose(IContext context, mendix.proxies.I18N_Translation _i18N_Translation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("I18N_Translation", _i18N_Translation == null ? null : _i18N_Translation.getMendixObject());
			Core.execute(context, "Mendix.IVK_I18N_TranslationSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ImageCancel(IContext context, system.proxies.Image _image)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Image", _image == null ? null : _image.getMendixObject());
			Core.execute(context, "Mendix.IVK_ImageCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ImageSave(IContext context, system.proxies.Image _image)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Image", _image == null ? null : _image.getMendixObject());
			Core.execute(context, "Mendix.IVK_ImageSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ImageSaveAndClose(IContext context, system.proxies.Image _image)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Image", _image == null ? null : _image.getMendixObject());
			Core.execute(context, "Mendix.IVK_ImageSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_LicensePoolCancel(IContext context, mendix.proxies.LicensePool _licensePool)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LicensePool", _licensePool == null ? null : _licensePool.getMendixObject());
			Core.execute(context, "Mendix.IVK_LicensePoolCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_LicensePoolSave(IContext context, mendix.proxies.LicensePool _licensePool)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LicensePool", _licensePool == null ? null : _licensePool.getMendixObject());
			Core.execute(context, "Mendix.IVK_LicensePoolSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_LicensePoolSaveAndClose(IContext context, mendix.proxies.LicensePool _licensePool)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LicensePool", _licensePool == null ? null : _licensePool.getMendixObject());
			Core.execute(context, "Mendix.IVK_LicensePoolSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenNavigationAM(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Mendix.IVK_OpenNavigationAM", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenNavigationIN(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Mendix.IVK_OpenNavigationIN", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenNavigationMSG(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Mendix.IVK_OpenNavigationMSG", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenNavigationPD(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Mendix.IVK_OpenNavigationPD", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenNavigationPD_AC(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Mendix.IVK_OpenNavigationPD_AC", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenNavigationPD_AC_CD(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Mendix.IVK_OpenNavigationPD_AC_CD", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenNavigationPD_AP(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Mendix.IVK_OpenNavigationPD_AP", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenNavigationPD_CM(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Mendix.IVK_OpenNavigationPD_CM", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenNavigationPD_GP(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Mendix.IVK_OpenNavigationPD_GP", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenNavigationPD_RP(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Mendix.IVK_OpenNavigationPD_RP", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenNavigationPD_SLM(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Mendix.IVK_OpenNavigationPD_SLM", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenNavigationPD_STM(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Mendix.IVK_OpenNavigationPD_STM", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenNavigationPD_TM(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Mendix.IVK_OpenNavigationPD_TM", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenNavigationPD_WF(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Mendix.IVK_OpenNavigationPD_WF", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenNavigationSM(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Mendix.IVK_OpenNavigationSM", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenNavigationSM_AU(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Mendix.IVK_OpenNavigationSM_AU", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ServerCancel(IContext context, mendix.proxies.Server _server)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Server", _server == null ? null : _server.getMendixObject());
			Core.execute(context, "Mendix.IVK_ServerCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ServerSave(IContext context, mendix.proxies.Server _server)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Server", _server == null ? null : _server.getMendixObject());
			Core.execute(context, "Mendix.IVK_ServerSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ServerSaveAndClose(IContext context, mendix.proxies.Server _server)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Server", _server == null ? null : _server.getMendixObject());
			Core.execute(context, "Mendix.IVK_ServerSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_TemplatesRoles_SelectCancel(IContext context, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			Core.execute(context, "Mendix.IVK_TemplatesRoles_SelectCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ToggleLocalAccount(IContext context, java.util.List<mendix.proxies.Account> _accountList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_accountList = null;
			if (_accountList != null)
			{
				listparam_accountList = new java.util.ArrayList<IMendixObject>();
				for (mendix.proxies.Account obj : _accountList)
					listparam_accountList.add(obj.getMendixObject());
			}
			params.put("AccountList", listparam_accountList);
			Core.execute(context, "Mendix.IVK_ToggleLocalAccount", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_URLRedirectorToNewClose(IContext context, mendix.proxies.URLRedirector _uRLRedirector)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("URLRedirector", _uRLRedirector == null ? null : _uRLRedirector.getMendixObject());
			Core.execute(context, "Mendix.IVK_URLRedirectorToNewClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_UserRole_SelectCancel(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Mendix.IVK_UserRole_SelectCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void linkPersonToAccount(IContext context, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			Core.execute(context, "Mendix.LinkPersonToAccount", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void onChange_SetPortalPoolData(IContext context, mendix.proxies.LicensePool _licensePool)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LicensePool", _licensePool == null ? null : _licensePool.getMendixObject());
			Core.execute(context, "Mendix.OnChange_SetPortalPoolData", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openChangePasswordForm(IContext context, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			Core.execute(context, "Mendix.OpenChangePasswordForm", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openDateGenSettings(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Mendix.OpenDateGenSettings", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openImportExportAccountSelectForm(IContext context, importexport.proxies.ImportExportSetting _filesInFolder)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FilesInFolder", _filesInFolder == null ? null : _filesInFolder.getMendixObject());
			Core.execute(context, "Mendix.OpenImportExportAccountSelectForm", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openTemplateRoleSelect(IContext context, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			Core.execute(context, "Mendix.OpenTemplateRoleSelect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openXSSSanitizeConfig(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Mendix.OpenXSSSanitizeConfig", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean passwordChange(IContext context, core_security.proxies.PasswordHelper _passwordHelper)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PasswordHelper", _passwordHelper == null ? null : _passwordHelper.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Mendix.PasswordChange", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void refreshDateTimeFormat(IContext context, mendix.proxies.DateTimeFormat _dateTimeFormat)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DateTimeFormat", _dateTimeFormat == null ? null : _dateTimeFormat.getMendixObject());
			Core.execute(context, "Mendix.RefreshDateTimeFormat", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String sampleCurrentDateTime(IContext context, mendix.proxies.DateTimeFormat _dateTimeFormat)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DateTimeFormat", _dateTimeFormat == null ? null : _dateTimeFormat.getMendixObject());
			return (java.lang.String)Core.execute(context, "Mendix.SampleCurrentDateTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void saveNewPassword(IContext context, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			Core.execute(context, "Mendix.SaveNewPassword", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void selectImportExportAccount(IContext context, importexport.proxies.ImportExportSetting _importExport, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ImportExport", _importExport == null ? null : _importExport.getMendixObject());
			params.put("Account", _account == null ? null : _account.getMendixObject());
			Core.execute(context, "Mendix.SelectImportExportAccount", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setDomainOnCreate(IContext context, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			Core.execute(context, "Mendix.SetDomainOnCreate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void startPanel_OpenForm(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Mendix.StartPanel_OpenForm", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void startPanel_RefreshEmailWidget(IContext context, fusionchartsplus.proxies.ChartXML _chartXML)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ChartXML", _chartXML == null ? null : _chartXML.getMendixObject());
			Core.execute(context, "Mendix.StartPanel_RefreshEmailWidget", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static fusionchartsplus.proxies.ChartXML startPanel_SetEmailWidget(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "Mendix.StartPanel_SetEmailWidget", params);
			return result == null ? null : fusionchartsplus.proxies.ChartXML.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String stripHTMLTAGS(IContext context, java.lang.String _hTMLString)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("HTMLString", _hTMLString);
			return (java.lang.String)Core.execute(context, "Mendix.StripHTMLTAGS", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean toggleWebServiceUser(IContext context, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Mendix.ToggleWebServiceUser", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean toggleWebServiceUserAndCommit(IContext context, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Mendix.ToggleWebServiceUserAndCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void toggleWebServiceUserList(IContext context, java.util.List<mendix.proxies.Account> _accountList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_accountList = null;
			if (_accountList != null)
			{
				listparam_accountList = new java.util.ArrayList<IMendixObject>();
				for (mendix.proxies.Account obj : _accountList)
					listparam_accountList.add(obj.getMendixObject());
			}
			params.put("AccountList", listparam_accountList);
			Core.execute(context, "Mendix.ToggleWebServiceUserList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void uRLRedirector_Open(IContext context, boolean _toNewBrowserWindow, mendix.proxies.URLRedirector _uRLRedirector)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ToNewBrowserWindow", _toNewBrowserWindow);
			params.put("URLRedirector", _uRLRedirector == null ? null : _uRLRedirector.getMendixObject());
			Core.execute(context, "Mendix.URLRedirector_Open", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateAccount(IContext context, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Mendix.ValidateAccount", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateAccountLicensePool(IContext context, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Mendix.ValidateAccountLicensePool", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateAccountPreferences(IContext context, mendix.proxies.AccountPreferences _accountPreferences)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AccountPreferences", _accountPreferences == null ? null : _accountPreferences.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Mendix.ValidateAccountPreferences", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}