// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package mendix.proxies;

/**
 * The "Account_ParentInterfaceProcessingPart" association has been added to allow the use of two before commit event handlers, both do the same checks, one throws an exception when failing, the other doesn't. The exception is required for system generated commits, they need the exception thrown in order to do error handling, the commits generated by users however don't want exception thrown, since this will show an error pop up in the GUI (instead of user friendly messages and/or feedback).
 */
public class Account extends system.proxies.User
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Mendix.Account";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		NewPassword("NewPassword"),
		ConfirmPassword("ConfirmPassword"),
		PasswordChangeDate("PasswordChangeDate"),
		AskToChangePassword("AskToChangePassword"),
		FullName("FullName"),
		UseBufferLicense("UseBufferLicense"),
		InterfaceGUID("InterfaceGUID"),
		UseLocalAuthorization("UseLocalAuthorization"),
		FeedbackEmailAddress("FeedbackEmailAddress"),
		PasswordHistory("PasswordHistory"),
		LastSessionId("LastSessionId"),
		IsCreated("IsCreated"),
		Name("Name"),
		Password("Password"),
		LastLogin("LastLogin"),
		Blocked("Blocked"),
		Active("Active"),
		FailedLogins("FailedLogins"),
		WebServiceUser("WebServiceUser"),
		IsAnonymous("IsAnonymous"),
		Account_LicensePool("Mendix.Account_LicensePool"),
		AccountPreferences_Account("Mendix.AccountPreferences_Account"),
		CalendarSetting_Account("ChangeCalendar.CalendarSetting_Account"),
		Account_Domain("Mendix.Account_Domain"),
		Account_DataAccess("Mendix.Account_DataAccess"),
		Account_DefaultLabel("Mendix.Account_DefaultLabel"),
		Account_Templates("Mendix.Account_Templates"),
		Account_ParentInterfaceProcessingPart("Mendix.Account_ParentInterfaceProcessingPart"),
		Account_InitiatingInterfaceConfiguration("Mendix.Account_InitiatingInterfaceConfiguration"),
		Account_LDAPImportType("Mendix.Account_LDAPImportType"),
		Account_UserSessionObject("Mendix.Account_UserSessionObject"),
		Person_Account("NAP.Person_Account"),
		SessionData_Account("Process.SessionData_Account"),
		QueryPanel_Account("QueryRequests.QueryPanel_Account"),
		CurrentShoppingCart_Account("ServiceCatalogue.CurrentShoppingCart_Account"),
		Selected_Productcategory_Account("ServiceCatalogue.Selected_Productcategory_Account"),
		ProductConfigurationIdentifier_Account("ServiceCatalogue.ProductConfigurationIdentifier_Account"),
		UserRoles("System.UserRoles"),
		User_Language("System.User_Language"),
		User_TimeZone("System.User_TimeZone"),
		ProgressViewPreferences_User("Process.ProgressViewPreferences_User");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Account(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Mendix.Account"));
	}

	protected Account(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject accountMendixObject)
	{
		super(context, accountMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("Mendix.Account", accountMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Mendix.Account");
	}

	/**
	 * @deprecated Use 'Account.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static mendix.proxies.Account initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return mendix.proxies.Account.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static mendix.proxies.Account initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new mendix.proxies.Account(context, mendixObject);
	}

	public static mendix.proxies.Account load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return mendix.proxies.Account.initialize(context, mendixObject);
	}

	public static java.util.List<mendix.proxies.Account> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<mendix.proxies.Account> result = new java.util.ArrayList<mendix.proxies.Account>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Mendix.Account" + xpathConstraint))
			result.add(mendix.proxies.Account.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of NewPassword
	 */
	public final java.lang.String getNewPassword()
	{
		return getNewPassword(getContext());
	}

	/**
	 * @param context
	 * @return value of NewPassword
	 */
	public final java.lang.String getNewPassword(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.NewPassword.toString());
	}

	/**
	 * Set value of NewPassword
	 * @param newpassword
	 */
	public final void setNewPassword(java.lang.String newpassword)
	{
		setNewPassword(getContext(), newpassword);
	}

	/**
	 * Set value of NewPassword
	 * @param context
	 * @param newpassword
	 */
	public final void setNewPassword(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String newpassword)
	{
		getMendixObject().setValue(context, MemberNames.NewPassword.toString(), newpassword);
	}

	/**
	 * @return value of ConfirmPassword
	 */
	public final java.lang.String getConfirmPassword()
	{
		return getConfirmPassword(getContext());
	}

	/**
	 * @param context
	 * @return value of ConfirmPassword
	 */
	public final java.lang.String getConfirmPassword(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ConfirmPassword.toString());
	}

	/**
	 * Set value of ConfirmPassword
	 * @param confirmpassword
	 */
	public final void setConfirmPassword(java.lang.String confirmpassword)
	{
		setConfirmPassword(getContext(), confirmpassword);
	}

	/**
	 * Set value of ConfirmPassword
	 * @param context
	 * @param confirmpassword
	 */
	public final void setConfirmPassword(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String confirmpassword)
	{
		getMendixObject().setValue(context, MemberNames.ConfirmPassword.toString(), confirmpassword);
	}

	/**
	 * @return value of PasswordChangeDate
	 */
	public final java.util.Date getPasswordChangeDate()
	{
		return getPasswordChangeDate(getContext());
	}

	/**
	 * @param context
	 * @return value of PasswordChangeDate
	 */
	public final java.util.Date getPasswordChangeDate(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.PasswordChangeDate.toString());
	}

	/**
	 * Set value of PasswordChangeDate
	 * @param passwordchangedate
	 */
	public final void setPasswordChangeDate(java.util.Date passwordchangedate)
	{
		setPasswordChangeDate(getContext(), passwordchangedate);
	}

	/**
	 * Set value of PasswordChangeDate
	 * @param context
	 * @param passwordchangedate
	 */
	public final void setPasswordChangeDate(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date passwordchangedate)
	{
		getMendixObject().setValue(context, MemberNames.PasswordChangeDate.toString(), passwordchangedate);
	}

	/**
	 * @return value of AskToChangePassword
	 */
	public final java.lang.Boolean getAskToChangePassword()
	{
		return getAskToChangePassword(getContext());
	}

	/**
	 * @param context
	 * @return value of AskToChangePassword
	 */
	public final java.lang.Boolean getAskToChangePassword(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.AskToChangePassword.toString());
	}

	/**
	 * Set value of AskToChangePassword
	 * @param asktochangepassword
	 */
	public final void setAskToChangePassword(java.lang.Boolean asktochangepassword)
	{
		setAskToChangePassword(getContext(), asktochangepassword);
	}

	/**
	 * Set value of AskToChangePassword
	 * @param context
	 * @param asktochangepassword
	 */
	public final void setAskToChangePassword(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean asktochangepassword)
	{
		getMendixObject().setValue(context, MemberNames.AskToChangePassword.toString(), asktochangepassword);
	}

	/**
	 * @return value of FullName
	 */
	public final java.lang.String getFullName()
	{
		return getFullName(getContext());
	}

	/**
	 * @param context
	 * @return value of FullName
	 */
	public final java.lang.String getFullName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.FullName.toString());
	}

	/**
	 * Set value of FullName
	 * @param fullname
	 */
	public final void setFullName(java.lang.String fullname)
	{
		setFullName(getContext(), fullname);
	}

	/**
	 * Set value of FullName
	 * @param context
	 * @param fullname
	 */
	public final void setFullName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String fullname)
	{
		getMendixObject().setValue(context, MemberNames.FullName.toString(), fullname);
	}

	/**
	 * @return value of UseBufferLicense
	 */
	public final java.lang.Boolean getUseBufferLicense()
	{
		return getUseBufferLicense(getContext());
	}

	/**
	 * @param context
	 * @return value of UseBufferLicense
	 */
	public final java.lang.Boolean getUseBufferLicense(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.UseBufferLicense.toString());
	}

	/**
	 * Set value of UseBufferLicense
	 * @param usebufferlicense
	 */
	public final void setUseBufferLicense(java.lang.Boolean usebufferlicense)
	{
		setUseBufferLicense(getContext(), usebufferlicense);
	}

	/**
	 * Set value of UseBufferLicense
	 * @param context
	 * @param usebufferlicense
	 */
	public final void setUseBufferLicense(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean usebufferlicense)
	{
		getMendixObject().setValue(context, MemberNames.UseBufferLicense.toString(), usebufferlicense);
	}

	/**
	 * @return value of InterfaceGUID
	 */
	public final java.lang.String getInterfaceGUID()
	{
		return getInterfaceGUID(getContext());
	}

	/**
	 * @param context
	 * @return value of InterfaceGUID
	 */
	public final java.lang.String getInterfaceGUID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.InterfaceGUID.toString());
	}

	/**
	 * Set value of InterfaceGUID
	 * @param interfaceguid
	 */
	public final void setInterfaceGUID(java.lang.String interfaceguid)
	{
		setInterfaceGUID(getContext(), interfaceguid);
	}

	/**
	 * Set value of InterfaceGUID
	 * @param context
	 * @param interfaceguid
	 */
	public final void setInterfaceGUID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String interfaceguid)
	{
		getMendixObject().setValue(context, MemberNames.InterfaceGUID.toString(), interfaceguid);
	}

	/**
	 * @return value of UseLocalAuthorization
	 */
	public final java.lang.Boolean getUseLocalAuthorization()
	{
		return getUseLocalAuthorization(getContext());
	}

	/**
	 * @param context
	 * @return value of UseLocalAuthorization
	 */
	public final java.lang.Boolean getUseLocalAuthorization(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.UseLocalAuthorization.toString());
	}

	/**
	 * Set value of UseLocalAuthorization
	 * @param uselocalauthorization
	 */
	public final void setUseLocalAuthorization(java.lang.Boolean uselocalauthorization)
	{
		setUseLocalAuthorization(getContext(), uselocalauthorization);
	}

	/**
	 * Set value of UseLocalAuthorization
	 * @param context
	 * @param uselocalauthorization
	 */
	public final void setUseLocalAuthorization(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean uselocalauthorization)
	{
		getMendixObject().setValue(context, MemberNames.UseLocalAuthorization.toString(), uselocalauthorization);
	}

	/**
	 * @return value of FeedbackEmailAddress
	 */
	public final java.lang.String getFeedbackEmailAddress()
	{
		return getFeedbackEmailAddress(getContext());
	}

	/**
	 * @param context
	 * @return value of FeedbackEmailAddress
	 */
	public final java.lang.String getFeedbackEmailAddress(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.FeedbackEmailAddress.toString());
	}

	/**
	 * Set value of FeedbackEmailAddress
	 * @param feedbackemailaddress
	 */
	public final void setFeedbackEmailAddress(java.lang.String feedbackemailaddress)
	{
		setFeedbackEmailAddress(getContext(), feedbackemailaddress);
	}

	/**
	 * Set value of FeedbackEmailAddress
	 * @param context
	 * @param feedbackemailaddress
	 */
	public final void setFeedbackEmailAddress(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String feedbackemailaddress)
	{
		getMendixObject().setValue(context, MemberNames.FeedbackEmailAddress.toString(), feedbackemailaddress);
	}

	/**
	 * @return value of PasswordHistory
	 */
	public final java.lang.String getPasswordHistory()
	{
		return getPasswordHistory(getContext());
	}

	/**
	 * @param context
	 * @return value of PasswordHistory
	 */
	public final java.lang.String getPasswordHistory(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.PasswordHistory.toString());
	}

	/**
	 * Set value of PasswordHistory
	 * @param passwordhistory
	 */
	public final void setPasswordHistory(java.lang.String passwordhistory)
	{
		setPasswordHistory(getContext(), passwordhistory);
	}

	/**
	 * Set value of PasswordHistory
	 * @param context
	 * @param passwordhistory
	 */
	public final void setPasswordHistory(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String passwordhistory)
	{
		getMendixObject().setValue(context, MemberNames.PasswordHistory.toString(), passwordhistory);
	}

	/**
	 * @return value of LastSessionId
	 */
	public final java.lang.String getLastSessionId()
	{
		return getLastSessionId(getContext());
	}

	/**
	 * @param context
	 * @return value of LastSessionId
	 */
	public final java.lang.String getLastSessionId(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.LastSessionId.toString());
	}

	/**
	 * Set value of LastSessionId
	 * @param lastsessionid
	 */
	public final void setLastSessionId(java.lang.String lastsessionid)
	{
		setLastSessionId(getContext(), lastsessionid);
	}

	/**
	 * Set value of LastSessionId
	 * @param context
	 * @param lastsessionid
	 */
	public final void setLastSessionId(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String lastsessionid)
	{
		getMendixObject().setValue(context, MemberNames.LastSessionId.toString(), lastsessionid);
	}

	/**
	 * @return value of IsCreated
	 */
	public final java.lang.Boolean getIsCreated()
	{
		return getIsCreated(getContext());
	}

	/**
	 * @param context
	 * @return value of IsCreated
	 */
	public final java.lang.Boolean getIsCreated(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsCreated.toString());
	}

	/**
	 * Set value of IsCreated
	 * @param iscreated
	 */
	public final void setIsCreated(java.lang.Boolean iscreated)
	{
		setIsCreated(getContext(), iscreated);
	}

	/**
	 * Set value of IsCreated
	 * @param context
	 * @param iscreated
	 */
	public final void setIsCreated(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean iscreated)
	{
		getMendixObject().setValue(context, MemberNames.IsCreated.toString(), iscreated);
	}

	/**
	 * @return value of Account_LicensePool
	 */
	public final mendix.proxies.LicensePool getAccount_LicensePool() throws com.mendix.core.CoreException
	{
		return getAccount_LicensePool(getContext());
	}

	/**
	 * @param context
	 * @return value of Account_LicensePool
	 */
	public final mendix.proxies.LicensePool getAccount_LicensePool(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		mendix.proxies.LicensePool result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Account_LicensePool.toString());
		if (identifier != null)
			result = mendix.proxies.LicensePool.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Account_LicensePool
	 * @param account_licensepool
	 */
	public final void setAccount_LicensePool(mendix.proxies.LicensePool account_licensepool)
	{
		setAccount_LicensePool(getContext(), account_licensepool);
	}

	/**
	 * Set value of Account_LicensePool
	 * @param context
	 * @param account_licensepool
	 */
	public final void setAccount_LicensePool(com.mendix.systemwideinterfaces.core.IContext context, mendix.proxies.LicensePool account_licensepool)
	{
		if (account_licensepool == null)
			getMendixObject().setValue(context, MemberNames.Account_LicensePool.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Account_LicensePool.toString(), account_licensepool.getMendixObject().getId());
	}

	/**
	 * @return value of AccountPreferences_Account
	 */
	public final mendix.proxies.AccountPreferences getAccountPreferences_Account() throws com.mendix.core.CoreException
	{
		return getAccountPreferences_Account(getContext());
	}

	/**
	 * @param context
	 * @return value of AccountPreferences_Account
	 */
	public final mendix.proxies.AccountPreferences getAccountPreferences_Account(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		mendix.proxies.AccountPreferences result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.AccountPreferences_Account.toString());
		if (identifier != null)
			result = mendix.proxies.AccountPreferences.load(context, identifier);
		return result;
	}

	/**
	 * Set value of AccountPreferences_Account
	 * @param accountpreferences_account
	 */
	public final void setAccountPreferences_Account(mendix.proxies.AccountPreferences accountpreferences_account)
	{
		setAccountPreferences_Account(getContext(), accountpreferences_account);
	}

	/**
	 * Set value of AccountPreferences_Account
	 * @param context
	 * @param accountpreferences_account
	 */
	public final void setAccountPreferences_Account(com.mendix.systemwideinterfaces.core.IContext context, mendix.proxies.AccountPreferences accountpreferences_account)
	{
		if (accountpreferences_account == null)
			getMendixObject().setValue(context, MemberNames.AccountPreferences_Account.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.AccountPreferences_Account.toString(), accountpreferences_account.getMendixObject().getId());
	}

	/**
	 * @return value of CalendarSetting_Account
	 */
	public final changecalendar.proxies.CalendarSetting getCalendarSetting_Account() throws com.mendix.core.CoreException
	{
		return getCalendarSetting_Account(getContext());
	}

	/**
	 * @param context
	 * @return value of CalendarSetting_Account
	 */
	public final changecalendar.proxies.CalendarSetting getCalendarSetting_Account(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		changecalendar.proxies.CalendarSetting result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.CalendarSetting_Account.toString());
		if (identifier != null)
			result = changecalendar.proxies.CalendarSetting.load(context, identifier);
		return result;
	}

	/**
	 * Set value of CalendarSetting_Account
	 * @param calendarsetting_account
	 */
	public final void setCalendarSetting_Account(changecalendar.proxies.CalendarSetting calendarsetting_account)
	{
		setCalendarSetting_Account(getContext(), calendarsetting_account);
	}

	/**
	 * Set value of CalendarSetting_Account
	 * @param context
	 * @param calendarsetting_account
	 */
	public final void setCalendarSetting_Account(com.mendix.systemwideinterfaces.core.IContext context, changecalendar.proxies.CalendarSetting calendarsetting_account)
	{
		if (calendarsetting_account == null)
			getMendixObject().setValue(context, MemberNames.CalendarSetting_Account.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.CalendarSetting_Account.toString(), calendarsetting_account.getMendixObject().getId());
	}

	/**
	 * @return value of Account_Domain
	 */
	public final da.proxies.Domain getAccount_Domain() throws com.mendix.core.CoreException
	{
		return getAccount_Domain(getContext());
	}

	/**
	 * @param context
	 * @return value of Account_Domain
	 */
	public final da.proxies.Domain getAccount_Domain(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		da.proxies.Domain result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Account_Domain.toString());
		if (identifier != null)
			result = da.proxies.Domain.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Account_Domain
	 * @param account_domain
	 */
	public final void setAccount_Domain(da.proxies.Domain account_domain)
	{
		setAccount_Domain(getContext(), account_domain);
	}

	/**
	 * Set value of Account_Domain
	 * @param context
	 * @param account_domain
	 */
	public final void setAccount_Domain(com.mendix.systemwideinterfaces.core.IContext context, da.proxies.Domain account_domain)
	{
		if (account_domain == null)
			getMendixObject().setValue(context, MemberNames.Account_Domain.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Account_Domain.toString(), account_domain.getMendixObject().getId());
	}

	/**
	 * @return value of Account_DataAccess
	 */
	public final java.util.List<da.proxies.Label> getAccount_DataAccess() throws com.mendix.core.CoreException
	{
		return getAccount_DataAccess(getContext());
	}

	/**
	 * @param context
	 * @return value of Account_DataAccess
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<da.proxies.Label> getAccount_DataAccess(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<da.proxies.Label> result = new java.util.ArrayList<da.proxies.Label>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.Account_DataAccess.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(da.proxies.Label.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of Account_DataAccess
	 * @param account_dataaccess
	 */
	public final void setAccount_DataAccess(java.util.List<da.proxies.Label> account_dataaccess)
	{
		setAccount_DataAccess(getContext(), account_dataaccess);
	}

	/**
	 * Set value of Account_DataAccess
	 * @param context
	 * @param account_dataaccess
	 */
	public final void setAccount_DataAccess(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<da.proxies.Label> account_dataaccess)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (da.proxies.Label proxyObject : account_dataaccess)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.Account_DataAccess.toString(), identifiers);
	}

	/**
	 * @return value of Account_DefaultLabel
	 */
	public final da.proxies.Label getAccount_DefaultLabel() throws com.mendix.core.CoreException
	{
		return getAccount_DefaultLabel(getContext());
	}

	/**
	 * @param context
	 * @return value of Account_DefaultLabel
	 */
	public final da.proxies.Label getAccount_DefaultLabel(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		da.proxies.Label result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Account_DefaultLabel.toString());
		if (identifier != null)
			result = da.proxies.Label.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Account_DefaultLabel
	 * @param account_defaultlabel
	 */
	public final void setAccount_DefaultLabel(da.proxies.Label account_defaultlabel)
	{
		setAccount_DefaultLabel(getContext(), account_defaultlabel);
	}

	/**
	 * Set value of Account_DefaultLabel
	 * @param context
	 * @param account_defaultlabel
	 */
	public final void setAccount_DefaultLabel(com.mendix.systemwideinterfaces.core.IContext context, da.proxies.Label account_defaultlabel)
	{
		if (account_defaultlabel == null)
			getMendixObject().setValue(context, MemberNames.Account_DefaultLabel.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Account_DefaultLabel.toString(), account_defaultlabel.getMendixObject().getId());
	}

	/**
	 * @return value of Account_Templates
	 */
	public final java.util.List<roletemplates.proxies.Template> getAccount_Templates() throws com.mendix.core.CoreException
	{
		return getAccount_Templates(getContext());
	}

	/**
	 * @param context
	 * @return value of Account_Templates
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<roletemplates.proxies.Template> getAccount_Templates(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<roletemplates.proxies.Template> result = new java.util.ArrayList<roletemplates.proxies.Template>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.Account_Templates.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(roletemplates.proxies.Template.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of Account_Templates
	 * @param account_templates
	 */
	public final void setAccount_Templates(java.util.List<roletemplates.proxies.Template> account_templates)
	{
		setAccount_Templates(getContext(), account_templates);
	}

	/**
	 * Set value of Account_Templates
	 * @param context
	 * @param account_templates
	 */
	public final void setAccount_Templates(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<roletemplates.proxies.Template> account_templates)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (roletemplates.proxies.Template proxyObject : account_templates)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.Account_Templates.toString(), identifiers);
	}

	/**
	 * @return value of Account_ParentInterfaceProcessingPart
	 */
	public final interfaceshared.proxies.ProcessingPart getAccount_ParentInterfaceProcessingPart() throws com.mendix.core.CoreException
	{
		return getAccount_ParentInterfaceProcessingPart(getContext());
	}

	/**
	 * @param context
	 * @return value of Account_ParentInterfaceProcessingPart
	 */
	public final interfaceshared.proxies.ProcessingPart getAccount_ParentInterfaceProcessingPart(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfaceshared.proxies.ProcessingPart result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Account_ParentInterfaceProcessingPart.toString());
		if (identifier != null)
			result = interfaceshared.proxies.ProcessingPart.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Account_ParentInterfaceProcessingPart
	 * @param account_parentinterfaceprocessingpart
	 */
	public final void setAccount_ParentInterfaceProcessingPart(interfaceshared.proxies.ProcessingPart account_parentinterfaceprocessingpart)
	{
		setAccount_ParentInterfaceProcessingPart(getContext(), account_parentinterfaceprocessingpart);
	}

	/**
	 * Set value of Account_ParentInterfaceProcessingPart
	 * @param context
	 * @param account_parentinterfaceprocessingpart
	 */
	public final void setAccount_ParentInterfaceProcessingPart(com.mendix.systemwideinterfaces.core.IContext context, interfaceshared.proxies.ProcessingPart account_parentinterfaceprocessingpart)
	{
		if (account_parentinterfaceprocessingpart == null)
			getMendixObject().setValue(context, MemberNames.Account_ParentInterfaceProcessingPart.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Account_ParentInterfaceProcessingPart.toString(), account_parentinterfaceprocessingpart.getMendixObject().getId());
	}

	/**
	 * @return value of Account_InitiatingInterfaceConfiguration
	 */
	public final interfaceconfiguration.proxies.InterfaceConfiguration getAccount_InitiatingInterfaceConfiguration() throws com.mendix.core.CoreException
	{
		return getAccount_InitiatingInterfaceConfiguration(getContext());
	}

	/**
	 * @param context
	 * @return value of Account_InitiatingInterfaceConfiguration
	 */
	public final interfaceconfiguration.proxies.InterfaceConfiguration getAccount_InitiatingInterfaceConfiguration(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfaceconfiguration.proxies.InterfaceConfiguration result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Account_InitiatingInterfaceConfiguration.toString());
		if (identifier != null)
			result = interfaceconfiguration.proxies.InterfaceConfiguration.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Account_InitiatingInterfaceConfiguration
	 * @param account_initiatinginterfaceconfiguration
	 */
	public final void setAccount_InitiatingInterfaceConfiguration(interfaceconfiguration.proxies.InterfaceConfiguration account_initiatinginterfaceconfiguration)
	{
		setAccount_InitiatingInterfaceConfiguration(getContext(), account_initiatinginterfaceconfiguration);
	}

	/**
	 * Set value of Account_InitiatingInterfaceConfiguration
	 * @param context
	 * @param account_initiatinginterfaceconfiguration
	 */
	public final void setAccount_InitiatingInterfaceConfiguration(com.mendix.systemwideinterfaces.core.IContext context, interfaceconfiguration.proxies.InterfaceConfiguration account_initiatinginterfaceconfiguration)
	{
		if (account_initiatinginterfaceconfiguration == null)
			getMendixObject().setValue(context, MemberNames.Account_InitiatingInterfaceConfiguration.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Account_InitiatingInterfaceConfiguration.toString(), account_initiatinginterfaceconfiguration.getMendixObject().getId());
	}

	/**
	 * @return value of Account_LDAPImportType
	 */
	public final interfaceconfiguration.proxies.LDAPImportType getAccount_LDAPImportType() throws com.mendix.core.CoreException
	{
		return getAccount_LDAPImportType(getContext());
	}

	/**
	 * @param context
	 * @return value of Account_LDAPImportType
	 */
	public final interfaceconfiguration.proxies.LDAPImportType getAccount_LDAPImportType(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfaceconfiguration.proxies.LDAPImportType result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Account_LDAPImportType.toString());
		if (identifier != null)
			result = interfaceconfiguration.proxies.LDAPImportType.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Account_LDAPImportType
	 * @param account_ldapimporttype
	 */
	public final void setAccount_LDAPImportType(interfaceconfiguration.proxies.LDAPImportType account_ldapimporttype)
	{
		setAccount_LDAPImportType(getContext(), account_ldapimporttype);
	}

	/**
	 * Set value of Account_LDAPImportType
	 * @param context
	 * @param account_ldapimporttype
	 */
	public final void setAccount_LDAPImportType(com.mendix.systemwideinterfaces.core.IContext context, interfaceconfiguration.proxies.LDAPImportType account_ldapimporttype)
	{
		if (account_ldapimporttype == null)
			getMendixObject().setValue(context, MemberNames.Account_LDAPImportType.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Account_LDAPImportType.toString(), account_ldapimporttype.getMendixObject().getId());
	}

	/**
	 * @return value of Account_UserSessionObject
	 */
	public final genericuserfunctions.proxies.UserSessionObject getAccount_UserSessionObject() throws com.mendix.core.CoreException
	{
		return getAccount_UserSessionObject(getContext());
	}

	/**
	 * @param context
	 * @return value of Account_UserSessionObject
	 */
	public final genericuserfunctions.proxies.UserSessionObject getAccount_UserSessionObject(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		genericuserfunctions.proxies.UserSessionObject result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Account_UserSessionObject.toString());
		if (identifier != null)
			result = genericuserfunctions.proxies.UserSessionObject.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Account_UserSessionObject
	 * @param account_usersessionobject
	 */
	public final void setAccount_UserSessionObject(genericuserfunctions.proxies.UserSessionObject account_usersessionobject)
	{
		setAccount_UserSessionObject(getContext(), account_usersessionobject);
	}

	/**
	 * Set value of Account_UserSessionObject
	 * @param context
	 * @param account_usersessionobject
	 */
	public final void setAccount_UserSessionObject(com.mendix.systemwideinterfaces.core.IContext context, genericuserfunctions.proxies.UserSessionObject account_usersessionobject)
	{
		if (account_usersessionobject == null)
			getMendixObject().setValue(context, MemberNames.Account_UserSessionObject.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Account_UserSessionObject.toString(), account_usersessionobject.getMendixObject().getId());
	}

	/**
	 * @return value of Person_Account
	 */
	public final nap.proxies.Person getPerson_Account() throws com.mendix.core.CoreException
	{
		return getPerson_Account(getContext());
	}

	/**
	 * @param context
	 * @return value of Person_Account
	 */
	public final nap.proxies.Person getPerson_Account(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		nap.proxies.Person result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Person_Account.toString());
		if (identifier != null)
			result = nap.proxies.Person.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Person_Account
	 * @param person_account
	 */
	public final void setPerson_Account(nap.proxies.Person person_account)
	{
		setPerson_Account(getContext(), person_account);
	}

	/**
	 * Set value of Person_Account
	 * @param context
	 * @param person_account
	 */
	public final void setPerson_Account(com.mendix.systemwideinterfaces.core.IContext context, nap.proxies.Person person_account)
	{
		if (person_account == null)
			getMendixObject().setValue(context, MemberNames.Person_Account.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Person_Account.toString(), person_account.getMendixObject().getId());
	}

	/**
	 * @return value of SessionData_Account
	 */
	public final process.proxies.SessionData getSessionData_Account() throws com.mendix.core.CoreException
	{
		return getSessionData_Account(getContext());
	}

	/**
	 * @param context
	 * @return value of SessionData_Account
	 */
	public final process.proxies.SessionData getSessionData_Account(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		process.proxies.SessionData result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.SessionData_Account.toString());
		if (identifier != null)
			result = process.proxies.SessionData.load(context, identifier);
		return result;
	}

	/**
	 * Set value of SessionData_Account
	 * @param sessiondata_account
	 */
	public final void setSessionData_Account(process.proxies.SessionData sessiondata_account)
	{
		setSessionData_Account(getContext(), sessiondata_account);
	}

	/**
	 * Set value of SessionData_Account
	 * @param context
	 * @param sessiondata_account
	 */
	public final void setSessionData_Account(com.mendix.systemwideinterfaces.core.IContext context, process.proxies.SessionData sessiondata_account)
	{
		if (sessiondata_account == null)
			getMendixObject().setValue(context, MemberNames.SessionData_Account.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.SessionData_Account.toString(), sessiondata_account.getMendixObject().getId());
	}

	/**
	 * @return value of QueryPanel_Account
	 */
	public final queryrequests.proxies.QueryPanel getQueryPanel_Account() throws com.mendix.core.CoreException
	{
		return getQueryPanel_Account(getContext());
	}

	/**
	 * @param context
	 * @return value of QueryPanel_Account
	 */
	public final queryrequests.proxies.QueryPanel getQueryPanel_Account(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		queryrequests.proxies.QueryPanel result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.QueryPanel_Account.toString());
		if (identifier != null)
			result = queryrequests.proxies.QueryPanel.load(context, identifier);
		return result;
	}

	/**
	 * Set value of QueryPanel_Account
	 * @param querypanel_account
	 */
	public final void setQueryPanel_Account(queryrequests.proxies.QueryPanel querypanel_account)
	{
		setQueryPanel_Account(getContext(), querypanel_account);
	}

	/**
	 * Set value of QueryPanel_Account
	 * @param context
	 * @param querypanel_account
	 */
	public final void setQueryPanel_Account(com.mendix.systemwideinterfaces.core.IContext context, queryrequests.proxies.QueryPanel querypanel_account)
	{
		if (querypanel_account == null)
			getMendixObject().setValue(context, MemberNames.QueryPanel_Account.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.QueryPanel_Account.toString(), querypanel_account.getMendixObject().getId());
	}

	/**
	 * @return value of CurrentShoppingCart_Account
	 */
	public final servicecatalogue.proxies.ShoppingCart getCurrentShoppingCart_Account() throws com.mendix.core.CoreException
	{
		return getCurrentShoppingCart_Account(getContext());
	}

	/**
	 * @param context
	 * @return value of CurrentShoppingCart_Account
	 */
	public final servicecatalogue.proxies.ShoppingCart getCurrentShoppingCart_Account(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		servicecatalogue.proxies.ShoppingCart result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.CurrentShoppingCart_Account.toString());
		if (identifier != null)
			result = servicecatalogue.proxies.ShoppingCart.load(context, identifier);
		return result;
	}

	/**
	 * Set value of CurrentShoppingCart_Account
	 * @param currentshoppingcart_account
	 */
	public final void setCurrentShoppingCart_Account(servicecatalogue.proxies.ShoppingCart currentshoppingcart_account)
	{
		setCurrentShoppingCart_Account(getContext(), currentshoppingcart_account);
	}

	/**
	 * Set value of CurrentShoppingCart_Account
	 * @param context
	 * @param currentshoppingcart_account
	 */
	public final void setCurrentShoppingCart_Account(com.mendix.systemwideinterfaces.core.IContext context, servicecatalogue.proxies.ShoppingCart currentshoppingcart_account)
	{
		if (currentshoppingcart_account == null)
			getMendixObject().setValue(context, MemberNames.CurrentShoppingCart_Account.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.CurrentShoppingCart_Account.toString(), currentshoppingcart_account.getMendixObject().getId());
	}

	/**
	 * @return value of Selected_Productcategory_Account
	 */
	public final servicecatalogue.proxies.Selected_Productcategory getSelected_Productcategory_Account() throws com.mendix.core.CoreException
	{
		return getSelected_Productcategory_Account(getContext());
	}

	/**
	 * @param context
	 * @return value of Selected_Productcategory_Account
	 */
	public final servicecatalogue.proxies.Selected_Productcategory getSelected_Productcategory_Account(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		servicecatalogue.proxies.Selected_Productcategory result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Selected_Productcategory_Account.toString());
		if (identifier != null)
			result = servicecatalogue.proxies.Selected_Productcategory.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Selected_Productcategory_Account
	 * @param selected_productcategory_account
	 */
	public final void setSelected_Productcategory_Account(servicecatalogue.proxies.Selected_Productcategory selected_productcategory_account)
	{
		setSelected_Productcategory_Account(getContext(), selected_productcategory_account);
	}

	/**
	 * Set value of Selected_Productcategory_Account
	 * @param context
	 * @param selected_productcategory_account
	 */
	public final void setSelected_Productcategory_Account(com.mendix.systemwideinterfaces.core.IContext context, servicecatalogue.proxies.Selected_Productcategory selected_productcategory_account)
	{
		if (selected_productcategory_account == null)
			getMendixObject().setValue(context, MemberNames.Selected_Productcategory_Account.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Selected_Productcategory_Account.toString(), selected_productcategory_account.getMendixObject().getId());
	}

	/**
	 * @return value of ProductConfigurationIdentifier_Account
	 */
	public final servicecatalogue.proxies.ProductConfigurationIdentifier getProductConfigurationIdentifier_Account() throws com.mendix.core.CoreException
	{
		return getProductConfigurationIdentifier_Account(getContext());
	}

	/**
	 * @param context
	 * @return value of ProductConfigurationIdentifier_Account
	 */
	public final servicecatalogue.proxies.ProductConfigurationIdentifier getProductConfigurationIdentifier_Account(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		servicecatalogue.proxies.ProductConfigurationIdentifier result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ProductConfigurationIdentifier_Account.toString());
		if (identifier != null)
			result = servicecatalogue.proxies.ProductConfigurationIdentifier.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ProductConfigurationIdentifier_Account
	 * @param productconfigurationidentifier_account
	 */
	public final void setProductConfigurationIdentifier_Account(servicecatalogue.proxies.ProductConfigurationIdentifier productconfigurationidentifier_account)
	{
		setProductConfigurationIdentifier_Account(getContext(), productconfigurationidentifier_account);
	}

	/**
	 * Set value of ProductConfigurationIdentifier_Account
	 * @param context
	 * @param productconfigurationidentifier_account
	 */
	public final void setProductConfigurationIdentifier_Account(com.mendix.systemwideinterfaces.core.IContext context, servicecatalogue.proxies.ProductConfigurationIdentifier productconfigurationidentifier_account)
	{
		if (productconfigurationidentifier_account == null)
			getMendixObject().setValue(context, MemberNames.ProductConfigurationIdentifier_Account.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ProductConfigurationIdentifier_Account.toString(), productconfigurationidentifier_account.getMendixObject().getId());
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final mendix.proxies.Account that = (mendix.proxies.Account) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Mendix.Account";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
