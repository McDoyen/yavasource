// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package nap.proxies;

public class BusinessGroup extends nap.proxies.Organisation
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "NAP.BusinessGroup";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		IsSupplier("IsSupplier"),
		VendorType("VendorType"),
		OrganisationName("OrganisationName"),
		OrganisationStatus("OrganisationStatus"),
		XXLDAPID("XXLDAPID"),
		InterfaceGUID("InterfaceGUID"),
		IsCIOwnerGroup("IsCIOwnerGroup"),
		CILevel("CILevel"),
		HR_Department("HR_Department"),
		ImportDate("ImportDate"),
		Organisation_Location("NAP.Organisation_Location"),
		Organisation_Contact_Info("NAP.Organisation_Contact_Info"),
		Person_Organisation_ForCancel("NAP.Person_Organisation_ForCancel"),
		Organisation_BusinessRoles("NAP.Organisation_BusinessRoles"),
		Knowledge_ReceivingOrganisation("KnowledgeManagement.Knowledge_ReceivingOrganisation"),
		ReceivingOrganisation_Contracts("NAP.ReceivingOrganisation_Contracts"),
		Organisation_RequestDummy("NAP.Organisation_RequestDummy"),
		Organisation_CostCenter("NAP.Organisation_CostCenter"),
		Organisation_PriceApproval("NAP.Organisation_PriceApproval"),
		Organisation_DataAccess("NAP.Organisation_DataAccess"),
		Organisation_InitiatingInterfaceConfiguration("NAP.Organisation_InitiatingInterfaceConfiguration"),
		Organisation_InitiatingLDAPImportType("NAP.Organisation_InitiatingLDAPImportType"),
		Organisation_ParentInterfaceProcessingPart("NAP.Organisation_ParentInterfaceProcessingPart"),
		TempReceivingOrganisation_Contracts("NAP.TempReceivingOrganisation_Contracts");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public BusinessGroup(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "NAP.BusinessGroup"));
	}

	protected BusinessGroup(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject businessGroupMendixObject)
	{
		super(context, businessGroupMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("NAP.BusinessGroup", businessGroupMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a NAP.BusinessGroup");
	}

	/**
	 * @deprecated Use 'BusinessGroup.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static nap.proxies.BusinessGroup initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return nap.proxies.BusinessGroup.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static nap.proxies.BusinessGroup initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new nap.proxies.BusinessGroup(context, mendixObject);
	}

	public static nap.proxies.BusinessGroup load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return nap.proxies.BusinessGroup.initialize(context, mendixObject);
	}

	public static java.util.List<nap.proxies.BusinessGroup> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<nap.proxies.BusinessGroup> result = new java.util.ArrayList<nap.proxies.BusinessGroup>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//NAP.BusinessGroup" + xpathConstraint))
			result.add(nap.proxies.BusinessGroup.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of IsSupplier
	 */
	public final java.lang.Boolean getIsSupplier()
	{
		return getIsSupplier(getContext());
	}

	/**
	 * @param context
	 * @return value of IsSupplier
	 */
	public final java.lang.Boolean getIsSupplier(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsSupplier.toString());
	}

	/**
	 * Set value of IsSupplier
	 * @param issupplier
	 */
	public final void setIsSupplier(java.lang.Boolean issupplier)
	{
		setIsSupplier(getContext(), issupplier);
	}

	/**
	 * Set value of IsSupplier
	 * @param context
	 * @param issupplier
	 */
	public final void setIsSupplier(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean issupplier)
	{
		getMendixObject().setValue(context, MemberNames.IsSupplier.toString(), issupplier);
	}

	/**
	 * Set value of VendorType
	 * @param vendortype
	 */
	public final customlvnl.proxies.VendorTypeEnum getVendorType()
	{
		return getVendorType(getContext());
	}

	/**
	 * @param context
	 * @return value of VendorType
	 */
	public final customlvnl.proxies.VendorTypeEnum getVendorType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.VendorType.toString());
		if (obj == null)
			return null;

		return customlvnl.proxies.VendorTypeEnum.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of VendorType
	 * @param vendortype
	 */
	public final void setVendorType(customlvnl.proxies.VendorTypeEnum vendortype)
	{
		setVendorType(getContext(), vendortype);
	}

	/**
	 * Set value of VendorType
	 * @param context
	 * @param vendortype
	 */
	public final void setVendorType(com.mendix.systemwideinterfaces.core.IContext context, customlvnl.proxies.VendorTypeEnum vendortype)
	{
		if (vendortype != null)
			getMendixObject().setValue(context, MemberNames.VendorType.toString(), vendortype.toString());
		else
			getMendixObject().setValue(context, MemberNames.VendorType.toString(), null);
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final nap.proxies.BusinessGroup that = (nap.proxies.BusinessGroup) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "NAP.BusinessGroup";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
