// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package nap.proxies;

/**
 * Field LDAPID has become decrepit in version 9.5, it has been replaced by the InterfaceGUID field.
 */
public class Organisation
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject organisationMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "NAP.Organisation";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		OrganisationName("OrganisationName"),
		OrganisationStatus("OrganisationStatus"),
		XXLDAPID("XXLDAPID"),
		InterfaceGUID("InterfaceGUID"),
		IsCIOwnerGroup("IsCIOwnerGroup"),
		CILevel("CILevel"),
		HR_Department("HR_Department"),
		ImportDate("ImportDate"),
		Organisation_Location("NAP.Organisation_Location"),
		Organisation_Contact_Info("NAP.Organisation_Contact_Info"),
		Person_Organisation_ForCancel("NAP.Person_Organisation_ForCancel"),
		Organisation_BusinessRoles("NAP.Organisation_BusinessRoles"),
		Knowledge_ReceivingOrganisation("KnowledgeManagement.Knowledge_ReceivingOrganisation"),
		ReceivingOrganisation_Contracts("NAP.ReceivingOrganisation_Contracts"),
		Organisation_RequestDummy("NAP.Organisation_RequestDummy"),
		Organisation_CostCenter("NAP.Organisation_CostCenter"),
		Organisation_PriceApproval("NAP.Organisation_PriceApproval"),
		Organisation_DataAccess("NAP.Organisation_DataAccess"),
		Organisation_InitiatingInterfaceConfiguration("NAP.Organisation_InitiatingInterfaceConfiguration"),
		Organisation_InitiatingLDAPImportType("NAP.Organisation_InitiatingLDAPImportType"),
		Organisation_ParentInterfaceProcessingPart("NAP.Organisation_ParentInterfaceProcessingPart"),
		TempReceivingOrganisation_Contracts("NAP.TempReceivingOrganisation_Contracts");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Organisation(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "NAP.Organisation"));
	}

	protected Organisation(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject organisationMendixObject)
	{
		if (organisationMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("NAP.Organisation", organisationMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a NAP.Organisation");

		this.organisationMendixObject = organisationMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Organisation.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static nap.proxies.Organisation initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return nap.proxies.Organisation.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static nap.proxies.Organisation initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		if (com.mendix.core.Core.isSubClassOf("NAP.BusinessGroup", mendixObject.getType()))
			return nap.proxies.BusinessGroup.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("NAP.Customer", mendixObject.getType()))
			return nap.proxies.Customer.initialize(context, mendixObject);

		return new nap.proxies.Organisation(context, mendixObject);
	}

	public static nap.proxies.Organisation load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return nap.proxies.Organisation.initialize(context, mendixObject);
	}

	public static java.util.List<? extends nap.proxies.Organisation> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<nap.proxies.Organisation> result = new java.util.ArrayList<nap.proxies.Organisation>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//NAP.Organisation" + xpathConstraint))
			result.add(nap.proxies.Organisation.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of OrganisationName
	 */
	public final java.lang.String getOrganisationName()
	{
		return getOrganisationName(getContext());
	}

	/**
	 * @param context
	 * @return value of OrganisationName
	 */
	public final java.lang.String getOrganisationName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.OrganisationName.toString());
	}

	/**
	 * Set value of OrganisationName
	 * @param organisationname
	 */
	public final void setOrganisationName(java.lang.String organisationname)
	{
		setOrganisationName(getContext(), organisationname);
	}

	/**
	 * Set value of OrganisationName
	 * @param context
	 * @param organisationname
	 */
	public final void setOrganisationName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String organisationname)
	{
		getMendixObject().setValue(context, MemberNames.OrganisationName.toString(), organisationname);
	}

	/**
	 * Set value of OrganisationStatus
	 * @param organisationstatus
	 */
	public final nap.proxies.NAP_Status getOrganisationStatus()
	{
		return getOrganisationStatus(getContext());
	}

	/**
	 * @param context
	 * @return value of OrganisationStatus
	 */
	public final nap.proxies.NAP_Status getOrganisationStatus(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.OrganisationStatus.toString());
		if (obj == null)
			return null;

		return nap.proxies.NAP_Status.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of OrganisationStatus
	 * @param organisationstatus
	 */
	public final void setOrganisationStatus(nap.proxies.NAP_Status organisationstatus)
	{
		setOrganisationStatus(getContext(), organisationstatus);
	}

	/**
	 * Set value of OrganisationStatus
	 * @param context
	 * @param organisationstatus
	 */
	public final void setOrganisationStatus(com.mendix.systemwideinterfaces.core.IContext context, nap.proxies.NAP_Status organisationstatus)
	{
		if (organisationstatus != null)
			getMendixObject().setValue(context, MemberNames.OrganisationStatus.toString(), organisationstatus.toString());
		else
			getMendixObject().setValue(context, MemberNames.OrganisationStatus.toString(), null);
	}

	/**
	 * @return value of XXLDAPID
	 */
	public final java.lang.String getXXLDAPID()
	{
		return getXXLDAPID(getContext());
	}

	/**
	 * @param context
	 * @return value of XXLDAPID
	 */
	public final java.lang.String getXXLDAPID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.XXLDAPID.toString());
	}

	/**
	 * Set value of XXLDAPID
	 * @param xxldapid
	 */
	public final void setXXLDAPID(java.lang.String xxldapid)
	{
		setXXLDAPID(getContext(), xxldapid);
	}

	/**
	 * Set value of XXLDAPID
	 * @param context
	 * @param xxldapid
	 */
	public final void setXXLDAPID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xxldapid)
	{
		getMendixObject().setValue(context, MemberNames.XXLDAPID.toString(), xxldapid);
	}

	/**
	 * @return value of InterfaceGUID
	 */
	public final java.lang.String getInterfaceGUID()
	{
		return getInterfaceGUID(getContext());
	}

	/**
	 * @param context
	 * @return value of InterfaceGUID
	 */
	public final java.lang.String getInterfaceGUID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.InterfaceGUID.toString());
	}

	/**
	 * Set value of InterfaceGUID
	 * @param interfaceguid
	 */
	public final void setInterfaceGUID(java.lang.String interfaceguid)
	{
		setInterfaceGUID(getContext(), interfaceguid);
	}

	/**
	 * Set value of InterfaceGUID
	 * @param context
	 * @param interfaceguid
	 */
	public final void setInterfaceGUID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String interfaceguid)
	{
		getMendixObject().setValue(context, MemberNames.InterfaceGUID.toString(), interfaceguid);
	}

	/**
	 * @return value of IsCIOwnerGroup
	 */
	public final java.lang.Boolean getIsCIOwnerGroup()
	{
		return getIsCIOwnerGroup(getContext());
	}

	/**
	 * @param context
	 * @return value of IsCIOwnerGroup
	 */
	public final java.lang.Boolean getIsCIOwnerGroup(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsCIOwnerGroup.toString());
	}

	/**
	 * Set value of IsCIOwnerGroup
	 * @param isciownergroup
	 */
	public final void setIsCIOwnerGroup(java.lang.Boolean isciownergroup)
	{
		setIsCIOwnerGroup(getContext(), isciownergroup);
	}

	/**
	 * Set value of IsCIOwnerGroup
	 * @param context
	 * @param isciownergroup
	 */
	public final void setIsCIOwnerGroup(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean isciownergroup)
	{
		getMendixObject().setValue(context, MemberNames.IsCIOwnerGroup.toString(), isciownergroup);
	}

	/**
	 * Set value of CILevel
	 * @param cilevel
	 */
	public final customlvnl.proxies.CI_Level getCILevel()
	{
		return getCILevel(getContext());
	}

	/**
	 * @param context
	 * @return value of CILevel
	 */
	public final customlvnl.proxies.CI_Level getCILevel(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.CILevel.toString());
		if (obj == null)
			return null;

		return customlvnl.proxies.CI_Level.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of CILevel
	 * @param cilevel
	 */
	public final void setCILevel(customlvnl.proxies.CI_Level cilevel)
	{
		setCILevel(getContext(), cilevel);
	}

	/**
	 * Set value of CILevel
	 * @param context
	 * @param cilevel
	 */
	public final void setCILevel(com.mendix.systemwideinterfaces.core.IContext context, customlvnl.proxies.CI_Level cilevel)
	{
		if (cilevel != null)
			getMendixObject().setValue(context, MemberNames.CILevel.toString(), cilevel.toString());
		else
			getMendixObject().setValue(context, MemberNames.CILevel.toString(), null);
	}

	/**
	 * @return value of HR_Department
	 */
	public final java.lang.Boolean getHR_Department()
	{
		return getHR_Department(getContext());
	}

	/**
	 * @param context
	 * @return value of HR_Department
	 */
	public final java.lang.Boolean getHR_Department(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.HR_Department.toString());
	}

	/**
	 * Set value of HR_Department
	 * @param hr_department
	 */
	public final void setHR_Department(java.lang.Boolean hr_department)
	{
		setHR_Department(getContext(), hr_department);
	}

	/**
	 * Set value of HR_Department
	 * @param context
	 * @param hr_department
	 */
	public final void setHR_Department(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean hr_department)
	{
		getMendixObject().setValue(context, MemberNames.HR_Department.toString(), hr_department);
	}

	/**
	 * @return value of ImportDate
	 */
	public final java.util.Date getImportDate()
	{
		return getImportDate(getContext());
	}

	/**
	 * @param context
	 * @return value of ImportDate
	 */
	public final java.util.Date getImportDate(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.ImportDate.toString());
	}

	/**
	 * Set value of ImportDate
	 * @param importdate
	 */
	public final void setImportDate(java.util.Date importdate)
	{
		setImportDate(getContext(), importdate);
	}

	/**
	 * Set value of ImportDate
	 * @param context
	 * @param importdate
	 */
	public final void setImportDate(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date importdate)
	{
		getMendixObject().setValue(context, MemberNames.ImportDate.toString(), importdate);
	}

	/**
	 * @return value of Organisation_Location
	 */
	public final java.util.List<nap.proxies.Location> getOrganisation_Location() throws com.mendix.core.CoreException
	{
		return getOrganisation_Location(getContext());
	}

	/**
	 * @param context
	 * @return value of Organisation_Location
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<nap.proxies.Location> getOrganisation_Location(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<nap.proxies.Location> result = new java.util.ArrayList<nap.proxies.Location>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.Organisation_Location.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(nap.proxies.Location.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of Organisation_Location
	 * @param organisation_location
	 */
	public final void setOrganisation_Location(java.util.List<nap.proxies.Location> organisation_location)
	{
		setOrganisation_Location(getContext(), organisation_location);
	}

	/**
	 * Set value of Organisation_Location
	 * @param context
	 * @param organisation_location
	 */
	public final void setOrganisation_Location(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<nap.proxies.Location> organisation_location)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (nap.proxies.Location proxyObject : organisation_location)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.Organisation_Location.toString(), identifiers);
	}

	/**
	 * @return value of Organisation_Contact_Info
	 */
	public final java.util.List<nap.proxies.Contact_Info> getOrganisation_Contact_Info() throws com.mendix.core.CoreException
	{
		return getOrganisation_Contact_Info(getContext());
	}

	/**
	 * @param context
	 * @return value of Organisation_Contact_Info
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<nap.proxies.Contact_Info> getOrganisation_Contact_Info(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<nap.proxies.Contact_Info> result = new java.util.ArrayList<nap.proxies.Contact_Info>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.Organisation_Contact_Info.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(nap.proxies.Contact_Info.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of Organisation_Contact_Info
	 * @param organisation_contact_info
	 */
	public final void setOrganisation_Contact_Info(java.util.List<nap.proxies.Contact_Info> organisation_contact_info)
	{
		setOrganisation_Contact_Info(getContext(), organisation_contact_info);
	}

	/**
	 * Set value of Organisation_Contact_Info
	 * @param context
	 * @param organisation_contact_info
	 */
	public final void setOrganisation_Contact_Info(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<nap.proxies.Contact_Info> organisation_contact_info)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (nap.proxies.Contact_Info proxyObject : organisation_contact_info)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.Organisation_Contact_Info.toString(), identifiers);
	}

	/**
	 * @return value of Person_Organisation_ForCancel
	 */
	public final java.util.List<nap.proxies.Person> getPerson_Organisation_ForCancel() throws com.mendix.core.CoreException
	{
		return getPerson_Organisation_ForCancel(getContext());
	}

	/**
	 * @param context
	 * @return value of Person_Organisation_ForCancel
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<nap.proxies.Person> getPerson_Organisation_ForCancel(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<nap.proxies.Person> result = new java.util.ArrayList<nap.proxies.Person>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.Person_Organisation_ForCancel.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(nap.proxies.Person.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of Person_Organisation_ForCancel
	 * @param person_organisation_forcancel
	 */
	public final void setPerson_Organisation_ForCancel(java.util.List<nap.proxies.Person> person_organisation_forcancel)
	{
		setPerson_Organisation_ForCancel(getContext(), person_organisation_forcancel);
	}

	/**
	 * Set value of Person_Organisation_ForCancel
	 * @param context
	 * @param person_organisation_forcancel
	 */
	public final void setPerson_Organisation_ForCancel(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<nap.proxies.Person> person_organisation_forcancel)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (nap.proxies.Person proxyObject : person_organisation_forcancel)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.Person_Organisation_ForCancel.toString(), identifiers);
	}

	/**
	 * @return value of Organisation_BusinessRoles
	 */
	public final java.util.List<nap.proxies.BusinessRole> getOrganisation_BusinessRoles() throws com.mendix.core.CoreException
	{
		return getOrganisation_BusinessRoles(getContext());
	}

	/**
	 * @param context
	 * @return value of Organisation_BusinessRoles
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<nap.proxies.BusinessRole> getOrganisation_BusinessRoles(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<nap.proxies.BusinessRole> result = new java.util.ArrayList<nap.proxies.BusinessRole>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.Organisation_BusinessRoles.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(nap.proxies.BusinessRole.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of Organisation_BusinessRoles
	 * @param organisation_businessroles
	 */
	public final void setOrganisation_BusinessRoles(java.util.List<nap.proxies.BusinessRole> organisation_businessroles)
	{
		setOrganisation_BusinessRoles(getContext(), organisation_businessroles);
	}

	/**
	 * Set value of Organisation_BusinessRoles
	 * @param context
	 * @param organisation_businessroles
	 */
	public final void setOrganisation_BusinessRoles(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<nap.proxies.BusinessRole> organisation_businessroles)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (nap.proxies.BusinessRole proxyObject : organisation_businessroles)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.Organisation_BusinessRoles.toString(), identifiers);
	}

	/**
	 * @return value of Knowledge_ReceivingOrganisation
	 */
	public final java.util.List<knowledgemanagement.proxies.Knowledge> getKnowledge_ReceivingOrganisation() throws com.mendix.core.CoreException
	{
		return getKnowledge_ReceivingOrganisation(getContext());
	}

	/**
	 * @param context
	 * @return value of Knowledge_ReceivingOrganisation
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<knowledgemanagement.proxies.Knowledge> getKnowledge_ReceivingOrganisation(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<knowledgemanagement.proxies.Knowledge> result = new java.util.ArrayList<knowledgemanagement.proxies.Knowledge>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.Knowledge_ReceivingOrganisation.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(knowledgemanagement.proxies.Knowledge.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of Knowledge_ReceivingOrganisation
	 * @param knowledge_receivingorganisation
	 */
	public final void setKnowledge_ReceivingOrganisation(java.util.List<knowledgemanagement.proxies.Knowledge> knowledge_receivingorganisation)
	{
		setKnowledge_ReceivingOrganisation(getContext(), knowledge_receivingorganisation);
	}

	/**
	 * Set value of Knowledge_ReceivingOrganisation
	 * @param context
	 * @param knowledge_receivingorganisation
	 */
	public final void setKnowledge_ReceivingOrganisation(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<knowledgemanagement.proxies.Knowledge> knowledge_receivingorganisation)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (knowledgemanagement.proxies.Knowledge proxyObject : knowledge_receivingorganisation)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.Knowledge_ReceivingOrganisation.toString(), identifiers);
	}

	/**
	 * @return value of ReceivingOrganisation_Contracts
	 */
	public final java.util.List<slm.proxies.Contract> getReceivingOrganisation_Contracts() throws com.mendix.core.CoreException
	{
		return getReceivingOrganisation_Contracts(getContext());
	}

	/**
	 * @param context
	 * @return value of ReceivingOrganisation_Contracts
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<slm.proxies.Contract> getReceivingOrganisation_Contracts(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<slm.proxies.Contract> result = new java.util.ArrayList<slm.proxies.Contract>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.ReceivingOrganisation_Contracts.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(slm.proxies.Contract.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of ReceivingOrganisation_Contracts
	 * @param receivingorganisation_contracts
	 */
	public final void setReceivingOrganisation_Contracts(java.util.List<slm.proxies.Contract> receivingorganisation_contracts)
	{
		setReceivingOrganisation_Contracts(getContext(), receivingorganisation_contracts);
	}

	/**
	 * Set value of ReceivingOrganisation_Contracts
	 * @param context
	 * @param receivingorganisation_contracts
	 */
	public final void setReceivingOrganisation_Contracts(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<slm.proxies.Contract> receivingorganisation_contracts)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (slm.proxies.Contract proxyObject : receivingorganisation_contracts)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.ReceivingOrganisation_Contracts.toString(), identifiers);
	}

	/**
	 * @return value of Organisation_RequestDummy
	 */
	public final process.proxies.Request getOrganisation_RequestDummy() throws com.mendix.core.CoreException
	{
		return getOrganisation_RequestDummy(getContext());
	}

	/**
	 * @param context
	 * @return value of Organisation_RequestDummy
	 */
	public final process.proxies.Request getOrganisation_RequestDummy(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		process.proxies.Request result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Organisation_RequestDummy.toString());
		if (identifier != null)
			result = process.proxies.Request.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Organisation_RequestDummy
	 * @param organisation_requestdummy
	 */
	public final void setOrganisation_RequestDummy(process.proxies.Request organisation_requestdummy)
	{
		setOrganisation_RequestDummy(getContext(), organisation_requestdummy);
	}

	/**
	 * Set value of Organisation_RequestDummy
	 * @param context
	 * @param organisation_requestdummy
	 */
	public final void setOrganisation_RequestDummy(com.mendix.systemwideinterfaces.core.IContext context, process.proxies.Request organisation_requestdummy)
	{
		if (organisation_requestdummy == null)
			getMendixObject().setValue(context, MemberNames.Organisation_RequestDummy.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Organisation_RequestDummy.toString(), organisation_requestdummy.getMendixObject().getId());
	}

	/**
	 * @return value of Organisation_CostCenter
	 */
	public final java.util.List<billing.proxies.CostCenter> getOrganisation_CostCenter() throws com.mendix.core.CoreException
	{
		return getOrganisation_CostCenter(getContext());
	}

	/**
	 * @param context
	 * @return value of Organisation_CostCenter
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<billing.proxies.CostCenter> getOrganisation_CostCenter(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<billing.proxies.CostCenter> result = new java.util.ArrayList<billing.proxies.CostCenter>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.Organisation_CostCenter.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(billing.proxies.CostCenter.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of Organisation_CostCenter
	 * @param organisation_costcenter
	 */
	public final void setOrganisation_CostCenter(java.util.List<billing.proxies.CostCenter> organisation_costcenter)
	{
		setOrganisation_CostCenter(getContext(), organisation_costcenter);
	}

	/**
	 * Set value of Organisation_CostCenter
	 * @param context
	 * @param organisation_costcenter
	 */
	public final void setOrganisation_CostCenter(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<billing.proxies.CostCenter> organisation_costcenter)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (billing.proxies.CostCenter proxyObject : organisation_costcenter)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.Organisation_CostCenter.toString(), identifiers);
	}

	/**
	 * @return value of Organisation_PriceApproval
	 */
	public final java.util.List<approval.proxies.PriceApprovalRange> getOrganisation_PriceApproval() throws com.mendix.core.CoreException
	{
		return getOrganisation_PriceApproval(getContext());
	}

	/**
	 * @param context
	 * @return value of Organisation_PriceApproval
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<approval.proxies.PriceApprovalRange> getOrganisation_PriceApproval(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<approval.proxies.PriceApprovalRange> result = new java.util.ArrayList<approval.proxies.PriceApprovalRange>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.Organisation_PriceApproval.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(approval.proxies.PriceApprovalRange.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of Organisation_PriceApproval
	 * @param organisation_priceapproval
	 */
	public final void setOrganisation_PriceApproval(java.util.List<approval.proxies.PriceApprovalRange> organisation_priceapproval)
	{
		setOrganisation_PriceApproval(getContext(), organisation_priceapproval);
	}

	/**
	 * Set value of Organisation_PriceApproval
	 * @param context
	 * @param organisation_priceapproval
	 */
	public final void setOrganisation_PriceApproval(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<approval.proxies.PriceApprovalRange> organisation_priceapproval)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (approval.proxies.PriceApprovalRange proxyObject : organisation_priceapproval)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.Organisation_PriceApproval.toString(), identifiers);
	}

	/**
	 * @return value of Organisation_DataAccess
	 */
	public final java.util.List<da.proxies.Label> getOrganisation_DataAccess() throws com.mendix.core.CoreException
	{
		return getOrganisation_DataAccess(getContext());
	}

	/**
	 * @param context
	 * @return value of Organisation_DataAccess
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<da.proxies.Label> getOrganisation_DataAccess(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<da.proxies.Label> result = new java.util.ArrayList<da.proxies.Label>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.Organisation_DataAccess.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(da.proxies.Label.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of Organisation_DataAccess
	 * @param organisation_dataaccess
	 */
	public final void setOrganisation_DataAccess(java.util.List<da.proxies.Label> organisation_dataaccess)
	{
		setOrganisation_DataAccess(getContext(), organisation_dataaccess);
	}

	/**
	 * Set value of Organisation_DataAccess
	 * @param context
	 * @param organisation_dataaccess
	 */
	public final void setOrganisation_DataAccess(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<da.proxies.Label> organisation_dataaccess)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (da.proxies.Label proxyObject : organisation_dataaccess)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.Organisation_DataAccess.toString(), identifiers);
	}

	/**
	 * @return value of Organisation_InitiatingInterfaceConfiguration
	 */
	public final interfaceconfiguration.proxies.InterfaceConfiguration getOrganisation_InitiatingInterfaceConfiguration() throws com.mendix.core.CoreException
	{
		return getOrganisation_InitiatingInterfaceConfiguration(getContext());
	}

	/**
	 * @param context
	 * @return value of Organisation_InitiatingInterfaceConfiguration
	 */
	public final interfaceconfiguration.proxies.InterfaceConfiguration getOrganisation_InitiatingInterfaceConfiguration(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfaceconfiguration.proxies.InterfaceConfiguration result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Organisation_InitiatingInterfaceConfiguration.toString());
		if (identifier != null)
			result = interfaceconfiguration.proxies.InterfaceConfiguration.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Organisation_InitiatingInterfaceConfiguration
	 * @param organisation_initiatinginterfaceconfiguration
	 */
	public final void setOrganisation_InitiatingInterfaceConfiguration(interfaceconfiguration.proxies.InterfaceConfiguration organisation_initiatinginterfaceconfiguration)
	{
		setOrganisation_InitiatingInterfaceConfiguration(getContext(), organisation_initiatinginterfaceconfiguration);
	}

	/**
	 * Set value of Organisation_InitiatingInterfaceConfiguration
	 * @param context
	 * @param organisation_initiatinginterfaceconfiguration
	 */
	public final void setOrganisation_InitiatingInterfaceConfiguration(com.mendix.systemwideinterfaces.core.IContext context, interfaceconfiguration.proxies.InterfaceConfiguration organisation_initiatinginterfaceconfiguration)
	{
		if (organisation_initiatinginterfaceconfiguration == null)
			getMendixObject().setValue(context, MemberNames.Organisation_InitiatingInterfaceConfiguration.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Organisation_InitiatingInterfaceConfiguration.toString(), organisation_initiatinginterfaceconfiguration.getMendixObject().getId());
	}

	/**
	 * @return value of Organisation_InitiatingLDAPImportType
	 */
	public final interfaceconfiguration.proxies.LDAPImportType getOrganisation_InitiatingLDAPImportType() throws com.mendix.core.CoreException
	{
		return getOrganisation_InitiatingLDAPImportType(getContext());
	}

	/**
	 * @param context
	 * @return value of Organisation_InitiatingLDAPImportType
	 */
	public final interfaceconfiguration.proxies.LDAPImportType getOrganisation_InitiatingLDAPImportType(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfaceconfiguration.proxies.LDAPImportType result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Organisation_InitiatingLDAPImportType.toString());
		if (identifier != null)
			result = interfaceconfiguration.proxies.LDAPImportType.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Organisation_InitiatingLDAPImportType
	 * @param organisation_initiatingldapimporttype
	 */
	public final void setOrganisation_InitiatingLDAPImportType(interfaceconfiguration.proxies.LDAPImportType organisation_initiatingldapimporttype)
	{
		setOrganisation_InitiatingLDAPImportType(getContext(), organisation_initiatingldapimporttype);
	}

	/**
	 * Set value of Organisation_InitiatingLDAPImportType
	 * @param context
	 * @param organisation_initiatingldapimporttype
	 */
	public final void setOrganisation_InitiatingLDAPImportType(com.mendix.systemwideinterfaces.core.IContext context, interfaceconfiguration.proxies.LDAPImportType organisation_initiatingldapimporttype)
	{
		if (organisation_initiatingldapimporttype == null)
			getMendixObject().setValue(context, MemberNames.Organisation_InitiatingLDAPImportType.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Organisation_InitiatingLDAPImportType.toString(), organisation_initiatingldapimporttype.getMendixObject().getId());
	}

	/**
	 * @return value of Organisation_ParentInterfaceProcessingPart
	 */
	public final interfaceshared.proxies.ProcessingPart getOrganisation_ParentInterfaceProcessingPart() throws com.mendix.core.CoreException
	{
		return getOrganisation_ParentInterfaceProcessingPart(getContext());
	}

	/**
	 * @param context
	 * @return value of Organisation_ParentInterfaceProcessingPart
	 */
	public final interfaceshared.proxies.ProcessingPart getOrganisation_ParentInterfaceProcessingPart(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfaceshared.proxies.ProcessingPart result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Organisation_ParentInterfaceProcessingPart.toString());
		if (identifier != null)
			result = interfaceshared.proxies.ProcessingPart.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Organisation_ParentInterfaceProcessingPart
	 * @param organisation_parentinterfaceprocessingpart
	 */
	public final void setOrganisation_ParentInterfaceProcessingPart(interfaceshared.proxies.ProcessingPart organisation_parentinterfaceprocessingpart)
	{
		setOrganisation_ParentInterfaceProcessingPart(getContext(), organisation_parentinterfaceprocessingpart);
	}

	/**
	 * Set value of Organisation_ParentInterfaceProcessingPart
	 * @param context
	 * @param organisation_parentinterfaceprocessingpart
	 */
	public final void setOrganisation_ParentInterfaceProcessingPart(com.mendix.systemwideinterfaces.core.IContext context, interfaceshared.proxies.ProcessingPart organisation_parentinterfaceprocessingpart)
	{
		if (organisation_parentinterfaceprocessingpart == null)
			getMendixObject().setValue(context, MemberNames.Organisation_ParentInterfaceProcessingPart.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Organisation_ParentInterfaceProcessingPart.toString(), organisation_parentinterfaceprocessingpart.getMendixObject().getId());
	}

	/**
	 * @return value of TempReceivingOrganisation_Contracts
	 */
	public final slm.proxies.Contract getTempReceivingOrganisation_Contracts() throws com.mendix.core.CoreException
	{
		return getTempReceivingOrganisation_Contracts(getContext());
	}

	/**
	 * @param context
	 * @return value of TempReceivingOrganisation_Contracts
	 */
	public final slm.proxies.Contract getTempReceivingOrganisation_Contracts(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		slm.proxies.Contract result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.TempReceivingOrganisation_Contracts.toString());
		if (identifier != null)
			result = slm.proxies.Contract.load(context, identifier);
		return result;
	}

	/**
	 * Set value of TempReceivingOrganisation_Contracts
	 * @param tempreceivingorganisation_contracts
	 */
	public final void setTempReceivingOrganisation_Contracts(slm.proxies.Contract tempreceivingorganisation_contracts)
	{
		setTempReceivingOrganisation_Contracts(getContext(), tempreceivingorganisation_contracts);
	}

	/**
	 * Set value of TempReceivingOrganisation_Contracts
	 * @param context
	 * @param tempreceivingorganisation_contracts
	 */
	public final void setTempReceivingOrganisation_Contracts(com.mendix.systemwideinterfaces.core.IContext context, slm.proxies.Contract tempreceivingorganisation_contracts)
	{
		if (tempreceivingorganisation_contracts == null)
			getMendixObject().setValue(context, MemberNames.TempReceivingOrganisation_Contracts.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.TempReceivingOrganisation_Contracts.toString(), tempreceivingorganisation_contracts.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return organisationMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final nap.proxies.Organisation that = (nap.proxies.Organisation) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "NAP.Organisation";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
