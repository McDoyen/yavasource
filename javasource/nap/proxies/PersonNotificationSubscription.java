// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package nap.proxies;

public class PersonNotificationSubscription
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject personNotificationSubscriptionMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "NAP.PersonNotificationSubscription";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Subscribe("Subscribe"),
		IsPushed("IsPushed"),
		SendEmail("SendEmail"),
		WasActive("WasActive"),
		PersonNotificationSubscription_Person("NAP.PersonNotificationSubscription_Person"),
		PersonNotificationSubscription_NotificationSubscription("NAP.PersonNotificationSubscription_NotificationSubscription");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public PersonNotificationSubscription(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "NAP.PersonNotificationSubscription"));
	}

	protected PersonNotificationSubscription(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject personNotificationSubscriptionMendixObject)
	{
		if (personNotificationSubscriptionMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("NAP.PersonNotificationSubscription", personNotificationSubscriptionMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a NAP.PersonNotificationSubscription");

		this.personNotificationSubscriptionMendixObject = personNotificationSubscriptionMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'PersonNotificationSubscription.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static nap.proxies.PersonNotificationSubscription initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return nap.proxies.PersonNotificationSubscription.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static nap.proxies.PersonNotificationSubscription initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new nap.proxies.PersonNotificationSubscription(context, mendixObject);
	}

	public static nap.proxies.PersonNotificationSubscription load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return nap.proxies.PersonNotificationSubscription.initialize(context, mendixObject);
	}

	public static java.util.List<nap.proxies.PersonNotificationSubscription> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<nap.proxies.PersonNotificationSubscription> result = new java.util.ArrayList<nap.proxies.PersonNotificationSubscription>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//NAP.PersonNotificationSubscription" + xpathConstraint))
			result.add(nap.proxies.PersonNotificationSubscription.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Subscribe
	 */
	public final java.lang.Boolean getSubscribe()
	{
		return getSubscribe(getContext());
	}

	/**
	 * @param context
	 * @return value of Subscribe
	 */
	public final java.lang.Boolean getSubscribe(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.Subscribe.toString());
	}

	/**
	 * Set value of Subscribe
	 * @param subscribe
	 */
	public final void setSubscribe(java.lang.Boolean subscribe)
	{
		setSubscribe(getContext(), subscribe);
	}

	/**
	 * Set value of Subscribe
	 * @param context
	 * @param subscribe
	 */
	public final void setSubscribe(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean subscribe)
	{
		getMendixObject().setValue(context, MemberNames.Subscribe.toString(), subscribe);
	}

	/**
	 * @return value of IsPushed
	 */
	public final java.lang.Boolean getIsPushed()
	{
		return getIsPushed(getContext());
	}

	/**
	 * @param context
	 * @return value of IsPushed
	 */
	public final java.lang.Boolean getIsPushed(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsPushed.toString());
	}

	/**
	 * Set value of IsPushed
	 * @param ispushed
	 */
	public final void setIsPushed(java.lang.Boolean ispushed)
	{
		setIsPushed(getContext(), ispushed);
	}

	/**
	 * Set value of IsPushed
	 * @param context
	 * @param ispushed
	 */
	public final void setIsPushed(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean ispushed)
	{
		getMendixObject().setValue(context, MemberNames.IsPushed.toString(), ispushed);
	}

	/**
	 * @return value of SendEmail
	 */
	public final java.lang.Boolean getSendEmail()
	{
		return getSendEmail(getContext());
	}

	/**
	 * @param context
	 * @return value of SendEmail
	 */
	public final java.lang.Boolean getSendEmail(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.SendEmail.toString());
	}

	/**
	 * Set value of SendEmail
	 * @param sendemail
	 */
	public final void setSendEmail(java.lang.Boolean sendemail)
	{
		setSendEmail(getContext(), sendemail);
	}

	/**
	 * Set value of SendEmail
	 * @param context
	 * @param sendemail
	 */
	public final void setSendEmail(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean sendemail)
	{
		getMendixObject().setValue(context, MemberNames.SendEmail.toString(), sendemail);
	}

	/**
	 * @return value of WasActive
	 */
	public final java.lang.Boolean getWasActive()
	{
		return getWasActive(getContext());
	}

	/**
	 * @param context
	 * @return value of WasActive
	 */
	public final java.lang.Boolean getWasActive(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.WasActive.toString());
	}

	/**
	 * Set value of WasActive
	 * @param wasactive
	 */
	public final void setWasActive(java.lang.Boolean wasactive)
	{
		setWasActive(getContext(), wasactive);
	}

	/**
	 * Set value of WasActive
	 * @param context
	 * @param wasactive
	 */
	public final void setWasActive(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean wasactive)
	{
		getMendixObject().setValue(context, MemberNames.WasActive.toString(), wasactive);
	}

	/**
	 * @return value of PersonNotificationSubscription_Person
	 */
	public final nap.proxies.Person getPersonNotificationSubscription_Person() throws com.mendix.core.CoreException
	{
		return getPersonNotificationSubscription_Person(getContext());
	}

	/**
	 * @param context
	 * @return value of PersonNotificationSubscription_Person
	 */
	public final nap.proxies.Person getPersonNotificationSubscription_Person(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		nap.proxies.Person result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.PersonNotificationSubscription_Person.toString());
		if (identifier != null)
			result = nap.proxies.Person.load(context, identifier);
		return result;
	}

	/**
	 * Set value of PersonNotificationSubscription_Person
	 * @param personnotificationsubscription_person
	 */
	public final void setPersonNotificationSubscription_Person(nap.proxies.Person personnotificationsubscription_person)
	{
		setPersonNotificationSubscription_Person(getContext(), personnotificationsubscription_person);
	}

	/**
	 * Set value of PersonNotificationSubscription_Person
	 * @param context
	 * @param personnotificationsubscription_person
	 */
	public final void setPersonNotificationSubscription_Person(com.mendix.systemwideinterfaces.core.IContext context, nap.proxies.Person personnotificationsubscription_person)
	{
		if (personnotificationsubscription_person == null)
			getMendixObject().setValue(context, MemberNames.PersonNotificationSubscription_Person.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.PersonNotificationSubscription_Person.toString(), personnotificationsubscription_person.getMendixObject().getId());
	}

	/**
	 * @return value of PersonNotificationSubscription_NotificationSubscription
	 */
	public final nap.proxies.NotificationSubscription getPersonNotificationSubscription_NotificationSubscription() throws com.mendix.core.CoreException
	{
		return getPersonNotificationSubscription_NotificationSubscription(getContext());
	}

	/**
	 * @param context
	 * @return value of PersonNotificationSubscription_NotificationSubscription
	 */
	public final nap.proxies.NotificationSubscription getPersonNotificationSubscription_NotificationSubscription(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		nap.proxies.NotificationSubscription result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.PersonNotificationSubscription_NotificationSubscription.toString());
		if (identifier != null)
			result = nap.proxies.NotificationSubscription.load(context, identifier);
		return result;
	}

	/**
	 * Set value of PersonNotificationSubscription_NotificationSubscription
	 * @param personnotificationsubscription_notificationsubscription
	 */
	public final void setPersonNotificationSubscription_NotificationSubscription(nap.proxies.NotificationSubscription personnotificationsubscription_notificationsubscription)
	{
		setPersonNotificationSubscription_NotificationSubscription(getContext(), personnotificationsubscription_notificationsubscription);
	}

	/**
	 * Set value of PersonNotificationSubscription_NotificationSubscription
	 * @param context
	 * @param personnotificationsubscription_notificationsubscription
	 */
	public final void setPersonNotificationSubscription_NotificationSubscription(com.mendix.systemwideinterfaces.core.IContext context, nap.proxies.NotificationSubscription personnotificationsubscription_notificationsubscription)
	{
		if (personnotificationsubscription_notificationsubscription == null)
			getMendixObject().setValue(context, MemberNames.PersonNotificationSubscription_NotificationSubscription.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.PersonNotificationSubscription_NotificationSubscription.toString(), personnotificationsubscription_notificationsubscription.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return personNotificationSubscriptionMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final nap.proxies.PersonNotificationSubscription that = (nap.proxies.PersonNotificationSubscription) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "NAP.PersonNotificationSubscription";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
