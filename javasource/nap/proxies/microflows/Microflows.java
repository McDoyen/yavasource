// This file was generated by Mendix Modeler 7.7.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package nap.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the NAP module
	public static void aC_DeleteMessageRecipient(IContext context, emailplus.proxies.MessageRecipient _messageRecipient)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MessageRecipient", _messageRecipient == null ? null : _messageRecipient.getMendixObject());
			Core.execute(context, "NAP.AC_DeleteMessageRecipient", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void aCo_Person(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.ACo_Person", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<nap.proxies.BusinessRole> addBusinessRoleToPersonForOrganisation(IContext context, nap.proxies.PersonBusinessRole _userBusinessRole)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("UserBusinessRole", _userBusinessRole == null ? null : _userBusinessRole.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "NAP.AddBusinessRoleToPersonForOrganisation", params);
			java.util.List<nap.proxies.BusinessRole> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<nap.proxies.BusinessRole>();
				for (IMendixObject obj : objs)
					result.add(nap.proxies.BusinessRole.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void addPersonsToOrganisation(IContext context, java.util.List<nap.proxies.Person> _personList, nap.proxies.Organisation _organisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_personList = null;
			if (_personList != null)
			{
				listparam_personList = new java.util.ArrayList<IMendixObject>();
				for (nap.proxies.Person obj : _personList)
					listparam_personList.add(obj.getMendixObject());
			}
			params.put("PersonList", listparam_personList);
			params.put("Organisation", _organisation == null ? null : _organisation.getMendixObject());
			Core.execute(context, "NAP.AddPersonsToOrganisation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void apply_Organisation(IContext context, nap.proxies.Organisation _organisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Organisation", _organisation == null ? null : _organisation.getMendixObject());
			Core.execute(context, "NAP.Apply_Organisation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditBusinessRole_AfterCommit(IContext context, nap.proxies.BusinessRole _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "NAP.AuditBusinessRole_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditBusinessRole_AfterDelete(IContext context, nap.proxies.BusinessRole _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.AuditBusinessRole_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditContactInfo_AfterCommit(IContext context, nap.proxies.Contact_Info _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "NAP.AuditContactInfo_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditContactInfo_AfterDelete(IContext context, nap.proxies.Contact_Info _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.AuditContactInfo_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditLocation_AfterCommit(IContext context, nap.proxies.Location _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "NAP.AuditLocation_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditLocation_AfterDelete(IContext context, nap.proxies.Location _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.AuditLocation_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditLocation_GetAuditRecord(IContext context, nap.proxies.Location _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "NAP.AuditLocation_GetAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditNotificationSubscription_AfterCommit(IContext context, nap.proxies.NotificationSubscription _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "NAP.AuditNotificationSubscription_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditNotificationSubscription_AfterDelete(IContext context, nap.proxies.NotificationSubscription _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.AuditNotificationSubscription_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditNotificationSubscription_GetAuditRecord(IContext context, nap.proxies.NotificationSubscription _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "NAP.AuditNotificationSubscription_GetAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditOrganisation_AfterCommit(IContext context, nap.proxies.Organisation _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "NAP.AuditOrganisation_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditOrganisation_AfterDelete(IContext context, nap.proxies.Organisation _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.AuditOrganisation_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditOrganisation_GetAuditRecord(IContext context, nap.proxies.Organisation _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "NAP.AuditOrganisation_GetAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditPerson_AfterCommit(IContext context, nap.proxies.Person _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "NAP.AuditPerson_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditPerson_AfterDelete_DeleteFromLucene(IContext context, nap.proxies.Person _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.AuditPerson_AfterDelete_DeleteFromLucene", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditPerson_GetAuditRecord(IContext context, nap.proxies.Person _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "NAP.AuditPerson_GetAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditPersonImage_AfterCommit(IContext context, nap.proxies.PersonImage _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "NAP.AuditPersonImage_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditPersonImage_AfterDelete(IContext context, nap.proxies.PersonImage _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.AuditPersonImage_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditPersonNotificationSubscription_AfterCommit(IContext context, nap.proxies.PersonNotificationSubscription _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "NAP.AuditPersonNotificationSubscription_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditPersonNotificationSubscription_AfterDelete(IContext context, nap.proxies.PersonNotificationSubscription _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.AuditPersonNotificationSubscription_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditRoom_AfterCommit(IContext context, nap.proxies.Room _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "NAP.AuditRoom_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditRoom_AfterDelete(IContext context, nap.proxies.Room _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.AuditRoom_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditUserBusinessRole_AfterCommit(IContext context, nap.proxies.PersonBusinessRole _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "NAP.AuditUserBusinessRole_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditUserBusinessRole_AfterDelete(IContext context, nap.proxies.PersonBusinessRole _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.AuditUserBusinessRole_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bC_Room(IContext context, nap.proxies.Room _room)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Room", _room == null ? null : _room.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.BC_Room", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bCo_Location(IContext context, nap.proxies.Location _location)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Location", _location == null ? null : _location.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.BCo_Location", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bCo_Organisation(IContext context, nap.proxies.Organisation _organisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Organisation", _organisation == null ? null : _organisation.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.BCo_Organisation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bCo_Person(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.BCo_Person", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void bussinesGroup_ViewApprovals(IContext context, nap.proxies.BusinessGroup _businessGroup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("BusinessGroup", _businessGroup == null ? null : _businessGroup.getMendixObject());
			Core.execute(context, "NAP.BussinesGroup_ViewApprovals", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void buttonAddBusinessRoleToBG(IContext context, nap.proxies.Organisation _organisation, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Organisation", _organisation == null ? null : _organisation.getMendixObject());
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.ButtonAddBusinessRoleToBG", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void buttonPersonCreateUser(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.ButtonPersonCreateUser", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void buttonPersonDeleteUser(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.ButtonPersonDeleteUser", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void buttonPersonLinkUser(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.ButtonPersonLinkUser", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void buttonPersonUnlinkUser(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.ButtonPersonUnlinkUser", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long calc_UnreadMessages(IContext context, genericuserfunctions.proxies.UserSessionObject _userSessionObject)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("UserSessionObject", _userSessionObject == null ? null : _userSessionObject.getMendixObject());
			return (java.lang.Long)Core.execute(context, "NAP.Calc_UnreadMessages", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void canceledAddBusinessRoleToBG(IContext context, nap.proxies.PersonBusinessRole _userBusinessRole)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("UserBusinessRole", _userBusinessRole == null ? null : _userBusinessRole.getMendixObject());
			Core.execute(context, "NAP.CanceledAddBusinessRoleToBG", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean cannotSubscribeToMessage(IContext context, nap.proxies.NotificationSubscription _notificationSubscription)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("NotificationSubscription", _notificationSubscription == null ? null : _notificationSubscription.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.CannotSubscribeToMessage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean check_PortalOrganisations(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.Check_PortalOrganisations", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean checkZipcode(IContext context, nap.proxies.Location _location)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Location", _location == null ? null : _location.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.CheckZipcode", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void clear_Picture(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.Clear_Picture", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyApprovalByOrganisation(IContext context, java.util.List<approval.proxies.OrganisationRoleApproval> _organisationRoleApprovalList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_organisationRoleApprovalList = null;
			if (_organisationRoleApprovalList != null)
			{
				listparam_organisationRoleApprovalList = new java.util.ArrayList<IMendixObject>();
				for (approval.proxies.OrganisationRoleApproval obj : _organisationRoleApprovalList)
					listparam_organisationRoleApprovalList.add(obj.getMendixObject());
			}
			params.put("OrganisationRoleApprovalList", listparam_organisationRoleApprovalList);
			Core.execute(context, "NAP.CopyApprovalByOrganisation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyBusinessGroup(IContext context, nap.proxies.BusinessGroup _businessGroup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("BusinessGroup", _businessGroup == null ? null : _businessGroup.getMendixObject());
			Core.execute(context, "NAP.CopyBusinessGroup", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyBusinessGroupList(IContext context, java.util.List<nap.proxies.BusinessGroup> _businessGroupList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_businessGroupList = null;
			if (_businessGroupList != null)
			{
				listparam_businessGroupList = new java.util.ArrayList<IMendixObject>();
				for (nap.proxies.BusinessGroup obj : _businessGroupList)
					listparam_businessGroupList.add(obj.getMendixObject());
			}
			params.put("BusinessGroupList", listparam_businessGroupList);
			Core.execute(context, "NAP.CopyBusinessGroupList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyBusinessRole(IContext context, nap.proxies.BusinessRole _businessRole)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("BusinessRole", _businessRole == null ? null : _businessRole.getMendixObject());
			Core.execute(context, "NAP.CopyBusinessRole", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyBusinessRoleList(IContext context, java.util.List<nap.proxies.BusinessRole> _businessRoleList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_businessRoleList = null;
			if (_businessRoleList != null)
			{
				listparam_businessRoleList = new java.util.ArrayList<IMendixObject>();
				for (nap.proxies.BusinessRole obj : _businessRoleList)
					listparam_businessRoleList.add(obj.getMendixObject());
			}
			params.put("BusinessRoleList", listparam_businessRoleList);
			Core.execute(context, "NAP.CopyBusinessRoleList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyCustomer(IContext context, nap.proxies.Customer _customer)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Customer", _customer == null ? null : _customer.getMendixObject());
			Core.execute(context, "NAP.CopyCustomer", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyCustomerList(IContext context, java.util.List<nap.proxies.Customer> _customerList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_customerList = null;
			if (_customerList != null)
			{
				listparam_customerList = new java.util.ArrayList<IMendixObject>();
				for (nap.proxies.Customer obj : _customerList)
					listparam_customerList.add(obj.getMendixObject());
			}
			params.put("CustomerList", listparam_customerList);
			Core.execute(context, "NAP.CopyCustomerList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyLocation(IContext context, nap.proxies.Location _location)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Location", _location == null ? null : _location.getMendixObject());
			Core.execute(context, "NAP.CopyLocation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyLocationList(IContext context, java.util.List<nap.proxies.Location> _locationList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_locationList = null;
			if (_locationList != null)
			{
				listparam_locationList = new java.util.ArrayList<IMendixObject>();
				for (nap.proxies.Location obj : _locationList)
					listparam_locationList.add(obj.getMendixObject());
			}
			params.put("LocationList", listparam_locationList);
			Core.execute(context, "NAP.CopyLocationList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyNotificationSubscription(IContext context, nap.proxies.NotificationSubscription _notificationSubscription)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("NotificationSubscription", _notificationSubscription == null ? null : _notificationSubscription.getMendixObject());
			Core.execute(context, "NAP.CopyNotificationSubscription", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyNotificationSubscriptionList(IContext context, java.util.List<nap.proxies.NotificationSubscription> _notificationSubscriptionList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_notificationSubscriptionList = null;
			if (_notificationSubscriptionList != null)
			{
				listparam_notificationSubscriptionList = new java.util.ArrayList<IMendixObject>();
				for (nap.proxies.NotificationSubscription obj : _notificationSubscriptionList)
					listparam_notificationSubscriptionList.add(obj.getMendixObject());
			}
			params.put("NotificationSubscriptionList", listparam_notificationSubscriptionList);
			Core.execute(context, "NAP.CopyNotificationSubscriptionList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyPerson(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.CopyPerson", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyPersonList(IContext context, java.util.List<nap.proxies.Person> _personList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_personList = null;
			if (_personList != null)
			{
				listparam_personList = new java.util.ArrayList<IMendixObject>();
				for (nap.proxies.Person obj : _personList)
					listparam_personList.add(obj.getMendixObject());
			}
			params.put("PersonList", listparam_personList);
			Core.execute(context, "NAP.CopyPersonList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyRoom(IContext context, nap.proxies.Room _room)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Room", _room == null ? null : _room.getMendixObject());
			Core.execute(context, "NAP.CopyRoom", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyRoomList(IContext context, java.util.List<nap.proxies.Room> _roomList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_roomList = null;
			if (_roomList != null)
			{
				listparam_roomList = new java.util.ArrayList<IMendixObject>();
				for (nap.proxies.Room obj : _roomList)
					listparam_roomList.add(obj.getMendixObject());
			}
			params.put("RoomList", listparam_roomList);
			Core.execute(context, "NAP.CopyRoomList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean createMessageRecipients(IContext context, nap.proxies.Person _person, emailplus.proxies.MessageSource _messageSource, emailplus.proxies.Message _message, nap.proxies.NotificationSubscription _notificationSubscription)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			params.put("MessageSource", _messageSource == null ? null : _messageSource.name());
			params.put("Message", _message == null ? null : _message.getMendixObject());
			params.put("NotificationSubscription", _notificationSubscription == null ? null : _notificationSubscription.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.CreateMessageRecipients", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void createNewSupplierBusinessGroup(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "NAP.CreateNewSupplierBusinessGroup", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void customer_View_Approvals(IContext context, nap.proxies.Customer _customer)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Customer", _customer == null ? null : _customer.getMendixObject());
			Core.execute(context, "NAP.Customer_View_Approvals", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void customer_View_Business_Roles(IContext context, nap.proxies.Customer _customer)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Customer", _customer == null ? null : _customer.getMendixObject());
			Core.execute(context, "NAP.Customer_View_Business_Roles", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void customer_View_Contracts(IContext context, nap.proxies.Customer _customer)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Customer", _customer == null ? null : _customer.getMendixObject());
			Core.execute(context, "NAP.Customer_View_Contracts", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void customer_View_Request_History(IContext context, nap.proxies.Customer _customer)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Customer", _customer == null ? null : _customer.getMendixObject());
			Core.execute(context, "NAP.Customer_View_Request_History", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deleteAllMessageForAccount(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "NAP.DeleteAllMessageForAccount", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deletePersonContactInfo(IContext context, nap.proxies.Contact_Info _contact_Info)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Contact_Info", _contact_Info == null ? null : _contact_Info.getMendixObject());
			Core.execute(context, "NAP.DeletePersonContactInfo", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deletePersonFromBusinessGroup(IContext context, java.util.List<nap.proxies.Person> _personList, nap.proxies.Organisation _organisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_personList = null;
			if (_personList != null)
			{
				listparam_personList = new java.util.ArrayList<IMendixObject>();
				for (nap.proxies.Person obj : _personList)
					listparam_personList.add(obj.getMendixObject());
			}
			params.put("PersonList", listparam_personList);
			params.put("Organisation", _organisation == null ? null : _organisation.getMendixObject());
			Core.execute(context, "NAP.DeletePersonFromBusinessGroup", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void disassociatePersonFromAccount(IContext context, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			Core.execute(context, "NAP.DisassociatePersonFromAccount", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<nap.proxies.Location> dS_GetLocationsByPerson(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "NAP.DS_GetLocationsByPerson", params);
			java.util.List<nap.proxies.Location> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<nap.proxies.Location>();
				for (IMendixObject obj : objs)
					result.add(nap.proxies.Location.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<nap.proxies.Room> dS_GetRoomsByRequestLocation(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "NAP.DS_GetRoomsByRequestLocation", params);
			java.util.List<nap.proxies.Room> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<nap.proxies.Room>();
				for (IMendixObject obj : objs)
					result.add(nap.proxies.Room.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void editPerson(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.EditPerson", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void editPersonList(IContext context, java.util.List<nap.proxies.Person> _personList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_personList = null;
			if (_personList != null)
			{
				listparam_personList = new java.util.ArrayList<IMendixObject>();
				for (nap.proxies.Person obj : _personList)
					listparam_personList.add(obj.getMendixObject());
			}
			params.put("PersonList", listparam_personList);
			Core.execute(context, "NAP.EditPersonList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean fillIsRead(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.FillIsRead", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean generate_Full_Name(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.Generate_Full_Name", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<nap.proxies.Contact_Info> getAllPersonContactInfoForAnyChannel(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "NAP.GetAllPersonContactInfoForAnyChannel", params);
			java.util.List<nap.proxies.Contact_Info> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<nap.proxies.Contact_Info>();
				for (IMendixObject obj : objs)
					result.add(nap.proxies.Contact_Info.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getFormattedReceivedDateForLanguage(IContext context, java.util.Date _dateTime, boolean _timeOnly, boolean _dayAndDate, boolean _dateOnly)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DateTime", _dateTime);
			params.put("TimeOnly", _timeOnly);
			params.put("DayAndDate", _dayAndDate);
			params.put("DateOnly", _dateOnly);
			return (java.lang.String)Core.execute(context, "NAP.GetFormattedReceivedDateForLanguage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getMessageListContent(IContext context, emailplus.proxies.Message _messageInput)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MessageInput", _messageInput == null ? null : _messageInput.getMendixObject());
			return (java.lang.String)Core.execute(context, "NAP.GetMessageListContent", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<nap.proxies.Person> getPersonsByCI(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "NAP.getPersonsByCI", params);
			java.util.List<nap.proxies.Person> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<nap.proxies.Person>();
				for (IMendixObject obj : objs)
					result.add(nap.proxies.Person.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean indexContactInfo_BeforeCommit(IContext context, nap.proxies.Contact_Info _contact_Info)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Contact_Info", _contact_Info == null ? null : _contact_Info.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.IndexContactInfo_BeforeCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean indexLocation_BeforeCommit(IContext context, nap.proxies.Location _location)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Location", _location == null ? null : _location.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.IndexLocation_BeforeCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean indexOrganisation_BeforeCommit(IContext context, nap.proxies.Organisation _organisation, nap.proxies.Organisation _dBOrganisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Organisation", _organisation == null ? null : _organisation.getMendixObject());
			params.put("DBOrganisation", _dBOrganisation == null ? null : _dBOrganisation.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.IndexOrganisation_BeforeCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void initSubscriptions_New(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.InitSubscriptions_New", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void internalBusinessGroup_View_Business_Roles(IContext context, nap.proxies.BusinessGroup _businessGroup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("BusinessGroup", _businessGroup == null ? null : _businessGroup.getMendixObject());
			Core.execute(context, "NAP.InternalBusinessGroup_View_Business_Roles", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void internalBusinessGroup_View_Contracts(IContext context, nap.proxies.BusinessGroup _businessGroup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("BusinessGroup", _businessGroup == null ? null : _businessGroup.getMendixObject());
			Core.execute(context, "NAP.InternalBusinessGroup_View_Contracts", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void internalBusinessGroup_View_Cost_Centres(IContext context, nap.proxies.BusinessGroup _businessGroup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("BusinessGroup", _businessGroup == null ? null : _businessGroup.getMendixObject());
			Core.execute(context, "NAP.InternalBusinessGroup_View_Cost_Centres", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean isPushedMessage(IContext context, nap.proxies.NotificationSubscription _notificationSubscription)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("NotificationSubscription", _notificationSubscription == null ? null : _notificationSubscription.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.IsPushedMessage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_BusinessGroup_SelectCancel(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "NAP.IVK_BusinessGroup_SelectCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_BusinessGroup_SingleSelectCancel(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "NAP.IVK_BusinessGroup_SingleSelectCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_BusinessGroupCancel(IContext context, nap.proxies.BusinessGroup _businessGroup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("BusinessGroup", _businessGroup == null ? null : _businessGroup.getMendixObject());
			Core.execute(context, "NAP.IVK_BusinessGroupCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_BusinessGroupSave(IContext context, nap.proxies.BusinessGroup _businessGroup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("BusinessGroup", _businessGroup == null ? null : _businessGroup.getMendixObject());
			Core.execute(context, "NAP.IVK_BusinessGroupSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_BusinessGroupSaveAndClose(IContext context, nap.proxies.BusinessGroup _businessGroup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("BusinessGroup", _businessGroup == null ? null : _businessGroup.getMendixObject());
			Core.execute(context, "NAP.IVK_BusinessGroupSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_BusinessRole_SelectCancel(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "NAP.IVK_BusinessRole_SelectCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_BusinessRoleCancel(IContext context, nap.proxies.BusinessRole _businessRole)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("BusinessRole", _businessRole == null ? null : _businessRole.getMendixObject());
			Core.execute(context, "NAP.IVK_BusinessRoleCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_BusinessRoleSave(IContext context, nap.proxies.BusinessRole _businessRole)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("BusinessRole", _businessRole == null ? null : _businessRole.getMendixObject());
			Core.execute(context, "NAP.IVK_BusinessRoleSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_BusinessRoleSaveAndClose(IContext context, nap.proxies.BusinessRole _businessRole)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("BusinessRole", _businessRole == null ? null : _businessRole.getMendixObject());
			Core.execute(context, "NAP.IVK_BusinessRoleSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_Open_Business_Roles(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "NAP.IVK_Button_Open_Business_Roles", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_Open_Customers(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "NAP.IVK_Button_Open_Customers", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_Open_Hourly_Rates(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "NAP.IVK_Button_Open_Hourly_Rates", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_Open_InternalBusinessGroups(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "NAP.IVK_Button_Open_InternalBusinessGroups", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_Open_Locations(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "NAP.IVK_Button_Open_Locations", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_Open_Material(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "NAP.IVK_Button_Open_Material", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_Open_NotificationSubscription(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "NAP.IVK_Button_Open_NotificationSubscription", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_Open_Persons(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "NAP.IVK_Button_Open_Persons", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_Open_PortalAccounts(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "NAP.IVK_Button_Open_PortalAccounts", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_Open_ProcessAccounts(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "NAP.IVK_Button_Open_ProcessAccounts", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_Open_ThirdPartyBusinessGroups(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "NAP.IVK_Button_Open_ThirdPartyBusinessGroups", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_Open_Timesheet_Categories(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "NAP.IVK_Button_Open_Timesheet_Categories", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Contact_Info_Select_SharedCancel(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "NAP.IVK_Contact_Info_Select_SharedCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Contact_Info_SelectCancel(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "NAP.IVK_Contact_Info_SelectCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Contact_InfoCancel(IContext context, nap.proxies.Contact_Info _contact_Info)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Contact_Info", _contact_Info == null ? null : _contact_Info.getMendixObject());
			Core.execute(context, "NAP.IVK_Contact_InfoCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Contact_InfoSave(IContext context, nap.proxies.Contact_Info _contact_Info)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Contact_Info", _contact_Info == null ? null : _contact_Info.getMendixObject());
			Core.execute(context, "NAP.IVK_Contact_InfoSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Contact_InfoSaveAndClose(IContext context, nap.proxies.Contact_Info _contact_Info)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Contact_Info", _contact_Info == null ? null : _contact_Info.getMendixObject());
			Core.execute(context, "NAP.IVK_Contact_InfoSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CreateNewPersonCaller_FromRequest(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "NAP.IVK_CreateNewPersonCaller_FromRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Customer_FromRequest_NewEditCancel(IContext context, nap.proxies.Customer _customer)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Customer", _customer == null ? null : _customer.getMendixObject());
			Core.execute(context, "NAP.IVK_Customer_FromRequest_NewEditCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Customer_FromRequest_NewEditSave(IContext context, nap.proxies.Customer _customer)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Customer", _customer == null ? null : _customer.getMendixObject());
			Core.execute(context, "NAP.IVK_Customer_FromRequest_NewEditSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Customer_FromRequest_NewEditSaveAndClose(IContext context, nap.proxies.Customer _customer)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Customer", _customer == null ? null : _customer.getMendixObject());
			Core.execute(context, "NAP.IVK_Customer_FromRequest_NewEditSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Customer_View_Business_RolesClose(IContext context, nap.proxies.Customer _customer)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Customer", _customer == null ? null : _customer.getMendixObject());
			Core.execute(context, "NAP.IVK_Customer_View_Business_RolesClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Customer_View_ContractsClose(IContext context, nap.proxies.Customer _customer)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Customer", _customer == null ? null : _customer.getMendixObject());
			Core.execute(context, "NAP.IVK_Customer_View_ContractsClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Customer_View_Request_HistoryClose(IContext context, nap.proxies.Customer _customer)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Customer", _customer == null ? null : _customer.getMendixObject());
			Core.execute(context, "NAP.IVK_Customer_View_Request_HistoryClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CustomerCancel(IContext context, nap.proxies.Customer _customer)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Customer", _customer == null ? null : _customer.getMendixObject());
			Core.execute(context, "NAP.IVK_CustomerCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CustomerSave(IContext context, nap.proxies.Customer _customer)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Customer", _customer == null ? null : _customer.getMendixObject());
			Core.execute(context, "NAP.IVK_CustomerSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CustomerSaveAndClose(IContext context, nap.proxies.Customer _customer)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Customer", _customer == null ? null : _customer.getMendixObject());
			Core.execute(context, "NAP.IVK_CustomerSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DeletePersonMessage(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			Core.execute(context, "NAP.IVK_DeletePersonMessage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DeletePersonMessages(IContext context, java.util.List<emailplus.proxies.Message> _messageList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_messageList = null;
			if (_messageList != null)
			{
				listparam_messageList = new java.util.ArrayList<IMendixObject>();
				for (emailplus.proxies.Message obj : _messageList)
					listparam_messageList.add(obj.getMendixObject());
			}
			params.put("MessageList", listparam_messageList);
			Core.execute(context, "NAP.IVK_DeletePersonMessages", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_InitiateTicketSwap(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "NAP.IVK_InitiateTicketSwap", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_InternalBusinessGroup_View_ContractsClose(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "NAP.IVK_InternalBusinessGroup_View_ContractsClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_InternalBusinessGroup_View_Cost_CentresClose(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "NAP.IVK_InternalBusinessGroup_View_Cost_CentresClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_InternalBusinessGroups_View_Business_RolesClose(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "NAP.IVK_InternalBusinessGroups_View_Business_RolesClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Location_FromRequest_NewEditCancel(IContext context, nap.proxies.Location _location)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Location", _location == null ? null : _location.getMendixObject());
			Core.execute(context, "NAP.IVK_Location_FromRequest_NewEditCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Location_FromRequest_NewEditSave(IContext context, nap.proxies.Location _location)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Location", _location == null ? null : _location.getMendixObject());
			Core.execute(context, "NAP.IVK_Location_FromRequest_NewEditSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Location_FromRequest_NewEditSaveAndClose(IContext context, nap.proxies.Location _location)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Location", _location == null ? null : _location.getMendixObject());
			Core.execute(context, "NAP.IVK_Location_FromRequest_NewEditSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Location_MultiSelectCancel(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "NAP.IVK_Location_MultiSelectCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Location_SingleSelectCancel(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "NAP.IVK_Location_SingleSelectCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Location_ViewClose(IContext context, nap.proxies.Location _location)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Location", _location == null ? null : _location.getMendixObject());
			Core.execute(context, "NAP.IVK_Location_ViewClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Location_ViewClose_Request(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "NAP.IVK_Location_ViewClose_Request", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_LocationCancel(IContext context, nap.proxies.Location _location)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Location", _location == null ? null : _location.getMendixObject());
			Core.execute(context, "NAP.IVK_LocationCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_LocationSave(IContext context, nap.proxies.Location _location)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Location", _location == null ? null : _location.getMendixObject());
			Core.execute(context, "NAP.IVK_LocationSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_LocationSaveAndClose(IContext context, nap.proxies.Location _location)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Location", _location == null ? null : _location.getMendixObject());
			Core.execute(context, "NAP.IVK_LocationSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NewContact_FromRequest_NewCancel(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.IVK_NewContact_FromRequest_NewCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NewContact_FromRequest_NewSave(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.IVK_NewContact_FromRequest_NewSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NewContact_FromRequest_NewSaveAndClose(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.IVK_NewContact_FromRequest_NewSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NewContactInfo_FromRequest(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.IVK_NewContactInfo_FromRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NewLocation_FromRequest(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.IVK_NewLocation_FromRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NewOrganisation_FromRequest(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.IVK_NewOrganisation_FromRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NotificationSubscriptionCancel(IContext context, nap.proxies.NotificationSubscription _notificationSubscription)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("NotificationSubscription", _notificationSubscription == null ? null : _notificationSubscription.getMendixObject());
			Core.execute(context, "NAP.IVK_NotificationSubscriptionCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NotificationSubscriptionSave(IContext context, nap.proxies.NotificationSubscription _notificationSubscription)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("NotificationSubscription", _notificationSubscription == null ? null : _notificationSubscription.getMendixObject());
			Core.execute(context, "NAP.IVK_NotificationSubscriptionSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NotificationSubscriptionSaveAndClose(IContext context, nap.proxies.NotificationSubscription _notificationSubscription)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("NotificationSubscription", _notificationSubscription == null ? null : _notificationSubscription.getMendixObject());
			Core.execute(context, "NAP.IVK_NotificationSubscriptionSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenHistoryRequest(IContext context, process.proxies.Request _inputRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputRequest", _inputRequest == null ? null : _inputRequest.getMendixObject());
			Core.execute(context, "NAP.IVK_OpenHistoryRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenRequest(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			Core.execute(context, "NAP.IVK_OpenRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Organisation_MultiSelectCancel(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "NAP.IVK_Organisation_MultiSelectCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Organisation_SingleSelectCancel(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "NAP.IVK_Organisation_SingleSelectCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Organisation_ViewClose(IContext context, nap.proxies.Organisation _organisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Organisation", _organisation == null ? null : _organisation.getMendixObject());
			Core.execute(context, "NAP.IVK_Organisation_ViewClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Person_AddBusinessRole(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.IVK_Person_AddBusinessRole", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Person_AddContactInfo(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.IVK_Person_AddContactInfo", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Person_BusinessGroup_SelectCancel(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "NAP.IVK_Person_BusinessGroup_SelectCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Person_Customer_SelectCancel(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "NAP.IVK_Person_Customer_SelectCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Person_SelectCancel(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "NAP.IVK_Person_SelectCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Person_SelectRequestCaller_LuceneCancel(IContext context, advancedsearch.proxies.SearchParams _searchParams)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SearchParams", _searchParams == null ? null : _searchParams.getMendixObject());
			Core.execute(context, "NAP.IVK_Person_SelectRequestCaller_LuceneCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Person_SingleSelect_AccountCancel(IContext context, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			Core.execute(context, "NAP.IVK_Person_SingleSelect_AccountCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Person_SingleSelectCancel(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "NAP.IVK_Person_SingleSelectCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Person_View_Business_RolesClose(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.IVK_Person_View_Business_RolesClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Person_View_CIsClose(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.IVK_Person_View_CIsClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Person_View_Contact_InformationClose(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.IVK_Person_View_Contact_InformationClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Person_View_Portal_SettingsClose(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.IVK_Person_View_Portal_SettingsClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Person_View_Request_HistoryClose(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.IVK_Person_View_Request_HistoryClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Person_View_User_InfoCancel(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.IVK_Person_View_User_InfoCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean iVK_Person_View_User_InfoSave(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.IVK_Person_View_User_InfoSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Person_View_User_InfoSaveAndClose(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.IVK_Person_View_User_InfoSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Person_ViewClose(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.IVK_Person_ViewClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean iVK_PersonAccount_Save(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.IVK_PersonAccount_Save", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_PersonAccount_SaveAndClose(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.IVK_PersonAccount_SaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_PersonBusinessRole_Save(IContext context, nap.proxies.PersonBusinessRole _personBusinessRole)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PersonBusinessRole", _personBusinessRole == null ? null : _personBusinessRole.getMendixObject());
			Core.execute(context, "NAP.IVK_PersonBusinessRole_Save", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_PersonBusinessRole_ViewClose(IContext context, nap.proxies.PersonBusinessRole _personBusinessRole)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PersonBusinessRole", _personBusinessRole == null ? null : _personBusinessRole.getMendixObject());
			Core.execute(context, "NAP.IVK_PersonBusinessRole_ViewClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_PersonCancel(IContext context, nap.proxies.Person _inputPerson)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputPerson", _inputPerson == null ? null : _inputPerson.getMendixObject());
			Core.execute(context, "NAP.IVK_PersonCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_PersonImageCancel(IContext context, nap.proxies.PersonImage _personImage)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PersonImage", _personImage == null ? null : _personImage.getMendixObject());
			Core.execute(context, "NAP.IVK_PersonImageCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_PersonImageSave(IContext context, nap.proxies.PersonImage _personImage)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PersonImage", _personImage == null ? null : _personImage.getMendixObject());
			Core.execute(context, "NAP.IVK_PersonImageSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_PersonImageSaveAndClose(IContext context, nap.proxies.PersonImage _personImage)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PersonImage", _personImage == null ? null : _personImage.getMendixObject());
			Core.execute(context, "NAP.IVK_PersonImageSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_PersonNotificationSubscription_OverviewClose(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.IVK_PersonNotificationSubscription_OverviewClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_PersonSave(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.IVK_PersonSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_PersonSaveAndClose(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.IVK_PersonSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RoomCancel(IContext context, nap.proxies.Room _room)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Room", _room == null ? null : _room.getMendixObject());
			Core.execute(context, "NAP.IVK_RoomCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RoomSave(IContext context, nap.proxies.Room _room)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Room", _room == null ? null : _room.getMendixObject());
			Core.execute(context, "NAP.IVK_RoomSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RoomSaveAndClose(IContext context, nap.proxies.Room _room)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Room", _room == null ? null : _room.getMendixObject());
			Core.execute(context, "NAP.IVK_RoomSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SetDefaultPerType(IContext context, nap.proxies.Contact_Info _inputContact_Info, nap.proxies.Person _inputPerson)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputContact_Info", _inputContact_Info == null ? null : _inputContact_Info.getMendixObject());
			params.put("InputPerson", _inputPerson == null ? null : _inputPerson.getMendixObject());
			Core.execute(context, "NAP.IVK_SetDefaultPerType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SetMessageIsRead(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			Core.execute(context, "NAP.IVK_SetMessageIsRead", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SetMessageIsUnread(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			Core.execute(context, "NAP.IVK_SetMessageIsUnread", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SetMessagesIsRead(IContext context, java.util.List<emailplus.proxies.Message> _messageList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_messageList = null;
			if (_messageList != null)
			{
				listparam_messageList = new java.util.ArrayList<IMendixObject>();
				for (emailplus.proxies.Message obj : _messageList)
					listparam_messageList.add(obj.getMendixObject());
			}
			params.put("MessageList", listparam_messageList);
			Core.execute(context, "NAP.IVK_SetMessagesIsRead", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SetMessagesIsUnread(IContext context, java.util.List<emailplus.proxies.Message> _messageList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_messageList = null;
			if (_messageList != null)
			{
				listparam_messageList = new java.util.ArrayList<IMendixObject>();
				for (emailplus.proxies.Message obj : _messageList)
					listparam_messageList.add(obj.getMendixObject());
			}
			params.put("MessageList", listparam_messageList);
			Core.execute(context, "NAP.IVK_SetMessagesIsUnread", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SwapClose(IContext context, customlvnl.proxies.Swap _swap)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Swap", _swap == null ? null : _swap.getMendixObject());
			Core.execute(context, "NAP.IVK_SwapClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Switch(IContext context, customlvnl.proxies.Swap _swap)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Swap", _swap == null ? null : _swap.getMendixObject());
			Core.execute(context, "NAP.IVK_Switch", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mCa_UpdateFullName(IContext context, nap.proxies.Person _inputPerson)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputPerson", _inputPerson == null ? null : _inputPerson.getMendixObject());
			Core.execute(context, "NAP.MCa_UpdateFullName", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void newBusinessGroupOnPerson(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.NewBusinessGroupOnPerson", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void newCustomerOnPerson(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.NewCustomerOnPerson", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void newLocationOnPerson(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.NewLocationOnPerson", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void newPersonOnBusinessGroup(IContext context, nap.proxies.Organisation _organisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Organisation", _organisation == null ? null : _organisation.getMendixObject());
			Core.execute(context, "NAP.NewPersonOnBusinessGroup", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String numberOfPersonBusinessRoles(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			return (java.lang.String)Core.execute(context, "NAP.NumberOfPersonBusinessRoles", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String numberOfPersonContactInfo(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			return (java.lang.String)Core.execute(context, "NAP.NumberOfPersonContactInfo", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 919607/218254: ExpertDesk Confiuration>>Person Information >> CI's totaal ontbreekt 
	 */
	public static java.lang.String numberOfPersonOwnedCIs(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			return (java.lang.String)Core.execute(context, "NAP.NumberOfPersonOwnedCIs", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void onChange_PersonNotificationSubscription_Save(IContext context, nap.proxies.PersonNotificationSubscription _personNotificationSubscription)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PersonNotificationSubscription", _personNotificationSubscription == null ? null : _personNotificationSubscription.getMendixObject());
			Core.execute(context, "NAP.OnChange_PersonNotificationSubscription_Save", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void open_AccountSettingsStartpanel(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "NAP.Open_AccountSettingsStartpanel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openAddPersonToOrganisation(IContext context, nap.proxies.Organisation _organisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Organisation", _organisation == null ? null : _organisation.getMendixObject());
			Core.execute(context, "NAP.OpenAddPersonToOrganisation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openDialog_Person_Messages(IContext context, genericuserfunctions.proxies.UserSessionObject _userSessionObject)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("UserSessionObject", _userSessionObject == null ? null : _userSessionObject.getMendixObject());
			Core.execute(context, "NAP.OpenDialog_Person_Messages", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openNewContactInfo_FromOrganisation(IContext context, nap.proxies.Organisation _organisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Organisation", _organisation == null ? null : _organisation.getMendixObject());
			Core.execute(context, "NAP.OpenNewContactInfo_FromOrganisation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 901013/214681: ST Test: Edit Profile Page>>Contact Info tab toont geen data
	 */
	public static void openNewContactInfo_FromPerson(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.OpenNewContactInfo_FromPerson", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openPersonNotificationSettings(IContext context, nap.proxies.Person _inputPerson)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("inputPerson", _inputPerson == null ? null : _inputPerson.getMendixObject());
			Core.execute(context, "NAP.OpenPersonNotificationSettings", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openPersonSelect(IContext context, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			Core.execute(context, "NAP.OpenPersonSelect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void person_View_Business_Roles(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.Person_View_Business_Roles", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void person_View_CI(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.Person_View_CI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void person_view_ContactInfo(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.Person_view_ContactInfo", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void person_View_Portal_Settings(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.Person_View_Portal_Settings", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void person_View_Request_History(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.Person_View_Request_History", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void person_View_User_Info(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.Person_View_User_Info", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean personHasCIs(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.PersonHasCIs", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String randomString(IContext context, java.lang.Long _length)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("length", _length);
			return (java.lang.String)Core.execute(context, "NAP.RandomString", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void removeNotificationSubscriptionForPerson(IContext context, nap.proxies.Person _inputPerson)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputPerson", _inputPerson == null ? null : _inputPerson.getMendixObject());
			Core.execute(context, "NAP.RemoveNotificationSubscriptionForPerson", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void removeOrganisation(IContext context, nap.proxies.Person _person, java.util.List<nap.proxies.Organisation> _organisationList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_organisationList = null;
			if (_organisationList != null)
			{
				listparam_organisationList = new java.util.ArrayList<IMendixObject>();
				for (nap.proxies.Organisation obj : _organisationList)
					listparam_organisationList.add(obj.getMendixObject());
			}
			params.put("OrganisationList", listparam_organisationList);
			Core.execute(context, "NAP.RemoveOrganisation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void resetSubscriptions(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.ResetSubscriptions", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void saveNewPersonRefreshOrganisation(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.SaveNewPersonRefreshOrganisation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void selectNewRequestCaller(IContext context, nap.proxies.Person _person, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "NAP.SelectNewRequestCaller", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void selectNewRequestCaller_lucene(IContext context, nap.proxies.Person _person, advancedsearch.proxies.SearchParams _searchParams)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			params.put("SearchParams", _searchParams == null ? null : _searchParams.getMendixObject());
			Core.execute(context, "NAP.SelectNewRequestCaller_lucene", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void selectNewTemplateRequestCaller_lucene(IContext context, nap.proxies.Person _person, advancedsearch.proxies.SearchParams _searchParams)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			params.put("SearchParams", _searchParams == null ? null : _searchParams.getMendixObject());
			Core.execute(context, "NAP.SelectNewTemplateRequestCaller_lucene", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void selectPersonForAccount(IContext context, nap.proxies.Person _person, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			params.put("Account", _account == null ? null : _account.getMendixObject());
			Core.execute(context, "NAP.SelectPersonForAccount", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void selectRequestCaller(IContext context, nap.proxies.Person _person, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "NAP.SelectRequestCaller", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void selectRequestCaller_lucene(IContext context, nap.proxies.Person _person, advancedsearch.proxies.SearchParams _searchParams)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			params.put("SearchParams", _searchParams == null ? null : _searchParams.getMendixObject());
			Core.execute(context, "NAP.SelectRequestCaller_lucene", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void set_DefaultToNo(IContext context, nap.proxies.Contact_Info _contact_Info)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Contact_Info", _contact_Info == null ? null : _contact_Info.getMendixObject());
			Core.execute(context, "NAP.Set_DefaultToNo", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean setBusinessRoleDataAccess(IContext context, nap.proxies.BusinessRole _businessRole)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("BusinessRole", _businessRole == null ? null : _businessRole.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.SetBusinessRoleDataAccess", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setDataAccessOfOrganisationOnNonSharedContactInfo(IContext context, nap.proxies.Organisation _organisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Organisation", _organisation == null ? null : _organisation.getMendixObject());
			Core.execute(context, "NAP.SetDataAccessOfOrganisationOnNonSharedContactInfo", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setDataAccessOfPersonOnNonSharedContactInfo(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.SetDataAccessOfPersonOnNonSharedContactInfo", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setDefaultPerContactType(IContext context, java.util.List<nap.proxies.Contact_Info> _contact_InfoList, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_contact_InfoList = null;
			if (_contact_InfoList != null)
			{
				listparam_contact_InfoList = new java.util.ArrayList<IMendixObject>();
				for (nap.proxies.Contact_Info obj : _contact_InfoList)
					listparam_contact_InfoList.add(obj.getMendixObject());
			}
			params.put("Contact_InfoList", listparam_contact_InfoList);
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.SetDefaultPerContactType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean setLocationDataAccess(IContext context, nap.proxies.Location _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.SetLocationDataAccess", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean setPersonLowerCaseNames(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.SetPersonLowerCaseNames", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sUB_SetPortalUserFlags(IContext context, nap.proxies.Person _iteratorPerson)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IteratorPerson", _iteratorPerson == null ? null : _iteratorPerson.getMendixObject());
			Core.execute(context, "NAP.SUB_SetPortalUserFlags", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean undoCreateOrDeleteUserBeforeRollback(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.UndoCreateOrDeleteUserBeforeRollback", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void upload_PersonImage(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "NAP.Upload_PersonImage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateContact_Info(IContext context, nap.proxies.Contact_Info _contact_Info)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Contact_Info", _contact_Info == null ? null : _contact_Info.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.ValidateContact_Info", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateLocation(IContext context, nap.proxies.Location _location)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Location", _location == null ? null : _location.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.ValidateLocation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateNotificationSubscription(IContext context, nap.proxies.NotificationSubscription _notificationSubscription)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("NotificationSubscription", _notificationSubscription == null ? null : _notificationSubscription.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.ValidateNotificationSubscription", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateOrganisation(IContext context, nap.proxies.Organisation _organisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Organisation", _organisation == null ? null : _organisation.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.ValidateOrganisation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validatePerson(IContext context, nap.proxies.Person _person, nap.proxies.Person _person_DB)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			params.put("Person_DB", _person_DB == null ? null : _person_DB.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.ValidatePerson", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validatePersonBusinessRoleFields(IContext context, nap.proxies.PersonBusinessRole _userBusinessRole)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("UserBusinessRole", _userBusinessRole == null ? null : _userBusinessRole.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.ValidatePersonBusinessRoleFields", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validatePersonNotificationSubscription(IContext context, nap.proxies.PersonNotificationSubscription _personNotificationSubscription)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PersonNotificationSubscription", _personNotificationSubscription == null ? null : _personNotificationSubscription.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.ValidatePersonNotificationSubscription", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateStateLocationInactive(IContext context, nap.proxies.Location _location)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Location", _location == null ? null : _location.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.ValidateStateLocationInactive", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateStateOrganisationInactive(IContext context, nap.proxies.Organisation _customer)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Customer", _customer == null ? null : _customer.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.ValidateStateOrganisationInactive", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateStatePersonInactive(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "NAP.ValidateStatePersonInactive", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}