// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package advancedsearch.actions;

import nl.mansystems.advancedsearch.common.IndexException;
import advancedsearch.proxies.SearchParams;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixIdentifier;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.webui.CustomJavaAction;

public class SearchIndexInterfaceMessage extends CustomJavaAction<IMendixObject>
{
	private IMendixObject __params;
	private advancedsearch.proxies.SearchParams params;

	public SearchIndexInterfaceMessage(IContext context, IMendixObject params)
	{
		super(context);
		this.__params = params;
	}

	@Override
	public IMendixObject executeAction() throws Exception
	{
		this.params = __params == null ? null : advancedsearch.proxies.SearchParams.initialize(getContext(), __params);

		// BEGIN USER CODE
		IContext context = getContext();
		java.util.List<IMendixIdentifier> identifiers = new java.util.ArrayList<IMendixIdentifier>();
		
		nl.mansystems.advancedsearch.SearchIndexInterfaceMessage asir = 
				new nl.mansystems.advancedsearch.SearchIndexInterfaceMessage(this.getContext(), params);
		
		try {
			identifiers = asir.executeAction();
		} catch (IndexException e) {
			e.logWarnMessage(this.getContext()); 
		} catch(Exception e) {
			Core.getLogger("AdvancedSearch").error("Error searching index " + e.getClass().getCanonicalName() + " " + e.getMessage());
		}

		if (identifiers != null)
			params.getMendixObject().setValue(context, SearchParams.MemberNames.SearchParams_Message.toString(), identifiers);
		Core.commitWithoutEvents(context, params.getMendixObject());
		
		return params.getMendixObject();
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "SearchIndexInterfaceMessage";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
