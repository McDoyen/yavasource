// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package advancedsearch.actions;

import queryrequests.proxies.SearchResults;
import queryrequests.proxies.SearchResults.MemberNames;
import nl.mansystems.advancedsearch.common.IndexConfiguration;
import nl.mansystems.advancedsearch.common.IndexException;
import advancedsearch.proxies.SearchConfiguration;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixIdentifier;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.webui.CustomJavaAction;

public class SearchIndexRequest extends CustomJavaAction<IMendixObject>
{
	private IMendixObject __SearchParamsParameter1;
	private advancedsearch.proxies.SearchParams SearchParamsParameter1;
	private advancedsearch.proxies.RequestIndexSearchTypes IndexSearchType;

	public SearchIndexRequest(IContext context, IMendixObject SearchParamsParameter1, java.lang.String IndexSearchType)
	{
		super(context);
		this.__SearchParamsParameter1 = SearchParamsParameter1;
		this.IndexSearchType = IndexSearchType == null ? null : advancedsearch.proxies.RequestIndexSearchTypes.valueOf(IndexSearchType);
	}

	@Override
	public IMendixObject executeAction() throws Exception
	{
		this.SearchParamsParameter1 = __SearchParamsParameter1 == null ? null : advancedsearch.proxies.SearchParams.initialize(getContext(), __SearchParamsParameter1);

		// BEGIN USER CODE
		IContext context = getContext();
		SearchConfiguration searchConfiguration = IndexConfiguration.getConfiguration(context);
		SearchResults searchResults = new SearchResults(this.getContext());
		java.util.List<IMendixIdentifier> identifiers = new java.util.ArrayList<IMendixIdentifier>();

		nl.mansystems.advancedsearch.SearchIndexRequest asir = 
				new nl.mansystems.advancedsearch.SearchIndexRequest();	
		
		if (IndexSearchType != null) {

			try {
				switch (IndexSearchType) {
				case	ByPerson:		identifiers = asir.searchRequestByPerson(SearchParamsParameter1, searchConfiguration, context);
				case	ByIdentifier:	identifiers = asir.searchRequestByIdentifier(SearchParamsParameter1, searchConfiguration, context);
				case	ByAll:			identifiers = asir.searchRequestByAll(SearchParamsParameter1, searchConfiguration, context);
				default: break;
				}
			} catch (IndexException e) {
				e.logWarnMessage(context);
			} catch(Exception e) {
				Core.getLogger("AdvancedSearch").error("Error searching index " + e.getClass().getCanonicalName() + " " + e.getMessage());
			}
		}

		if (identifiers != null)
			searchResults.getMendixObject().setValue(context, MemberNames.SearchResults_OverviewRequest.toString(), identifiers);
		Core.commitWithoutEvents(context, searchResults.getMendixObject());
		
		return searchResults.getMendixObject();
		

		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "SearchIndexRequest";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
