// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package advancedsearch.proxies;

public class IndexObject
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject indexObjectMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "AdvancedSearch.IndexObject";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		IndexIdentifier("IndexIdentifier"),
		IndexObject_MxObjectMember("AdvancedSearch.IndexObject_MxObjectMember"),
		IndexObject_MxObjectType("AdvancedSearch.IndexObject_MxObjectType");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public IndexObject(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "AdvancedSearch.IndexObject"));
	}

	protected IndexObject(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject indexObjectMendixObject)
	{
		if (indexObjectMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("AdvancedSearch.IndexObject", indexObjectMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a AdvancedSearch.IndexObject");

		this.indexObjectMendixObject = indexObjectMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'IndexObject.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static advancedsearch.proxies.IndexObject initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return advancedsearch.proxies.IndexObject.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static advancedsearch.proxies.IndexObject initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new advancedsearch.proxies.IndexObject(context, mendixObject);
	}

	public static advancedsearch.proxies.IndexObject load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return advancedsearch.proxies.IndexObject.initialize(context, mendixObject);
	}

	public static java.util.List<advancedsearch.proxies.IndexObject> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<advancedsearch.proxies.IndexObject> result = new java.util.ArrayList<advancedsearch.proxies.IndexObject>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//AdvancedSearch.IndexObject" + xpathConstraint))
			result.add(advancedsearch.proxies.IndexObject.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of IndexIdentifier
	 */
	public final java.lang.String getIndexIdentifier()
	{
		return getIndexIdentifier(getContext());
	}

	/**
	 * @param context
	 * @return value of IndexIdentifier
	 */
	public final java.lang.String getIndexIdentifier(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.IndexIdentifier.toString());
	}

	/**
	 * Set value of IndexIdentifier
	 * @param indexidentifier
	 */
	public final void setIndexIdentifier(java.lang.String indexidentifier)
	{
		setIndexIdentifier(getContext(), indexidentifier);
	}

	/**
	 * Set value of IndexIdentifier
	 * @param context
	 * @param indexidentifier
	 */
	public final void setIndexIdentifier(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String indexidentifier)
	{
		getMendixObject().setValue(context, MemberNames.IndexIdentifier.toString(), indexidentifier);
	}

	/**
	 * @return value of IndexObject_MxObjectMember
	 */
	public final java.util.List<mxmodelreflection.proxies.MxObjectMember> getIndexObject_MxObjectMember() throws com.mendix.core.CoreException
	{
		return getIndexObject_MxObjectMember(getContext());
	}

	/**
	 * @param context
	 * @return value of IndexObject_MxObjectMember
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<mxmodelreflection.proxies.MxObjectMember> getIndexObject_MxObjectMember(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<mxmodelreflection.proxies.MxObjectMember> result = new java.util.ArrayList<mxmodelreflection.proxies.MxObjectMember>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.IndexObject_MxObjectMember.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(mxmodelreflection.proxies.MxObjectMember.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of IndexObject_MxObjectMember
	 * @param indexobject_mxobjectmember
	 */
	public final void setIndexObject_MxObjectMember(java.util.List<mxmodelreflection.proxies.MxObjectMember> indexobject_mxobjectmember)
	{
		setIndexObject_MxObjectMember(getContext(), indexobject_mxobjectmember);
	}

	/**
	 * Set value of IndexObject_MxObjectMember
	 * @param context
	 * @param indexobject_mxobjectmember
	 */
	public final void setIndexObject_MxObjectMember(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<mxmodelreflection.proxies.MxObjectMember> indexobject_mxobjectmember)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (mxmodelreflection.proxies.MxObjectMember proxyObject : indexobject_mxobjectmember)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.IndexObject_MxObjectMember.toString(), identifiers);
	}

	/**
	 * @return value of IndexObject_MxObjectType
	 */
	public final mxmodelreflection.proxies.MxObjectType getIndexObject_MxObjectType() throws com.mendix.core.CoreException
	{
		return getIndexObject_MxObjectType(getContext());
	}

	/**
	 * @param context
	 * @return value of IndexObject_MxObjectType
	 */
	public final mxmodelreflection.proxies.MxObjectType getIndexObject_MxObjectType(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		mxmodelreflection.proxies.MxObjectType result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.IndexObject_MxObjectType.toString());
		if (identifier != null)
			result = mxmodelreflection.proxies.MxObjectType.load(context, identifier);
		return result;
	}

	/**
	 * Set value of IndexObject_MxObjectType
	 * @param indexobject_mxobjecttype
	 */
	public final void setIndexObject_MxObjectType(mxmodelreflection.proxies.MxObjectType indexobject_mxobjecttype)
	{
		setIndexObject_MxObjectType(getContext(), indexobject_mxobjecttype);
	}

	/**
	 * Set value of IndexObject_MxObjectType
	 * @param context
	 * @param indexobject_mxobjecttype
	 */
	public final void setIndexObject_MxObjectType(com.mendix.systemwideinterfaces.core.IContext context, mxmodelreflection.proxies.MxObjectType indexobject_mxobjecttype)
	{
		if (indexobject_mxobjecttype == null)
			getMendixObject().setValue(context, MemberNames.IndexObject_MxObjectType.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.IndexObject_MxObjectType.toString(), indexobject_mxobjecttype.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return indexObjectMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final advancedsearch.proxies.IndexObject that = (advancedsearch.proxies.IndexObject) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "AdvancedSearch.IndexObject";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
