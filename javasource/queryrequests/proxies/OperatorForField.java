// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package queryrequests.proxies;

public class OperatorForField
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject operatorForFieldMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "QueryRequests.OperatorForField";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		AutoID("AutoID"),
		Operator("Operator"),
		Valid("Valid"),
		OperatorForField_SelectableField("QueryRequests.OperatorForField_SelectableField");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public OperatorForField(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "QueryRequests.OperatorForField"));
	}

	protected OperatorForField(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject operatorForFieldMendixObject)
	{
		if (operatorForFieldMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("QueryRequests.OperatorForField", operatorForFieldMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a QueryRequests.OperatorForField");

		this.operatorForFieldMendixObject = operatorForFieldMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'OperatorForField.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static queryrequests.proxies.OperatorForField initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return queryrequests.proxies.OperatorForField.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static queryrequests.proxies.OperatorForField initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new queryrequests.proxies.OperatorForField(context, mendixObject);
	}

	public static queryrequests.proxies.OperatorForField load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return queryrequests.proxies.OperatorForField.initialize(context, mendixObject);
	}

	public static java.util.List<queryrequests.proxies.OperatorForField> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<queryrequests.proxies.OperatorForField> result = new java.util.ArrayList<queryrequests.proxies.OperatorForField>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//QueryRequests.OperatorForField" + xpathConstraint))
			result.add(queryrequests.proxies.OperatorForField.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of AutoID
	 */
	public final java.lang.Long getAutoID()
	{
		return getAutoID(getContext());
	}

	/**
	 * @param context
	 * @return value of AutoID
	 */
	public final java.lang.Long getAutoID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.AutoID.toString());
	}

	/**
	 * Set value of AutoID
	 * @param autoid
	 */
	public final void setAutoID(java.lang.Long autoid)
	{
		setAutoID(getContext(), autoid);
	}

	/**
	 * Set value of AutoID
	 * @param context
	 * @param autoid
	 */
	public final void setAutoID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long autoid)
	{
		getMendixObject().setValue(context, MemberNames.AutoID.toString(), autoid);
	}

	/**
	 * Set value of Operator
	 * @param operator
	 */
	public final queryrequests.proxies.SearchOperators getOperator()
	{
		return getOperator(getContext());
	}

	/**
	 * @param context
	 * @return value of Operator
	 */
	public final queryrequests.proxies.SearchOperators getOperator(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.Operator.toString());
		if (obj == null)
			return null;

		return queryrequests.proxies.SearchOperators.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of Operator
	 * @param operator
	 */
	public final void setOperator(queryrequests.proxies.SearchOperators operator)
	{
		setOperator(getContext(), operator);
	}

	/**
	 * Set value of Operator
	 * @param context
	 * @param operator
	 */
	public final void setOperator(com.mendix.systemwideinterfaces.core.IContext context, queryrequests.proxies.SearchOperators operator)
	{
		if (operator != null)
			getMendixObject().setValue(context, MemberNames.Operator.toString(), operator.toString());
		else
			getMendixObject().setValue(context, MemberNames.Operator.toString(), null);
	}

	/**
	 * Set value of Valid
	 * @param valid
	 */
	public final queryrequests.proxies.ValidOperator getValid()
	{
		return getValid(getContext());
	}

	/**
	 * @param context
	 * @return value of Valid
	 */
	public final queryrequests.proxies.ValidOperator getValid(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.Valid.toString());
		if (obj == null)
			return null;

		return queryrequests.proxies.ValidOperator.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of Valid
	 * @param valid
	 */
	public final void setValid(queryrequests.proxies.ValidOperator valid)
	{
		setValid(getContext(), valid);
	}

	/**
	 * Set value of Valid
	 * @param context
	 * @param valid
	 */
	public final void setValid(com.mendix.systemwideinterfaces.core.IContext context, queryrequests.proxies.ValidOperator valid)
	{
		if (valid != null)
			getMendixObject().setValue(context, MemberNames.Valid.toString(), valid.toString());
		else
			getMendixObject().setValue(context, MemberNames.Valid.toString(), null);
	}

	/**
	 * @return value of OperatorForField_SelectableField
	 */
	public final queryrequests.proxies.SelectableField getOperatorForField_SelectableField() throws com.mendix.core.CoreException
	{
		return getOperatorForField_SelectableField(getContext());
	}

	/**
	 * @param context
	 * @return value of OperatorForField_SelectableField
	 */
	public final queryrequests.proxies.SelectableField getOperatorForField_SelectableField(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		queryrequests.proxies.SelectableField result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.OperatorForField_SelectableField.toString());
		if (identifier != null)
			result = queryrequests.proxies.SelectableField.load(context, identifier);
		return result;
	}

	/**
	 * Set value of OperatorForField_SelectableField
	 * @param operatorforfield_selectablefield
	 */
	public final void setOperatorForField_SelectableField(queryrequests.proxies.SelectableField operatorforfield_selectablefield)
	{
		setOperatorForField_SelectableField(getContext(), operatorforfield_selectablefield);
	}

	/**
	 * Set value of OperatorForField_SelectableField
	 * @param context
	 * @param operatorforfield_selectablefield
	 */
	public final void setOperatorForField_SelectableField(com.mendix.systemwideinterfaces.core.IContext context, queryrequests.proxies.SelectableField operatorforfield_selectablefield)
	{
		if (operatorforfield_selectablefield == null)
			getMendixObject().setValue(context, MemberNames.OperatorForField_SelectableField.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.OperatorForField_SelectableField.toString(), operatorforfield_selectablefield.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return operatorForFieldMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final queryrequests.proxies.OperatorForField that = (queryrequests.proxies.OperatorForField) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "QueryRequests.OperatorForField";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
