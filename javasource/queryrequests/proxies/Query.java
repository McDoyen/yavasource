// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package queryrequests.proxies;

public class Query
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject queryMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "QueryRequests.Query";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		QueryName("QueryName"),
		QueryXpath("QueryXpath"),
		_SortValue("_SortValue"),
		IsDefaultForNewUser("IsDefaultForNewUser"),
		SharedQuery("SharedQuery"),
		IsCopiedQuery("IsCopiedQuery"),
		Query_DummyContext("QueryRequests.Query_DummyContext");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Query(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "QueryRequests.Query"));
	}

	protected Query(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject queryMendixObject)
	{
		if (queryMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("QueryRequests.Query", queryMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a QueryRequests.Query");

		this.queryMendixObject = queryMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Query.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static queryrequests.proxies.Query initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return queryrequests.proxies.Query.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static queryrequests.proxies.Query initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new queryrequests.proxies.Query(context, mendixObject);
	}

	public static queryrequests.proxies.Query load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return queryrequests.proxies.Query.initialize(context, mendixObject);
	}

	public static java.util.List<queryrequests.proxies.Query> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<queryrequests.proxies.Query> result = new java.util.ArrayList<queryrequests.proxies.Query>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//QueryRequests.Query" + xpathConstraint))
			result.add(queryrequests.proxies.Query.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of QueryName
	 */
	public final java.lang.String getQueryName()
	{
		return getQueryName(getContext());
	}

	/**
	 * @param context
	 * @return value of QueryName
	 */
	public final java.lang.String getQueryName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.QueryName.toString());
	}

	/**
	 * Set value of QueryName
	 * @param queryname
	 */
	public final void setQueryName(java.lang.String queryname)
	{
		setQueryName(getContext(), queryname);
	}

	/**
	 * Set value of QueryName
	 * @param context
	 * @param queryname
	 */
	public final void setQueryName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String queryname)
	{
		getMendixObject().setValue(context, MemberNames.QueryName.toString(), queryname);
	}

	/**
	 * @return value of QueryXpath
	 */
	public final java.lang.String getQueryXpath()
	{
		return getQueryXpath(getContext());
	}

	/**
	 * @param context
	 * @return value of QueryXpath
	 */
	public final java.lang.String getQueryXpath(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.QueryXpath.toString());
	}

	/**
	 * Set value of QueryXpath
	 * @param queryxpath
	 */
	public final void setQueryXpath(java.lang.String queryxpath)
	{
		setQueryXpath(getContext(), queryxpath);
	}

	/**
	 * Set value of QueryXpath
	 * @param context
	 * @param queryxpath
	 */
	public final void setQueryXpath(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String queryxpath)
	{
		getMendixObject().setValue(context, MemberNames.QueryXpath.toString(), queryxpath);
	}

	/**
	 * @return value of _SortValue
	 */
	public final java.lang.Double get_SortValue()
	{
		return get_SortValue(getContext());
	}

	/**
	 * @param context
	 * @return value of _SortValue
	 */
	public final java.lang.Double get_SortValue(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Double) getMendixObject().getValue(context, MemberNames._SortValue.toString());
	}

	/**
	 * Set value of _SortValue
	 * @param _sortvalue
	 */
	public final void set_SortValue(java.lang.Double _sortvalue)
	{
		set_SortValue(getContext(), _sortvalue);
	}

	/**
	 * Set value of _SortValue
	 * @param context
	 * @param _sortvalue
	 */
	public final void set_SortValue(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Double _sortvalue)
	{
		getMendixObject().setValue(context, MemberNames._SortValue.toString(), _sortvalue);
	}

	/**
	 * @return value of IsDefaultForNewUser
	 */
	public final java.lang.Boolean getIsDefaultForNewUser()
	{
		return getIsDefaultForNewUser(getContext());
	}

	/**
	 * @param context
	 * @return value of IsDefaultForNewUser
	 */
	public final java.lang.Boolean getIsDefaultForNewUser(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsDefaultForNewUser.toString());
	}

	/**
	 * Set value of IsDefaultForNewUser
	 * @param isdefaultfornewuser
	 */
	public final void setIsDefaultForNewUser(java.lang.Boolean isdefaultfornewuser)
	{
		setIsDefaultForNewUser(getContext(), isdefaultfornewuser);
	}

	/**
	 * Set value of IsDefaultForNewUser
	 * @param context
	 * @param isdefaultfornewuser
	 */
	public final void setIsDefaultForNewUser(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean isdefaultfornewuser)
	{
		getMendixObject().setValue(context, MemberNames.IsDefaultForNewUser.toString(), isdefaultfornewuser);
	}

	/**
	 * @return value of SharedQuery
	 */
	public final java.lang.Boolean getSharedQuery()
	{
		return getSharedQuery(getContext());
	}

	/**
	 * @param context
	 * @return value of SharedQuery
	 */
	public final java.lang.Boolean getSharedQuery(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.SharedQuery.toString());
	}

	/**
	 * Set value of SharedQuery
	 * @param sharedquery
	 */
	public final void setSharedQuery(java.lang.Boolean sharedquery)
	{
		setSharedQuery(getContext(), sharedquery);
	}

	/**
	 * Set value of SharedQuery
	 * @param context
	 * @param sharedquery
	 */
	public final void setSharedQuery(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean sharedquery)
	{
		getMendixObject().setValue(context, MemberNames.SharedQuery.toString(), sharedquery);
	}

	/**
	 * @return value of IsCopiedQuery
	 */
	public final java.lang.Boolean getIsCopiedQuery()
	{
		return getIsCopiedQuery(getContext());
	}

	/**
	 * @param context
	 * @return value of IsCopiedQuery
	 */
	public final java.lang.Boolean getIsCopiedQuery(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsCopiedQuery.toString());
	}

	/**
	 * Set value of IsCopiedQuery
	 * @param iscopiedquery
	 */
	public final void setIsCopiedQuery(java.lang.Boolean iscopiedquery)
	{
		setIsCopiedQuery(getContext(), iscopiedquery);
	}

	/**
	 * Set value of IsCopiedQuery
	 * @param context
	 * @param iscopiedquery
	 */
	public final void setIsCopiedQuery(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean iscopiedquery)
	{
		getMendixObject().setValue(context, MemberNames.IsCopiedQuery.toString(), iscopiedquery);
	}

	/**
	 * @return value of Query_DummyContext
	 */
	public final queryrequests.proxies.DummyContext getQuery_DummyContext() throws com.mendix.core.CoreException
	{
		return getQuery_DummyContext(getContext());
	}

	/**
	 * @param context
	 * @return value of Query_DummyContext
	 */
	public final queryrequests.proxies.DummyContext getQuery_DummyContext(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		queryrequests.proxies.DummyContext result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Query_DummyContext.toString());
		if (identifier != null)
			result = queryrequests.proxies.DummyContext.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Query_DummyContext
	 * @param query_dummycontext
	 */
	public final void setQuery_DummyContext(queryrequests.proxies.DummyContext query_dummycontext)
	{
		setQuery_DummyContext(getContext(), query_dummycontext);
	}

	/**
	 * Set value of Query_DummyContext
	 * @param context
	 * @param query_dummycontext
	 */
	public final void setQuery_DummyContext(com.mendix.systemwideinterfaces.core.IContext context, queryrequests.proxies.DummyContext query_dummycontext)
	{
		if (query_dummycontext == null)
			getMendixObject().setValue(context, MemberNames.Query_DummyContext.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Query_DummyContext.toString(), query_dummycontext.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return queryMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final queryrequests.proxies.Query that = (queryrequests.proxies.Query) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "QueryRequests.Query";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
