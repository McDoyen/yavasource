// This file was generated by Mendix Modeler 7.7.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package queryrequests.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the QueryRequests module
	public static java.lang.String aC_ExternalNoteFromInlineObjectCreator(IContext context, notes.proxies.Note _note)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Note", _note == null ? null : _note.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.AC_ExternalNoteFromInlineObjectCreator", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String aC_ExternalNoteFromInlineObjectCreator_Portal(IContext context, notes.proxies.Note _note)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Note", _note == null ? null : _note.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.AC_ExternalNoteFromInlineObjectCreator_Portal", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String aC_InternalNoteFromInlineObjectCreator(IContext context, notes.proxies.Note _note)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Note", _note == null ? null : _note.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.AC_InternalNoteFromInlineObjectCreator", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String add_Icon(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.Add_Icon", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditOperatorForField_AfterCommit(IContext context, queryrequests.proxies.OperatorForField _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "QueryRequests.AuditOperatorForField_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditOperatorForField_AfterDelete(IContext context, queryrequests.proxies.OperatorForField _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "QueryRequests.AuditOperatorForField_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditQuery_AfterCommit(IContext context, queryrequests.proxies.Query _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "QueryRequests.AuditQuery_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditQuery_AfterDelete(IContext context, queryrequests.proxies.Query _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "QueryRequests.AuditQuery_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditQueryPart_AfterCommit(IContext context, queryrequests.proxies.QueryPart _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "QueryRequests.AuditQueryPart_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditQueryPart_AfterDelete(IContext context, queryrequests.proxies.QueryPart _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "QueryRequests.AuditQueryPart_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditQueryProxy_AfterCommit(IContext context, queryrequests.proxies.QueryProxy _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "QueryRequests.AuditQueryProxy_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditQueryProxy_AfterDelete(IContext context, queryrequests.proxies.QueryProxy _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "QueryRequests.AuditQueryProxy_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditSelectableField_AfterCommit(IContext context, queryrequests.proxies.SelectableField _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "QueryRequests.AuditSelectableField_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditSelectableField_AfterDelete(IContext context, queryrequests.proxies.SelectableField _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "QueryRequests.AuditSelectableField_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditSelectableQueryCode_AfterCommit(IContext context, queryrequests.proxies.SelectableQueryCode _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "QueryRequests.AuditSelectableQueryCode_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditSelectableQueryCode_AfterDelete(IContext context, queryrequests.proxies.SelectableQueryCode _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "QueryRequests.AuditSelectableQueryCode_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bC_QueryPart(IContext context, queryrequests.proxies.QueryPart _queryPart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryPart", _queryPart == null ? null : _queryPart.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "QueryRequests.BC_QueryPart", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bC_SelectableField(IContext context, queryrequests.proxies.SelectableField _selectableField)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SelectableField", _selectableField == null ? null : _selectableField.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "QueryRequests.BC_SelectableField", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void calendar_Click(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "QueryRequests.Calendar_Click", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean callSearchValues(IContext context, queryrequests.proxies.SearchContainer _searchContainer)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SearchContainer", _searchContainer == null ? null : _searchContainer.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "QueryRequests.CallSearchValues", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void check_StringCode(IContext context, queryrequests.proxies.QueryPart _queryPart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryPart", _queryPart == null ? null : _queryPart.getMendixObject());
			Core.execute(context, "QueryRequests.Check_StringCode", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * SprintR 1172370: Enable filters based on relative time period
	 */
	public static boolean checkOperators(IContext context, queryrequests.proxies.SelectableField _selectableField)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SelectableField", _selectableField == null ? null : _selectableField.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "QueryRequests.CheckOperators", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 1172370: query by timeframe
	 */
	public static boolean checkQueryPart(IContext context, java.util.List<queryrequests.proxies.QueryPart> _queryPartList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_queryPartList = null;
			if (_queryPartList != null)
			{
				listparam_queryPartList = new java.util.ArrayList<IMendixObject>();
				for (queryrequests.proxies.QueryPart obj : _queryPartList)
					listparam_queryPartList.add(obj.getMendixObject());
			}
			params.put("QueryPartList", listparam_queryPartList);
			return (java.lang.Boolean)Core.execute(context, "QueryRequests.CheckQueryPart", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void clearCodeOnChange(IContext context, queryrequests.proxies.SelectableQueryCode _selectableDateCodes)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SelectableDateCodes", _selectableDateCodes == null ? null : _selectableDateCodes.getMendixObject());
			Core.execute(context, "QueryRequests.ClearCodeOnChange", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void clearDateTimeCode(IContext context, queryrequests.proxies.QueryPart _queryPart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryPart", _queryPart == null ? null : _queryPart.getMendixObject());
			Core.execute(context, "QueryRequests.ClearDateTimeCode", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void clearStringCode(IContext context, queryrequests.proxies.QueryPart _queryPart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryPart", _queryPart == null ? null : _queryPart.getMendixObject());
			Core.execute(context, "QueryRequests.ClearStringCode", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * #214726 - Substracted actions, in order to use it in the Wrapper variant
	 */
	public static void click_RefreshLegislation(IContext context, process.proxies.OverviewRequest _overviewRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OverviewRequest", _overviewRequest == null ? null : _overviewRequest.getMendixObject());
			Core.execute(context, "QueryRequests.Click_RefreshLegislation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * #214726 
	 * Added microflow to refresh legislation based on OverviewRequestWrapper
	 */
	public static void click_RefreshLegislationWrapper(IContext context, process.proxies.OverviewRequestWrapper _overviewRequestWrapper)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OverviewRequestWrapper", _overviewRequestWrapper == null ? null : _overviewRequestWrapper.getMendixObject());
			Core.execute(context, "QueryRequests.Click_RefreshLegislationWrapper", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void configurationManagement_Click(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "QueryRequests.ConfigurationManagement_Click", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static queryrequests.proxies.QueryPanel createOpenQueryPanel(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "QueryRequests.CreateOpenQueryPanel", params);
			return result == null ? null : queryrequests.proxies.QueryPanel.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static queryrequests.proxies.QueryPanel createOpenQueryPanel_SingleRequest(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "QueryRequests.CreateOpenQueryPanel_SingleRequest", params);
			return result == null ? null : queryrequests.proxies.QueryPanel.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void createOpenQueryPanelForUser(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "QueryRequests.CreateOpenQueryPanelForUser", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 6033 - Personal query geeft geen resultaat bij gebruik van greater than en less than zonder gebruik van current date
	 * 1172370: personal queries based on timeframe
	 */
	public static void createXPathQueryString(IContext context, queryrequests.proxies.Query _query)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Query", _query == null ? null : _query.getMendixObject());
			Core.execute(context, "QueryRequests.CreateXPathQueryString", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * SprintR 1172370 / 1090781 / 1090793 use timeframes in queries
	 */
	public static java.lang.String createXPathQueryStringDynamicAttribute(IContext context, queryrequests.proxies.QueryPart _queryPart, queryrequests.proxies.SelectableField _selectableField, queryrequests.proxies.OperatorForField _operatorForField)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryPart", _queryPart == null ? null : _queryPart.getMendixObject());
			params.put("SelectableField", _selectableField == null ? null : _selectableField.getMendixObject());
			params.put("OperatorForField", _operatorForField == null ? null : _operatorForField.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.CreateXPathQueryStringDynamicAttribute", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String delete_TestStep_Icon(IContext context, testcases.proxies.TestCaseStep _testCaseStep)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TestCaseStep", _testCaseStep == null ? null : _testCaseStep.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.Delete_TestStep_Icon", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deleteQueryPart(IContext context, queryrequests.proxies.QueryPart _queryPart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryPart", _queryPart == null ? null : _queryPart.getMendixObject());
			Core.execute(context, "QueryRequests.DeleteQueryPart", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String download_Attachment_Icon(IContext context, process.proxies.RequestAttachment _requestAttachment)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RequestAttachment", _requestAttachment == null ? null : _requestAttachment.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.Download_Attachment_Icon", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<process.proxies.ActivityStream> dS_ActivityStream(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "QueryRequests.DS_ActivityStream", params);
			java.util.List<process.proxies.ActivityStream> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<process.proxies.ActivityStream>();
				for (IMendixObject obj : objs)
					result.add(process.proxies.ActivityStream.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<cmdb.proxies.ConfigurationItem> dS_FilterCondition_AffectedCI(IContext context, queryrequests.proxies.FilterCondition _filterCondition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FilterCondition", _filterCondition == null ? null : _filterCondition.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "QueryRequests.DS_FilterCondition_AffectedCI", params);
			java.util.List<cmdb.proxies.ConfigurationItem> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<cmdb.proxies.ConfigurationItem>();
				for (IMendixObject obj : objs)
					result.add(cmdb.proxies.ConfigurationItem.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<nap.proxies.BusinessGroup> dS_FilterCondition_DeliveringOrganisation(IContext context, queryrequests.proxies.FilterCondition _filterCondition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FilterCondition", _filterCondition == null ? null : _filterCondition.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "QueryRequests.DS_FilterCondition_DeliveringOrganisation", params);
			java.util.List<nap.proxies.BusinessGroup> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<nap.proxies.BusinessGroup>();
				for (IMendixObject obj : objs)
					result.add(nap.proxies.BusinessGroup.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<nap.proxies.Person> dS_FilterCondition_Person(IContext context, queryrequests.proxies.FilterCondition _filterCondition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FilterCondition", _filterCondition == null ? null : _filterCondition.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "QueryRequests.DS_FilterCondition_Person", params);
			java.util.List<nap.proxies.Person> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<nap.proxies.Person>();
				for (IMendixObject obj : objs)
					result.add(nap.proxies.Person.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Priority> dS_FilterCondition_Priority(IContext context, queryrequests.proxies.FilterCondition _filterCondition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FilterCondition", _filterCondition == null ? null : _filterCondition.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "QueryRequests.DS_FilterCondition_Priority", params);
			java.util.List<slm.proxies.Priority> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Priority>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Priority.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<nap.proxies.Organisation> dS_FilterCondition_ReceivingOrganisation(IContext context, queryrequests.proxies.FilterCondition _filterCondition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FilterCondition", _filterCondition == null ? null : _filterCondition.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "QueryRequests.DS_FilterCondition_ReceivingOrganisation", params);
			java.util.List<nap.proxies.Organisation> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<nap.proxies.Organisation>();
				for (IMendixObject obj : objs)
					result.add(nap.proxies.Organisation.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Service> dS_FilterCondition_Service(IContext context, queryrequests.proxies.FilterCondition _filterCondition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FilterCondition", _filterCondition == null ? null : _filterCondition.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "QueryRequests.DS_FilterCondition_Service", params);
			java.util.List<slm.proxies.Service> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Service>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Service.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Service_Process> dS_FilterCondition_ServiceProcess(IContext context, queryrequests.proxies.FilterCondition _filterCondition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FilterCondition", _filterCondition == null ? null : _filterCondition.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "QueryRequests.DS_FilterCondition_ServiceProcess", params);
			java.util.List<slm.proxies.Service_Process> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Service_Process>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Service_Process.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [4290] New microflow used as the datasource microflow for the dataview on StartPanel_View and CustomerPortal_Request_View
	 */
	public static queryrequests.proxies.FilterCondition dS_GetFilterCondition(IContext context, queryrequests.proxies.QueryPanel _queryPanel)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryPanel", _queryPanel == null ? null : _queryPanel.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "QueryRequests.DS_GetFilterCondition", params);
			return result == null ? null : queryrequests.proxies.FilterCondition.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String dS_GetMasterServiceProcess(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.DS_GetMasterServiceProcess", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static process.proxies.Request dS_GetMasterTicketAttachment(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "QueryRequests.DS_GetMasterTicketAttachment", params);
			return result == null ? null : process.proxies.Request.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String dS_GetMasterTicketStatusAndID(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.DS_GetMasterTicketStatusAndID", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String dS_GetParentTaskStatusAndID(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.DS_GetParentTaskStatusAndID", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String dS_GetSubTaskStatusAndID(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.DS_GetSubTaskStatusAndID", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String dS_GetTaskStatusAndID(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.DS_GetTaskStatusAndID", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String dS_GetTicketStatusPahseAndID(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.DS_GetTicketStatusPahseAndID", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<queryrequests.proxies.OperatorForField> dS_Operator(IContext context, queryrequests.proxies.QueryPart _queryPart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryPart", _queryPart == null ? null : _queryPart.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "QueryRequests.DS_Operator", params);
			java.util.List<queryrequests.proxies.OperatorForField> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<queryrequests.proxies.OperatorForField>();
				for (IMendixObject obj : objs)
					result.add(queryrequests.proxies.OperatorForField.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static queryrequests.proxies.SearchOperators dS_OperatorEnum(IContext context, queryrequests.proxies.QueryPart _queryPart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryPart", _queryPart == null ? null : _queryPart.getMendixObject());
			java.lang.String result = (java.lang.String)Core.execute(context, "QueryRequests.DS_OperatorEnum", params);
			if (result == null)
				return null;
			return queryrequests.proxies.SearchOperators.valueOf(result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static metamodel.proxies.PrimitiveTypeEnum dS_SearchContainer_HelperTypeReference(IContext context, queryrequests.proxies.SearchContainer _searchContainer)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SearchContainer", _searchContainer == null ? null : _searchContainer.getMendixObject());
			java.lang.String result = (java.lang.String)Core.execute(context, "QueryRequests.DS_SearchContainer_HelperTypeReference", params);
			if (result == null)
				return null;
			return metamodel.proxies.PrimitiveTypeEnum.valueOf(result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static metamodel.proxies.PrimitiveTypeEnum dS_SearchContainer_TypeReference(IContext context, queryrequests.proxies.SearchContainer _searchContainer)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SearchContainer", _searchContainer == null ? null : _searchContainer.getMendixObject());
			java.lang.String result = (java.lang.String)Core.execute(context, "QueryRequests.DS_SearchContainer_TypeReference", params);
			if (result == null)
				return null;
			return metamodel.proxies.PrimitiveTypeEnum.valueOf(result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [4290] Instead of retrieving the FilterCondition from memory, it is passed along as input parameter
	 * Changed source of attribute 'ResultSorting' and 'ResultSortOrder' to be from 'FilterCondition', instead of 'QueryPanel'
	 */
	public static java.util.List<process.proxies.OverviewRequest> dS_StartPanel_ViewRequestList(IContext context, queryrequests.proxies.QueryPanel _queryPanel, queryrequests.proxies.FilterCondition _filterCondition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryPanel", _queryPanel == null ? null : _queryPanel.getMendixObject());
			params.put("FilterCondition", _filterCondition == null ? null : _filterCondition.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "QueryRequests.DS_StartPanel_ViewRequestList", params);
			java.util.List<process.proxies.OverviewRequest> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<process.proxies.OverviewRequest>();
				for (IMendixObject obj : objs)
					result.add(process.proxies.OverviewRequest.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static process.proxies.TaskCounter dS_TaskCounter_OverviewRequest(IContext context, process.proxies.OverviewRequest _overviewRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OverviewRequest", _overviewRequest == null ? null : _overviewRequest.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "QueryRequests.DS_TaskCounter_OverviewRequest", params);
			return result == null ? null : process.proxies.TaskCounter.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean dS_UpdateReferencedField(IContext context, queryrequests.proxies.QueryPart _queryPart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryPart", _queryPart == null ? null : _queryPart.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "QueryRequests.DS_UpdateReferencedField", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<process.proxies.ActivityStream> dSo_GetActivityStream(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "QueryRequests.DSo_GetActivityStream", params);
			java.util.List<process.proxies.ActivityStream> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<process.proxies.ActivityStream>();
				for (IMendixObject obj : objs)
					result.add(process.proxies.ActivityStream.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String email_Request_Icon(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.Email_Request_Icon", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void executeLuceneSearch(IContext context, advancedsearch.proxies.SearchParams _searchParams)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SearchParams", _searchParams == null ? null : _searchParams.getMendixObject());
			Core.execute(context, "QueryRequests.ExecuteLuceneSearch", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String export_PDF_Icon_Request(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.Export_PDF_Icon_Request", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void exportRequest_SlidingPanel(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "QueryRequests.ExportRequest_SlidingPanel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String faq_Icon(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.String)Core.execute(context, "QueryRequests.Faq_Icon", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static mendix.proxies.Account gbl_GetUserAccount(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "QueryRequests.Gbl_GetUserAccount", params);
			return result == null ? null : mendix.proxies.Account.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static process.proxies.Change getChangeBasedOnRequest(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "QueryRequests.GetChangeBasedOnRequest", params);
			return result == null ? null : process.proxies.Change.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [801176] Added input parameter AsUTC (boolean);
	 * Editted expression on both endpoints to take into account of the AsUTC boolean is true, in which case it uses the formatDateUTC function
	 */
	public static java.lang.String getDateTimeStringForLanguage(IContext context, java.util.Date _dateTime, boolean _asUTC)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DateTime", _dateTime);
			params.put("AsUTC", _asUTC);
			return (java.lang.String)Core.execute(context, "QueryRequests.GetDateTimeStringForLanguage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static queryrequests.proxies.DynAttrSelectionHelper getDynamicAttributeSelectionHelper(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "QueryRequests.GetDynamicAttributeSelectionHelper", params);
			return result == null ? null : queryrequests.proxies.DynAttrSelectionHelper.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static metamodel.proxies.MendixEntity getEntitySelectableFromQueryPart(IContext context, queryrequests.proxies.QueryPart _queryPart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryPart", _queryPart == null ? null : _queryPart.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "QueryRequests.getEntitySelectableFromQueryPart", params);
			return result == null ? null : metamodel.proxies.MendixEntity.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static process.proxies.Problem getProblemBasedOnRequest(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "QueryRequests.GetProblemBasedOnRequest", params);
			return result == null ? null : process.proxies.Problem.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getQueryLabelLink(IContext context, queryrequests.proxies.QueryProxy _queryProxy)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryProxy", _queryProxy == null ? null : _queryProxy.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.getQueryLabelLink", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static process.proxies.Request getRequestAndPortalActionsRequest(IContext context, process.proxies.OverviewRequest _overviewRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OverviewRequest", _overviewRequest == null ? null : _overviewRequest.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "QueryRequests.GetRequestAndPortalActionsRequest", params);
			return result == null ? null : process.proxies.Request.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static process.proxies.Request getRequestFromOverviewRequest(IContext context, process.proxies.OverviewRequest _overviewRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OverviewRequest", _overviewRequest == null ? null : _overviewRequest.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "QueryRequests.GetRequestFromOverviewRequest", params);
			return result == null ? null : process.proxies.Request.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void getRequestsByQuery_Grid(IContext context, queryrequests.proxies.QueryProxy _queryProxy)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryProxy", _queryProxy == null ? null : _queryProxy.getMendixObject());
			Core.execute(context, "QueryRequests.GetRequestsByQuery_Grid", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void getRequestsByQuery_Preference(IContext context, queryrequests.proxies.QueryProxy _queryProxy)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryProxy", _queryProxy == null ? null : _queryProxy.getMendixObject());
			Core.execute(context, "QueryRequests.GetRequestsByQuery_Preference", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void getRequestsByQuery_View(IContext context, queryrequests.proxies.QueryProxy _queryProxy)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryProxy", _queryProxy == null ? null : _queryProxy.getMendixObject());
			Core.execute(context, "QueryRequests.GetRequestsByQuery_View", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 1172370: Relative timeframes in personal queries
	 */
	public static queryrequests.proxies.QueryPanel getRequestsByXpath(IContext context, queryrequests.proxies.QueryProxy _inputQueryProxy)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputQueryProxy", _inputQueryProxy == null ? null : _inputQueryProxy.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "QueryRequests.GetRequestsByXpath", params);
			return result == null ? null : queryrequests.proxies.QueryPanel.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [801176] Update for input parameters for calling microflow 'GetDateTimeStringForLanguage':
	 * Additional input 'AsUTC' set to false for all
	 * 1159178 - add create time
	 * 928386 - add service
	 * 922741: Add ability to define color per service (textcolor in master/detail view)
	 */
	public static java.lang.String getRequestSnippetBody(IContext context, process.proxies.OverviewRequest _overviewRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OverviewRequest", _overviewRequest == null ? null : _overviewRequest.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.GetRequestSnippetBody", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getRequestSnippetHeader(IContext context, process.proxies.OverviewRequest _overviewRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OverviewRequest", _overviewRequest == null ? null : _overviewRequest.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.GetRequestSnippetHeader", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getRequestSnippetHeaderDynamic(IContext context, process.proxies.OverviewRequest _overviewRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OverviewRequest", _overviewRequest == null ? null : _overviewRequest.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.GetRequestSnippetHeaderDynamic", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<queryrequests.proxies.SourceData> getSelectableObjects(IContext context, queryrequests.proxies.QueryPart _queryPart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryPart", _queryPart == null ? null : _queryPart.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "QueryRequests.GetSelectableObjects", params);
			java.util.List<queryrequests.proxies.SourceData> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<queryrequests.proxies.SourceData>();
				for (IMendixObject obj : objs)
					result.add(queryrequests.proxies.SourceData.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static process.proxies.ServiceRequest getServiceRequestBasedOnRequest(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "QueryRequests.GetServiceRequestBasedOnRequest", params);
			return result == null ? null : process.proxies.ServiceRequest.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * #5853: Rename label 'Service'  to 'Type' on the SLM Aspects dialog
	 */
	public static java.lang.String getSLMAspectDialog_Aspects(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.GetSLMAspectDialog_Aspects", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [801176] Update for input parameters for calling microflow 'GetDateTimeStringForLanguage':
	 * Additional input 'AsUTC' set to false for all
	 * [1172376] - Added scheduled UTC start/end times
	 */
	public static java.lang.String getSLMAspectSnippet(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.GetSLMAspectSnippet", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [801176] Update for input parameters for calling microflow 'GetDateTimeStringForLanguage';
	 * Added to the AspectSnippet to include UTC values CreateTimeUTC, ActualEndTimeUTC, ScheduledStartUTC, and ScheduledEndUTC
	 * #5853: Rename label 'Service'  to 'Type' on the SLM Aspects dialog
	 */
	public static java.lang.String getSLMAspectSnippet_SLMDialog(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.GetSLMAspectSnippet_SLMDialog", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void getValues(IContext context, queryrequests.proxies.QueryPart _queryPart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryPart", _queryPart == null ? null : _queryPart.getMendixObject());
			Core.execute(context, "QueryRequests.GetValues", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String info_Glyph(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.String)Core.execute(context, "QueryRequests.Info_Glyph", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String insertAfter_TestStep_Icon(IContext context, testcases.proxies.TestCaseStep _testCaseStep)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TestCaseStep", _testCaseStep == null ? null : _testCaseStep.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.InsertAfter_TestStep_Icon", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void invalidateQueryParts(IContext context, java.util.List<queryrequests.proxies.QueryPart> _queryPartList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_queryPartList = null;
			if (_queryPartList != null)
			{
				listparam_queryPartList = new java.util.ArrayList<IMendixObject>();
				for (queryrequests.proxies.QueryPart obj : _queryPartList)
					listparam_queryPartList.add(obj.getMendixObject());
			}
			params.put("QueryPartList", listparam_queryPartList);
			Core.execute(context, "QueryRequests.InvalidateQueryParts", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AddOperatorForField(IContext context, queryrequests.proxies.SelectableField _inputSelectableField)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputSelectableField", _inputSelectableField == null ? null : _inputSelectableField.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_AddOperatorForField", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [4290] Removed retrieve and refresh of querypanel;
	 * Added delete of the backup filter condition, if found;
	 */
	public static void iVK_ApplyFilter(IContext context, queryrequests.proxies.FilterCondition _filterCondition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FilterCondition", _filterCondition == null ? null : _filterCondition.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_ApplyFilter", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CancelEditCopiedSharedQuery(IContext context, queryrequests.proxies.Query _query)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Query", _query == null ? null : _query.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_CancelEditCopiedSharedQuery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CancelEditCopiedUserQuery(IContext context, queryrequests.proxies.Query _query)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Query", _query == null ? null : _query.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_CancelEditCopiedUserQuery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CancelEditSharedQuery(IContext context, queryrequests.proxies.Query _query)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Query", _query == null ? null : _query.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_CancelEditSharedQuery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CancelEditUserQuery(IContext context, queryrequests.proxies.Query _query)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Query", _query == null ? null : _query.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_CancelEditUserQuery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CancelNewQueryPart(IContext context, queryrequests.proxies.QueryPart _queryPart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryPart", _queryPart == null ? null : _queryPart.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_CancelNewQueryPart", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CancelNewUserQuery(IContext context, queryrequests.proxies.Query _query)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Query", _query == null ? null : _query.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_CancelNewUserQuery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CancelSearchContainer(IContext context, queryrequests.proxies.SearchContainer _searchContainer)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SearchContainer", _searchContainer == null ? null : _searchContainer.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_CancelSearchContainer", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearAffectedCIFilter(IContext context, queryrequests.proxies.FilterCondition _filterCondition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FilterCondition", _filterCondition == null ? null : _filterCondition.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_ClearAffectedCIFilter", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearDeliveringOrganisationFilter(IContext context, queryrequests.proxies.FilterCondition _filterCondition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FilterCondition", _filterCondition == null ? null : _filterCondition.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_ClearDeliveringOrganisationFilter", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [4290] Removed action to delete FilterCondition object;
	 * Added Change action to clear the FilterCondition association and execute IVK_UpdateFilter
	 */
	public static void iVK_ClearFilter(IContext context, queryrequests.proxies.FilterCondition _filterCondition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FilterCondition", _filterCondition == null ? null : _filterCondition.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_ClearFilter", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearPersonFilter(IContext context, queryrequests.proxies.FilterCondition _filterCondition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FilterCondition", _filterCondition == null ? null : _filterCondition.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_ClearPersonFilter", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearPriorityFilter(IContext context, queryrequests.proxies.FilterCondition _filterCondition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FilterCondition", _filterCondition == null ? null : _filterCondition.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_ClearPriorityFilter", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearReceivingOrganisationFilter(IContext context, queryrequests.proxies.FilterCondition _filterCondition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FilterCondition", _filterCondition == null ? null : _filterCondition.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_ClearReceivingOrganisationFilter", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearServiceFilter(IContext context, queryrequests.proxies.FilterCondition _filterCondition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FilterCondition", _filterCondition == null ? null : _filterCondition.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_ClearServiceFilter", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearServiceProcessFilter(IContext context, queryrequests.proxies.FilterCondition _filterCondition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FilterCondition", _filterCondition == null ? null : _filterCondition.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_ClearServiceProcessFilter", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearStatusFilter(IContext context, queryrequests.proxies.FilterCondition _filterCondition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FilterCondition", _filterCondition == null ? null : _filterCondition.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_ClearStatusFilter", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CloseManageQueries(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "QueryRequests.IVK_CloseManageQueries", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 1172370: Relative timeframes in personal queries
	 */
	public static void iVK_CopySharedQuery(IContext context, queryrequests.proxies.Query _inputQuery)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputQuery", _inputQuery == null ? null : _inputQuery.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_CopySharedQuery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 1172370: Relative timeframes in personal queries
	 */
	public static void iVK_CopyUserQuery(IContext context, queryrequests.proxies.QueryProxy _inputQueryProxy)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputQueryProxy", _inputQueryProxy == null ? null : _inputQueryProxy.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_CopyUserQuery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DeleteSharedQuery(IContext context, queryrequests.proxies.Query _query)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Query", _query == null ? null : _query.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_DeleteSharedQuery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DeleteUserQuery(IContext context, queryrequests.proxies.QueryProxy _inputQueryProxy)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputQueryProxy", _inputQueryProxy == null ? null : _inputQueryProxy.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_DeleteUserQuery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DisableQuery(IContext context, queryrequests.proxies.QueryProxy _inputQueryProxy)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputQueryProxy", _inputQueryProxy == null ? null : _inputQueryProxy.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_DisableQuery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 1172370: Relative timeframes in personal queries
	 */
	public static void iVK_EditCopiedUserQuery(IContext context, queryrequests.proxies.Query _inputQuery)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputQuery", _inputQuery == null ? null : _inputQuery.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_EditCopiedUserQuery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_EditQueryPart(IContext context, queryrequests.proxies.QueryPart _queryPart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryPart", _queryPart == null ? null : _queryPart.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_EditQueryPart", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 1172370: Relative timeframes in personal queries
	 */
	public static void iVK_EditSharedQuery(IContext context, queryrequests.proxies.Query _inputQuery)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputQuery", _inputQuery == null ? null : _inputQuery.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_EditSharedQuery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 1172370: Relative timeframes in personal queries
	 */
	public static void iVK_EditSharedQuery_DEBUG(IContext context, queryrequests.proxies.QueryProxy _queryProxy)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryProxy", _queryProxy == null ? null : _queryProxy.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_EditSharedQuery_DEBUG", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 1172370: Relative timeframes in personal queries
	 */
	public static void iVK_EditUserQuery(IContext context, queryrequests.proxies.QueryProxy _inputQueryProxy)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputQueryProxy", _inputQueryProxy == null ? null : _inputQueryProxy.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_EditUserQuery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_EnableQuery(IContext context, queryrequests.proxies.QueryProxy _inputQueryProxy)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputQueryProxy", _inputQueryProxy == null ? null : _inputQueryProxy.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_EnableQuery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [4290] Instead of deleting the (original) FilterCondition object and relating the backup object, the backup object is deleted after the (original) object is set with its values.
	 */
	public static void iVK_FilterConditionCancel(IContext context, queryrequests.proxies.FilterCondition _filterCondition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FilterCondition", _filterCondition == null ? null : _filterCondition.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_FilterConditionCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [4290] Changed input parameter to type 'FilterCondition';
	 * Removed check and creation of a new FilterCondition, if none existed. It should exist, as this button is in a dataview containing an instance;
	 */
	public static void iVK_FilterList(IContext context, queryrequests.proxies.FilterCondition _filterCondition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FilterCondition", _filterCondition == null ? null : _filterCondition.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_FilterList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ManageUserQueries(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "QueryRequests.IVK_ManageUserQueries", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NewSharedQuery(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "QueryRequests.IVK_NewSharedQuery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NewUserQuery(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "QueryRequests.IVK_NewUserQuery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenManageSharedQueries(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "QueryRequests.IVK_OpenManageSharedQueries", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenMasterTicket(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_OpenMasterTicket", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenParentTicket(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_OpenParentTicket", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenQueryCodes(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "QueryRequests.IVK_OpenQueryCodes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenRequest(IContext context, process.proxies.Request _inputRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputRequest", _inputRequest == null ? null : _inputRequest.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_OpenRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenRequest_MultiSelection(IContext context, java.util.List<process.proxies.Request> _inputRequestList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_inputRequestList = null;
			if (_inputRequestList != null)
			{
				listparam_inputRequestList = new java.util.ArrayList<IMendixObject>();
				for (process.proxies.Request obj : _inputRequestList)
					listparam_inputRequestList.add(obj.getMendixObject());
			}
			params.put("InputRequestList", listparam_inputRequestList);
			Core.execute(context, "QueryRequests.IVK_OpenRequest_MultiSelection", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * #3577
	 * Canceled Request not working as expected.
	 */
	public static void iVK_OpenRequest_OverviewRequest(IContext context, process.proxies.OverviewRequest _overviewRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OverviewRequest", _overviewRequest == null ? null : _overviewRequest.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_OpenRequest_OverviewRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenSelectableFields(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "QueryRequests.IVK_OpenSelectableFields", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OperatorForField_NewEdit_Cancel(IContext context, queryrequests.proxies.OperatorForField _operatorForField)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OperatorForField", _operatorForField == null ? null : _operatorForField.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_OperatorForField_NewEdit_Cancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 5870 - sorting search queries
	 */
	public static void iVK_RebuildQueryProxySorting(IContext context, java.util.List<queryrequests.proxies.QueryProxy> _queryProxyList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_queryProxyList = null;
			if (_queryProxyList != null)
			{
				listparam_queryProxyList = new java.util.ArrayList<IMendixObject>();
				for (queryrequests.proxies.QueryProxy obj : _queryProxyList)
					listparam_queryProxyList.add(obj.getMendixObject());
			}
			params.put("QueryProxyList", listparam_queryProxyList);
			Core.execute(context, "QueryRequests.IVK_RebuildQueryProxySorting", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ReorderSharedQuery(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "QueryRequests.IVK_ReorderSharedQuery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ReorderUserQuery(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "QueryRequests.IVK_ReorderUserQuery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ResetCounters(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "QueryRequests.IVK_ResetCounters", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SaveEditSharedQuery(IContext context, queryrequests.proxies.Query _inputQuery)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputQuery", _inputQuery == null ? null : _inputQuery.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_SaveEditSharedQuery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 1172370: Relative timeframes in personal queries
	 */
	public static void iVK_SaveEditUserQuery(IContext context, queryrequests.proxies.Query _inputQuery)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputQuery", _inputQuery == null ? null : _inputQuery.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_SaveEditUserQuery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SaveOperatorForField(IContext context, queryrequests.proxies.OperatorForField _inputOperatorForField)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputOperatorForField", _inputOperatorForField == null ? null : _inputOperatorForField.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_SaveOperatorForField", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SaveQueryPart(IContext context, queryrequests.proxies.QueryPart _queryPart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryPart", _queryPart == null ? null : _queryPart.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_SaveQueryPart", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SaveUserQuery(IContext context, queryrequests.proxies.Query _inputQuery)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputQuery", _inputQuery == null ? null : _inputQuery.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_SaveUserQuery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectableFieldSave(IContext context, queryrequests.proxies.SelectableField _selectableField)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SelectableField", _selectableField == null ? null : _selectableField.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_SelectableFieldSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectableFieldSaveAndClose(IContext context, queryrequests.proxies.SelectableField _selectableField)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SelectableField", _selectableField == null ? null : _selectableField.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_SelectableFieldSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 1172370: Relative timeframes in personal queries
	 */
	public static void iVK_SetDefaultSharedQuery(IContext context, queryrequests.proxies.Query _inputQuery)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputQuery", _inputQuery == null ? null : _inputQuery.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_SetDefaultSharedQuery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SetDefaultUserQuery(IContext context, queryrequests.proxies.QueryProxy _inputQueryProxy)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputQueryProxy", _inputQueryProxy == null ? null : _inputQueryProxy.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_SetDefaultUserQuery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SharedQueryCancel(IContext context, queryrequests.proxies.Query _query)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Query", _query == null ? null : _query.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_SharedQueryCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SharedQueryMoveDown(IContext context, queryrequests.proxies.Query _inputQuery)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputQuery", _inputQuery == null ? null : _inputQuery.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_SharedQueryMoveDown", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SharedQueryMoveUp(IContext context, queryrequests.proxies.Query _inputQuery)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputQuery", _inputQuery == null ? null : _inputQuery.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_SharedQueryMoveUp", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SharedQuerySave(IContext context, queryrequests.proxies.Query _inputQuery)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputQuery", _inputQuery == null ? null : _inputQuery.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_SharedQuerySave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SharedQuerySaveAndClose(IContext context, queryrequests.proxies.Query _inputQuery)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputQuery", _inputQuery == null ? null : _inputQuery.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_SharedQuerySaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * #5861
	 * Replace &amp;quot because it is not shown as " in html.
	 * 
	 * #5856
	 * vertaal correctie
	 * 
	 * [1172365] Option to edit the create time after ticket creation
	 * 
	 */
	public static java.lang.String iVK_ShowActivityStream(IContext context, process.proxies.ActivityStream _activityStream)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ActivityStream", _activityStream == null ? null : _activityStream.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.IVK_ShowActivityStream", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ShowStartPanel_Grid(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "QueryRequests.IVK_ShowStartPanel_Grid", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ShowStartPanel_View(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "QueryRequests.IVK_ShowStartPanel_View", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [4290] Added microflow to set ResultSortOrder
	 */
	public static void iVK_SortAsc(IContext context, queryrequests.proxies.FilterCondition _filterCondition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FilterCondition", _filterCondition == null ? null : _filterCondition.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_SortAsc", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [4290] Added microflow to set ResultSortOrder
	 */
	public static void iVK_SortDesc(IContext context, queryrequests.proxies.FilterCondition _filterCondition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FilterCondition", _filterCondition == null ? null : _filterCondition.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_SortDesc", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [4290] Removed retrieve and refresh of associated QueryPanel object,
	 * Added check for filter on person
	 */
	public static void iVK_UpdateFilter(IContext context, queryrequests.proxies.FilterCondition _filterCondition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FilterCondition", _filterCondition == null ? null : _filterCondition.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_UpdateFilter", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_UpdateQueryProxy(IContext context, queryrequests.proxies.Query _inputQuery)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputQuery", _inputQuery == null ? null : _inputQuery.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_UpdateQueryProxy", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_UserQueryMoveDown(IContext context, queryrequests.proxies.QueryProxy _inputQueryProxy)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputQueryProxy", _inputQueryProxy == null ? null : _inputQueryProxy.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_UserQueryMoveDown", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_UserQueryMoveUp(IContext context, queryrequests.proxies.QueryProxy _inputQueryProxy)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputQueryProxy", _inputQueryProxy == null ? null : _inputQueryProxy.getMendixObject());
			Core.execute(context, "QueryRequests.IVK_UserQueryMoveUp", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mCa_AsyncCallUpdateQueryProxy(IContext context, queryrequests.proxies.Query _inputQuery)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputQuery", _inputQuery == null ? null : _inputQuery.getMendixObject());
			Core.execute(context, "QueryRequests.MCa_AsyncCallUpdateQueryProxy", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mCa_AutoCorrectSortValue(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "QueryRequests.MCa_AutoCorrectSortValue", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean mCa_CheckUniqueQuery(IContext context, queryrequests.proxies.Query _inputQuery)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputQuery", _inputQuery == null ? null : _inputQuery.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "QueryRequests.MCa_CheckUniqueQuery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean mCa_CheckUniqueSharedQuery(IContext context, queryrequests.proxies.Query _inputQuery)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputQuery", _inputQuery == null ? null : _inputQuery.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "QueryRequests.MCa_CheckUniqueSharedQuery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mCa_CleanUpSearchContainer(IContext context, queryrequests.proxies.SearchContainer _searchContainerList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SearchContainerList", _searchContainerList == null ? null : _searchContainerList.getMendixObject());
			Core.execute(context, "QueryRequests.MCa_CleanUpSearchContainer", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean mCa_FirstSharedQueryInTheSystem(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.Boolean)Core.execute(context, "QueryRequests.MCa_FirstSharedQueryInTheSystem", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static queryrequests.proxies.DummyContext mCa_GetDummyContext(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "QueryRequests.MCa_GetDummyContext", params);
			return result == null ? null : queryrequests.proxies.DummyContext.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Double mCa_GetMaxSortValue(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.Double)Core.execute(context, "QueryRequests.MCa_GetMaxSortValue", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * #214726 - Extraction of Click_RefreshLegislation, to be for the Wrapper variant too
	 */
	public static void mCa_RefreshLegislation(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "QueryRequests.MCa_RefreshLegislation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mCa_RefreshStartPanelObjects(IContext context, queryrequests.proxies.SearchResults _searchResults)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SearchResults", _searchResults == null ? null : _searchResults.getMendixObject());
			Core.execute(context, "QueryRequests.MCa_RefreshStartPanelObjects", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String mflGetRequest_Person(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.mflGetRequest_Person", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String mflGetRequest_PersonCaller(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.mflGetRequest_PersonCaller", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String mflGetRequest_ReceivingOrganisation(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.mflGetRequest_ReceivingOrganisation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String more_Progress_Icon(IContext context, process.proxies.ActivityStream _activityStream)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ActivityStream", _activityStream == null ? null : _activityStream.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.More_Progress_Icon", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String moveDown_TestStep_Icon(IContext context, testcases.proxies.TestCaseStep _testCaseStep)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TestCaseStep", _testCaseStep == null ? null : _testCaseStep.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.MoveDown_TestStep_Icon", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String moveUp_Icon(IContext context, testcases.proxies.TestCaseStep _testCaseStep)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TestCaseStep", _testCaseStep == null ? null : _testCaseStep.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.MoveUp_Icon", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void newANDQueryPart(IContext context, queryrequests.proxies.Query _query)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Query", _query == null ? null : _query.getMendixObject());
			Core.execute(context, "QueryRequests.NewANDQueryPart", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void newORQueryPart(IContext context, queryrequests.proxies.Query _query)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Query", _query == null ? null : _query.getMendixObject());
			Core.execute(context, "QueryRequests.NewORQueryPart", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String newRequest_Icon(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.String)Core.execute(context, "QueryRequests.NewRequest_Icon", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_QueryPartOperator(IContext context, queryrequests.proxies.QueryPart _queryPart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryPart", _queryPart == null ? null : _queryPart.getMendixObject());
			Core.execute(context, "QueryRequests.OC_QueryPartOperator", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_SelectableField_NewEdit_Reference(IContext context, queryrequests.proxies.SelectableField _selectableField)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SelectableField", _selectableField == null ? null : _selectableField.getMendixObject());
			Core.execute(context, "QueryRequests.OC_SelectableField_NewEdit_Reference", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [4290] Added microflow to refresh the input FilterCondition. Used to refresh the object after a sort attribute was selected on the start panel
	 */
	public static void oC_SelectedSorting(IContext context, queryrequests.proxies.FilterCondition _filterCondition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FilterCondition", _filterCondition == null ? null : _filterCondition.getMendixObject());
			Core.execute(context, "QueryRequests.OC_SelectedSorting", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_SetAttributeType(IContext context, queryrequests.proxies.QueryPart _queryPart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryPart", _queryPart == null ? null : _queryPart.getMendixObject());
			Core.execute(context, "QueryRequests.OC_SetAttributeType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oCh_ShowSelectedProgress(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "QueryRequests.OCh_ShowSelectedProgress", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openDynamicAttributeSelectionModal(IContext context, queryrequests.proxies.SelectableField _selectableField)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SelectableField", _selectableField == null ? null : _selectableField.getMendixObject());
			Core.execute(context, "QueryRequests.OpenDynamicAttributeSelectionModal", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean openHardcodedSelectionByEntity(IContext context, queryrequests.proxies.QueryPart _queryPart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryPart", _queryPart == null ? null : _queryPart.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "QueryRequests.openHardcodedSelectionByEntity", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [4290] Removed Change Object for QueryPanel to reset the ResultSorting attribute;
	 */
	public static void openStartPanelByPreference(IContext context, queryrequests.proxies.QueryPanel _queryPanel, mendix.proxies.StartPanelPreference _startPanelPreference)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryPanel", _queryPanel == null ? null : _queryPanel.getMendixObject());
			params.put("StartPanelPreference", _startPanelPreference == null ? null : _startPanelPreference.name());
			Core.execute(context, "QueryRequests.OpenStartPanelByPreference", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openStartPanelResultForm(IContext context, queryrequests.proxies.QueryPanel _queryPanel, boolean _anyResults)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryPanel", _queryPanel == null ? null : _queryPanel.getMendixObject());
			params.put("AnyResults", _anyResults);
			Core.execute(context, "QueryRequests.OpenStartPanelResultForm", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String publish_Progress_Icon(IContext context, notes.proxies.Note _note)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Note", _note == null ? null : _note.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.Publish_Progress_Icon", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void queryPart_SelectOrganisation(IContext context, nap.proxies.Organisation _organisation, queryrequests.proxies.QueryPart _queryPart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Organisation", _organisation == null ? null : _organisation.getMendixObject());
			params.put("QueryPart", _queryPart == null ? null : _queryPart.getMendixObject());
			Core.execute(context, "QueryRequests.QueryPart_SelectOrganisation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void queryPart_SelectPerson(IContext context, nap.proxies.Person _person, queryrequests.proxies.QueryPart _queryPart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			params.put("QueryPart", _queryPart == null ? null : _queryPart.getMendixObject());
			Core.execute(context, "QueryRequests.QueryPart_SelectPerson", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String replaceCharacters(IContext context, java.lang.String _rightOperantString)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RightOperantString", _rightOperantString);
			return (java.lang.String)Core.execute(context, "QueryRequests.ReplaceCharacters", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String replaceDefaultCodes(IContext context, java.lang.String _originalXPath)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OriginalXPath", _originalXPath);
			return (java.lang.String)Core.execute(context, "QueryRequests.ReplaceDefaultCodes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void retrieveInitialQueryAndExecute(IContext context, mendix.proxies.Account _inputAccount, queryrequests.proxies.QueryPanel _inputQueryPanel)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputAccount", _inputAccount == null ? null : _inputAccount.getMendixObject());
			params.put("InputQueryPanel", _inputQueryPanel == null ? null : _inputQueryPanel.getMendixObject());
			Core.execute(context, "QueryRequests.RetrieveInitialQueryAndExecute", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String searchExplanation_PortalIcon(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.String)Core.execute(context, "QueryRequests.SearchExplanation_PortalIcon", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String searchExplanation_PortalIcon_Content(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.String)Core.execute(context, "QueryRequests.SearchExplanation_PortalIcon_Content", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static queryrequests.proxies.SearchResults searchIndex(IContext context, advancedsearch.proxies.SearchParams _searchParams)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SearchParams", _searchParams == null ? null : _searchParams.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "QueryRequests.SearchIndex", params);
			return result == null ? null : queryrequests.proxies.SearchResults.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void searchValues(IContext context, queryrequests.proxies.SearchContainer _searchContainer)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SearchContainer", _searchContainer == null ? null : _searchContainer.getMendixObject());
			Core.execute(context, "QueryRequests.SearchValues", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void selectDynamicAttributeForSelectableField(IContext context, slm.proxies.ScreenBlockAttribute _screenBlockAttribute)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ScreenBlockAttribute", _screenBlockAttribute == null ? null : _screenBlockAttribute.getMendixObject());
			Core.execute(context, "QueryRequests.SelectDynamicAttributeForSelectableField", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String set_incomingMailLabel(IContext context, queryrequests.proxies.QueryPanel _queryPanel)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryPanel", _queryPanel == null ? null : _queryPanel.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.Set_incomingMailLabel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setDateCode(IContext context, queryrequests.proxies.QueryPart _queryPart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryPart", _queryPart == null ? null : _queryPart.getMendixObject());
			Core.execute(context, "QueryRequests.SetDateCode", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setQueryDateCode(IContext context, queryrequests.proxies.SelectableQueryCode _selectableQueryCodes, queryrequests.proxies.QueryPart _queryPart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SelectableQueryCodes", _selectableQueryCodes == null ? null : _selectableQueryCodes.getMendixObject());
			params.put("QueryPart", _queryPart == null ? null : _queryPart.getMendixObject());
			Core.execute(context, "QueryRequests.SetQueryDateCode", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setQueryStringCode(IContext context, queryrequests.proxies.SelectableQueryCode _selectableQueryCodes, queryrequests.proxies.QueryPart _queryPart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SelectableQueryCodes", _selectableQueryCodes == null ? null : _selectableQueryCodes.getMendixObject());
			params.put("QueryPart", _queryPart == null ? null : _queryPart.getMendixObject());
			Core.execute(context, "QueryRequests.SetQueryStringCode", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean setSelectableFieldUsedInQuery(IContext context, queryrequests.proxies.SelectableField _selectableField)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SelectableField", _selectableField == null ? null : _selectableField.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "QueryRequests.SetSelectableFieldUsedInQuery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setSelectionFormUsage(IContext context, queryrequests.proxies.FilterCondition _filterCondition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FilterCondition", _filterCondition == null ? null : _filterCondition.getMendixObject());
			Core.execute(context, "QueryRequests.SetSelectionFormUsage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setSelectValue(IContext context, queryrequests.proxies.SourceData _sourceData, queryrequests.proxies.SearchContainer _searchContainer)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SourceData", _sourceData == null ? null : _sourceData.getMendixObject());
			params.put("SearchContainer", _searchContainer == null ? null : _searchContainer.getMendixObject());
			Core.execute(context, "QueryRequests.SetSelectValue", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setStringCode(IContext context, queryrequests.proxies.QueryPart _queryPart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryPart", _queryPart == null ? null : _queryPart.getMendixObject());
			Core.execute(context, "QueryRequests.SetStringCode", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void showHotkeyDialog(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "QueryRequests.ShowHotkeyDialog", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean showIncomingMailWidget(IContext context, queryrequests.proxies.QueryPanel _queryPanel)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryPanel", _queryPanel == null ? null : _queryPanel.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "QueryRequests.ShowIncomingMailWidget", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String stateDivHTML_Request(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.StateDivHTML_Request", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * Ticket #3309:
	 * Added a ")" to the string expression Does_not_contain
	 * 
	 * 3343
	 * Add translation code ##SHOWNULL## which is replaced by 
	 * 'not('+$MendixRelation/Name+'/'+$MendixRelation/ChildName+')'
	 * in microflow CreateXPathQueryString to show null values.
	 * 
	 * 1172370: Relative timeframes in personal queries
	 */
	public static java.lang.String translateDynamicFieldOperator(IContext context, queryrequests.proxies.SearchOperators _searchOperators)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SearchOperators", _searchOperators == null ? null : _searchOperators.name());
			return (java.lang.String)Core.execute(context, "QueryRequests.TranslateDynamicFieldOperator", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * Ticket #3309:
	 * Added a ")" to the string expression Does_not_contain
	 * 
	 * 3343
	 * Add translation code ##SHOWNULL## which is replaced by 
	 * 'not('+$MendixRelation/Name+'/'+$MendixRelation/ChildName+')'
	 * in microflow CreateXPathQueryString to show null values.
	 * 
	 * 1172370: Relative timeframes in personal queries
	 */
	public static java.lang.String translateOperator(IContext context, queryrequests.proxies.SearchOperators _searchOperators)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SearchOperators", _searchOperators == null ? null : _searchOperators.name());
			return (java.lang.String)Core.execute(context, "QueryRequests.TranslateOperator", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [801176] Update for input parameters for calling microflow 'GetDateTimeStringForLanguage':
	 * Additional input 'AsUTC' set to false for all
	 */
	public static java.lang.String translateRequestSnippetBody(IContext context, process.proxies.OverviewRequestSnippet _overviewRequestSnippet)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OverviewRequestSnippet", _overviewRequestSnippet == null ? null : _overviewRequestSnippet.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.TranslateRequestSnippetBody", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String unpublish_Progress_Icon(IContext context, notes.proxies.Note _note)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Note", _note == null ? null : _note.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.Unpublish_Progress_Icon", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateAndCreateXpath(IContext context, queryrequests.proxies.Query _query)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Query", _query == null ? null : _query.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "QueryRequests.ValidateAndCreateXpath", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 1172370: Relative timeframes in personal queries
	 */
	public static boolean validateOperator(IContext context, queryrequests.proxies.OperatorForField _operatorForField)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OperatorForField", _operatorForField == null ? null : _operatorForField.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "QueryRequests.ValidateOperator", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateQueryCodes(IContext context, queryrequests.proxies.SelectableQueryCode _selectableQueryCodes)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SelectableQueryCodes", _selectableQueryCodes == null ? null : _selectableQueryCodes.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "QueryRequests.ValidateQueryCodes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * SprintR 1172370 / 1090781 / 1090793 use timeframes in queries
	 */
	public static boolean validateQueryPart(IContext context, queryrequests.proxies.QueryPart _queryPart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryPart", _queryPart == null ? null : _queryPart.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "QueryRequests.ValidateQueryPart", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateSelectableFields(IContext context, queryrequests.proxies.SelectableField _selectableField)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SelectableField", _selectableField == null ? null : _selectableField.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "QueryRequests.ValidateSelectableFields", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String view_CI_Icon(IContext context, cmdb.proxies.AffectedCI _affectedCI)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AffectedCI", _affectedCI == null ? null : _affectedCI.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.View_CI_Icon", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String view_Icon(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.View_Icon", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String view_Notes_Icon(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.View_Notes_Icon", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String view_Pencil_Icon(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.View_Pencil_Icon", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String view_ShoppingCart_Icon(IContext context, servicecatalogue.proxies.ShoppingCartProduct _shoppingCartProduct)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ShoppingCartProduct", _shoppingCartProduct == null ? null : _shoppingCartProduct.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.View_ShoppingCart_Icon", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String view_ShoppingCartProduct_Icon(IContext context, servicecatalogue.proxies.ShoppingCartProduct _shoppingCartProduct)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ShoppingCartProduct", _shoppingCartProduct == null ? null : _shoppingCartProduct.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.View_ShoppingCartProduct_Icon", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String view_Task_Icon(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			return (java.lang.String)Core.execute(context, "QueryRequests.View_Task_Icon", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String webshop_Icon(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.String)Core.execute(context, "QueryRequests.Webshop_Icon", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}