// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package queryrequests.proxies;

public class SelectableQueryCode
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject selectableQueryCodeMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "QueryRequests.SelectableQueryCode";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		DateCode("DateCode"),
		CodeType("CodeType"),
		StringCode("StringCode");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public SelectableQueryCode(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "QueryRequests.SelectableQueryCode"));
	}

	protected SelectableQueryCode(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject selectableQueryCodeMendixObject)
	{
		if (selectableQueryCodeMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("QueryRequests.SelectableQueryCode", selectableQueryCodeMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a QueryRequests.SelectableQueryCode");

		this.selectableQueryCodeMendixObject = selectableQueryCodeMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'SelectableQueryCode.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static queryrequests.proxies.SelectableQueryCode initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return queryrequests.proxies.SelectableQueryCode.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static queryrequests.proxies.SelectableQueryCode initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new queryrequests.proxies.SelectableQueryCode(context, mendixObject);
	}

	public static queryrequests.proxies.SelectableQueryCode load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return queryrequests.proxies.SelectableQueryCode.initialize(context, mendixObject);
	}

	public static java.util.List<queryrequests.proxies.SelectableQueryCode> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<queryrequests.proxies.SelectableQueryCode> result = new java.util.ArrayList<queryrequests.proxies.SelectableQueryCode>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//QueryRequests.SelectableQueryCode" + xpathConstraint))
			result.add(queryrequests.proxies.SelectableQueryCode.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * Set value of DateCode
	 * @param datecode
	 */
	public final queryrequests.proxies.DateCodes getDateCode()
	{
		return getDateCode(getContext());
	}

	/**
	 * @param context
	 * @return value of DateCode
	 */
	public final queryrequests.proxies.DateCodes getDateCode(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.DateCode.toString());
		if (obj == null)
			return null;

		return queryrequests.proxies.DateCodes.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of DateCode
	 * @param datecode
	 */
	public final void setDateCode(queryrequests.proxies.DateCodes datecode)
	{
		setDateCode(getContext(), datecode);
	}

	/**
	 * Set value of DateCode
	 * @param context
	 * @param datecode
	 */
	public final void setDateCode(com.mendix.systemwideinterfaces.core.IContext context, queryrequests.proxies.DateCodes datecode)
	{
		if (datecode != null)
			getMendixObject().setValue(context, MemberNames.DateCode.toString(), datecode.toString());
		else
			getMendixObject().setValue(context, MemberNames.DateCode.toString(), null);
	}

	/**
	 * Set value of CodeType
	 * @param codetype
	 */
	public final queryrequests.proxies.QuerySelectCodeType getCodeType()
	{
		return getCodeType(getContext());
	}

	/**
	 * @param context
	 * @return value of CodeType
	 */
	public final queryrequests.proxies.QuerySelectCodeType getCodeType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.CodeType.toString());
		if (obj == null)
			return null;

		return queryrequests.proxies.QuerySelectCodeType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of CodeType
	 * @param codetype
	 */
	public final void setCodeType(queryrequests.proxies.QuerySelectCodeType codetype)
	{
		setCodeType(getContext(), codetype);
	}

	/**
	 * Set value of CodeType
	 * @param context
	 * @param codetype
	 */
	public final void setCodeType(com.mendix.systemwideinterfaces.core.IContext context, queryrequests.proxies.QuerySelectCodeType codetype)
	{
		if (codetype != null)
			getMendixObject().setValue(context, MemberNames.CodeType.toString(), codetype.toString());
		else
			getMendixObject().setValue(context, MemberNames.CodeType.toString(), null);
	}

	/**
	 * Set value of StringCode
	 * @param stringcode
	 */
	public final queryrequests.proxies.StringCodes getStringCode()
	{
		return getStringCode(getContext());
	}

	/**
	 * @param context
	 * @return value of StringCode
	 */
	public final queryrequests.proxies.StringCodes getStringCode(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.StringCode.toString());
		if (obj == null)
			return null;

		return queryrequests.proxies.StringCodes.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of StringCode
	 * @param stringcode
	 */
	public final void setStringCode(queryrequests.proxies.StringCodes stringcode)
	{
		setStringCode(getContext(), stringcode);
	}

	/**
	 * Set value of StringCode
	 * @param context
	 * @param stringcode
	 */
	public final void setStringCode(com.mendix.systemwideinterfaces.core.IContext context, queryrequests.proxies.StringCodes stringcode)
	{
		if (stringcode != null)
			getMendixObject().setValue(context, MemberNames.StringCode.toString(), stringcode.toString());
		else
			getMendixObject().setValue(context, MemberNames.StringCode.toString(), null);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return selectableQueryCodeMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final queryrequests.proxies.SelectableQueryCode that = (queryrequests.proxies.SelectableQueryCode) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "QueryRequests.SelectableQueryCode";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
