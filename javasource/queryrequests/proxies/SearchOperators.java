// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package queryrequests.proxies;

public enum SearchOperators
{
	Is(new java.lang.String[][] { new java.lang.String[] { "en_US", "Is" }, new java.lang.String[] { "nl_NL", "Is" }, new java.lang.String[] { "de_DE", "Ist " } }),
	Is_not(new java.lang.String[][] { new java.lang.String[] { "en_US", "Is not" }, new java.lang.String[] { "nl_NL", "Is niet" }, new java.lang.String[] { "de_DE", "Ist nicht" } }),
	Contains(new java.lang.String[][] { new java.lang.String[] { "en_US", "Contains" }, new java.lang.String[] { "nl_NL", "Bevat" }, new java.lang.String[] { "de_DE", "Inhalte " } }),
	Does_not_contain(new java.lang.String[][] { new java.lang.String[] { "en_US", "Does not contain" }, new java.lang.String[] { "nl_NL", "Bevat niet" }, new java.lang.String[] { "de_DE", "Enthält nicht / keine " } }),
	Starts_with(new java.lang.String[][] { new java.lang.String[] { "en_US", "Starts with" }, new java.lang.String[] { "nl_NL", "Start met" }, new java.lang.String[] { "de_DE", "Starten mit" } }),
	Greater_than(new java.lang.String[][] { new java.lang.String[] { "en_US", "Greater than" }, new java.lang.String[] { "nl_NL", "Groter dan" }, new java.lang.String[] { "de_DE", "Größer als " } }),
	Less_than(new java.lang.String[][] { new java.lang.String[] { "en_US", "Less than" }, new java.lang.String[] { "nl_NL", "Kleiner dan" }, new java.lang.String[] { "de_DE", "Weniger als " } }),
	_Empty(new java.lang.String[][] { new java.lang.String[] { "en_US", "Empty" }, new java.lang.String[] { "nl_NL", "Leeg" } }),
	Filled(new java.lang.String[][] { new java.lang.String[] { "en_US", "Filled" }, new java.lang.String[] { "nl_NL", "Gevuld" } }),
	TIMEFRAME(new java.lang.String[][] { new java.lang.String[] { "en_US", "Timeframe" }, new java.lang.String[] { "nl_NL", "Tijdsperiode" } });

	private java.util.Map<java.lang.String, java.lang.String> captions;

	private SearchOperators(java.lang.String[][] captionStrings)
	{
		this.captions = new java.util.HashMap<java.lang.String, java.lang.String>();
		for (java.lang.String[] captionString : captionStrings)
			captions.put(captionString[0], captionString[1]);
	}

	public java.lang.String getCaption(java.lang.String languageCode)
	{
		if (captions.containsKey(languageCode))
			return captions.get(languageCode);
		return captions.get("en_US");
	}

	public java.lang.String getCaption()
	{
		return captions.get("en_US");
	}
}
