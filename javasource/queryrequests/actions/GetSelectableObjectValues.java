// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package queryrequests.actions;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import queryrequests.proxies.SourceData;
import com.mendix.core.Core;
import com.mendix.core.objectmanagement.MendixIdentifier;
import com.mendix.systemwideinterfaces.connectionbus.data.IDataRow;
import com.mendix.systemwideinterfaces.connectionbus.data.IDataTable;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.systemwideinterfaces.core.meta.IMetaPrimitive;
import com.mendix.systemwideinterfaces.core.meta.IMetaPrimitive.PrimitiveType;
import com.mendix.webui.CustomJavaAction;

public class GetSelectableObjectValues extends CustomJavaAction<java.util.List<IMendixObject>>
{
	private java.lang.String EntityName;
	private java.lang.String ReferencedAttribute;
	private java.lang.String ReferencedHelperAttribute;
	private java.lang.Boolean UseHelperAttribute;

	public GetSelectableObjectValues(IContext context, java.lang.String EntityName, java.lang.String ReferencedAttribute, java.lang.String ReferencedHelperAttribute, java.lang.Boolean UseHelperAttribute)
	{
		super(context);
		this.EntityName = EntityName;
		this.ReferencedAttribute = ReferencedAttribute;
		this.ReferencedHelperAttribute = ReferencedHelperAttribute;
		this.UseHelperAttribute = UseHelperAttribute;
	}

	@Override
	public java.util.List<IMendixObject> executeAction() throws Exception
	{
		// BEGIN USER CODE
		List<IMendixObject> result = new ArrayList<IMendixObject>();
		if(emptyString(EntityName) || emptyString(ReferencedAttribute) || (UseHelperAttribute && emptyString(ReferencedHelperAttribute)))
			return result;

		IContext myContext = getContext();
		String oqlquery = "SELECT ID, "+ReferencedAttribute+" [##HELPREF##] FROM "+EntityName+" ORDER BY "+ReferencedAttribute+" ASC";
		if(UseHelperAttribute)
			oqlquery = oqlquery.replace("[##HELPREF##]", ","+ReferencedHelperAttribute);
		else 
			oqlquery = oqlquery.replace("[##HELPREF##]", "");

		IMetaPrimitive refAttrMeta = Core.getMetaPrimitive(EntityName+"."+ReferencedAttribute);
		IMetaPrimitive helperAttrMeta = (UseHelperAttribute) ? Core.getMetaPrimitive(EntityName+"."+ReferencedHelperAttribute): null;

		PrimitiveType refType = refAttrMeta.getType();
		PrimitiveType helperType = (UseHelperAttribute && helperAttrMeta != null) ? helperAttrMeta.getType(): null;
		
		IDataTable oqlResults = Core.retrieveOQLDataTable(myContext, oqlquery);
		for (IDataRow dataRow:oqlResults.getRows()) {
			SourceData sourceData = new SourceData(myContext);			
			MendixIdentifier id = dataRow.getValue(myContext, 0);
			sourceData.setObjectID(Long.toString(id.toLong()));
			if(refType == IMetaPrimitive.PrimitiveType.DateTime) {
				sourceData.setValue_DateTime((Date) dataRow.getValue(myContext, 1));
			} else if(refType == IMetaPrimitive.PrimitiveType.Integer) {
				sourceData.setValue_Int((Integer) dataRow.getValue(myContext, 1));
			} else if(refType == IMetaPrimitive.PrimitiveType.Boolean) {
				sourceData.setValue_Boolean((Boolean) dataRow.getValue(myContext, 1));
			} else {
				sourceData.setValue((String) dataRow.getValue(myContext, 1));
			}
			if(UseHelperAttribute){
				if(helperType == IMetaPrimitive.PrimitiveType.DateTime) {
					sourceData.setHelperValue_DateTime((Date) dataRow.getValue(myContext, 2));
				} else if(helperType == IMetaPrimitive.PrimitiveType.Integer) {
					sourceData.setHelperValue_Int((Integer) dataRow.getValue(myContext, 2));
				} else if(helperType == IMetaPrimitive.PrimitiveType.Boolean) {
					sourceData.setHelperValue_Boolean((Boolean) dataRow.getValue(myContext, 2));
				} else {
					sourceData.setHelperValue((String) dataRow.getValue(myContext, 2));
				}
			}
			result.add(sourceData.getMendixObject());
		}
		
		return result;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "GetSelectableObjectValues";
	}

	// BEGIN EXTRA CODE
	private boolean emptyString(String input){
		return input == null || input.equals("");
	}
	// END EXTRA CODE
}
