// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package queryrequests.actions;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import queryrequests.proxies.SourceData;
import com.mendix.core.Core;
import com.mendix.core.objectmanagement.member.MendixBoolean;
import com.mendix.core.objectmanagement.member.MendixDateTime;
import com.mendix.core.objectmanagement.member.MendixEnum;
import com.mendix.core.objectmanagement.member.MendixInteger;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.systemwideinterfaces.core.IMendixObjectMember;
import com.mendix.systemwideinterfaces.core.meta.IMetaEnumValue;
import com.mendix.systemwideinterfaces.core.meta.IMetaPrimitive;
import com.mendix.webui.CustomJavaAction;

public class GetSelectableEnumValues extends CustomJavaAction<java.util.List<IMendixObject>>
{
	private java.lang.String EntityName;
	private java.lang.String AttributeName;
	private java.lang.String ReferencedHelperAttribute;
	private java.lang.Boolean UseHelperAttribute;
	private java.lang.Boolean UpdateReferencedField;

	public GetSelectableEnumValues(IContext context, java.lang.String EntityName, java.lang.String AttributeName, java.lang.String ReferencedHelperAttribute, java.lang.Boolean UseHelperAttribute, java.lang.Boolean UpdateReferencedField)
	{
		super(context);
		this.EntityName = EntityName;
		this.AttributeName = AttributeName;
		this.ReferencedHelperAttribute = ReferencedHelperAttribute;
		this.UseHelperAttribute = UseHelperAttribute;
		this.UpdateReferencedField = UpdateReferencedField;
	}

	@Override
	public java.util.List<IMendixObject> executeAction() throws Exception
	{
		// BEGIN USER CODE
		List<IMendixObject> result = new ArrayList<IMendixObject>();
		if(UpdateReferencedField){
			String xPathQuery = "//"+EntityName;
			Map<String,String> sort = new HashMap<String,String>();
			sort.put(AttributeName, "ASC");
			List<IMendixObject> dataList = Core.retrieveXPathQuery(this.getContext(), xPathQuery,0,0,sort);
			for(IMendixObject dataRecord : dataList){
				SourceData sourceData = new SourceData(this.getContext());
				sourceData.setValue((((MendixEnum) dataRecord.getMember(this.getContext(), AttributeName)).getValue(this.getContext())));
				if(UseHelperAttribute){
					sourceData.setValue((((MendixEnum) dataRecord.getMember(this.getContext(), AttributeName)).getValue(this.getContext())));
					IMendixObjectMember<?> referencedHelperIMendixObjectMember = (IMendixObjectMember<?>) dataRecord.getMember(this.getContext(), ReferencedHelperAttribute);
					if(referencedHelperIMendixObjectMember instanceof MendixDateTime ){
						sourceData.setHelperValue_DateTime((((MendixDateTime) dataRecord.getMember(this.getContext(), ReferencedHelperAttribute)).getValue(this.getContext())));
					}
					else if(referencedHelperIMendixObjectMember instanceof MendixInteger ){
						sourceData.setHelperValue_Int((((MendixInteger) dataRecord.getMember(this.getContext(), ReferencedHelperAttribute)).getValue(this.getContext())));
					}
					else if(referencedHelperIMendixObjectMember instanceof MendixBoolean ){
						sourceData.setHelperValue_Boolean((((MendixBoolean) dataRecord.getMember(this.getContext(), ReferencedHelperAttribute)).getValue(this.getContext())));
					}			
					//float, long and currency are not supported at this moment, they cannot be selected when creating a new selectable field, secondly there is no value attribute with the matching data type in the QueryPart entity.				
					else{
						sourceData.setHelperValue((String) ((IMendixObjectMember<?>) dataRecord.getMember(this.getContext(), ReferencedHelperAttribute)).getValue(this.getContext()));
					}				
				}
				result.add(sourceData.getMendixObject());
			}
		}
		else{
			IMetaPrimitive iMetaPrimitive = Core.getMetaPrimitive(EntityName+"."+AttributeName);
			for(IMetaEnumValue enumValue:iMetaPrimitive.getEnumValues() ){
				SourceData sourceData = new SourceData(this.getContext());
				sourceData.setValue(enumValue.toString());
				result.add(sourceData.getMendixObject());
			}	
		}
		return result;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "GetSelectableEnumValues";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
