// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package questionnaire.proxies;

public class Questionaire_instance extends requestanalysis.proxies.Analysis_Instance
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Questionnaire.Questionaire_instance";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Person("Person"),
		Organisation("Organisation"),
		RequestID("RequestID"),
		Name("Name"),
		AnalysisFinished("AnalysisFinished"),
		AnalysisID("AnalysisID"),
		Analysis("Analysis"),
		Questionaire_instance_QuestionnaireSetup("Questionnaire.Questionaire_instance_QuestionnaireSetup"),
		Questionaires_instance_Person("Questionnaire.Questionaires_instance_Person"),
		Questionaires_instance_Organisation("Questionnaire.Questionaires_instance_Organisation"),
		Analysis_Instance_Analysis("RequestAnalysis.Analysis_Instance_Analysis"),
		Analysis_Instance_Request("RequestAnalysis.Analysis_Instance_Request");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Questionaire_instance(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Questionnaire.Questionaire_instance"));
	}

	protected Questionaire_instance(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject questionaire_instanceMendixObject)
	{
		super(context, questionaire_instanceMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("Questionnaire.Questionaire_instance", questionaire_instanceMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Questionnaire.Questionaire_instance");
	}

	/**
	 * @deprecated Use 'Questionaire_instance.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static questionnaire.proxies.Questionaire_instance initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return questionnaire.proxies.Questionaire_instance.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static questionnaire.proxies.Questionaire_instance initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new questionnaire.proxies.Questionaire_instance(context, mendixObject);
	}

	public static questionnaire.proxies.Questionaire_instance load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return questionnaire.proxies.Questionaire_instance.initialize(context, mendixObject);
	}

	public static java.util.List<questionnaire.proxies.Questionaire_instance> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<questionnaire.proxies.Questionaire_instance> result = new java.util.ArrayList<questionnaire.proxies.Questionaire_instance>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Questionnaire.Questionaire_instance" + xpathConstraint))
			result.add(questionnaire.proxies.Questionaire_instance.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of Person
	 */
	public final java.lang.String getPerson()
	{
		return getPerson(getContext());
	}

	/**
	 * @param context
	 * @return value of Person
	 */
	public final java.lang.String getPerson(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Person.toString());
	}

	/**
	 * Set value of Person
	 * @param person
	 */
	public final void setPerson(java.lang.String person)
	{
		setPerson(getContext(), person);
	}

	/**
	 * Set value of Person
	 * @param context
	 * @param person
	 */
	public final void setPerson(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String person)
	{
		getMendixObject().setValue(context, MemberNames.Person.toString(), person);
	}

	/**
	 * @return value of Organisation
	 */
	public final java.lang.String getOrganisation()
	{
		return getOrganisation(getContext());
	}

	/**
	 * @param context
	 * @return value of Organisation
	 */
	public final java.lang.String getOrganisation(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Organisation.toString());
	}

	/**
	 * Set value of Organisation
	 * @param organisation
	 */
	public final void setOrganisation(java.lang.String organisation)
	{
		setOrganisation(getContext(), organisation);
	}

	/**
	 * Set value of Organisation
	 * @param context
	 * @param organisation
	 */
	public final void setOrganisation(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String organisation)
	{
		getMendixObject().setValue(context, MemberNames.Organisation.toString(), organisation);
	}

	/**
	 * @return value of RequestID
	 */
	public final java.lang.String getRequestID()
	{
		return getRequestID(getContext());
	}

	/**
	 * @param context
	 * @return value of RequestID
	 */
	public final java.lang.String getRequestID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.RequestID.toString());
	}

	/**
	 * Set value of RequestID
	 * @param requestid
	 */
	public final void setRequestID(java.lang.String requestid)
	{
		setRequestID(getContext(), requestid);
	}

	/**
	 * Set value of RequestID
	 * @param context
	 * @param requestid
	 */
	public final void setRequestID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String requestid)
	{
		getMendixObject().setValue(context, MemberNames.RequestID.toString(), requestid);
	}

	/**
	 * @return value of Questionaire_instance_QuestionnaireSetup
	 */
	public final questionnaire.proxies.QuestionnaireSetup getQuestionaire_instance_QuestionnaireSetup() throws com.mendix.core.CoreException
	{
		return getQuestionaire_instance_QuestionnaireSetup(getContext());
	}

	/**
	 * @param context
	 * @return value of Questionaire_instance_QuestionnaireSetup
	 */
	public final questionnaire.proxies.QuestionnaireSetup getQuestionaire_instance_QuestionnaireSetup(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		questionnaire.proxies.QuestionnaireSetup result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Questionaire_instance_QuestionnaireSetup.toString());
		if (identifier != null)
			result = questionnaire.proxies.QuestionnaireSetup.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Questionaire_instance_QuestionnaireSetup
	 * @param questionaire_instance_questionnairesetup
	 */
	public final void setQuestionaire_instance_QuestionnaireSetup(questionnaire.proxies.QuestionnaireSetup questionaire_instance_questionnairesetup)
	{
		setQuestionaire_instance_QuestionnaireSetup(getContext(), questionaire_instance_questionnairesetup);
	}

	/**
	 * Set value of Questionaire_instance_QuestionnaireSetup
	 * @param context
	 * @param questionaire_instance_questionnairesetup
	 */
	public final void setQuestionaire_instance_QuestionnaireSetup(com.mendix.systemwideinterfaces.core.IContext context, questionnaire.proxies.QuestionnaireSetup questionaire_instance_questionnairesetup)
	{
		if (questionaire_instance_questionnairesetup == null)
			getMendixObject().setValue(context, MemberNames.Questionaire_instance_QuestionnaireSetup.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Questionaire_instance_QuestionnaireSetup.toString(), questionaire_instance_questionnairesetup.getMendixObject().getId());
	}

	/**
	 * @return value of Questionaires_instance_Person
	 */
	public final nap.proxies.Person getQuestionaires_instance_Person() throws com.mendix.core.CoreException
	{
		return getQuestionaires_instance_Person(getContext());
	}

	/**
	 * @param context
	 * @return value of Questionaires_instance_Person
	 */
	public final nap.proxies.Person getQuestionaires_instance_Person(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		nap.proxies.Person result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Questionaires_instance_Person.toString());
		if (identifier != null)
			result = nap.proxies.Person.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Questionaires_instance_Person
	 * @param questionaires_instance_person
	 */
	public final void setQuestionaires_instance_Person(nap.proxies.Person questionaires_instance_person)
	{
		setQuestionaires_instance_Person(getContext(), questionaires_instance_person);
	}

	/**
	 * Set value of Questionaires_instance_Person
	 * @param context
	 * @param questionaires_instance_person
	 */
	public final void setQuestionaires_instance_Person(com.mendix.systemwideinterfaces.core.IContext context, nap.proxies.Person questionaires_instance_person)
	{
		if (questionaires_instance_person == null)
			getMendixObject().setValue(context, MemberNames.Questionaires_instance_Person.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Questionaires_instance_Person.toString(), questionaires_instance_person.getMendixObject().getId());
	}

	/**
	 * @return value of Questionaires_instance_Organisation
	 */
	public final nap.proxies.Organisation getQuestionaires_instance_Organisation() throws com.mendix.core.CoreException
	{
		return getQuestionaires_instance_Organisation(getContext());
	}

	/**
	 * @param context
	 * @return value of Questionaires_instance_Organisation
	 */
	public final nap.proxies.Organisation getQuestionaires_instance_Organisation(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		nap.proxies.Organisation result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Questionaires_instance_Organisation.toString());
		if (identifier != null)
			result = nap.proxies.Organisation.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Questionaires_instance_Organisation
	 * @param questionaires_instance_organisation
	 */
	public final void setQuestionaires_instance_Organisation(nap.proxies.Organisation questionaires_instance_organisation)
	{
		setQuestionaires_instance_Organisation(getContext(), questionaires_instance_organisation);
	}

	/**
	 * Set value of Questionaires_instance_Organisation
	 * @param context
	 * @param questionaires_instance_organisation
	 */
	public final void setQuestionaires_instance_Organisation(com.mendix.systemwideinterfaces.core.IContext context, nap.proxies.Organisation questionaires_instance_organisation)
	{
		if (questionaires_instance_organisation == null)
			getMendixObject().setValue(context, MemberNames.Questionaires_instance_Organisation.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Questionaires_instance_Organisation.toString(), questionaires_instance_organisation.getMendixObject().getId());
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final questionnaire.proxies.Questionaire_instance that = (questionnaire.proxies.Questionaire_instance) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Questionnaire.Questionaire_instance";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
