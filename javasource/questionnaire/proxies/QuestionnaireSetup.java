// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package questionnaire.proxies;

public class QuestionnaireSetup
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject questionnaireSetupMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Questionnaire.QuestionnaireSetup";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		isValid("isValid"),
		token("token"),
		QuestionnaireSetup_Person("Questionnaire.QuestionnaireSetup_Person"),
		QuestionnaireSetup_Organisation("Questionnaire.QuestionnaireSetup_Organisation"),
		QuestionnaireSetup_Request("Questionnaire.QuestionnaireSetup_Request");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public QuestionnaireSetup(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Questionnaire.QuestionnaireSetup"));
	}

	protected QuestionnaireSetup(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject questionnaireSetupMendixObject)
	{
		if (questionnaireSetupMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Questionnaire.QuestionnaireSetup", questionnaireSetupMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Questionnaire.QuestionnaireSetup");

		this.questionnaireSetupMendixObject = questionnaireSetupMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'QuestionnaireSetup.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static questionnaire.proxies.QuestionnaireSetup initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return questionnaire.proxies.QuestionnaireSetup.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static questionnaire.proxies.QuestionnaireSetup initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new questionnaire.proxies.QuestionnaireSetup(context, mendixObject);
	}

	public static questionnaire.proxies.QuestionnaireSetup load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return questionnaire.proxies.QuestionnaireSetup.initialize(context, mendixObject);
	}

	public static java.util.List<questionnaire.proxies.QuestionnaireSetup> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<questionnaire.proxies.QuestionnaireSetup> result = new java.util.ArrayList<questionnaire.proxies.QuestionnaireSetup>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Questionnaire.QuestionnaireSetup" + xpathConstraint))
			result.add(questionnaire.proxies.QuestionnaireSetup.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of isValid
	 */
	public final java.lang.Boolean getisValid()
	{
		return getisValid(getContext());
	}

	/**
	 * @param context
	 * @return value of isValid
	 */
	public final java.lang.Boolean getisValid(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.isValid.toString());
	}

	/**
	 * Set value of isValid
	 * @param isvalid
	 */
	public final void setisValid(java.lang.Boolean isvalid)
	{
		setisValid(getContext(), isvalid);
	}

	/**
	 * Set value of isValid
	 * @param context
	 * @param isvalid
	 */
	public final void setisValid(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean isvalid)
	{
		getMendixObject().setValue(context, MemberNames.isValid.toString(), isvalid);
	}

	/**
	 * @return value of token
	 */
	public final java.lang.String gettoken()
	{
		return gettoken(getContext());
	}

	/**
	 * @param context
	 * @return value of token
	 */
	public final java.lang.String gettoken(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.token.toString());
	}

	/**
	 * Set value of token
	 * @param token
	 */
	public final void settoken(java.lang.String token)
	{
		settoken(getContext(), token);
	}

	/**
	 * Set value of token
	 * @param context
	 * @param token
	 */
	public final void settoken(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String token)
	{
		getMendixObject().setValue(context, MemberNames.token.toString(), token);
	}

	/**
	 * @return value of QuestionnaireSetup_Person
	 */
	public final nap.proxies.Person getQuestionnaireSetup_Person() throws com.mendix.core.CoreException
	{
		return getQuestionnaireSetup_Person(getContext());
	}

	/**
	 * @param context
	 * @return value of QuestionnaireSetup_Person
	 */
	public final nap.proxies.Person getQuestionnaireSetup_Person(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		nap.proxies.Person result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.QuestionnaireSetup_Person.toString());
		if (identifier != null)
			result = nap.proxies.Person.load(context, identifier);
		return result;
	}

	/**
	 * Set value of QuestionnaireSetup_Person
	 * @param questionnairesetup_person
	 */
	public final void setQuestionnaireSetup_Person(nap.proxies.Person questionnairesetup_person)
	{
		setQuestionnaireSetup_Person(getContext(), questionnairesetup_person);
	}

	/**
	 * Set value of QuestionnaireSetup_Person
	 * @param context
	 * @param questionnairesetup_person
	 */
	public final void setQuestionnaireSetup_Person(com.mendix.systemwideinterfaces.core.IContext context, nap.proxies.Person questionnairesetup_person)
	{
		if (questionnairesetup_person == null)
			getMendixObject().setValue(context, MemberNames.QuestionnaireSetup_Person.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.QuestionnaireSetup_Person.toString(), questionnairesetup_person.getMendixObject().getId());
	}

	/**
	 * @return value of QuestionnaireSetup_Organisation
	 */
	public final nap.proxies.Organisation getQuestionnaireSetup_Organisation() throws com.mendix.core.CoreException
	{
		return getQuestionnaireSetup_Organisation(getContext());
	}

	/**
	 * @param context
	 * @return value of QuestionnaireSetup_Organisation
	 */
	public final nap.proxies.Organisation getQuestionnaireSetup_Organisation(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		nap.proxies.Organisation result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.QuestionnaireSetup_Organisation.toString());
		if (identifier != null)
			result = nap.proxies.Organisation.load(context, identifier);
		return result;
	}

	/**
	 * Set value of QuestionnaireSetup_Organisation
	 * @param questionnairesetup_organisation
	 */
	public final void setQuestionnaireSetup_Organisation(nap.proxies.Organisation questionnairesetup_organisation)
	{
		setQuestionnaireSetup_Organisation(getContext(), questionnairesetup_organisation);
	}

	/**
	 * Set value of QuestionnaireSetup_Organisation
	 * @param context
	 * @param questionnairesetup_organisation
	 */
	public final void setQuestionnaireSetup_Organisation(com.mendix.systemwideinterfaces.core.IContext context, nap.proxies.Organisation questionnairesetup_organisation)
	{
		if (questionnairesetup_organisation == null)
			getMendixObject().setValue(context, MemberNames.QuestionnaireSetup_Organisation.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.QuestionnaireSetup_Organisation.toString(), questionnairesetup_organisation.getMendixObject().getId());
	}

	/**
	 * @return value of QuestionnaireSetup_Request
	 */
	public final process.proxies.Request getQuestionnaireSetup_Request() throws com.mendix.core.CoreException
	{
		return getQuestionnaireSetup_Request(getContext());
	}

	/**
	 * @param context
	 * @return value of QuestionnaireSetup_Request
	 */
	public final process.proxies.Request getQuestionnaireSetup_Request(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		process.proxies.Request result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.QuestionnaireSetup_Request.toString());
		if (identifier != null)
			result = process.proxies.Request.load(context, identifier);
		return result;
	}

	/**
	 * Set value of QuestionnaireSetup_Request
	 * @param questionnairesetup_request
	 */
	public final void setQuestionnaireSetup_Request(process.proxies.Request questionnairesetup_request)
	{
		setQuestionnaireSetup_Request(getContext(), questionnairesetup_request);
	}

	/**
	 * Set value of QuestionnaireSetup_Request
	 * @param context
	 * @param questionnairesetup_request
	 */
	public final void setQuestionnaireSetup_Request(com.mendix.systemwideinterfaces.core.IContext context, process.proxies.Request questionnairesetup_request)
	{
		if (questionnairesetup_request == null)
			getMendixObject().setValue(context, MemberNames.QuestionnaireSetup_Request.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.QuestionnaireSetup_Request.toString(), questionnairesetup_request.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return questionnaireSetupMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final questionnaire.proxies.QuestionnaireSetup that = (questionnaire.proxies.QuestionnaireSetup) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Questionnaire.QuestionnaireSetup";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
