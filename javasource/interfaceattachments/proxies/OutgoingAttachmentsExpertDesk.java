// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package interfaceattachments.proxies;

public class OutgoingAttachmentsExpertDesk extends interfaceshared.proxies.AuditableEntity
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "InterfaceAttachments.OutgoingAttachmentsExpertDesk";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		MessageID("MessageID"),
		InterfaceName("InterfaceName"),
		ExternalReferenceID("ExternalReferenceID"),
		InternalReferenceID("InternalReferenceID"),
		OutgoingAttachmentsExpertDesk_OutgoingAttachmentsMessageExpertDesk("InterfaceAttachments.OutgoingAttachmentsExpertDesk_OutgoingAttachmentsMessageExpertDesk"),
		AttachmentsContainerExpertDesk_OutgoingAttachmentsExpertDesk("InterfaceAttachments.AttachmentsContainerExpertDesk_OutgoingAttachmentsExpertDesk");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public OutgoingAttachmentsExpertDesk(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "InterfaceAttachments.OutgoingAttachmentsExpertDesk"));
	}

	protected OutgoingAttachmentsExpertDesk(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject outgoingAttachmentsExpertDeskMendixObject)
	{
		super(context, outgoingAttachmentsExpertDeskMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("InterfaceAttachments.OutgoingAttachmentsExpertDesk", outgoingAttachmentsExpertDeskMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a InterfaceAttachments.OutgoingAttachmentsExpertDesk");
	}

	/**
	 * @deprecated Use 'OutgoingAttachmentsExpertDesk.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static interfaceattachments.proxies.OutgoingAttachmentsExpertDesk initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return interfaceattachments.proxies.OutgoingAttachmentsExpertDesk.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static interfaceattachments.proxies.OutgoingAttachmentsExpertDesk initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new interfaceattachments.proxies.OutgoingAttachmentsExpertDesk(context, mendixObject);
	}

	public static interfaceattachments.proxies.OutgoingAttachmentsExpertDesk load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return interfaceattachments.proxies.OutgoingAttachmentsExpertDesk.initialize(context, mendixObject);
	}

	public static java.util.List<interfaceattachments.proxies.OutgoingAttachmentsExpertDesk> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<interfaceattachments.proxies.OutgoingAttachmentsExpertDesk> result = new java.util.ArrayList<interfaceattachments.proxies.OutgoingAttachmentsExpertDesk>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//InterfaceAttachments.OutgoingAttachmentsExpertDesk" + xpathConstraint))
			result.add(interfaceattachments.proxies.OutgoingAttachmentsExpertDesk.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of MessageID
	 */
	public final java.lang.String getMessageID()
	{
		return getMessageID(getContext());
	}

	/**
	 * @param context
	 * @return value of MessageID
	 */
	public final java.lang.String getMessageID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.MessageID.toString());
	}

	/**
	 * Set value of MessageID
	 * @param messageid
	 */
	public final void setMessageID(java.lang.String messageid)
	{
		setMessageID(getContext(), messageid);
	}

	/**
	 * Set value of MessageID
	 * @param context
	 * @param messageid
	 */
	public final void setMessageID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String messageid)
	{
		getMendixObject().setValue(context, MemberNames.MessageID.toString(), messageid);
	}

	/**
	 * @return value of InterfaceName
	 */
	public final java.lang.String getInterfaceName()
	{
		return getInterfaceName(getContext());
	}

	/**
	 * @param context
	 * @return value of InterfaceName
	 */
	public final java.lang.String getInterfaceName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.InterfaceName.toString());
	}

	/**
	 * Set value of InterfaceName
	 * @param interfacename
	 */
	public final void setInterfaceName(java.lang.String interfacename)
	{
		setInterfaceName(getContext(), interfacename);
	}

	/**
	 * Set value of InterfaceName
	 * @param context
	 * @param interfacename
	 */
	public final void setInterfaceName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String interfacename)
	{
		getMendixObject().setValue(context, MemberNames.InterfaceName.toString(), interfacename);
	}

	/**
	 * @return value of ExternalReferenceID
	 */
	public final java.lang.String getExternalReferenceID()
	{
		return getExternalReferenceID(getContext());
	}

	/**
	 * @param context
	 * @return value of ExternalReferenceID
	 */
	public final java.lang.String getExternalReferenceID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ExternalReferenceID.toString());
	}

	/**
	 * Set value of ExternalReferenceID
	 * @param externalreferenceid
	 */
	public final void setExternalReferenceID(java.lang.String externalreferenceid)
	{
		setExternalReferenceID(getContext(), externalreferenceid);
	}

	/**
	 * Set value of ExternalReferenceID
	 * @param context
	 * @param externalreferenceid
	 */
	public final void setExternalReferenceID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String externalreferenceid)
	{
		getMendixObject().setValue(context, MemberNames.ExternalReferenceID.toString(), externalreferenceid);
	}

	/**
	 * @return value of InternalReferenceID
	 */
	public final java.lang.String getInternalReferenceID()
	{
		return getInternalReferenceID(getContext());
	}

	/**
	 * @param context
	 * @return value of InternalReferenceID
	 */
	public final java.lang.String getInternalReferenceID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.InternalReferenceID.toString());
	}

	/**
	 * Set value of InternalReferenceID
	 * @param internalreferenceid
	 */
	public final void setInternalReferenceID(java.lang.String internalreferenceid)
	{
		setInternalReferenceID(getContext(), internalreferenceid);
	}

	/**
	 * Set value of InternalReferenceID
	 * @param context
	 * @param internalreferenceid
	 */
	public final void setInternalReferenceID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String internalreferenceid)
	{
		getMendixObject().setValue(context, MemberNames.InternalReferenceID.toString(), internalreferenceid);
	}

	/**
	 * @return value of OutgoingAttachmentsExpertDesk_OutgoingAttachmentsMessageExpertDesk
	 */
	public final interfaceattachments.proxies.OutgoingAttachmentsMessageExpertDesk getOutgoingAttachmentsExpertDesk_OutgoingAttachmentsMessageExpertDesk() throws com.mendix.core.CoreException
	{
		return getOutgoingAttachmentsExpertDesk_OutgoingAttachmentsMessageExpertDesk(getContext());
	}

	/**
	 * @param context
	 * @return value of OutgoingAttachmentsExpertDesk_OutgoingAttachmentsMessageExpertDesk
	 */
	public final interfaceattachments.proxies.OutgoingAttachmentsMessageExpertDesk getOutgoingAttachmentsExpertDesk_OutgoingAttachmentsMessageExpertDesk(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfaceattachments.proxies.OutgoingAttachmentsMessageExpertDesk result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.OutgoingAttachmentsExpertDesk_OutgoingAttachmentsMessageExpertDesk.toString());
		if (identifier != null)
			result = interfaceattachments.proxies.OutgoingAttachmentsMessageExpertDesk.load(context, identifier);
		return result;
	}

	/**
	 * Set value of OutgoingAttachmentsExpertDesk_OutgoingAttachmentsMessageExpertDesk
	 * @param outgoingattachmentsexpertdesk_outgoingattachmentsmessageexpertdesk
	 */
	public final void setOutgoingAttachmentsExpertDesk_OutgoingAttachmentsMessageExpertDesk(interfaceattachments.proxies.OutgoingAttachmentsMessageExpertDesk outgoingattachmentsexpertdesk_outgoingattachmentsmessageexpertdesk)
	{
		setOutgoingAttachmentsExpertDesk_OutgoingAttachmentsMessageExpertDesk(getContext(), outgoingattachmentsexpertdesk_outgoingattachmentsmessageexpertdesk);
	}

	/**
	 * Set value of OutgoingAttachmentsExpertDesk_OutgoingAttachmentsMessageExpertDesk
	 * @param context
	 * @param outgoingattachmentsexpertdesk_outgoingattachmentsmessageexpertdesk
	 */
	public final void setOutgoingAttachmentsExpertDesk_OutgoingAttachmentsMessageExpertDesk(com.mendix.systemwideinterfaces.core.IContext context, interfaceattachments.proxies.OutgoingAttachmentsMessageExpertDesk outgoingattachmentsexpertdesk_outgoingattachmentsmessageexpertdesk)
	{
		if (outgoingattachmentsexpertdesk_outgoingattachmentsmessageexpertdesk == null)
			getMendixObject().setValue(context, MemberNames.OutgoingAttachmentsExpertDesk_OutgoingAttachmentsMessageExpertDesk.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.OutgoingAttachmentsExpertDesk_OutgoingAttachmentsMessageExpertDesk.toString(), outgoingattachmentsexpertdesk_outgoingattachmentsmessageexpertdesk.getMendixObject().getId());
	}

	/**
	 * @return value of AttachmentsContainerExpertDesk_OutgoingAttachmentsExpertDesk
	 */
	public final interfaceattachments.proxies.AttachmentsContainerExpertDesk getAttachmentsContainerExpertDesk_OutgoingAttachmentsExpertDesk() throws com.mendix.core.CoreException
	{
		return getAttachmentsContainerExpertDesk_OutgoingAttachmentsExpertDesk(getContext());
	}

	/**
	 * @param context
	 * @return value of AttachmentsContainerExpertDesk_OutgoingAttachmentsExpertDesk
	 */
	public final interfaceattachments.proxies.AttachmentsContainerExpertDesk getAttachmentsContainerExpertDesk_OutgoingAttachmentsExpertDesk(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfaceattachments.proxies.AttachmentsContainerExpertDesk result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.AttachmentsContainerExpertDesk_OutgoingAttachmentsExpertDesk.toString());
		if (identifier != null)
			result = interfaceattachments.proxies.AttachmentsContainerExpertDesk.load(context, identifier);
		return result;
	}

	/**
	 * Set value of AttachmentsContainerExpertDesk_OutgoingAttachmentsExpertDesk
	 * @param attachmentscontainerexpertdesk_outgoingattachmentsexpertdesk
	 */
	public final void setAttachmentsContainerExpertDesk_OutgoingAttachmentsExpertDesk(interfaceattachments.proxies.AttachmentsContainerExpertDesk attachmentscontainerexpertdesk_outgoingattachmentsexpertdesk)
	{
		setAttachmentsContainerExpertDesk_OutgoingAttachmentsExpertDesk(getContext(), attachmentscontainerexpertdesk_outgoingattachmentsexpertdesk);
	}

	/**
	 * Set value of AttachmentsContainerExpertDesk_OutgoingAttachmentsExpertDesk
	 * @param context
	 * @param attachmentscontainerexpertdesk_outgoingattachmentsexpertdesk
	 */
	public final void setAttachmentsContainerExpertDesk_OutgoingAttachmentsExpertDesk(com.mendix.systemwideinterfaces.core.IContext context, interfaceattachments.proxies.AttachmentsContainerExpertDesk attachmentscontainerexpertdesk_outgoingattachmentsexpertdesk)
	{
		if (attachmentscontainerexpertdesk_outgoingattachmentsexpertdesk == null)
			getMendixObject().setValue(context, MemberNames.AttachmentsContainerExpertDesk_OutgoingAttachmentsExpertDesk.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.AttachmentsContainerExpertDesk_OutgoingAttachmentsExpertDesk.toString(), attachmentscontainerexpertdesk_outgoingattachmentsexpertdesk.getMendixObject().getId());
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final interfaceattachments.proxies.OutgoingAttachmentsExpertDesk that = (interfaceattachments.proxies.OutgoingAttachmentsExpertDesk) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "InterfaceAttachments.OutgoingAttachmentsExpertDesk";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
