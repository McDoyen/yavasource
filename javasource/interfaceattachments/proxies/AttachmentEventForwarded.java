// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package interfaceattachments.proxies;

public class AttachmentEventForwarded
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject attachmentEventForwardedMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "InterfaceAttachments.AttachmentEventForwarded";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Successful("Successful"),
		ErrorMessage("ErrorMessage"),
		AttachmentEventForwarded_RequestAttachment("InterfaceAttachments.AttachmentEventForwarded_RequestAttachment"),
		AttachmentEventForwarded_InterfaceConfiguration("InterfaceAttachments.AttachmentEventForwarded_InterfaceConfiguration"),
		AttachmentEventForwarded_RequestEvent("InterfaceAttachments.AttachmentEventForwarded_RequestEvent");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public AttachmentEventForwarded(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "InterfaceAttachments.AttachmentEventForwarded"));
	}

	protected AttachmentEventForwarded(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject attachmentEventForwardedMendixObject)
	{
		if (attachmentEventForwardedMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("InterfaceAttachments.AttachmentEventForwarded", attachmentEventForwardedMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a InterfaceAttachments.AttachmentEventForwarded");

		this.attachmentEventForwardedMendixObject = attachmentEventForwardedMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'AttachmentEventForwarded.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static interfaceattachments.proxies.AttachmentEventForwarded initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return interfaceattachments.proxies.AttachmentEventForwarded.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static interfaceattachments.proxies.AttachmentEventForwarded initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new interfaceattachments.proxies.AttachmentEventForwarded(context, mendixObject);
	}

	public static interfaceattachments.proxies.AttachmentEventForwarded load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return interfaceattachments.proxies.AttachmentEventForwarded.initialize(context, mendixObject);
	}

	public static java.util.List<interfaceattachments.proxies.AttachmentEventForwarded> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<interfaceattachments.proxies.AttachmentEventForwarded> result = new java.util.ArrayList<interfaceattachments.proxies.AttachmentEventForwarded>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//InterfaceAttachments.AttachmentEventForwarded" + xpathConstraint))
			result.add(interfaceattachments.proxies.AttachmentEventForwarded.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Successful
	 */
	public final java.lang.Boolean getSuccessful()
	{
		return getSuccessful(getContext());
	}

	/**
	 * @param context
	 * @return value of Successful
	 */
	public final java.lang.Boolean getSuccessful(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.Successful.toString());
	}

	/**
	 * Set value of Successful
	 * @param successful
	 */
	public final void setSuccessful(java.lang.Boolean successful)
	{
		setSuccessful(getContext(), successful);
	}

	/**
	 * Set value of Successful
	 * @param context
	 * @param successful
	 */
	public final void setSuccessful(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean successful)
	{
		getMendixObject().setValue(context, MemberNames.Successful.toString(), successful);
	}

	/**
	 * @return value of ErrorMessage
	 */
	public final java.lang.String getErrorMessage()
	{
		return getErrorMessage(getContext());
	}

	/**
	 * @param context
	 * @return value of ErrorMessage
	 */
	public final java.lang.String getErrorMessage(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ErrorMessage.toString());
	}

	/**
	 * Set value of ErrorMessage
	 * @param errormessage
	 */
	public final void setErrorMessage(java.lang.String errormessage)
	{
		setErrorMessage(getContext(), errormessage);
	}

	/**
	 * Set value of ErrorMessage
	 * @param context
	 * @param errormessage
	 */
	public final void setErrorMessage(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String errormessage)
	{
		getMendixObject().setValue(context, MemberNames.ErrorMessage.toString(), errormessage);
	}

	/**
	 * @return value of AttachmentEventForwarded_RequestAttachment
	 */
	public final process.proxies.RequestAttachment getAttachmentEventForwarded_RequestAttachment() throws com.mendix.core.CoreException
	{
		return getAttachmentEventForwarded_RequestAttachment(getContext());
	}

	/**
	 * @param context
	 * @return value of AttachmentEventForwarded_RequestAttachment
	 */
	public final process.proxies.RequestAttachment getAttachmentEventForwarded_RequestAttachment(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		process.proxies.RequestAttachment result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.AttachmentEventForwarded_RequestAttachment.toString());
		if (identifier != null)
			result = process.proxies.RequestAttachment.load(context, identifier);
		return result;
	}

	/**
	 * Set value of AttachmentEventForwarded_RequestAttachment
	 * @param attachmenteventforwarded_requestattachment
	 */
	public final void setAttachmentEventForwarded_RequestAttachment(process.proxies.RequestAttachment attachmenteventforwarded_requestattachment)
	{
		setAttachmentEventForwarded_RequestAttachment(getContext(), attachmenteventforwarded_requestattachment);
	}

	/**
	 * Set value of AttachmentEventForwarded_RequestAttachment
	 * @param context
	 * @param attachmenteventforwarded_requestattachment
	 */
	public final void setAttachmentEventForwarded_RequestAttachment(com.mendix.systemwideinterfaces.core.IContext context, process.proxies.RequestAttachment attachmenteventforwarded_requestattachment)
	{
		if (attachmenteventforwarded_requestattachment == null)
			getMendixObject().setValue(context, MemberNames.AttachmentEventForwarded_RequestAttachment.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.AttachmentEventForwarded_RequestAttachment.toString(), attachmenteventforwarded_requestattachment.getMendixObject().getId());
	}

	/**
	 * @return value of AttachmentEventForwarded_InterfaceConfiguration
	 */
	public final interfaceconfiguration.proxies.InterfaceConfiguration getAttachmentEventForwarded_InterfaceConfiguration() throws com.mendix.core.CoreException
	{
		return getAttachmentEventForwarded_InterfaceConfiguration(getContext());
	}

	/**
	 * @param context
	 * @return value of AttachmentEventForwarded_InterfaceConfiguration
	 */
	public final interfaceconfiguration.proxies.InterfaceConfiguration getAttachmentEventForwarded_InterfaceConfiguration(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfaceconfiguration.proxies.InterfaceConfiguration result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.AttachmentEventForwarded_InterfaceConfiguration.toString());
		if (identifier != null)
			result = interfaceconfiguration.proxies.InterfaceConfiguration.load(context, identifier);
		return result;
	}

	/**
	 * Set value of AttachmentEventForwarded_InterfaceConfiguration
	 * @param attachmenteventforwarded_interfaceconfiguration
	 */
	public final void setAttachmentEventForwarded_InterfaceConfiguration(interfaceconfiguration.proxies.InterfaceConfiguration attachmenteventforwarded_interfaceconfiguration)
	{
		setAttachmentEventForwarded_InterfaceConfiguration(getContext(), attachmenteventforwarded_interfaceconfiguration);
	}

	/**
	 * Set value of AttachmentEventForwarded_InterfaceConfiguration
	 * @param context
	 * @param attachmenteventforwarded_interfaceconfiguration
	 */
	public final void setAttachmentEventForwarded_InterfaceConfiguration(com.mendix.systemwideinterfaces.core.IContext context, interfaceconfiguration.proxies.InterfaceConfiguration attachmenteventforwarded_interfaceconfiguration)
	{
		if (attachmenteventforwarded_interfaceconfiguration == null)
			getMendixObject().setValue(context, MemberNames.AttachmentEventForwarded_InterfaceConfiguration.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.AttachmentEventForwarded_InterfaceConfiguration.toString(), attachmenteventforwarded_interfaceconfiguration.getMendixObject().getId());
	}

	/**
	 * @return value of AttachmentEventForwarded_RequestEvent
	 */
	public final process.proxies.RequestEvent getAttachmentEventForwarded_RequestEvent() throws com.mendix.core.CoreException
	{
		return getAttachmentEventForwarded_RequestEvent(getContext());
	}

	/**
	 * @param context
	 * @return value of AttachmentEventForwarded_RequestEvent
	 */
	public final process.proxies.RequestEvent getAttachmentEventForwarded_RequestEvent(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		process.proxies.RequestEvent result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.AttachmentEventForwarded_RequestEvent.toString());
		if (identifier != null)
			result = process.proxies.RequestEvent.load(context, identifier);
		return result;
	}

	/**
	 * Set value of AttachmentEventForwarded_RequestEvent
	 * @param attachmenteventforwarded_requestevent
	 */
	public final void setAttachmentEventForwarded_RequestEvent(process.proxies.RequestEvent attachmenteventforwarded_requestevent)
	{
		setAttachmentEventForwarded_RequestEvent(getContext(), attachmenteventforwarded_requestevent);
	}

	/**
	 * Set value of AttachmentEventForwarded_RequestEvent
	 * @param context
	 * @param attachmenteventforwarded_requestevent
	 */
	public final void setAttachmentEventForwarded_RequestEvent(com.mendix.systemwideinterfaces.core.IContext context, process.proxies.RequestEvent attachmenteventforwarded_requestevent)
	{
		if (attachmenteventforwarded_requestevent == null)
			getMendixObject().setValue(context, MemberNames.AttachmentEventForwarded_RequestEvent.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.AttachmentEventForwarded_RequestEvent.toString(), attachmenteventforwarded_requestevent.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return attachmentEventForwardedMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final interfaceattachments.proxies.AttachmentEventForwarded that = (interfaceattachments.proxies.AttachmentEventForwarded) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "InterfaceAttachments.AttachmentEventForwarded";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
