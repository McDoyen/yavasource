// This file was generated by Mendix Modeler 7.7.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package notes.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;

public class Microflows
{
	// These are the microflows for the Notes module
	public static void auditNote_AfterCommit(IContext context, notes.proxies.Note _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Notes.AuditNote_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditNote_AfterDelete(IContext context, notes.proxies.Note _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Notes.AuditNote_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean createRequestEvent_BeforeCommit(IContext context, notes.proxies.Note _inputNote)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputNote", _inputNote == null ? null : _inputNote.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Notes.CreateRequestEvent_BeforeCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean indexNote_BeforeCommit(IContext context, notes.proxies.Note _note)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Note", _note == null ? null : _note.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Notes.IndexNote_BeforeCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NotesCancel(IContext context, notes.proxies.Note _note)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Note", _note == null ? null : _note.getMendixObject());
			Core.execute(context, "Notes.IVK_NotesCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NotesClose(IContext context, notes.proxies.Note _note)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Note", _note == null ? null : _note.getMendixObject());
			Core.execute(context, "Notes.IVK_NotesClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NotesSaveAndClose(IContext context, notes.proxies.Note _note)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Note", _note == null ? null : _note.getMendixObject());
			Core.execute(context, "Notes.IVK_NotesSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean setPersonName_NoteRequestEvent(IContext context, notes.proxies.Note _inputNote)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputNote", _inputNote == null ? null : _inputNote.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Notes.SetPersonName_NoteRequestEvent", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setTicketTaskEnum(IContext context, notes.proxies.Note _note)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Note", _note == null ? null : _note.getMendixObject());
			Core.execute(context, "Notes.SetTicketTaskEnum", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void view_AllPublishedNotes_ActivityStream(IContext context, notes.proxies.Note _note)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Note", _note == null ? null : _note.getMendixObject());
			Core.execute(context, "Notes.View_AllPublishedNotes_ActivityStream", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void view_Note(IContext context, notes.proxies.Note _note)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Note", _note == null ? null : _note.getMendixObject());
			Core.execute(context, "Notes.View_Note", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}