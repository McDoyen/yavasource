// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package usermenu.proxies;

/**
 * ED95: To open a form using Java action, only forms with no context can be used. Therefore Initially only forms of type DebugNoContext will be used in order to display the debug menu list, but the list might be expanded for more types of functionality in a later release
 */
public class MendixMenuItem
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject mendixMenuItemMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "UserMenu.MendixMenuItem";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		ModuleName("ModuleName"),
		ObjectName("ObjectName"),
		SelectLabel("SelectLabel"),
		ImportKey("ImportKey"),
		FormType("FormType"),
		IsSystemForm("IsSystemForm"),
		ObjectType("ObjectType");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public MendixMenuItem(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "UserMenu.MendixMenuItem"));
	}

	protected MendixMenuItem(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixMenuItemMendixObject)
	{
		if (mendixMenuItemMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("UserMenu.MendixMenuItem", mendixMenuItemMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a UserMenu.MendixMenuItem");

		this.mendixMenuItemMendixObject = mendixMenuItemMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'MendixMenuItem.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static usermenu.proxies.MendixMenuItem initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return usermenu.proxies.MendixMenuItem.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static usermenu.proxies.MendixMenuItem initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new usermenu.proxies.MendixMenuItem(context, mendixObject);
	}

	public static usermenu.proxies.MendixMenuItem load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return usermenu.proxies.MendixMenuItem.initialize(context, mendixObject);
	}

	public static java.util.List<usermenu.proxies.MendixMenuItem> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<usermenu.proxies.MendixMenuItem> result = new java.util.ArrayList<usermenu.proxies.MendixMenuItem>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//UserMenu.MendixMenuItem" + xpathConstraint))
			result.add(usermenu.proxies.MendixMenuItem.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of ModuleName
	 */
	public final java.lang.String getModuleName()
	{
		return getModuleName(getContext());
	}

	/**
	 * @param context
	 * @return value of ModuleName
	 */
	public final java.lang.String getModuleName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ModuleName.toString());
	}

	/**
	 * Set value of ModuleName
	 * @param modulename
	 */
	public final void setModuleName(java.lang.String modulename)
	{
		setModuleName(getContext(), modulename);
	}

	/**
	 * Set value of ModuleName
	 * @param context
	 * @param modulename
	 */
	public final void setModuleName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String modulename)
	{
		getMendixObject().setValue(context, MemberNames.ModuleName.toString(), modulename);
	}

	/**
	 * @return value of ObjectName
	 */
	public final java.lang.String getObjectName()
	{
		return getObjectName(getContext());
	}

	/**
	 * @param context
	 * @return value of ObjectName
	 */
	public final java.lang.String getObjectName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ObjectName.toString());
	}

	/**
	 * Set value of ObjectName
	 * @param objectname
	 */
	public final void setObjectName(java.lang.String objectname)
	{
		setObjectName(getContext(), objectname);
	}

	/**
	 * Set value of ObjectName
	 * @param context
	 * @param objectname
	 */
	public final void setObjectName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String objectname)
	{
		getMendixObject().setValue(context, MemberNames.ObjectName.toString(), objectname);
	}

	/**
	 * @return value of SelectLabel
	 */
	public final java.lang.String getSelectLabel()
	{
		return getSelectLabel(getContext());
	}

	/**
	 * @param context
	 * @return value of SelectLabel
	 */
	public final java.lang.String getSelectLabel(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.SelectLabel.toString());
	}

	/**
	 * Set value of SelectLabel
	 * @param selectlabel
	 */
	public final void setSelectLabel(java.lang.String selectlabel)
	{
		setSelectLabel(getContext(), selectlabel);
	}

	/**
	 * Set value of SelectLabel
	 * @param context
	 * @param selectlabel
	 */
	public final void setSelectLabel(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String selectlabel)
	{
		getMendixObject().setValue(context, MemberNames.SelectLabel.toString(), selectlabel);
	}

	/**
	 * @return value of ImportKey
	 */
	public final java.lang.String getImportKey()
	{
		return getImportKey(getContext());
	}

	/**
	 * @param context
	 * @return value of ImportKey
	 */
	public final java.lang.String getImportKey(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ImportKey.toString());
	}

	/**
	 * Set value of ImportKey
	 * @param importkey
	 */
	public final void setImportKey(java.lang.String importkey)
	{
		setImportKey(getContext(), importkey);
	}

	/**
	 * Set value of ImportKey
	 * @param context
	 * @param importkey
	 */
	public final void setImportKey(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String importkey)
	{
		getMendixObject().setValue(context, MemberNames.ImportKey.toString(), importkey);
	}

	/**
	 * Set value of FormType
	 * @param formtype
	 */
	public final usermenu.proxies.FormType getFormType()
	{
		return getFormType(getContext());
	}

	/**
	 * @param context
	 * @return value of FormType
	 */
	public final usermenu.proxies.FormType getFormType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.FormType.toString());
		if (obj == null)
			return null;

		return usermenu.proxies.FormType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of FormType
	 * @param formtype
	 */
	public final void setFormType(usermenu.proxies.FormType formtype)
	{
		setFormType(getContext(), formtype);
	}

	/**
	 * Set value of FormType
	 * @param context
	 * @param formtype
	 */
	public final void setFormType(com.mendix.systemwideinterfaces.core.IContext context, usermenu.proxies.FormType formtype)
	{
		if (formtype != null)
			getMendixObject().setValue(context, MemberNames.FormType.toString(), formtype.toString());
		else
			getMendixObject().setValue(context, MemberNames.FormType.toString(), null);
	}

	/**
	 * @return value of IsSystemForm
	 */
	public final java.lang.Boolean getIsSystemForm()
	{
		return getIsSystemForm(getContext());
	}

	/**
	 * @param context
	 * @return value of IsSystemForm
	 */
	public final java.lang.Boolean getIsSystemForm(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsSystemForm.toString());
	}

	/**
	 * Set value of IsSystemForm
	 * @param issystemform
	 */
	public final void setIsSystemForm(java.lang.Boolean issystemform)
	{
		setIsSystemForm(getContext(), issystemform);
	}

	/**
	 * Set value of IsSystemForm
	 * @param context
	 * @param issystemform
	 */
	public final void setIsSystemForm(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean issystemform)
	{
		getMendixObject().setValue(context, MemberNames.IsSystemForm.toString(), issystemform);
	}

	/**
	 * Set value of ObjectType
	 * @param objecttype
	 */
	public final usermenu.proxies.ObjectType getObjectType()
	{
		return getObjectType(getContext());
	}

	/**
	 * @param context
	 * @return value of ObjectType
	 */
	public final usermenu.proxies.ObjectType getObjectType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.ObjectType.toString());
		if (obj == null)
			return null;

		return usermenu.proxies.ObjectType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of ObjectType
	 * @param objecttype
	 */
	public final void setObjectType(usermenu.proxies.ObjectType objecttype)
	{
		setObjectType(getContext(), objecttype);
	}

	/**
	 * Set value of ObjectType
	 * @param context
	 * @param objecttype
	 */
	public final void setObjectType(com.mendix.systemwideinterfaces.core.IContext context, usermenu.proxies.ObjectType objecttype)
	{
		if (objecttype != null)
			getMendixObject().setValue(context, MemberNames.ObjectType.toString(), objecttype.toString());
		else
			getMendixObject().setValue(context, MemberNames.ObjectType.toString(), null);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return mendixMenuItemMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final usermenu.proxies.MendixMenuItem that = (usermenu.proxies.MendixMenuItem) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "UserMenu.MendixMenuItem";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
