// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package privatescheduledevents.proxies;

public class ScheduledEventAudit
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject scheduledEventAuditMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "PrivateScheduledEvents.ScheduledEventAudit";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Start("Start"),
		Stop("Stop"),
		Duration("Duration"),
		IsFinished("IsFinished"),
		ScheduledEventAudit_ScheduledEvent("PrivateScheduledEvents.ScheduledEventAudit_ScheduledEvent");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public ScheduledEventAudit(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "PrivateScheduledEvents.ScheduledEventAudit"));
	}

	protected ScheduledEventAudit(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject scheduledEventAuditMendixObject)
	{
		if (scheduledEventAuditMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("PrivateScheduledEvents.ScheduledEventAudit", scheduledEventAuditMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a PrivateScheduledEvents.ScheduledEventAudit");

		this.scheduledEventAuditMendixObject = scheduledEventAuditMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'ScheduledEventAudit.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static privatescheduledevents.proxies.ScheduledEventAudit initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return privatescheduledevents.proxies.ScheduledEventAudit.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static privatescheduledevents.proxies.ScheduledEventAudit initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new privatescheduledevents.proxies.ScheduledEventAudit(context, mendixObject);
	}

	public static privatescheduledevents.proxies.ScheduledEventAudit load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return privatescheduledevents.proxies.ScheduledEventAudit.initialize(context, mendixObject);
	}

	public static java.util.List<privatescheduledevents.proxies.ScheduledEventAudit> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<privatescheduledevents.proxies.ScheduledEventAudit> result = new java.util.ArrayList<privatescheduledevents.proxies.ScheduledEventAudit>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//PrivateScheduledEvents.ScheduledEventAudit" + xpathConstraint))
			result.add(privatescheduledevents.proxies.ScheduledEventAudit.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Start
	 */
	public final java.util.Date getStart()
	{
		return getStart(getContext());
	}

	/**
	 * @param context
	 * @return value of Start
	 */
	public final java.util.Date getStart(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.Start.toString());
	}

	/**
	 * Set value of Start
	 * @param start
	 */
	public final void setStart(java.util.Date start)
	{
		setStart(getContext(), start);
	}

	/**
	 * Set value of Start
	 * @param context
	 * @param start
	 */
	public final void setStart(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date start)
	{
		getMendixObject().setValue(context, MemberNames.Start.toString(), start);
	}

	/**
	 * @return value of Stop
	 */
	public final java.util.Date getStop()
	{
		return getStop(getContext());
	}

	/**
	 * @param context
	 * @return value of Stop
	 */
	public final java.util.Date getStop(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.Stop.toString());
	}

	/**
	 * Set value of Stop
	 * @param stop
	 */
	public final void setStop(java.util.Date stop)
	{
		setStop(getContext(), stop);
	}

	/**
	 * Set value of Stop
	 * @param context
	 * @param stop
	 */
	public final void setStop(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date stop)
	{
		getMendixObject().setValue(context, MemberNames.Stop.toString(), stop);
	}

	/**
	 * @return value of Duration
	 */
	public final java.lang.Long getDuration()
	{
		return getDuration(getContext());
	}

	/**
	 * @param context
	 * @return value of Duration
	 */
	public final java.lang.Long getDuration(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.Duration.toString());
	}

	/**
	 * Set value of Duration
	 * @param duration
	 */
	public final void setDuration(java.lang.Long duration)
	{
		setDuration(getContext(), duration);
	}

	/**
	 * Set value of Duration
	 * @param context
	 * @param duration
	 */
	public final void setDuration(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long duration)
	{
		getMendixObject().setValue(context, MemberNames.Duration.toString(), duration);
	}

	/**
	 * @return value of IsFinished
	 */
	public final java.lang.Boolean getIsFinished()
	{
		return getIsFinished(getContext());
	}

	/**
	 * @param context
	 * @return value of IsFinished
	 */
	public final java.lang.Boolean getIsFinished(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsFinished.toString());
	}

	/**
	 * Set value of IsFinished
	 * @param isfinished
	 */
	public final void setIsFinished(java.lang.Boolean isfinished)
	{
		setIsFinished(getContext(), isfinished);
	}

	/**
	 * Set value of IsFinished
	 * @param context
	 * @param isfinished
	 */
	public final void setIsFinished(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean isfinished)
	{
		getMendixObject().setValue(context, MemberNames.IsFinished.toString(), isfinished);
	}

	/**
	 * @return value of ScheduledEventAudit_ScheduledEvent
	 */
	public final privatescheduledevents.proxies.ScheduledEvent getScheduledEventAudit_ScheduledEvent() throws com.mendix.core.CoreException
	{
		return getScheduledEventAudit_ScheduledEvent(getContext());
	}

	/**
	 * @param context
	 * @return value of ScheduledEventAudit_ScheduledEvent
	 */
	public final privatescheduledevents.proxies.ScheduledEvent getScheduledEventAudit_ScheduledEvent(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		privatescheduledevents.proxies.ScheduledEvent result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ScheduledEventAudit_ScheduledEvent.toString());
		if (identifier != null)
			result = privatescheduledevents.proxies.ScheduledEvent.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ScheduledEventAudit_ScheduledEvent
	 * @param scheduledeventaudit_scheduledevent
	 */
	public final void setScheduledEventAudit_ScheduledEvent(privatescheduledevents.proxies.ScheduledEvent scheduledeventaudit_scheduledevent)
	{
		setScheduledEventAudit_ScheduledEvent(getContext(), scheduledeventaudit_scheduledevent);
	}

	/**
	 * Set value of ScheduledEventAudit_ScheduledEvent
	 * @param context
	 * @param scheduledeventaudit_scheduledevent
	 */
	public final void setScheduledEventAudit_ScheduledEvent(com.mendix.systemwideinterfaces.core.IContext context, privatescheduledevents.proxies.ScheduledEvent scheduledeventaudit_scheduledevent)
	{
		if (scheduledeventaudit_scheduledevent == null)
			getMendixObject().setValue(context, MemberNames.ScheduledEventAudit_ScheduledEvent.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ScheduledEventAudit_ScheduledEvent.toString(), scheduledeventaudit_scheduledevent.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return scheduledEventAuditMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final privatescheduledevents.proxies.ScheduledEventAudit that = (privatescheduledevents.proxies.ScheduledEventAudit) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "PrivateScheduledEvents.ScheduledEventAudit";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
