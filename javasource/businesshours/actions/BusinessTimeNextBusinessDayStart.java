// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package businesshours.actions;

import businesshours.proxies.Business_Time;
import businesshours.proxies.Holiday;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import nl.mansystems.businesshours.CalendarHours;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.webui.CustomJavaAction;

public class BusinessTimeNextBusinessDayStart extends CustomJavaAction<java.util.Date>
{
	private java.util.Date Start;
	private IMendixObject __BusinessTimesGroup;
	private businesshours.proxies.Business_Time_Group BusinessTimesGroup;
	private IMendixObject __HolidaysGroup;
	private businesshours.proxies.Holidays_Group HolidaysGroup;

	public BusinessTimeNextBusinessDayStart(IContext context, java.util.Date Start, IMendixObject BusinessTimesGroup, IMendixObject HolidaysGroup)
	{
		super(context);
		this.Start = Start;
		this.__BusinessTimesGroup = BusinessTimesGroup;
		this.__HolidaysGroup = HolidaysGroup;
	}

	@Override
	public java.util.Date executeAction() throws Exception
	{
		this.BusinessTimesGroup = __BusinessTimesGroup == null ? null : businesshours.proxies.Business_Time_Group.initialize(getContext(), __BusinessTimesGroup);

		this.HolidaysGroup = __HolidaysGroup == null ? null : businesshours.proxies.Holidays_Group.initialize(getContext(), __HolidaysGroup);

		// BEGIN USER CODE
		IContext context = this.getContext();

		if (this.BusinessTimesGroup==null) {
			Core.getLogger("BusinessHours").error("BusinessHoursCalculation: Next day start missing Business Times Group");
			return null;
		}
		if (this.Start==null) {
			Core.getLogger("BusinessHours").error("BusinessHoursCalculation: Next day start missing Start");
			return null;
		}
		Core.getLogger("BusinessHours").trace("BusinessHoursCalculation: Next day start since " + this.Start +
				" in business hours " + this.BusinessTimesGroup.getBusinessTimeGroupName(context) +
				" and " + (this.HolidaysGroup==null ? "no holidays." : " holidays " + this.HolidaysGroup.getHolidaysGroupName(context)));

		CalendarHours calendarHours = new CalendarHours();
		for (Business_Time businessHoursSlot:this.BusinessTimesGroup.getBusiness_Time_Group_Business_Times(context)) {
			calendarHours.addBusinessHourSlot(businessHoursSlot.getStart(context), businessHoursSlot.getEnd(context),
					businessHoursSlot.getMonday(context),
					businessHoursSlot.getTuesday(context),
					businessHoursSlot.getWednesday(context),
					businessHoursSlot.getThursday(context),
					businessHoursSlot.getFriday(context),
					businessHoursSlot.getSaturday(context),
					businessHoursSlot.getSunday(context));
			Core.getLogger("BusinessHours").trace("BusinessHoursCalculation: Slot from " + 
					businessHoursSlot.getStart(context)/60 + ":" + businessHoursSlot.getStart(context)%60 + " to " +
					businessHoursSlot.getEnd(context)/60 + ":" + businessHoursSlot.getEnd(context)%60 + " mask Mon-Sun " + 
					(businessHoursSlot.getMonday(context)?"V":"-") +
					(businessHoursSlot.getTuesday(context)?"V":"-") +
					(businessHoursSlot.getWednesday(context)?"V":"-") +
					(businessHoursSlot.getThursday(context)?"V":"-") +
					(businessHoursSlot.getFriday(context)?"V":"-") +
					(businessHoursSlot.getSaturday(context)?"V":"-") +
					(businessHoursSlot.getSunday(context)?"V":"-")
					);
		}
		if (this.HolidaysGroup!=null) {
			List<Holiday> listHolidays = this.HolidaysGroup.getHoliday_Group_Holidays();
			if (listHolidays!=null && listHolidays.size()>0) {
				for (Holiday holiday:listHolidays) {
					Calendar cal = new GregorianCalendar();
					cal.setTime(holiday.getHolidayDate(context));
					calendarHours.addHoliday(cal);
					Core.getLogger("BusinessHours").trace("BusinessHoursCalculation: Adding holiday " + holiday.getHolidayDate());
				}
			}
		}
		Calendar start = new GregorianCalendar();
		start.setTime(this.Start);
		Date result = calendarHours.nextBusinessDayStart(start).getTime();
		Core.getLogger("BusinessHours").trace("BusinessHoursCalculation: Next day start result is " + result);
		return result;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "BusinessTimeNextBusinessDayStart";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
