// This file was generated by Mendix Modeler 7.7.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package businesshours.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the BusinessHours module
	public static void auditBusinessTime_AfterCommit(IContext context, businesshours.proxies.Business_Time _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "BusinessHours.AuditBusinessTime_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditBusinessTime_AfterDelete(IContext context, businesshours.proxies.Business_Time _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "BusinessHours.AuditBusinessTime_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditBusinessTimeGroup_AfterCommit(IContext context, businesshours.proxies.Business_Time_Group _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "BusinessHours.AuditBusinessTimeGroup_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditBusinessTimeGroup_AfterDelete(IContext context, businesshours.proxies.Business_Time_Group _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "BusinessHours.AuditBusinessTimeGroup_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditBusinessTimeGroup_GetAuditRecord(IContext context, businesshours.proxies.Business_Time_Group _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "BusinessHours.AuditBusinessTimeGroup_GetAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditHoliday_AfterCommit(IContext context, businesshours.proxies.Holiday _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "BusinessHours.AuditHoliday_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditHoliday_AfterDelete(IContext context, businesshours.proxies.Holiday _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "BusinessHours.AuditHoliday_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditHolidayGroup_AfterCommit(IContext context, businesshours.proxies.Holidays_Group _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "BusinessHours.AuditHolidayGroup_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditHolidayGroup_AfterDelete(IContext context, businesshours.proxies.Holidays_Group _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "BusinessHours.AuditHolidayGroup_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditHolidayGroup_GetAuditRecord(IContext context, businesshours.proxies.Holidays_Group _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "BusinessHours.AuditHolidayGroup_GetAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void businessHoursTester_Add(IContext context, businesshours.proxies.BusinessHoursTester _businessHoursTest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("BusinessHoursTest", _businessHoursTest == null ? null : _businessHoursTest.getMendixObject());
			Core.execute(context, "BusinessHours.BusinessHoursTester_Add", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void businessHoursTester_Diff(IContext context, businesshours.proxies.BusinessHoursTester _businessHoursTest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("BusinessHoursTest", _businessHoursTest == null ? null : _businessHoursTest.getMendixObject());
			Core.execute(context, "BusinessHours.BusinessHoursTester_Diff", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void businessHoursTester_NextBusinessDayStart(IContext context, businesshours.proxies.BusinessHoursTester _businessHoursTest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("BusinessHoursTest", _businessHoursTest == null ? null : _businessHoursTest.getMendixObject());
			Core.execute(context, "BusinessHours.BusinessHoursTester_NextBusinessDayStart", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void businessHoursTester_NextNBusinessDaysEnd(IContext context, businesshours.proxies.BusinessHoursTester _businessHoursTest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("BusinessHoursTest", _businessHoursTest == null ? null : _businessHoursTest.getMendixObject());
			Core.execute(context, "BusinessHours.BusinessHoursTester_NextNBusinessDaysEnd", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void businessHoursTester_Subtract(IContext context, businesshours.proxies.BusinessHoursTester _businessHoursTest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("BusinessHoursTest", _businessHoursTest == null ? null : _businessHoursTest.getMendixObject());
			Core.execute(context, "BusinessHours.BusinessHoursTester_Subtract", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyBusinessTime(IContext context, businesshours.proxies.Business_Time _businessTime, businesshours.proxies.Business_Time_Group _businessTimeGroup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("BusinessTime", _businessTime == null ? null : _businessTime.getMendixObject());
			params.put("BusinessTimeGroup", _businessTimeGroup == null ? null : _businessTimeGroup.getMendixObject());
			Core.execute(context, "BusinessHours.CopyBusinessTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyBusinessTimeGroup(IContext context, businesshours.proxies.Business_Time_Group _businessTimeGroup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("BusinessTimeGroup", _businessTimeGroup == null ? null : _businessTimeGroup.getMendixObject());
			Core.execute(context, "BusinessHours.CopyBusinessTimeGroup", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyBusinessTimeGroupList(IContext context, java.util.List<businesshours.proxies.Business_Time_Group> _businessTimeGroupList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_businessTimeGroupList = null;
			if (_businessTimeGroupList != null)
			{
				listparam_businessTimeGroupList = new java.util.ArrayList<IMendixObject>();
				for (businesshours.proxies.Business_Time_Group obj : _businessTimeGroupList)
					listparam_businessTimeGroupList.add(obj.getMendixObject());
			}
			params.put("BusinessTimeGroupList", listparam_businessTimeGroupList);
			Core.execute(context, "BusinessHours.CopyBusinessTimeGroupList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyBusinessTimeList(IContext context, java.util.List<businesshours.proxies.Business_Time> _businessTimeList, businesshours.proxies.Business_Time_Group _businessTimeGroup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_businessTimeList = null;
			if (_businessTimeList != null)
			{
				listparam_businessTimeList = new java.util.ArrayList<IMendixObject>();
				for (businesshours.proxies.Business_Time obj : _businessTimeList)
					listparam_businessTimeList.add(obj.getMendixObject());
			}
			params.put("BusinessTimeList", listparam_businessTimeList);
			params.put("BusinessTimeGroup", _businessTimeGroup == null ? null : _businessTimeGroup.getMendixObject());
			Core.execute(context, "BusinessHours.CopyBusinessTimeList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyHolidayGroup(IContext context, businesshours.proxies.Holidays_Group _holidayGroup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("HolidayGroup", _holidayGroup == null ? null : _holidayGroup.getMendixObject());
			Core.execute(context, "BusinessHours.CopyHolidayGroup", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyHolidayGroupList(IContext context, java.util.List<businesshours.proxies.Holidays_Group> _holidayGroupList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_holidayGroupList = null;
			if (_holidayGroupList != null)
			{
				listparam_holidayGroupList = new java.util.ArrayList<IMendixObject>();
				for (businesshours.proxies.Holidays_Group obj : _holidayGroupList)
					listparam_holidayGroupList.add(obj.getMendixObject());
			}
			params.put("HolidayGroupList", listparam_holidayGroupList);
			Core.execute(context, "BusinessHours.CopyHolidayGroupList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean holidayGroupSetDataAccess(IContext context, businesshours.proxies.Holidays_Group _holidays_Group)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Holidays_Group", _holidays_Group == null ? null : _holidays_Group.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "BusinessHours.HolidayGroupSetDataAccess", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_BusinessTimeGroupsCancel(IContext context, businesshours.proxies.Business_Time_Group _business_Time_Group)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Business_Time_Group", _business_Time_Group == null ? null : _business_Time_Group.getMendixObject());
			Core.execute(context, "BusinessHours.IVK_BusinessTimeGroupsCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_BusinessTimeGroupsSave(IContext context, businesshours.proxies.Business_Time_Group _business_Time_Group)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Business_Time_Group", _business_Time_Group == null ? null : _business_Time_Group.getMendixObject());
			Core.execute(context, "BusinessHours.IVK_BusinessTimeGroupsSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_BusinessTimeGroupsSaveAndClose(IContext context, businesshours.proxies.Business_Time_Group _business_Time_Group)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Business_Time_Group", _business_Time_Group == null ? null : _business_Time_Group.getMendixObject());
			Core.execute(context, "BusinessHours.IVK_BusinessTimeGroupsSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CancelBusinessTime(IContext context, businesshours.proxies.Business_Time _business_Time)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Business_Time", _business_Time == null ? null : _business_Time.getMendixObject());
			Core.execute(context, "BusinessHours.IVK_CancelBusinessTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_HolidayCancel(IContext context, businesshours.proxies.Holiday _holiday)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Holiday", _holiday == null ? null : _holiday.getMendixObject());
			Core.execute(context, "BusinessHours.IVK_HolidayCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_HolidayGroupCancel(IContext context, businesshours.proxies.Holidays_Group _holiday)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Holiday", _holiday == null ? null : _holiday.getMendixObject());
			Core.execute(context, "BusinessHours.IVK_HolidayGroupCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_HolidayGroupSaveAndClose(IContext context, businesshours.proxies.Holidays_Group _holiday)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Holiday", _holiday == null ? null : _holiday.getMendixObject());
			Core.execute(context, "BusinessHours.IVK_HolidayGroupSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_HolidaySave(IContext context, businesshours.proxies.Holidays_Group _holidays_Group)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Holidays_Group", _holidays_Group == null ? null : _holidays_Group.getMendixObject());
			Core.execute(context, "BusinessHours.IVK_HolidaySave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_HolidaySaveAndClose(IContext context, businesshours.proxies.Holiday _holiday)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Holiday", _holiday == null ? null : _holiday.getMendixObject());
			Core.execute(context, "BusinessHours.IVK_HolidaySaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SaveBusinessTime(IContext context, businesshours.proxies.Business_Time _business_Time)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Business_Time", _business_Time == null ? null : _business_Time.getMendixObject());
			Core.execute(context, "BusinessHours.IVK_SaveBusinessTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setDuration(IContext context, businesshours.proxies.BusinessHoursTester _businessHoursTester)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("BusinessHoursTester", _businessHoursTester == null ? null : _businessHoursTester.getMendixObject());
			Core.execute(context, "BusinessHours.SetDuration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validate_Business_Time_Day_Fields(IContext context, businesshours.proxies.Business_Time _business_Times)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Business_Times", _business_Times == null ? null : _business_Times.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "BusinessHours.Validate_Business_Time_Day_Fields", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validate_Business_Time_Group_Business_Times(IContext context, businesshours.proxies.Business_Time_Group _business_Time_Group)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Business_Time_Group", _business_Time_Group == null ? null : _business_Time_Group.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "BusinessHours.Validate_Business_Time_Group_Business_Times", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateHolidayRecord(IContext context, businesshours.proxies.Holiday _holiday)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Holiday", _holiday == null ? null : _holiday.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "BusinessHours.ValidateHolidayRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}