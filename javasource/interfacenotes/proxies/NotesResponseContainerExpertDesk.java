// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package interfacenotes.proxies;

public class NotesResponseContainerExpertDesk
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject notesResponseContainerExpertDeskMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "InterfaceNotes.NotesResponseContainerExpertDesk";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		NotesResponse_NotesResponseContainerExpertDesk("InterfaceNotes.NotesResponse_NotesResponseContainerExpertDesk"),
		NotesResponseContainerExpertDesk_OutgoingNotesConfirmationExpertDesk("InterfaceNotes.NotesResponseContainerExpertDesk_OutgoingNotesConfirmationExpertDesk");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public NotesResponseContainerExpertDesk(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "InterfaceNotes.NotesResponseContainerExpertDesk"));
	}

	protected NotesResponseContainerExpertDesk(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject notesResponseContainerExpertDeskMendixObject)
	{
		if (notesResponseContainerExpertDeskMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("InterfaceNotes.NotesResponseContainerExpertDesk", notesResponseContainerExpertDeskMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a InterfaceNotes.NotesResponseContainerExpertDesk");

		this.notesResponseContainerExpertDeskMendixObject = notesResponseContainerExpertDeskMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'NotesResponseContainerExpertDesk.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static interfacenotes.proxies.NotesResponseContainerExpertDesk initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return interfacenotes.proxies.NotesResponseContainerExpertDesk.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static interfacenotes.proxies.NotesResponseContainerExpertDesk initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new interfacenotes.proxies.NotesResponseContainerExpertDesk(context, mendixObject);
	}

	public static interfacenotes.proxies.NotesResponseContainerExpertDesk load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return interfacenotes.proxies.NotesResponseContainerExpertDesk.initialize(context, mendixObject);
	}

	public static java.util.List<interfacenotes.proxies.NotesResponseContainerExpertDesk> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<interfacenotes.proxies.NotesResponseContainerExpertDesk> result = new java.util.ArrayList<interfacenotes.proxies.NotesResponseContainerExpertDesk>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//InterfaceNotes.NotesResponseContainerExpertDesk" + xpathConstraint))
			result.add(interfacenotes.proxies.NotesResponseContainerExpertDesk.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of NotesResponse_NotesResponseContainerExpertDesk
	 */
	public final interfacenotes.proxies.NotesResponse getNotesResponse_NotesResponseContainerExpertDesk() throws com.mendix.core.CoreException
	{
		return getNotesResponse_NotesResponseContainerExpertDesk(getContext());
	}

	/**
	 * @param context
	 * @return value of NotesResponse_NotesResponseContainerExpertDesk
	 */
	public final interfacenotes.proxies.NotesResponse getNotesResponse_NotesResponseContainerExpertDesk(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfacenotes.proxies.NotesResponse result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.NotesResponse_NotesResponseContainerExpertDesk.toString());
		if (identifier != null)
			result = interfacenotes.proxies.NotesResponse.load(context, identifier);
		return result;
	}

	/**
	 * Set value of NotesResponse_NotesResponseContainerExpertDesk
	 * @param notesresponse_notesresponsecontainerexpertdesk
	 */
	public final void setNotesResponse_NotesResponseContainerExpertDesk(interfacenotes.proxies.NotesResponse notesresponse_notesresponsecontainerexpertdesk)
	{
		setNotesResponse_NotesResponseContainerExpertDesk(getContext(), notesresponse_notesresponsecontainerexpertdesk);
	}

	/**
	 * Set value of NotesResponse_NotesResponseContainerExpertDesk
	 * @param context
	 * @param notesresponse_notesresponsecontainerexpertdesk
	 */
	public final void setNotesResponse_NotesResponseContainerExpertDesk(com.mendix.systemwideinterfaces.core.IContext context, interfacenotes.proxies.NotesResponse notesresponse_notesresponsecontainerexpertdesk)
	{
		if (notesresponse_notesresponsecontainerexpertdesk == null)
			getMendixObject().setValue(context, MemberNames.NotesResponse_NotesResponseContainerExpertDesk.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.NotesResponse_NotesResponseContainerExpertDesk.toString(), notesresponse_notesresponsecontainerexpertdesk.getMendixObject().getId());
	}

	/**
	 * @return value of NotesResponseContainerExpertDesk_OutgoingNotesConfirmationExpertDesk
	 */
	public final interfacenotes.proxies.OutgoingNotesConfirmationExpertDesk getNotesResponseContainerExpertDesk_OutgoingNotesConfirmationExpertDesk() throws com.mendix.core.CoreException
	{
		return getNotesResponseContainerExpertDesk_OutgoingNotesConfirmationExpertDesk(getContext());
	}

	/**
	 * @param context
	 * @return value of NotesResponseContainerExpertDesk_OutgoingNotesConfirmationExpertDesk
	 */
	public final interfacenotes.proxies.OutgoingNotesConfirmationExpertDesk getNotesResponseContainerExpertDesk_OutgoingNotesConfirmationExpertDesk(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfacenotes.proxies.OutgoingNotesConfirmationExpertDesk result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.NotesResponseContainerExpertDesk_OutgoingNotesConfirmationExpertDesk.toString());
		if (identifier != null)
			result = interfacenotes.proxies.OutgoingNotesConfirmationExpertDesk.load(context, identifier);
		return result;
	}

	/**
	 * Set value of NotesResponseContainerExpertDesk_OutgoingNotesConfirmationExpertDesk
	 * @param notesresponsecontainerexpertdesk_outgoingnotesconfirmationexpertdesk
	 */
	public final void setNotesResponseContainerExpertDesk_OutgoingNotesConfirmationExpertDesk(interfacenotes.proxies.OutgoingNotesConfirmationExpertDesk notesresponsecontainerexpertdesk_outgoingnotesconfirmationexpertdesk)
	{
		setNotesResponseContainerExpertDesk_OutgoingNotesConfirmationExpertDesk(getContext(), notesresponsecontainerexpertdesk_outgoingnotesconfirmationexpertdesk);
	}

	/**
	 * Set value of NotesResponseContainerExpertDesk_OutgoingNotesConfirmationExpertDesk
	 * @param context
	 * @param notesresponsecontainerexpertdesk_outgoingnotesconfirmationexpertdesk
	 */
	public final void setNotesResponseContainerExpertDesk_OutgoingNotesConfirmationExpertDesk(com.mendix.systemwideinterfaces.core.IContext context, interfacenotes.proxies.OutgoingNotesConfirmationExpertDesk notesresponsecontainerexpertdesk_outgoingnotesconfirmationexpertdesk)
	{
		if (notesresponsecontainerexpertdesk_outgoingnotesconfirmationexpertdesk == null)
			getMendixObject().setValue(context, MemberNames.NotesResponseContainerExpertDesk_OutgoingNotesConfirmationExpertDesk.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.NotesResponseContainerExpertDesk_OutgoingNotesConfirmationExpertDesk.toString(), notesresponsecontainerexpertdesk_outgoingnotesconfirmationexpertdesk.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return notesResponseContainerExpertDeskMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final interfacenotes.proxies.NotesResponseContainerExpertDesk that = (interfacenotes.proxies.NotesResponseContainerExpertDesk) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "InterfaceNotes.NotesResponseContainerExpertDesk";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
