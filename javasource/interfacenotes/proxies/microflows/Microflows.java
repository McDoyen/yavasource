// This file was generated by Mendix Modeler 7.7.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package interfacenotes.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the InterfaceNotes module
	public static void addNotesRepeatedStructureResponse(IContext context, interfaceshared.proxies.Response _response, interfacenotes.proxies.Note _note, interfaceshared.proxies.ProcessingPart _parentProcessingPart, boolean _processingFailed, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration, interfaceshared.proxies.RepeatingStructureProcessingAttempt _repeatingStructureProcessingAttempt)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Response", _response == null ? null : _response.getMendixObject());
			params.put("Note", _note == null ? null : _note.getMendixObject());
			params.put("ParentProcessingPart", _parentProcessingPart == null ? null : _parentProcessingPart.getMendixObject());
			params.put("ProcessingFailed", _processingFailed);
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			params.put("RepeatingStructureProcessingAttempt", _repeatingStructureProcessingAttempt == null ? null : _repeatingStructureProcessingAttempt.getMendixObject());
			Core.execute(context, "InterfaceNotes.AddNotesRepeatedStructureResponse", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_GetOutgoingNotesConfirmationExpertDeskAuditRecord(IContext context, interfacenotes.proxies.OutgoingNotesConfirmationExpertDesk _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_GetOutgoingNotesConfirmationExpertDeskAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_GetOutgoingNotesExpertDeskAuditRecord(IContext context, interfacenotes.proxies.OutgoingNotesExpertDesk _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_GetOutgoingNotesExpertDeskAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_IncomingNotesCancel(IContext context, interfacenotes.proxies.IncomingNotes _incomingNotes)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingNotes", _incomingNotes == null ? null : _incomingNotes.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_IncomingNotesCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_IncomingNotesConfirmationCancel(IContext context, interfacenotes.proxies.IncomingNotesConfirmation _incomingNotesConfirmation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingNotesConfirmation", _incomingNotesConfirmation == null ? null : _incomingNotesConfirmation.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_IncomingNotesConfirmationCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_IncomingNotesConfirmationResponse_NewEditClose(IContext context, interfacenotes.proxies.IncomingNotesConfirmationResponse _incomingNotesConfirmationResponse)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingNotesConfirmationResponse", _incomingNotesConfirmationResponse == null ? null : _incomingNotesConfirmationResponse.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_IncomingNotesConfirmationResponse_NewEditClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_IncomingNotesConfirmationSave(IContext context, interfacenotes.proxies.IncomingNotesConfirmation _incomingNotesConfirmation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingNotesConfirmation", _incomingNotesConfirmation == null ? null : _incomingNotesConfirmation.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_IncomingNotesConfirmationSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_IncomingNotesConfirmationSaveAndClose(IContext context, interfacenotes.proxies.IncomingNotesConfirmation _incomingNotesConfirmation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingNotesConfirmation", _incomingNotesConfirmation == null ? null : _incomingNotesConfirmation.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_IncomingNotesConfirmationSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_IncomingNotesSave(IContext context, interfacenotes.proxies.IncomingNotes _incomingNotes)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingNotes", _incomingNotes == null ? null : _incomingNotes.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_IncomingNotesSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_IncomingNotesSaveAndClose(IContext context, interfacenotes.proxies.IncomingNotes _incomingNotes)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingNotes", _incomingNotes == null ? null : _incomingNotes.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_IncomingNotesSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NoteCancel(IContext context, interfacenotes.proxies.Note _note)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Note", _note == null ? null : _note.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_NoteCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NoteGUIDCancel(IContext context, interfacenotes.proxies.Note _note)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Note", _note == null ? null : _note.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_NoteGUIDCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NoteGUIDSave(IContext context, interfacenotes.proxies.Note _note)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Note", _note == null ? null : _note.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_NoteGUIDSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NoteGUIDSaveAndClose(IContext context, interfacenotes.proxies.Note _note)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Note", _note == null ? null : _note.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_NoteGUIDSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NoteResponse_NewEditClose(IContext context, interfacenotes.proxies.NoteResponse _noteResponse)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("NoteResponse", _noteResponse == null ? null : _noteResponse.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_NoteResponse_NewEditClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NoteResponseExpertDesk_NewEditClose(IContext context, interfacenotes.proxies.NoteResponse _noteResponse)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("NoteResponse", _noteResponse == null ? null : _noteResponse.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_NoteResponseExpertDesk_NewEditClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NoteResponsesContainerExpertDesk_NewEditClose(IContext context, interfacenotes.proxies.NoteResponsesContainerExpertDesk _noteResponsesContainerExpertDesk)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("NoteResponsesContainerExpertDesk", _noteResponsesContainerExpertDesk == null ? null : _noteResponsesContainerExpertDesk.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_NoteResponsesContainerExpertDesk_NewEditClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NoteSave(IContext context, interfacenotes.proxies.Note _note)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Note", _note == null ? null : _note.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_NoteSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NoteSaveAndClose(IContext context, interfacenotes.proxies.Note _note)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Note", _note == null ? null : _note.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_NoteSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NotesContainerExpertDesk_NewEditClose(IContext context, interfacenotes.proxies.NotesContainerExpertDesk _notesContainerExpertDesk)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("NotesContainerExpertDesk", _notesContainerExpertDesk == null ? null : _notesContainerExpertDesk.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_NotesContainerExpertDesk_NewEditClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NotesGUIDContainerExpertDesk_NewEditClose(IContext context, interfacenotes.proxies.NotesContainerExpertDesk _notesContainerExpertDesk)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("NotesContainerExpertDesk", _notesContainerExpertDesk == null ? null : _notesContainerExpertDesk.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_NotesGUIDContainerExpertDesk_NewEditClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NotesResponse_NewEditClose(IContext context, interfacenotes.proxies.NotesResponse _notesResponse)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("NotesResponse", _notesResponse == null ? null : _notesResponse.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_NotesResponse_NewEditClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NotesResponseContainerExpertDesk_NewEditClose(IContext context, interfacenotes.proxies.NotesResponseContainerExpertDesk _notesResponseContainerExpertDesk)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("NotesResponseContainerExpertDesk", _notesResponseContainerExpertDesk == null ? null : _notesResponseContainerExpertDesk.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_NotesResponseContainerExpertDesk_NewEditClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NotesResponseExpertDesk_NewEditClose(IContext context, interfacenotes.proxies.NotesResponse _notesResponse)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("NotesResponse", _notesResponse == null ? null : _notesResponse.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_NotesResponseExpertDesk_NewEditClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenIncomingNotesRequest(IContext context, interfacenotes.proxies.IncomingNotes _incomingNotes)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingNotes", _incomingNotes == null ? null : _incomingNotes.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_OpenIncomingNotesRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenOutgoingNotesRequest(IContext context, interfacenotes.proxies.OutgoingNotes _outgoingNotes)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OutgoingNotes", _outgoingNotes == null ? null : _outgoingNotes.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_OpenOutgoingNotesRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OutgoingNotes_NewEditClose(IContext context, interfacenotes.proxies.OutgoingNotes _outgoingNotes)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OutgoingNotes", _outgoingNotes == null ? null : _outgoingNotes.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_OutgoingNotes_NewEditClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OutgoingNotesConfirmation_NewEditClose(IContext context, interfacenotes.proxies.OutgoingNotesConfirmation _outgoingNotesConfirmation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OutgoingNotesConfirmation", _outgoingNotesConfirmation == null ? null : _outgoingNotesConfirmation.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_OutgoingNotesConfirmation_NewEditClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OutgoingNotesConfirmationExpertDeskCancel(IContext context, interfacenotes.proxies.OutgoingNotesConfirmationExpertDesk _outgoingNotesConfirmationExpertDesk)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OutgoingNotesConfirmationExpertDesk", _outgoingNotesConfirmationExpertDesk == null ? null : _outgoingNotesConfirmationExpertDesk.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_OutgoingNotesConfirmationExpertDeskCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OutgoingNotesConfirmationExpertDeskSave(IContext context, interfacenotes.proxies.OutgoingNotesConfirmationExpertDesk _outgoingNotesConfirmationExpertDesk)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OutgoingNotesConfirmationExpertDesk", _outgoingNotesConfirmationExpertDesk == null ? null : _outgoingNotesConfirmationExpertDesk.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_OutgoingNotesConfirmationExpertDeskSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OutgoingNotesConfirmationExpertDeskSaveAndClose(IContext context, interfacenotes.proxies.OutgoingNotesConfirmationExpertDesk _outgoingNotesConfirmationExpertDesk)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OutgoingNotesConfirmationExpertDesk", _outgoingNotesConfirmationExpertDesk == null ? null : _outgoingNotesConfirmationExpertDesk.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_OutgoingNotesConfirmationExpertDeskSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OutgoingNotesConfirmationMessageExpertDeskCancel(IContext context, interfacenotes.proxies.OutgoingNotesConfirmationMessageExpertDesk _outgoingNotesConfirmationMessageExpertDesk)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OutgoingNotesConfirmationMessageExpertDesk", _outgoingNotesConfirmationMessageExpertDesk == null ? null : _outgoingNotesConfirmationMessageExpertDesk.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_OutgoingNotesConfirmationMessageExpertDeskCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OutgoingNotesConfirmationMessageExpertDeskSave(IContext context, interfacenotes.proxies.OutgoingNotesConfirmationMessageExpertDesk _outgoingNotesConfirmationMessageExpertDesk)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OutgoingNotesConfirmationMessageExpertDesk", _outgoingNotesConfirmationMessageExpertDesk == null ? null : _outgoingNotesConfirmationMessageExpertDesk.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_OutgoingNotesConfirmationMessageExpertDeskSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OutgoingNotesConfirmationMessageExpertDeskSaveAndClose(IContext context, interfacenotes.proxies.OutgoingNotesConfirmationMessageExpertDesk _outgoingNotesConfirmationMessageExpertDesk)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OutgoingNotesConfirmationMessageExpertDesk", _outgoingNotesConfirmationMessageExpertDesk == null ? null : _outgoingNotesConfirmationMessageExpertDesk.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_OutgoingNotesConfirmationMessageExpertDeskSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OutgoingNotesConfirmationResponseMessageExpertDesk_NewEditClose(IContext context, interfacenotes.proxies.OutgoingNotesConfirmationResponseMessageExpertDesk _outgoingNotesConfirmationResponseMessageExpertDesk)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OutgoingNotesConfirmationResponseMessageExpertDesk", _outgoingNotesConfirmationResponseMessageExpertDesk == null ? null : _outgoingNotesConfirmationResponseMessageExpertDesk.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_OutgoingNotesConfirmationResponseMessageExpertDesk_NewEditClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OutgoingNotesContainerExpertDesk_NewEditClose(IContext context, interfacenotes.proxies.NotesContainerExpertDesk _notesContainerExpertDesk)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("NotesContainerExpertDesk", _notesContainerExpertDesk == null ? null : _notesContainerExpertDesk.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_OutgoingNotesContainerExpertDesk_NewEditClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OutgoingNotesExpertDeskCancel(IContext context, interfacenotes.proxies.OutgoingNotesExpertDesk _outgoingNotesExpertDesk)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OutgoingNotesExpertDesk", _outgoingNotesExpertDesk == null ? null : _outgoingNotesExpertDesk.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_OutgoingNotesExpertDeskCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OutgoingNotesExpertDeskSave(IContext context, interfacenotes.proxies.OutgoingNotesExpertDesk _outgoingNotesExpertDesk)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OutgoingNotesExpertDesk", _outgoingNotesExpertDesk == null ? null : _outgoingNotesExpertDesk.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_OutgoingNotesExpertDeskSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OutgoingNotesExpertDeskSaveAndClose(IContext context, interfacenotes.proxies.OutgoingNotesExpertDesk _outgoingNotesExpertDesk)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OutgoingNotesExpertDesk", _outgoingNotesExpertDesk == null ? null : _outgoingNotesExpertDesk.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_OutgoingNotesExpertDeskSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OutgoingNotesMessageExpertDeskCancel(IContext context, interfacenotes.proxies.OutgoingNotesMessageExpertDesk _outgoingNotesMessageExpertDesk)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OutgoingNotesMessageExpertDesk", _outgoingNotesMessageExpertDesk == null ? null : _outgoingNotesMessageExpertDesk.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_OutgoingNotesMessageExpertDeskCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OutgoingNotesMessageExpertDeskSave(IContext context, interfacenotes.proxies.OutgoingNotesMessageExpertDesk _outgoingNotesMessageExpertDesk)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OutgoingNotesMessageExpertDesk", _outgoingNotesMessageExpertDesk == null ? null : _outgoingNotesMessageExpertDesk.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_OutgoingNotesMessageExpertDeskSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OutgoingNotesMessageExpertDeskSaveAndClose(IContext context, interfacenotes.proxies.OutgoingNotesMessageExpertDesk _outgoingNotesMessageExpertDesk)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OutgoingNotesMessageExpertDesk", _outgoingNotesMessageExpertDesk == null ? null : _outgoingNotesMessageExpertDesk.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_OutgoingNotesMessageExpertDeskSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OutgoingNotesResponseMessageExpertDesk_NewEditClose(IContext context, interfacenotes.proxies.OutgoingNotesResponseMessageExpertDesk _outgoingNotesResponseMessageExpertDesk)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OutgoingNotesResponseMessageExpertDesk", _outgoingNotesResponseMessageExpertDesk == null ? null : _outgoingNotesResponseMessageExpertDesk.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_OutgoingNotesResponseMessageExpertDesk_NewEditClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ReprocessIncomingNotes(IContext context, interfacenotes.proxies.IncomingNotes _incomingNotes)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingNotes", _incomingNotes == null ? null : _incomingNotes.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_ReprocessIncomingNotes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ResendOutgoingNotesConfirmationMessageExpertDesk(IContext context, interfacenotes.proxies.OutgoingNotesConfirmationMessageExpertDesk _outgoingNotesConfirmationMessageExpertDesk)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OutgoingNotesConfirmationMessageExpertDesk", _outgoingNotesConfirmationMessageExpertDesk == null ? null : _outgoingNotesConfirmationMessageExpertDesk.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_ResendOutgoingNotesConfirmationMessageExpertDesk", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ResendOutgoingNotesExpertDesk(IContext context, interfacenotes.proxies.OutgoingNotesMessageExpertDesk _outgoingNotesMessageExpertDesk)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OutgoingNotesMessageExpertDesk", _outgoingNotesMessageExpertDesk == null ? null : _outgoingNotesMessageExpertDesk.getMendixObject());
			Core.execute(context, "InterfaceNotes.IVK_ResendOutgoingNotesExpertDesk", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static interfacenotes.proxies.Note matchResponseNoteToRequestNoteExpertDesk(IContext context, interfaceshared.proxies.SendAttempt _sendAttempt, java.lang.String _noteGUID)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SendAttempt", _sendAttempt == null ? null : _sendAttempt.getMendixObject());
			params.put("NoteGUID", _noteGUID);
			IMendixObject result = (IMendixObject)Core.execute(context, "InterfaceNotes.MatchResponseNoteToRequestNoteExpertDesk", params);
			return result == null ? null : interfacenotes.proxies.Note.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void prepareOutgoingNotesConfirmationExpertDesk(IContext context, interfaceshared.proxies.ProcessingAttempt _processingAttempt)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ProcessingAttempt", _processingAttempt == null ? null : _processingAttempt.getMendixObject());
			Core.execute(context, "InterfaceNotes.PrepareOutgoingNotesConfirmationExpertDesk", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void prepareOutgoingNotesExpertDesk(IContext context, interfaceshared.proxies.InterfaceEvent _interfaceEvent)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceEvent", _interfaceEvent == null ? null : _interfaceEvent.getMendixObject());
			Core.execute(context, "InterfaceNotes.PrepareOutgoingNotesExpertDesk", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static interfacenotes.proxies.NotesResponse processIncomingNotes(IContext context, interfacenotes.proxies.IncomingNotes _incomingNotes, interfaceshared.proxies.BooleanWrapper _manualProcessAttemptWrapper)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingNotes", _incomingNotes == null ? null : _incomingNotes.getMendixObject());
			params.put("ManualProcessAttemptWrapper", _manualProcessAttemptWrapper == null ? null : _manualProcessAttemptWrapper.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "InterfaceNotes.ProcessIncomingNotes", params);
			return result == null ? null : interfacenotes.proxies.NotesResponse.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processIncomingNotesAsynchronously(IContext context, interfaceshared.proxies.ProcessingAttempt _processingAttempt)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ProcessingAttempt", _processingAttempt == null ? null : _processingAttempt.getMendixObject());
			Core.execute(context, "InterfaceNotes.ProcessIncomingNotesAsynchronously", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static interfacenotes.proxies.IncomingNotesConfirmationResponse processIncomingNotesConfirmation(IContext context, interfacenotes.proxies.IncomingNotesConfirmation _incomingNotesConfirmation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingNotesConfirmation", _incomingNotesConfirmation == null ? null : _incomingNotesConfirmation.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "InterfaceNotes.ProcessIncomingNotesConfirmation", params);
			return result == null ? null : interfacenotes.proxies.IncomingNotesConfirmationResponse.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processNotes(IContext context, java.lang.String _logNode, process.proxies.Request _request, java.util.List<interfacenotes.proxies.Note> _noteList, interfaceshared.proxies.IncomingMessage _incomingMessage, interfaceshared.proxies.Response _response, interfaceshared.proxies.ProcessingPart _parentProcessingPart, interfaceshared.proxies.WebServiceProcessingAttempt _processingAttempt, boolean _blocking)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LogNode", _logNode);
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_noteList = null;
			if (_noteList != null)
			{
				listparam_noteList = new java.util.ArrayList<IMendixObject>();
				for (interfacenotes.proxies.Note obj : _noteList)
					listparam_noteList.add(obj.getMendixObject());
			}
			params.put("NoteList", listparam_noteList);
			params.put("IncomingMessage", _incomingMessage == null ? null : _incomingMessage.getMendixObject());
			params.put("Response", _response == null ? null : _response.getMendixObject());
			params.put("ParentProcessingPart", _parentProcessingPart == null ? null : _parentProcessingPart.getMendixObject());
			params.put("ProcessingAttempt", _processingAttempt == null ? null : _processingAttempt.getMendixObject());
			params.put("Blocking", _blocking);
			Core.execute(context, "InterfaceNotes.ProcessNotes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processNotesConfirmation(IContext context, interfacenotes.proxies.IncomingNotesConfirmation _incomingNotesConfirmation, interfacenotes.proxies.OutgoingNotes _outgoingNotes, interfaceshared.proxies.ProcessingPart _parentProcessingPart, java.lang.String _logNode, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IncomingNotesConfirmation", _incomingNotesConfirmation == null ? null : _incomingNotesConfirmation.getMendixObject());
			params.put("OutgoingNotes", _outgoingNotes == null ? null : _outgoingNotes.getMendixObject());
			params.put("ParentProcessingPart", _parentProcessingPart == null ? null : _parentProcessingPart.getMendixObject());
			params.put("LogNode", _logNode);
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceNotes.ProcessNotesConfirmation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processNotesResponse(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration, java.lang.String _logNode, interfaceshared.proxies.ProcessingPart _parentProcessingPart, java.util.List<interfacenotes.proxies.NoteResponse> _noteResponseList, java.util.List<interfacenotes.proxies.Note> _outgoingNoteList, interfaceshared.proxies.OutgoingMessage _outgoingMessage, boolean _synchronousResponse)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			params.put("LogNode", _logNode);
			params.put("ParentProcessingPart", _parentProcessingPart == null ? null : _parentProcessingPart.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_noteResponseList = null;
			if (_noteResponseList != null)
			{
				listparam_noteResponseList = new java.util.ArrayList<IMendixObject>();
				for (interfacenotes.proxies.NoteResponse obj : _noteResponseList)
					listparam_noteResponseList.add(obj.getMendixObject());
			}
			params.put("NoteResponseList", listparam_noteResponseList);
			java.util.ArrayList<IMendixObject> listparam_outgoingNoteList = null;
			if (_outgoingNoteList != null)
			{
				listparam_outgoingNoteList = new java.util.ArrayList<IMendixObject>();
				for (interfacenotes.proxies.Note obj : _outgoingNoteList)
					listparam_outgoingNoteList.add(obj.getMendixObject());
			}
			params.put("OutgoingNoteList", listparam_outgoingNoteList);
			params.put("OutgoingMessage", _outgoingMessage == null ? null : _outgoingMessage.getMendixObject());
			params.put("SynchronousResponse", _synchronousResponse);
			Core.execute(context, "InterfaceNotes.ProcessNotesResponse", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static interfacenotes.proxies.IncomingNotes retrieveIncomingNotesFromMessage(IContext context, interfaceshared.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "InterfaceNotes.RetrieveIncomingNotesFromMessage", params);
			return result == null ? null : interfacenotes.proxies.IncomingNotes.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static interfacenotes.proxies.NotesResponse retrieveNotesResponseFromResponse(IContext context, interfaceshared.proxies.Response _response)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Response", _response == null ? null : _response.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "InterfaceNotes.RetrieveNotesResponseFromResponse", params);
			return result == null ? null : interfacenotes.proxies.NotesResponse.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static interfacenotes.proxies.OutgoingNotesConfirmationMessageExpertDesk retrieveOutgoingNotesConfirmationMessageExpertDeskFromMessage(IContext context, interfaceshared.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "InterfaceNotes.RetrieveOutgoingNotesConfirmationMessageExpertDeskFromMessage", params);
			return result == null ? null : interfacenotes.proxies.OutgoingNotesConfirmationMessageExpertDesk.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static interfacenotes.proxies.OutgoingNotesConfirmationResponseMessageExpertDesk retrieveOutgoingNotesConfirmationResponseMessageExpertDeskFromResponse(IContext context, interfaceshared.proxies.Response _response)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Response", _response == null ? null : _response.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "InterfaceNotes.RetrieveOutgoingNotesConfirmationResponseMessageExpertDeskFromResponse", params);
			return result == null ? null : interfacenotes.proxies.OutgoingNotesConfirmationResponseMessageExpertDesk.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static interfacenotes.proxies.OutgoingNotesMessageExpertDesk retrieveOutgoingNotesMessageExpertDeskFromMessage(IContext context, interfaceshared.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "InterfaceNotes.RetrieveOutgoingNotesMessageExpertDeskFromMessage", params);
			return result == null ? null : interfacenotes.proxies.OutgoingNotesMessageExpertDesk.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static interfacenotes.proxies.OutgoingNotesResponseMessageExpertDesk retrieveOutgoingNotesResponseMessageExpertDeskFromResponse(IContext context, interfaceshared.proxies.Response _response)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Response", _response == null ? null : _response.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "InterfaceNotes.RetrieveOutgoingNotesResponseMessageExpertDeskFromResponse", params);
			return result == null ? null : interfacenotes.proxies.OutgoingNotesResponseMessageExpertDesk.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sendOutgoingNotesConfirmationExpertDesk(IContext context, interfaceshared.proxies.Message _message, interfaceshared.proxies.BooleanWrapper _manualSendAttemptWrapper)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			params.put("ManualSendAttemptWrapper", _manualSendAttemptWrapper == null ? null : _manualSendAttemptWrapper.getMendixObject());
			Core.execute(context, "InterfaceNotes.SendOutgoingNotesConfirmationExpertDesk", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sendOutgoingNotesExpertDesk(IContext context, interfaceshared.proxies.Message _message, interfaceshared.proxies.BooleanWrapper _manualSendAttemptWrapper)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			params.put("ManualSendAttemptWrapper", _manualSendAttemptWrapper == null ? null : _manualSendAttemptWrapper.getMendixObject());
			Core.execute(context, "InterfaceNotes.SendOutgoingNotesExpertDesk", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void updateNoteEventForwarded(IContext context, interfaceconfiguration.proxies.InterfaceConfiguration _interfaceConfiguration, process.proxies.RequestEvent _requestEvent, notes.proxies.Note _note, boolean _successful, java.lang.String _errorMessage)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceConfiguration", _interfaceConfiguration == null ? null : _interfaceConfiguration.getMendixObject());
			params.put("RequestEvent", _requestEvent == null ? null : _requestEvent.getMendixObject());
			params.put("Note", _note == null ? null : _note.getMendixObject());
			params.put("Successful", _successful);
			params.put("ErrorMessage", _errorMessage);
			Core.execute(context, "InterfaceNotes.UpdateNoteEventForwarded", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}