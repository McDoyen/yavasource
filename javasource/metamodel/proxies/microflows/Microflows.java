// This file was generated by Mendix Modeler 7.7.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package metamodel.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the MetaModel module
	public static void addExportSet(IContext context, metamodel.proxies.MendixEntity _mendixEntity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MendixEntity", _mendixEntity == null ? null : _mendixEntity.getMendixObject());
			Core.execute(context, "MetaModel.AddExportSet", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditMendixEntity_AfterCommit(IContext context, metamodel.proxies.MendixEntity _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "MetaModel.AuditMendixEntity_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditMendixEntity_AfterDelete(IContext context, metamodel.proxies.MendixEntity _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "MetaModel.AuditMendixEntity_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditMendixEntity_GetAuditRecord(IContext context, metamodel.proxies.MendixEntity _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "MetaModel.AuditMendixEntity_GetAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditMendixEntityKey_AfterDelete(IContext context, metamodel.proxies.MendixEntityKey _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "MetaModel.AuditMendixEntityKey_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditMendixEntityKey_GetAuditRecord(IContext context, metamodel.proxies.MendixEntityKey _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "MetaModel.AuditMendixEntityKey_GetAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditMendixModule_AfterCommit(IContext context, metamodel.proxies.MendixModule _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "MetaModel.AuditMendixModule_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditMendixModule_AfterDelete(IContext context, metamodel.proxies.MendixModule _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "MetaModel.AuditMendixModule_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditMendixModule_GetAuditRecord(IContext context, metamodel.proxies.MendixModule _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "MetaModel.AuditMendixModule_GetAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void clearCache_AuditMendixEntityKey_AfterCommit(IContext context, metamodel.proxies.MendixEntityKey _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "MetaModel.ClearCache_AuditMendixEntityKey_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void disableAuditForAllEntities(IContext context, java.util.List<metamodel.proxies.MendixEntity> _mendixEntityList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_mendixEntityList = null;
			if (_mendixEntityList != null)
			{
				listparam_mendixEntityList = new java.util.ArrayList<IMendixObject>();
				for (metamodel.proxies.MendixEntity obj : _mendixEntityList)
					listparam_mendixEntityList.add(obj.getMendixObject());
			}
			params.put("MendixEntityList", listparam_mendixEntityList);
			Core.execute(context, "MetaModel.DisableAuditForAllEntities", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void generateMetaModelDataMicroflow(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MetaModel.GenerateMetaModelDataMicroflow", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DynamicDataValueAttributeCancel(IContext context, metamodel.proxies.DynamicDataValueAttribute _dynamicDataValueAttribute)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicDataValueAttribute", _dynamicDataValueAttribute == null ? null : _dynamicDataValueAttribute.getMendixObject());
			Core.execute(context, "MetaModel.IVK_DynamicDataValueAttributeCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DynamicDataValueAttributeSave(IContext context, metamodel.proxies.DynamicDataValueAttribute _dynamicDataValueAttribute)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicDataValueAttribute", _dynamicDataValueAttribute == null ? null : _dynamicDataValueAttribute.getMendixObject());
			Core.execute(context, "MetaModel.IVK_DynamicDataValueAttributeSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DynamicDataValueAttributeSaveAndClose(IContext context, metamodel.proxies.DynamicDataValueAttribute _dynamicDataValueAttribute)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicDataValueAttribute", _dynamicDataValueAttribute == null ? null : _dynamicDataValueAttribute.getMendixObject());
			Core.execute(context, "MetaModel.IVK_DynamicDataValueAttributeSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Key_Select_AssociationCancel(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MetaModel.IVK_Key_Select_AssociationCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Key_Select_AttributeCancel(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MetaModel.IVK_Key_Select_AttributeCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MendixAttribute_OverviewClose(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MetaModel.IVK_MendixAttribute_OverviewClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MendixAttribute_SelectCancel(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MetaModel.IVK_MendixAttribute_SelectCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MendixAttributeCancel(IContext context, metamodel.proxies.MendixAttribute _mendixAttribute)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MendixAttribute", _mendixAttribute == null ? null : _mendixAttribute.getMendixObject());
			Core.execute(context, "MetaModel.IVK_MendixAttributeCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MendixAttributeSave(IContext context, metamodel.proxies.MendixAttribute _mendixAttribute)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MendixAttribute", _mendixAttribute == null ? null : _mendixAttribute.getMendixObject());
			Core.execute(context, "MetaModel.IVK_MendixAttributeSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MendixAttributeSaveAndClose(IContext context, metamodel.proxies.MendixAttribute _mendixAttribute)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MendixAttribute", _mendixAttribute == null ? null : _mendixAttribute.getMendixObject());
			Core.execute(context, "MetaModel.IVK_MendixAttributeSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MendixEntity_Overview_WithInvalidKeysClose(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MetaModel.IVK_MendixEntity_Overview_WithInvalidKeysClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MendixEntity_SelectMultipleCancel(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MetaModel.IVK_MendixEntity_SelectMultipleCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MendixEntity_SelectSingleCancel(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MetaModel.IVK_MendixEntity_SelectSingleCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MendixEntityCancel(IContext context, metamodel.proxies.MendixEntity _mendixEntity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MendixEntity", _mendixEntity == null ? null : _mendixEntity.getMendixObject());
			Core.execute(context, "MetaModel.IVK_MendixEntityCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MendixEntitySave(IContext context, metamodel.proxies.MendixEntity _mendixEntity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MendixEntity", _mendixEntity == null ? null : _mendixEntity.getMendixObject());
			Core.execute(context, "MetaModel.IVK_MendixEntitySave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MendixEntitySaveAndClose(IContext context, metamodel.proxies.MendixEntity _mendixEntity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MendixEntity", _mendixEntity == null ? null : _mendixEntity.getMendixObject());
			Core.execute(context, "MetaModel.IVK_MendixEntitySaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MendixModuleCancel(IContext context, metamodel.proxies.MendixModule _mendixModule)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MendixModule", _mendixModule == null ? null : _mendixModule.getMendixObject());
			Core.execute(context, "MetaModel.IVK_MendixModuleCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MendixModules_OverviewClose(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MetaModel.IVK_MendixModules_OverviewClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MendixModuleSave(IContext context, metamodel.proxies.MendixModule _mendixModule)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MendixModule", _mendixModule == null ? null : _mendixModule.getMendixObject());
			Core.execute(context, "MetaModel.IVK_MendixModuleSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MendixModuleSaveAndClose(IContext context, metamodel.proxies.MendixModule _mendixModule)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MendixModule", _mendixModule == null ? null : _mendixModule.getMendixObject());
			Core.execute(context, "MetaModel.IVK_MendixModuleSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MendixRelationCancel(IContext context, metamodel.proxies.MendixRelation _mendixRelation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MendixRelation", _mendixRelation == null ? null : _mendixRelation.getMendixObject());
			Core.execute(context, "MetaModel.IVK_MendixRelationCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MendixRelations_OverviewClose(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MetaModel.IVK_MendixRelations_OverviewClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MendixRelationSave(IContext context, metamodel.proxies.MendixRelation _mendixRelation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MendixRelation", _mendixRelation == null ? null : _mendixRelation.getMendixObject());
			Core.execute(context, "MetaModel.IVK_MendixRelationSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MendixRelationSaveAndClose(IContext context, metamodel.proxies.MendixRelation _mendixRelation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MendixRelation", _mendixRelation == null ? null : _mendixRelation.getMendixObject());
			Core.execute(context, "MetaModel.IVK_MendixRelationSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String removeInactiveModelEntities(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.String)Core.execute(context, "MetaModel.removeInactiveModelEntities", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void selectExportSetRelations(IContext context, java.util.List<metamodel.proxies.MendixRelation> _mendixRelationList, metamodel.proxies.MendixEntity _mendixEntity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_mendixRelationList = null;
			if (_mendixRelationList != null)
			{
				listparam_mendixRelationList = new java.util.ArrayList<IMendixObject>();
				for (metamodel.proxies.MendixRelation obj : _mendixRelationList)
					listparam_mendixRelationList.add(obj.getMendixObject());
			}
			params.put("MendixRelationList", listparam_mendixRelationList);
			params.put("MendixEntity", _mendixEntity == null ? null : _mendixEntity.getMendixObject());
			Core.execute(context, "MetaModel.SelectExportSetRelations", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean setKeyType(IContext context, metamodel.proxies.MendixEntityKey _mendixEntityKey)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MendixEntityKey", _mendixEntityKey == null ? null : _mendixEntityKey.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "MetaModel.SetKeyType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void toggleDelayedImport(IContext context, java.util.List<metamodel.proxies.MendixRelation> _mendixRelationList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_mendixRelationList = null;
			if (_mendixRelationList != null)
			{
				listparam_mendixRelationList = new java.util.ArrayList<IMendixObject>();
				for (metamodel.proxies.MendixRelation obj : _mendixRelationList)
					listparam_mendixRelationList.add(obj.getMendixObject());
			}
			params.put("MendixRelationList", listparam_mendixRelationList);
			Core.execute(context, "MetaModel.ToggleDelayedImport", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void toggleEntityAllowUserImport(IContext context, java.util.List<metamodel.proxies.MendixEntity> _mendixEntityList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_mendixEntityList = null;
			if (_mendixEntityList != null)
			{
				listparam_mendixEntityList = new java.util.ArrayList<IMendixObject>();
				for (metamodel.proxies.MendixEntity obj : _mendixEntityList)
					listparam_mendixEntityList.add(obj.getMendixObject());
			}
			params.put("MendixEntityList", listparam_mendixEntityList);
			Core.execute(context, "MetaModel.ToggleEntityAllowUserImport", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void toggleEntityAudit(IContext context, java.util.List<metamodel.proxies.MendixEntity> _mendixEntityList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_mendixEntityList = null;
			if (_mendixEntityList != null)
			{
				listparam_mendixEntityList = new java.util.ArrayList<IMendixObject>();
				for (metamodel.proxies.MendixEntity obj : _mendixEntityList)
					listparam_mendixEntityList.add(obj.getMendixObject());
			}
			params.put("MendixEntityList", listparam_mendixEntityList);
			Core.execute(context, "MetaModel.ToggleEntityAudit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void toggleEntityDataAccess(IContext context, java.util.List<metamodel.proxies.MendixEntity> _mendixEntityList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_mendixEntityList = null;
			if (_mendixEntityList != null)
			{
				listparam_mendixEntityList = new java.util.ArrayList<IMendixObject>();
				for (metamodel.proxies.MendixEntity obj : _mendixEntityList)
					listparam_mendixEntityList.add(obj.getMendixObject());
			}
			params.put("MendixEntityList", listparam_mendixEntityList);
			Core.execute(context, "MetaModel.ToggleEntityDataAccess", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void toggleEntityKeyAudit(IContext context, java.util.List<metamodel.proxies.MendixEntityKey> _mendixItemList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_mendixItemList = null;
			if (_mendixItemList != null)
			{
				listparam_mendixItemList = new java.util.ArrayList<IMendixObject>();
				for (metamodel.proxies.MendixEntityKey obj : _mendixItemList)
					listparam_mendixItemList.add(obj.getMendixObject());
			}
			params.put("MendixItemList", listparam_mendixItemList);
			Core.execute(context, "MetaModel.ToggleEntityKeyAudit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void toggleHideFromAutomaticDataAccess(IContext context, java.util.List<metamodel.proxies.MendixRelation> _mendixRelationList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_mendixRelationList = null;
			if (_mendixRelationList != null)
			{
				listparam_mendixRelationList = new java.util.ArrayList<IMendixObject>();
				for (metamodel.proxies.MendixRelation obj : _mendixRelationList)
					listparam_mendixRelationList.add(obj.getMendixObject());
			}
			params.put("MendixRelationList", listparam_mendixRelationList);
			Core.execute(context, "MetaModel.ToggleHideFromAutomaticDataAccess", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void toggleImportExportUserAttributeOrReference(IContext context, java.util.List<metamodel.proxies.MendixEntityKey> _mendixItemList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_mendixItemList = null;
			if (_mendixItemList != null)
			{
				listparam_mendixItemList = new java.util.ArrayList<IMendixObject>();
				for (metamodel.proxies.MendixEntityKey obj : _mendixItemList)
					listparam_mendixItemList.add(obj.getMendixObject());
			}
			params.put("MendixItemList", listparam_mendixItemList);
			Core.execute(context, "MetaModel.ToggleImportExportUserAttributeOrReference", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void toggleIsAuditChildRelation(IContext context, java.util.List<metamodel.proxies.MendixRelation> _mendixRelationList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_mendixRelationList = null;
			if (_mendixRelationList != null)
			{
				listparam_mendixRelationList = new java.util.ArrayList<IMendixObject>();
				for (metamodel.proxies.MendixRelation obj : _mendixRelationList)
					listparam_mendixRelationList.add(obj.getMendixObject());
			}
			params.put("MendixRelationList", listparam_mendixRelationList);
			Core.execute(context, "MetaModel.ToggleIsAuditChildRelation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void toggleSkipOnImport(IContext context, java.util.List<metamodel.proxies.MendixRelation> _mendixRelationList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_mendixRelationList = null;
			if (_mendixRelationList != null)
			{
				listparam_mendixRelationList = new java.util.ArrayList<IMendixObject>();
				for (metamodel.proxies.MendixRelation obj : _mendixRelationList)
					listparam_mendixRelationList.add(obj.getMendixObject());
			}
			params.put("MendixRelationList", listparam_mendixRelationList);
			Core.execute(context, "MetaModel.ToggleSkipOnImport", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}