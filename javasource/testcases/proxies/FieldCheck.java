// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package testcases.proxies;

public class FieldCheck extends testcases.proxies.Check
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "TestCases.FieldCheck";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		FieldCheckType("FieldCheckType"),
		Check("Check"),
		CheckType("CheckType"),
		CheckOn("CheckOn"),
		Visibility("Visibility"),
		Editability("Editability"),
		ExpectedValue("ExpectedValue"),
		ExpectedIdentifierValue("ExpectedIdentifierValue"),
		ExpectedBehaviour("ExpectedBehaviour"),
		ExpectedNumberOfEntries("ExpectedNumberOfEntries"),
		Result("Result"),
		ActualValue("ActualValue"),
		ActualIdentifierValue("ActualIdentifierValue"),
		ActualBehaviour("ActualBehaviour"),
		ActualNumberOfEntries("ActualNumberOfEntries"),
		Delete("Delete"),
		FieldCheck_Field("TestCases.FieldCheck_Field"),
		Check_TestCaseStep("TestCases.Check_TestCaseStep"),
		Check_TestStep("TestCases.Check_TestStep");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public FieldCheck(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "TestCases.FieldCheck"));
	}

	protected FieldCheck(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject fieldCheckMendixObject)
	{
		super(context, fieldCheckMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("TestCases.FieldCheck", fieldCheckMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a TestCases.FieldCheck");
	}

	/**
	 * @deprecated Use 'FieldCheck.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static testcases.proxies.FieldCheck initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return testcases.proxies.FieldCheck.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static testcases.proxies.FieldCheck initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		if (com.mendix.core.Core.isSubClassOf("TestCases.TestCaseFieldCheck", mendixObject.getType()))
			return testcases.proxies.TestCaseFieldCheck.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("TestCases.TestFieldCheck", mendixObject.getType()))
			return testcases.proxies.TestFieldCheck.initialize(context, mendixObject);

		return new testcases.proxies.FieldCheck(context, mendixObject);
	}

	public static testcases.proxies.FieldCheck load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return testcases.proxies.FieldCheck.initialize(context, mendixObject);
	}

	public static java.util.List<? extends testcases.proxies.FieldCheck> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<testcases.proxies.FieldCheck> result = new java.util.ArrayList<testcases.proxies.FieldCheck>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//TestCases.FieldCheck" + xpathConstraint))
			result.add(testcases.proxies.FieldCheck.initialize(context, obj));
		return result;
	}

	/**
	 * Set value of FieldCheckType
	 * @param fieldchecktype
	 */
	public final testcases.proxies.FieldCheckType getFieldCheckType()
	{
		return getFieldCheckType(getContext());
	}

	/**
	 * @param context
	 * @return value of FieldCheckType
	 */
	public final testcases.proxies.FieldCheckType getFieldCheckType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.FieldCheckType.toString());
		if (obj == null)
			return null;

		return testcases.proxies.FieldCheckType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of FieldCheckType
	 * @param fieldchecktype
	 */
	public final void setFieldCheckType(testcases.proxies.FieldCheckType fieldchecktype)
	{
		setFieldCheckType(getContext(), fieldchecktype);
	}

	/**
	 * Set value of FieldCheckType
	 * @param context
	 * @param fieldchecktype
	 */
	public final void setFieldCheckType(com.mendix.systemwideinterfaces.core.IContext context, testcases.proxies.FieldCheckType fieldchecktype)
	{
		if (fieldchecktype != null)
			getMendixObject().setValue(context, MemberNames.FieldCheckType.toString(), fieldchecktype.toString());
		else
			getMendixObject().setValue(context, MemberNames.FieldCheckType.toString(), null);
	}

	/**
	 * @return value of FieldCheck_Field
	 */
	public final testcases.proxies.Field getFieldCheck_Field() throws com.mendix.core.CoreException
	{
		return getFieldCheck_Field(getContext());
	}

	/**
	 * @param context
	 * @return value of FieldCheck_Field
	 */
	public final testcases.proxies.Field getFieldCheck_Field(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		testcases.proxies.Field result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.FieldCheck_Field.toString());
		if (identifier != null)
			result = testcases.proxies.Field.load(context, identifier);
		return result;
	}

	/**
	 * Set value of FieldCheck_Field
	 * @param fieldcheck_field
	 */
	public final void setFieldCheck_Field(testcases.proxies.Field fieldcheck_field)
	{
		setFieldCheck_Field(getContext(), fieldcheck_field);
	}

	/**
	 * Set value of FieldCheck_Field
	 * @param context
	 * @param fieldcheck_field
	 */
	public final void setFieldCheck_Field(com.mendix.systemwideinterfaces.core.IContext context, testcases.proxies.Field fieldcheck_field)
	{
		if (fieldcheck_field == null)
			getMendixObject().setValue(context, MemberNames.FieldCheck_Field.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.FieldCheck_Field.toString(), fieldcheck_field.getMendixObject().getId());
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final testcases.proxies.FieldCheck that = (testcases.proxies.FieldCheck) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "TestCases.FieldCheck";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
