// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package testcases.proxies;

public class Column
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject columnMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "TestCases.Column";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Name("Name"),
		Column_Table("TestCases.Column_Table"),
		Column_CurrentTestCaseStep("TestCases.Column_CurrentTestCaseStep"),
		Column_MxObjectMember("TestCases.Column_MxObjectMember");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Column(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "TestCases.Column"));
	}

	protected Column(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject columnMendixObject)
	{
		if (columnMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("TestCases.Column", columnMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a TestCases.Column");

		this.columnMendixObject = columnMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Column.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static testcases.proxies.Column initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return testcases.proxies.Column.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static testcases.proxies.Column initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new testcases.proxies.Column(context, mendixObject);
	}

	public static testcases.proxies.Column load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return testcases.proxies.Column.initialize(context, mendixObject);
	}

	public static java.util.List<testcases.proxies.Column> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<testcases.proxies.Column> result = new java.util.ArrayList<testcases.proxies.Column>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//TestCases.Column" + xpathConstraint))
			result.add(testcases.proxies.Column.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Name
	 */
	public final java.lang.String getName()
	{
		return getName(getContext());
	}

	/**
	 * @param context
	 * @return value of Name
	 */
	public final java.lang.String getName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Name.toString());
	}

	/**
	 * Set value of Name
	 * @param name
	 */
	public final void setName(java.lang.String name)
	{
		setName(getContext(), name);
	}

	/**
	 * Set value of Name
	 * @param context
	 * @param name
	 */
	public final void setName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String name)
	{
		getMendixObject().setValue(context, MemberNames.Name.toString(), name);
	}

	/**
	 * @return value of Column_Table
	 */
	public final testcases.proxies.Table getColumn_Table() throws com.mendix.core.CoreException
	{
		return getColumn_Table(getContext());
	}

	/**
	 * @param context
	 * @return value of Column_Table
	 */
	public final testcases.proxies.Table getColumn_Table(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		testcases.proxies.Table result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Column_Table.toString());
		if (identifier != null)
			result = testcases.proxies.Table.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Column_Table
	 * @param column_table
	 */
	public final void setColumn_Table(testcases.proxies.Table column_table)
	{
		setColumn_Table(getContext(), column_table);
	}

	/**
	 * Set value of Column_Table
	 * @param context
	 * @param column_table
	 */
	public final void setColumn_Table(com.mendix.systemwideinterfaces.core.IContext context, testcases.proxies.Table column_table)
	{
		if (column_table == null)
			getMendixObject().setValue(context, MemberNames.Column_Table.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Column_Table.toString(), column_table.getMendixObject().getId());
	}

	/**
	 * @return value of Column_CurrentTestCaseStep
	 */
	public final testcases.proxies.TestCaseStep getColumn_CurrentTestCaseStep() throws com.mendix.core.CoreException
	{
		return getColumn_CurrentTestCaseStep(getContext());
	}

	/**
	 * @param context
	 * @return value of Column_CurrentTestCaseStep
	 */
	public final testcases.proxies.TestCaseStep getColumn_CurrentTestCaseStep(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		testcases.proxies.TestCaseStep result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Column_CurrentTestCaseStep.toString());
		if (identifier != null)
			result = testcases.proxies.TestCaseStep.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Column_CurrentTestCaseStep
	 * @param column_currenttestcasestep
	 */
	public final void setColumn_CurrentTestCaseStep(testcases.proxies.TestCaseStep column_currenttestcasestep)
	{
		setColumn_CurrentTestCaseStep(getContext(), column_currenttestcasestep);
	}

	/**
	 * Set value of Column_CurrentTestCaseStep
	 * @param context
	 * @param column_currenttestcasestep
	 */
	public final void setColumn_CurrentTestCaseStep(com.mendix.systemwideinterfaces.core.IContext context, testcases.proxies.TestCaseStep column_currenttestcasestep)
	{
		if (column_currenttestcasestep == null)
			getMendixObject().setValue(context, MemberNames.Column_CurrentTestCaseStep.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Column_CurrentTestCaseStep.toString(), column_currenttestcasestep.getMendixObject().getId());
	}

	/**
	 * @return value of Column_MxObjectMember
	 */
	public final mxmodelreflection.proxies.MxObjectMember getColumn_MxObjectMember() throws com.mendix.core.CoreException
	{
		return getColumn_MxObjectMember(getContext());
	}

	/**
	 * @param context
	 * @return value of Column_MxObjectMember
	 */
	public final mxmodelreflection.proxies.MxObjectMember getColumn_MxObjectMember(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		mxmodelreflection.proxies.MxObjectMember result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Column_MxObjectMember.toString());
		if (identifier != null)
			result = mxmodelreflection.proxies.MxObjectMember.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Column_MxObjectMember
	 * @param column_mxobjectmember
	 */
	public final void setColumn_MxObjectMember(mxmodelreflection.proxies.MxObjectMember column_mxobjectmember)
	{
		setColumn_MxObjectMember(getContext(), column_mxobjectmember);
	}

	/**
	 * Set value of Column_MxObjectMember
	 * @param context
	 * @param column_mxobjectmember
	 */
	public final void setColumn_MxObjectMember(com.mendix.systemwideinterfaces.core.IContext context, mxmodelreflection.proxies.MxObjectMember column_mxobjectmember)
	{
		if (column_mxobjectmember == null)
			getMendixObject().setValue(context, MemberNames.Column_MxObjectMember.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Column_MxObjectMember.toString(), column_mxobjectmember.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return columnMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final testcases.proxies.Column that = (testcases.proxies.Column) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "TestCases.Column";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
