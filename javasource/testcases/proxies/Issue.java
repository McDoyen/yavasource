// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package testcases.proxies;

public class Issue
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject issueMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "TestCases.Issue";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		IssueNumber("IssueNumber"),
		Reproduction("Reproduction"),
		ObservedBehaviour("ObservedBehaviour"),
		DesiredBehaviour("DesiredBehaviour"),
		Solution("Solution"),
		Status("Status"),
		TestCaseTitle("TestCaseTitle"),
		Issue_TestStep("TestCases.Issue_TestStep"),
		Issue_Test("TestCases.Issue_Test"),
		Issue_Developers("TestCases.Issue_Developers");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Issue(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "TestCases.Issue"));
	}

	protected Issue(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject issueMendixObject)
	{
		if (issueMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("TestCases.Issue", issueMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a TestCases.Issue");

		this.issueMendixObject = issueMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Issue.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static testcases.proxies.Issue initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return testcases.proxies.Issue.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static testcases.proxies.Issue initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new testcases.proxies.Issue(context, mendixObject);
	}

	public static testcases.proxies.Issue load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return testcases.proxies.Issue.initialize(context, mendixObject);
	}

	public static java.util.List<testcases.proxies.Issue> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<testcases.proxies.Issue> result = new java.util.ArrayList<testcases.proxies.Issue>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//TestCases.Issue" + xpathConstraint))
			result.add(testcases.proxies.Issue.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of IssueNumber
	 */
	public final java.lang.Long getIssueNumber()
	{
		return getIssueNumber(getContext());
	}

	/**
	 * @param context
	 * @return value of IssueNumber
	 */
	public final java.lang.Long getIssueNumber(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.IssueNumber.toString());
	}

	/**
	 * Set value of IssueNumber
	 * @param issuenumber
	 */
	public final void setIssueNumber(java.lang.Long issuenumber)
	{
		setIssueNumber(getContext(), issuenumber);
	}

	/**
	 * Set value of IssueNumber
	 * @param context
	 * @param issuenumber
	 */
	public final void setIssueNumber(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long issuenumber)
	{
		getMendixObject().setValue(context, MemberNames.IssueNumber.toString(), issuenumber);
	}

	/**
	 * @return value of Reproduction
	 */
	public final java.lang.String getReproduction()
	{
		return getReproduction(getContext());
	}

	/**
	 * @param context
	 * @return value of Reproduction
	 */
	public final java.lang.String getReproduction(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Reproduction.toString());
	}

	/**
	 * Set value of Reproduction
	 * @param reproduction
	 */
	public final void setReproduction(java.lang.String reproduction)
	{
		setReproduction(getContext(), reproduction);
	}

	/**
	 * Set value of Reproduction
	 * @param context
	 * @param reproduction
	 */
	public final void setReproduction(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String reproduction)
	{
		getMendixObject().setValue(context, MemberNames.Reproduction.toString(), reproduction);
	}

	/**
	 * @return value of ObservedBehaviour
	 */
	public final java.lang.String getObservedBehaviour()
	{
		return getObservedBehaviour(getContext());
	}

	/**
	 * @param context
	 * @return value of ObservedBehaviour
	 */
	public final java.lang.String getObservedBehaviour(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ObservedBehaviour.toString());
	}

	/**
	 * Set value of ObservedBehaviour
	 * @param observedbehaviour
	 */
	public final void setObservedBehaviour(java.lang.String observedbehaviour)
	{
		setObservedBehaviour(getContext(), observedbehaviour);
	}

	/**
	 * Set value of ObservedBehaviour
	 * @param context
	 * @param observedbehaviour
	 */
	public final void setObservedBehaviour(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String observedbehaviour)
	{
		getMendixObject().setValue(context, MemberNames.ObservedBehaviour.toString(), observedbehaviour);
	}

	/**
	 * @return value of DesiredBehaviour
	 */
	public final java.lang.String getDesiredBehaviour()
	{
		return getDesiredBehaviour(getContext());
	}

	/**
	 * @param context
	 * @return value of DesiredBehaviour
	 */
	public final java.lang.String getDesiredBehaviour(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.DesiredBehaviour.toString());
	}

	/**
	 * Set value of DesiredBehaviour
	 * @param desiredbehaviour
	 */
	public final void setDesiredBehaviour(java.lang.String desiredbehaviour)
	{
		setDesiredBehaviour(getContext(), desiredbehaviour);
	}

	/**
	 * Set value of DesiredBehaviour
	 * @param context
	 * @param desiredbehaviour
	 */
	public final void setDesiredBehaviour(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String desiredbehaviour)
	{
		getMendixObject().setValue(context, MemberNames.DesiredBehaviour.toString(), desiredbehaviour);
	}

	/**
	 * @return value of Solution
	 */
	public final java.lang.String getSolution()
	{
		return getSolution(getContext());
	}

	/**
	 * @param context
	 * @return value of Solution
	 */
	public final java.lang.String getSolution(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Solution.toString());
	}

	/**
	 * Set value of Solution
	 * @param solution
	 */
	public final void setSolution(java.lang.String solution)
	{
		setSolution(getContext(), solution);
	}

	/**
	 * Set value of Solution
	 * @param context
	 * @param solution
	 */
	public final void setSolution(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String solution)
	{
		getMendixObject().setValue(context, MemberNames.Solution.toString(), solution);
	}

	/**
	 * Set value of Status
	 * @param status
	 */
	public final testcases.proxies.IssueStatus getStatus()
	{
		return getStatus(getContext());
	}

	/**
	 * @param context
	 * @return value of Status
	 */
	public final testcases.proxies.IssueStatus getStatus(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.Status.toString());
		if (obj == null)
			return null;

		return testcases.proxies.IssueStatus.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of Status
	 * @param status
	 */
	public final void setStatus(testcases.proxies.IssueStatus status)
	{
		setStatus(getContext(), status);
	}

	/**
	 * Set value of Status
	 * @param context
	 * @param status
	 */
	public final void setStatus(com.mendix.systemwideinterfaces.core.IContext context, testcases.proxies.IssueStatus status)
	{
		if (status != null)
			getMendixObject().setValue(context, MemberNames.Status.toString(), status.toString());
		else
			getMendixObject().setValue(context, MemberNames.Status.toString(), null);
	}

	/**
	 * @return value of TestCaseTitle
	 */
	public final java.lang.String getTestCaseTitle()
	{
		return getTestCaseTitle(getContext());
	}

	/**
	 * @param context
	 * @return value of TestCaseTitle
	 */
	public final java.lang.String getTestCaseTitle(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.TestCaseTitle.toString());
	}

	/**
	 * Set value of TestCaseTitle
	 * @param testcasetitle
	 */
	public final void setTestCaseTitle(java.lang.String testcasetitle)
	{
		setTestCaseTitle(getContext(), testcasetitle);
	}

	/**
	 * Set value of TestCaseTitle
	 * @param context
	 * @param testcasetitle
	 */
	public final void setTestCaseTitle(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String testcasetitle)
	{
		getMendixObject().setValue(context, MemberNames.TestCaseTitle.toString(), testcasetitle);
	}

	/**
	 * @return value of Issue_TestStep
	 */
	public final testcases.proxies.TestStep getIssue_TestStep() throws com.mendix.core.CoreException
	{
		return getIssue_TestStep(getContext());
	}

	/**
	 * @param context
	 * @return value of Issue_TestStep
	 */
	public final testcases.proxies.TestStep getIssue_TestStep(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		testcases.proxies.TestStep result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Issue_TestStep.toString());
		if (identifier != null)
			result = testcases.proxies.TestStep.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Issue_TestStep
	 * @param issue_teststep
	 */
	public final void setIssue_TestStep(testcases.proxies.TestStep issue_teststep)
	{
		setIssue_TestStep(getContext(), issue_teststep);
	}

	/**
	 * Set value of Issue_TestStep
	 * @param context
	 * @param issue_teststep
	 */
	public final void setIssue_TestStep(com.mendix.systemwideinterfaces.core.IContext context, testcases.proxies.TestStep issue_teststep)
	{
		if (issue_teststep == null)
			getMendixObject().setValue(context, MemberNames.Issue_TestStep.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Issue_TestStep.toString(), issue_teststep.getMendixObject().getId());
	}

	/**
	 * @return value of Issue_Test
	 */
	public final testcases.proxies.Test getIssue_Test() throws com.mendix.core.CoreException
	{
		return getIssue_Test(getContext());
	}

	/**
	 * @param context
	 * @return value of Issue_Test
	 */
	public final testcases.proxies.Test getIssue_Test(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		testcases.proxies.Test result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Issue_Test.toString());
		if (identifier != null)
			result = testcases.proxies.Test.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Issue_Test
	 * @param issue_test
	 */
	public final void setIssue_Test(testcases.proxies.Test issue_test)
	{
		setIssue_Test(getContext(), issue_test);
	}

	/**
	 * Set value of Issue_Test
	 * @param context
	 * @param issue_test
	 */
	public final void setIssue_Test(com.mendix.systemwideinterfaces.core.IContext context, testcases.proxies.Test issue_test)
	{
		if (issue_test == null)
			getMendixObject().setValue(context, MemberNames.Issue_Test.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Issue_Test.toString(), issue_test.getMendixObject().getId());
	}

	/**
	 * @return value of Issue_Developers
	 */
	public final testcases.proxies.Developers getIssue_Developers() throws com.mendix.core.CoreException
	{
		return getIssue_Developers(getContext());
	}

	/**
	 * @param context
	 * @return value of Issue_Developers
	 */
	public final testcases.proxies.Developers getIssue_Developers(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		testcases.proxies.Developers result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Issue_Developers.toString());
		if (identifier != null)
			result = testcases.proxies.Developers.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Issue_Developers
	 * @param issue_developers
	 */
	public final void setIssue_Developers(testcases.proxies.Developers issue_developers)
	{
		setIssue_Developers(getContext(), issue_developers);
	}

	/**
	 * Set value of Issue_Developers
	 * @param context
	 * @param issue_developers
	 */
	public final void setIssue_Developers(com.mendix.systemwideinterfaces.core.IContext context, testcases.proxies.Developers issue_developers)
	{
		if (issue_developers == null)
			getMendixObject().setValue(context, MemberNames.Issue_Developers.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Issue_Developers.toString(), issue_developers.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return issueMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final testcases.proxies.Issue that = (testcases.proxies.Issue) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "TestCases.Issue";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
