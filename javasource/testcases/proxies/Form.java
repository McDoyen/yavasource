// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package testcases.proxies;

public class Form
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject formMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "TestCases.Form";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Name("Name"),
		Form_CurrentTestCaseStep("TestCases.Form_CurrentTestCaseStep"),
		TestCategory_Form("TestCases.TestCategory_Form"),
		TestCaseCategory_Form("TestCases.TestCaseCategory_Form"),
		Form_MxObjectType("TestCases.Form_MxObjectType");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Form(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "TestCases.Form"));
	}

	protected Form(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject formMendixObject)
	{
		if (formMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("TestCases.Form", formMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a TestCases.Form");

		this.formMendixObject = formMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Form.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static testcases.proxies.Form initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return testcases.proxies.Form.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static testcases.proxies.Form initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new testcases.proxies.Form(context, mendixObject);
	}

	public static testcases.proxies.Form load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return testcases.proxies.Form.initialize(context, mendixObject);
	}

	public static java.util.List<testcases.proxies.Form> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<testcases.proxies.Form> result = new java.util.ArrayList<testcases.proxies.Form>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//TestCases.Form" + xpathConstraint))
			result.add(testcases.proxies.Form.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Name
	 */
	public final java.lang.String getName()
	{
		return getName(getContext());
	}

	/**
	 * @param context
	 * @return value of Name
	 */
	public final java.lang.String getName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Name.toString());
	}

	/**
	 * Set value of Name
	 * @param name
	 */
	public final void setName(java.lang.String name)
	{
		setName(getContext(), name);
	}

	/**
	 * Set value of Name
	 * @param context
	 * @param name
	 */
	public final void setName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String name)
	{
		getMendixObject().setValue(context, MemberNames.Name.toString(), name);
	}

	/**
	 * @return value of Form_CurrentTestCaseStep
	 */
	public final testcases.proxies.TestCaseStep getForm_CurrentTestCaseStep() throws com.mendix.core.CoreException
	{
		return getForm_CurrentTestCaseStep(getContext());
	}

	/**
	 * @param context
	 * @return value of Form_CurrentTestCaseStep
	 */
	public final testcases.proxies.TestCaseStep getForm_CurrentTestCaseStep(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		testcases.proxies.TestCaseStep result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Form_CurrentTestCaseStep.toString());
		if (identifier != null)
			result = testcases.proxies.TestCaseStep.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Form_CurrentTestCaseStep
	 * @param form_currenttestcasestep
	 */
	public final void setForm_CurrentTestCaseStep(testcases.proxies.TestCaseStep form_currenttestcasestep)
	{
		setForm_CurrentTestCaseStep(getContext(), form_currenttestcasestep);
	}

	/**
	 * Set value of Form_CurrentTestCaseStep
	 * @param context
	 * @param form_currenttestcasestep
	 */
	public final void setForm_CurrentTestCaseStep(com.mendix.systemwideinterfaces.core.IContext context, testcases.proxies.TestCaseStep form_currenttestcasestep)
	{
		if (form_currenttestcasestep == null)
			getMendixObject().setValue(context, MemberNames.Form_CurrentTestCaseStep.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Form_CurrentTestCaseStep.toString(), form_currenttestcasestep.getMendixObject().getId());
	}

	/**
	 * @return value of TestCategory_Form
	 */
	public final testcases.proxies.TestCategory getTestCategory_Form() throws com.mendix.core.CoreException
	{
		return getTestCategory_Form(getContext());
	}

	/**
	 * @param context
	 * @return value of TestCategory_Form
	 */
	public final testcases.proxies.TestCategory getTestCategory_Form(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		testcases.proxies.TestCategory result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.TestCategory_Form.toString());
		if (identifier != null)
			result = testcases.proxies.TestCategory.load(context, identifier);
		return result;
	}

	/**
	 * Set value of TestCategory_Form
	 * @param testcategory_form
	 */
	public final void setTestCategory_Form(testcases.proxies.TestCategory testcategory_form)
	{
		setTestCategory_Form(getContext(), testcategory_form);
	}

	/**
	 * Set value of TestCategory_Form
	 * @param context
	 * @param testcategory_form
	 */
	public final void setTestCategory_Form(com.mendix.systemwideinterfaces.core.IContext context, testcases.proxies.TestCategory testcategory_form)
	{
		if (testcategory_form == null)
			getMendixObject().setValue(context, MemberNames.TestCategory_Form.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.TestCategory_Form.toString(), testcategory_form.getMendixObject().getId());
	}

	/**
	 * @return value of TestCaseCategory_Form
	 */
	public final testcases.proxies.TestCaseCategory getTestCaseCategory_Form() throws com.mendix.core.CoreException
	{
		return getTestCaseCategory_Form(getContext());
	}

	/**
	 * @param context
	 * @return value of TestCaseCategory_Form
	 */
	public final testcases.proxies.TestCaseCategory getTestCaseCategory_Form(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		testcases.proxies.TestCaseCategory result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.TestCaseCategory_Form.toString());
		if (identifier != null)
			result = testcases.proxies.TestCaseCategory.load(context, identifier);
		return result;
	}

	/**
	 * Set value of TestCaseCategory_Form
	 * @param testcasecategory_form
	 */
	public final void setTestCaseCategory_Form(testcases.proxies.TestCaseCategory testcasecategory_form)
	{
		setTestCaseCategory_Form(getContext(), testcasecategory_form);
	}

	/**
	 * Set value of TestCaseCategory_Form
	 * @param context
	 * @param testcasecategory_form
	 */
	public final void setTestCaseCategory_Form(com.mendix.systemwideinterfaces.core.IContext context, testcases.proxies.TestCaseCategory testcasecategory_form)
	{
		if (testcasecategory_form == null)
			getMendixObject().setValue(context, MemberNames.TestCaseCategory_Form.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.TestCaseCategory_Form.toString(), testcasecategory_form.getMendixObject().getId());
	}

	/**
	 * @return value of Form_MxObjectType
	 */
	public final mxmodelreflection.proxies.MxObjectType getForm_MxObjectType() throws com.mendix.core.CoreException
	{
		return getForm_MxObjectType(getContext());
	}

	/**
	 * @param context
	 * @return value of Form_MxObjectType
	 */
	public final mxmodelreflection.proxies.MxObjectType getForm_MxObjectType(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		mxmodelreflection.proxies.MxObjectType result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Form_MxObjectType.toString());
		if (identifier != null)
			result = mxmodelreflection.proxies.MxObjectType.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Form_MxObjectType
	 * @param form_mxobjecttype
	 */
	public final void setForm_MxObjectType(mxmodelreflection.proxies.MxObjectType form_mxobjecttype)
	{
		setForm_MxObjectType(getContext(), form_mxobjecttype);
	}

	/**
	 * Set value of Form_MxObjectType
	 * @param context
	 * @param form_mxobjecttype
	 */
	public final void setForm_MxObjectType(com.mendix.systemwideinterfaces.core.IContext context, mxmodelreflection.proxies.MxObjectType form_mxobjecttype)
	{
		if (form_mxobjecttype == null)
			getMendixObject().setValue(context, MemberNames.Form_MxObjectType.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Form_MxObjectType.toString(), form_mxobjecttype.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return formMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final testcases.proxies.Form that = (testcases.proxies.Form) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "TestCases.Form";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
