// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package workflowinstance.proxies;

public class Workflow
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject workflowMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "WorkflowInstance.Workflow";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		InstanceID("InstanceID"),
		Name("Name"),
		ProcessType("ProcessType"),
		Description("Description"),
		ValidationText("ValidationText"),
		Valid("Valid"),
		ChartXML_InstanceWorkflow("FusionChartsPlus.ChartXML_InstanceWorkflow"),
		Workflow_BusinessGroups("WorkflowInstance.Workflow_BusinessGroups"),
		Workflow_Matrix("WorkflowInstance.Workflow_Matrix");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Workflow(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "WorkflowInstance.Workflow"));
	}

	protected Workflow(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject workflowMendixObject)
	{
		if (workflowMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("WorkflowInstance.Workflow", workflowMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a WorkflowInstance.Workflow");

		this.workflowMendixObject = workflowMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Workflow.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static workflowinstance.proxies.Workflow initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return workflowinstance.proxies.Workflow.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static workflowinstance.proxies.Workflow initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		if (com.mendix.core.Core.isSubClassOf("WorkflowExecution.RequestWorkflowInstance", mendixObject.getType()))
			return workflowexecution.proxies.RequestWorkflowInstance.initialize(context, mendixObject);

		return new workflowinstance.proxies.Workflow(context, mendixObject);
	}

	public static workflowinstance.proxies.Workflow load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return workflowinstance.proxies.Workflow.initialize(context, mendixObject);
	}

	public static java.util.List<? extends workflowinstance.proxies.Workflow> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<workflowinstance.proxies.Workflow> result = new java.util.ArrayList<workflowinstance.proxies.Workflow>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//WorkflowInstance.Workflow" + xpathConstraint))
			result.add(workflowinstance.proxies.Workflow.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of InstanceID
	 */
	public final java.lang.Long getInstanceID()
	{
		return getInstanceID(getContext());
	}

	/**
	 * @param context
	 * @return value of InstanceID
	 */
	public final java.lang.Long getInstanceID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.InstanceID.toString());
	}

	/**
	 * Set value of InstanceID
	 * @param instanceid
	 */
	public final void setInstanceID(java.lang.Long instanceid)
	{
		setInstanceID(getContext(), instanceid);
	}

	/**
	 * Set value of InstanceID
	 * @param context
	 * @param instanceid
	 */
	public final void setInstanceID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long instanceid)
	{
		getMendixObject().setValue(context, MemberNames.InstanceID.toString(), instanceid);
	}

	/**
	 * @return value of Name
	 */
	public final java.lang.String getName()
	{
		return getName(getContext());
	}

	/**
	 * @param context
	 * @return value of Name
	 */
	public final java.lang.String getName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Name.toString());
	}

	/**
	 * Set value of Name
	 * @param name
	 */
	public final void setName(java.lang.String name)
	{
		setName(getContext(), name);
	}

	/**
	 * Set value of Name
	 * @param context
	 * @param name
	 */
	public final void setName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String name)
	{
		getMendixObject().setValue(context, MemberNames.Name.toString(), name);
	}

	/**
	 * Set value of ProcessType
	 * @param processtype
	 */
	public final slm.proxies.ProcessType getProcessType()
	{
		return getProcessType(getContext());
	}

	/**
	 * @param context
	 * @return value of ProcessType
	 */
	public final slm.proxies.ProcessType getProcessType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.ProcessType.toString());
		if (obj == null)
			return null;

		return slm.proxies.ProcessType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of ProcessType
	 * @param processtype
	 */
	public final void setProcessType(slm.proxies.ProcessType processtype)
	{
		setProcessType(getContext(), processtype);
	}

	/**
	 * Set value of ProcessType
	 * @param context
	 * @param processtype
	 */
	public final void setProcessType(com.mendix.systemwideinterfaces.core.IContext context, slm.proxies.ProcessType processtype)
	{
		if (processtype != null)
			getMendixObject().setValue(context, MemberNames.ProcessType.toString(), processtype.toString());
		else
			getMendixObject().setValue(context, MemberNames.ProcessType.toString(), null);
	}

	/**
	 * @return value of Description
	 */
	public final java.lang.String getDescription()
	{
		return getDescription(getContext());
	}

	/**
	 * @param context
	 * @return value of Description
	 */
	public final java.lang.String getDescription(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Description.toString());
	}

	/**
	 * Set value of Description
	 * @param description
	 */
	public final void setDescription(java.lang.String description)
	{
		setDescription(getContext(), description);
	}

	/**
	 * Set value of Description
	 * @param context
	 * @param description
	 */
	public final void setDescription(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String description)
	{
		getMendixObject().setValue(context, MemberNames.Description.toString(), description);
	}

	/**
	 * @return value of ValidationText
	 */
	public final java.lang.String getValidationText()
	{
		return getValidationText(getContext());
	}

	/**
	 * @param context
	 * @return value of ValidationText
	 */
	public final java.lang.String getValidationText(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ValidationText.toString());
	}

	/**
	 * Set value of ValidationText
	 * @param validationtext
	 */
	public final void setValidationText(java.lang.String validationtext)
	{
		setValidationText(getContext(), validationtext);
	}

	/**
	 * Set value of ValidationText
	 * @param context
	 * @param validationtext
	 */
	public final void setValidationText(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String validationtext)
	{
		getMendixObject().setValue(context, MemberNames.ValidationText.toString(), validationtext);
	}

	/**
	 * Set value of Valid
	 * @param valid
	 */
	public final workflowshared.proxies.ValidEnum getValid()
	{
		return getValid(getContext());
	}

	/**
	 * @param context
	 * @return value of Valid
	 */
	public final workflowshared.proxies.ValidEnum getValid(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.Valid.toString());
		if (obj == null)
			return null;

		return workflowshared.proxies.ValidEnum.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of Valid
	 * @param valid
	 */
	public final void setValid(workflowshared.proxies.ValidEnum valid)
	{
		setValid(getContext(), valid);
	}

	/**
	 * Set value of Valid
	 * @param context
	 * @param valid
	 */
	public final void setValid(com.mendix.systemwideinterfaces.core.IContext context, workflowshared.proxies.ValidEnum valid)
	{
		if (valid != null)
			getMendixObject().setValue(context, MemberNames.Valid.toString(), valid.toString());
		else
			getMendixObject().setValue(context, MemberNames.Valid.toString(), null);
	}

	/**
	 * @return value of ChartXML_InstanceWorkflow
	 */
	public final fusionchartsplus.proxies.ChartXML getChartXML_InstanceWorkflow() throws com.mendix.core.CoreException
	{
		return getChartXML_InstanceWorkflow(getContext());
	}

	/**
	 * @param context
	 * @return value of ChartXML_InstanceWorkflow
	 */
	public final fusionchartsplus.proxies.ChartXML getChartXML_InstanceWorkflow(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		fusionchartsplus.proxies.ChartXML result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ChartXML_InstanceWorkflow.toString());
		if (identifier != null)
			result = fusionchartsplus.proxies.ChartXML.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ChartXML_InstanceWorkflow
	 * @param chartxml_instanceworkflow
	 */
	public final void setChartXML_InstanceWorkflow(fusionchartsplus.proxies.ChartXML chartxml_instanceworkflow)
	{
		setChartXML_InstanceWorkflow(getContext(), chartxml_instanceworkflow);
	}

	/**
	 * Set value of ChartXML_InstanceWorkflow
	 * @param context
	 * @param chartxml_instanceworkflow
	 */
	public final void setChartXML_InstanceWorkflow(com.mendix.systemwideinterfaces.core.IContext context, fusionchartsplus.proxies.ChartXML chartxml_instanceworkflow)
	{
		if (chartxml_instanceworkflow == null)
			getMendixObject().setValue(context, MemberNames.ChartXML_InstanceWorkflow.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ChartXML_InstanceWorkflow.toString(), chartxml_instanceworkflow.getMendixObject().getId());
	}

	/**
	 * @return value of Workflow_BusinessGroups
	 */
	public final java.util.List<nap.proxies.BusinessGroup> getWorkflow_BusinessGroups() throws com.mendix.core.CoreException
	{
		return getWorkflow_BusinessGroups(getContext());
	}

	/**
	 * @param context
	 * @return value of Workflow_BusinessGroups
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<nap.proxies.BusinessGroup> getWorkflow_BusinessGroups(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<nap.proxies.BusinessGroup> result = new java.util.ArrayList<nap.proxies.BusinessGroup>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.Workflow_BusinessGroups.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(nap.proxies.BusinessGroup.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of Workflow_BusinessGroups
	 * @param workflow_businessgroups
	 */
	public final void setWorkflow_BusinessGroups(java.util.List<nap.proxies.BusinessGroup> workflow_businessgroups)
	{
		setWorkflow_BusinessGroups(getContext(), workflow_businessgroups);
	}

	/**
	 * Set value of Workflow_BusinessGroups
	 * @param context
	 * @param workflow_businessgroups
	 */
	public final void setWorkflow_BusinessGroups(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<nap.proxies.BusinessGroup> workflow_businessgroups)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (nap.proxies.BusinessGroup proxyObject : workflow_businessgroups)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.Workflow_BusinessGroups.toString(), identifiers);
	}

	/**
	 * @return value of Workflow_Matrix
	 */
	public final statetransition.proxies.Matrix getWorkflow_Matrix() throws com.mendix.core.CoreException
	{
		return getWorkflow_Matrix(getContext());
	}

	/**
	 * @param context
	 * @return value of Workflow_Matrix
	 */
	public final statetransition.proxies.Matrix getWorkflow_Matrix(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		statetransition.proxies.Matrix result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Workflow_Matrix.toString());
		if (identifier != null)
			result = statetransition.proxies.Matrix.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Workflow_Matrix
	 * @param workflow_matrix
	 */
	public final void setWorkflow_Matrix(statetransition.proxies.Matrix workflow_matrix)
	{
		setWorkflow_Matrix(getContext(), workflow_matrix);
	}

	/**
	 * Set value of Workflow_Matrix
	 * @param context
	 * @param workflow_matrix
	 */
	public final void setWorkflow_Matrix(com.mendix.systemwideinterfaces.core.IContext context, statetransition.proxies.Matrix workflow_matrix)
	{
		if (workflow_matrix == null)
			getMendixObject().setValue(context, MemberNames.Workflow_Matrix.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Workflow_Matrix.toString(), workflow_matrix.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return workflowMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final workflowinstance.proxies.Workflow that = (workflowinstance.proxies.Workflow) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "WorkflowInstance.Workflow";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
