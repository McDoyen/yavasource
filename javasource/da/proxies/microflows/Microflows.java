// This file was generated by Mendix Modeler 7.7.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package da.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the DA module
	public static void applyAutomaticDataAccess(IContext context, da.proxies.AutomaticDataAccess _automaticDataAccess)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AutomaticDataAccess", _automaticDataAccess == null ? null : _automaticDataAccess.getMendixObject());
			Core.execute(context, "DA.ApplyAutomaticDataAccess", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void applyDomain(IContext context, da.proxies.Domain _domain)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Domain", _domain == null ? null : _domain.getMendixObject());
			Core.execute(context, "DA.ApplyDomain", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void applyLabel(IContext context, da.proxies.Label _label)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Label", _label == null ? null : _label.getMendixObject());
			Core.execute(context, "DA.ApplyLabel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditAutomaticDataAccess_AfterCommit(IContext context, da.proxies.AutomaticDataAccess _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "DA.AuditAutomaticDataAccess_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditAutomaticDataAccess_AfterDelete(IContext context, da.proxies.AutomaticDataAccess _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "DA.AuditAutomaticDataAccess_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditAutomaticDataAccess_GetAuditRecord(IContext context, da.proxies.AutomaticDataAccess _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "DA.AuditAutomaticDataAccess_GetAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditDataAccessEntityLink_AfterCommit(IContext context, da.proxies.DataAccessEntityLink _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "DA.AuditDataAccessEntityLink_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditDataAccessEntityLink_AfterDelete(IContext context, da.proxies.DataAccessEntityLink _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "DA.AuditDataAccessEntityLink_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditDomain_AfterCommit(IContext context, da.proxies.Domain _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "DA.AuditDomain_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditDomain_AfterDelete(IContext context, da.proxies.Domain _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "DA.AuditDomain_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditDomain_GetAuditRecord(IContext context, da.proxies.Domain _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "DA.AuditDomain_GetAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditLabel_AfterCommit(IContext context, da.proxies.Label _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "DA.AuditLabel_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditLabel_AfterDelete(IContext context, da.proxies.Label _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "DA.AuditLabel_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditLabel_GetAuditRecord(IContext context, da.proxies.Label _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "DA.AuditLabel_GetAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void automaticDataAccess_EntityLinkSelected(IContext context, da.proxies.AutomaticDataAccess _automaticDataAccess)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AutomaticDataAccess", _automaticDataAccess == null ? null : _automaticDataAccess.getMendixObject());
			Core.execute(context, "DA.AutomaticDataAccess_EntityLinkSelected", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<da.proxies.DataAccessEntityLink> automaticDataAccess_GetEntityLink(IContext context, da.proxies.AutomaticDataAccess _automaticDataAccess)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AutomaticDataAccess", _automaticDataAccess == null ? null : _automaticDataAccess.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "DA.AutomaticDataAccess_GetEntityLink", params);
			java.util.List<da.proxies.DataAccessEntityLink> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<da.proxies.DataAccessEntityLink>();
				for (IMendixObject obj : objs)
					result.add(da.proxies.DataAccessEntityLink.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean automaticDataAccess_HasMultipleRelations(IContext context, da.proxies.AutomaticDataAccess _automaticDataAccess)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AutomaticDataAccess", _automaticDataAccess == null ? null : _automaticDataAccess.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "DA.AutomaticDataAccess_HasMultipleRelations", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void automaticDataAccess_RelationSelected(IContext context, da.proxies.AutomaticDataAccess _automaticDataAccess)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AutomaticDataAccess", _automaticDataAccess == null ? null : _automaticDataAccess.getMendixObject());
			Core.execute(context, "DA.AutomaticDataAccess_RelationSelected", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<metamodel.proxies.MendixRelation> automaticDataAccess_SelectRelation(IContext context, da.proxies.AutomaticDataAccess _automaticDataAccess)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AutomaticDataAccess", _automaticDataAccess == null ? null : _automaticDataAccess.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "DA.AutomaticDataAccess_SelectRelation", params);
			java.util.List<metamodel.proxies.MendixRelation> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<metamodel.proxies.MendixRelation>();
				for (IMendixObject obj : objs)
					result.add(metamodel.proxies.MendixRelation.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<metamodel.proxies.MendixEntity> automaticDataAccess_SelectSource(IContext context, da.proxies.AutomaticDataAccess _automaticDataAccess)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AutomaticDataAccess", _automaticDataAccess == null ? null : _automaticDataAccess.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "DA.AutomaticDataAccess_SelectSource", params);
			java.util.List<metamodel.proxies.MendixEntity> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<metamodel.proxies.MendixEntity>();
				for (IMendixObject obj : objs)
					result.add(metamodel.proxies.MendixEntity.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void automaticDataAccess_SourceSelected(IContext context, da.proxies.AutomaticDataAccess _automaticDataAccess)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AutomaticDataAccess", _automaticDataAccess == null ? null : _automaticDataAccess.getMendixObject());
			Core.execute(context, "DA.AutomaticDataAccess_SourceSelected", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void automaticDataAccess_SourceTypeChanged(IContext context, da.proxies.AutomaticDataAccess _automaticDataAccess)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AutomaticDataAccess", _automaticDataAccess == null ? null : _automaticDataAccess.getMendixObject());
			Core.execute(context, "DA.AutomaticDataAccess_SourceTypeChanged", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void automaticDataAccess_TargetSelected(IContext context, da.proxies.AutomaticDataAccess _automaticDataAccess)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AutomaticDataAccess", _automaticDataAccess == null ? null : _automaticDataAccess.getMendixObject());
			Core.execute(context, "DA.AutomaticDataAccess_TargetSelected", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyAutomaticDataAccess(IContext context, da.proxies.AutomaticDataAccess _automaticDataAccess)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AutomaticDataAccess", _automaticDataAccess == null ? null : _automaticDataAccess.getMendixObject());
			Core.execute(context, "DA.CopyAutomaticDataAccess", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyDomainWithLabels(IContext context, da.proxies.Domain _domain)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Domain", _domain == null ? null : _domain.getMendixObject());
			Core.execute(context, "DA.CopyDomainWithLabels", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyLabel(IContext context, da.proxies.Label _label)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Label", _label == null ? null : _label.getMendixObject());
			Core.execute(context, "DA.CopyLabel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyLabelList(IContext context, java.util.List<da.proxies.Label> _labelList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_labelList = null;
			if (_labelList != null)
			{
				listparam_labelList = new java.util.ArrayList<IMendixObject>();
				for (da.proxies.Label obj : _labelList)
					listparam_labelList.add(obj.getMendixObject());
			}
			params.put("LabelList", listparam_labelList);
			Core.execute(context, "DA.CopyLabelList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyNewLabelToSystemAdmin_AndAudit_AfterCommit(IContext context, da.proxies.Label _label)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Label", _label == null ? null : _label.getMendixObject());
			Core.execute(context, "DA.CopyNewLabelToSystemAdmin_AndAudit_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String description_Field(IContext context, da.proxies.AutomaticDataAccess _automaticDataAccess)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AutomaticDataAccess", _automaticDataAccess == null ? null : _automaticDataAccess.getMendixObject());
			return (java.lang.String)Core.execute(context, "DA.Description_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static da.proxies.Label getDefaultLabel(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "DA.GetDefaultLabel", params);
			return result == null ? null : da.proxies.Label.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static da.proxies.Label getDefaultLabel_ForAccount(IContext context, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "DA.GetDefaultLabel_ForAccount", params);
			return result == null ? null : da.proxies.Label.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getErrorMessage(IContext context, system.proxies.Error _error)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Error", _error == null ? null : _error.getMendixObject());
			return (java.lang.String)Core.execute(context, "DA.GetErrorMessage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void init_DataAccess_MendixEntityList(IContext context, java.util.List<metamodel.proxies.MendixEntity> _mendixEntityList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_mendixEntityList = null;
			if (_mendixEntityList != null)
			{
				listparam_mendixEntityList = new java.util.ArrayList<IMendixObject>();
				for (metamodel.proxies.MendixEntity obj : _mendixEntityList)
					listparam_mendixEntityList.add(obj.getMendixObject());
			}
			params.put("MendixEntityList", listparam_mendixEntityList);
			Core.execute(context, "DA.Init_DataAccess_MendixEntityList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void init_FullDataAccess(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "DA.Init_FullDataAccess", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateAutomaticDA(IContext context, da.proxies.AutomaticDataAccess _automaticDataAccess)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AutomaticDataAccess", _automaticDataAccess == null ? null : _automaticDataAccess.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "DA.ValidateAutomaticDA", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateDomain(IContext context, da.proxies.Domain _domain)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Domain", _domain == null ? null : _domain.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "DA.ValidateDomain", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateLabel_SetDomainByUser(IContext context, da.proxies.Label _label)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Label", _label == null ? null : _label.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "DA.ValidateLabel_SetDomainByUser", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}