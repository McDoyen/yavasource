// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package customlvnl.proxies;

public class Swap
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject swapMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "CustomLVNL.Swap";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		From_Person("CustomLVNL.From_Person"),
		To_Person("CustomLVNL.To_Person");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Swap(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "CustomLVNL.Swap"));
	}

	protected Swap(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject swapMendixObject)
	{
		if (swapMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("CustomLVNL.Swap", swapMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a CustomLVNL.Swap");

		this.swapMendixObject = swapMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Swap.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static customlvnl.proxies.Swap initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return customlvnl.proxies.Swap.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static customlvnl.proxies.Swap initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new customlvnl.proxies.Swap(context, mendixObject);
	}

	public static customlvnl.proxies.Swap load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return customlvnl.proxies.Swap.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of From_Person
	 */
	public final nap.proxies.Person getFrom_Person() throws com.mendix.core.CoreException
	{
		return getFrom_Person(getContext());
	}

	/**
	 * @param context
	 * @return value of From_Person
	 */
	public final nap.proxies.Person getFrom_Person(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		nap.proxies.Person result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.From_Person.toString());
		if (identifier != null)
			result = nap.proxies.Person.load(context, identifier);
		return result;
	}

	/**
	 * Set value of From_Person
	 * @param from_person
	 */
	public final void setFrom_Person(nap.proxies.Person from_person)
	{
		setFrom_Person(getContext(), from_person);
	}

	/**
	 * Set value of From_Person
	 * @param context
	 * @param from_person
	 */
	public final void setFrom_Person(com.mendix.systemwideinterfaces.core.IContext context, nap.proxies.Person from_person)
	{
		if (from_person == null)
			getMendixObject().setValue(context, MemberNames.From_Person.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.From_Person.toString(), from_person.getMendixObject().getId());
	}

	/**
	 * @return value of To_Person
	 */
	public final nap.proxies.Person getTo_Person() throws com.mendix.core.CoreException
	{
		return getTo_Person(getContext());
	}

	/**
	 * @param context
	 * @return value of To_Person
	 */
	public final nap.proxies.Person getTo_Person(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		nap.proxies.Person result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.To_Person.toString());
		if (identifier != null)
			result = nap.proxies.Person.load(context, identifier);
		return result;
	}

	/**
	 * Set value of To_Person
	 * @param to_person
	 */
	public final void setTo_Person(nap.proxies.Person to_person)
	{
		setTo_Person(getContext(), to_person);
	}

	/**
	 * Set value of To_Person
	 * @param context
	 * @param to_person
	 */
	public final void setTo_Person(com.mendix.systemwideinterfaces.core.IContext context, nap.proxies.Person to_person)
	{
		if (to_person == null)
			getMendixObject().setValue(context, MemberNames.To_Person.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.To_Person.toString(), to_person.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return swapMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final customlvnl.proxies.Swap that = (customlvnl.proxies.Swap) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "CustomLVNL.Swap";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
