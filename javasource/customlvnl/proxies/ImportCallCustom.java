// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package customlvnl.proxies;

public class ImportCallCustom extends databasereplication.proxies.ImportCall
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "CustomLVNL.ImportCallCustom";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		InterfaceType("InterfaceType"),
		ConstraintDependency("ConstraintDependency"),
		ImportTable("ImportTable"),
		ConstraintMode("ConstraintMode"),
		RefNr("RefNr"),
		ImportRefNr("ImportRefNr"),
		SetReferenceToEntityOne("SetReferenceToEntityOne"),
		SetReferenceToEntityTwo("SetReferenceToEntityTwo"),
		ImportCall_TableMapping("DatabaseReplication.ImportCall_TableMapping"),
		ImportCallOne_MxObjectType("DatabaseReplication.ImportCallOne_MxObjectType"),
		ImportCalTwo_MxObjectType("DatabaseReplication.ImportCalTwo_MxObjectType"),
		ImportCallOne_MxObjectReference("DatabaseReplication.ImportCallOne_MxObjectReference"),
		ImportCallTwo_MxObjectReference("DatabaseReplication.ImportCallTwo_MxObjectReference");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public ImportCallCustom(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "CustomLVNL.ImportCallCustom"));
	}

	protected ImportCallCustom(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject importCallCustomMendixObject)
	{
		super(context, importCallCustomMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("CustomLVNL.ImportCallCustom", importCallCustomMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a CustomLVNL.ImportCallCustom");
	}

	/**
	 * @deprecated Use 'ImportCallCustom.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static customlvnl.proxies.ImportCallCustom initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return customlvnl.proxies.ImportCallCustom.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static customlvnl.proxies.ImportCallCustom initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new customlvnl.proxies.ImportCallCustom(context, mendixObject);
	}

	public static customlvnl.proxies.ImportCallCustom load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return customlvnl.proxies.ImportCallCustom.initialize(context, mendixObject);
	}

	public static java.util.List<customlvnl.proxies.ImportCallCustom> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<customlvnl.proxies.ImportCallCustom> result = new java.util.ArrayList<customlvnl.proxies.ImportCallCustom>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//CustomLVNL.ImportCallCustom" + xpathConstraint))
			result.add(customlvnl.proxies.ImportCallCustom.initialize(context, obj));
		return result;
	}

	/**
	 * Set value of InterfaceType
	 * @param interfacetype
	 */
	public final customlvnl.proxies.InterfaceType getInterfaceType()
	{
		return getInterfaceType(getContext());
	}

	/**
	 * @param context
	 * @return value of InterfaceType
	 */
	public final customlvnl.proxies.InterfaceType getInterfaceType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.InterfaceType.toString());
		if (obj == null)
			return null;

		return customlvnl.proxies.InterfaceType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of InterfaceType
	 * @param interfacetype
	 */
	public final void setInterfaceType(customlvnl.proxies.InterfaceType interfacetype)
	{
		setInterfaceType(getContext(), interfacetype);
	}

	/**
	 * Set value of InterfaceType
	 * @param context
	 * @param interfacetype
	 */
	public final void setInterfaceType(com.mendix.systemwideinterfaces.core.IContext context, customlvnl.proxies.InterfaceType interfacetype)
	{
		if (interfacetype != null)
			getMendixObject().setValue(context, MemberNames.InterfaceType.toString(), interfacetype.toString());
		else
			getMendixObject().setValue(context, MemberNames.InterfaceType.toString(), null);
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final customlvnl.proxies.ImportCallCustom that = (customlvnl.proxies.ImportCallCustom) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "CustomLVNL.ImportCallCustom";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
