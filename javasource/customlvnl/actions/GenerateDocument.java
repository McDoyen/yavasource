// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package customlvnl.actions;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.FileInputStream;
import java.io.InputStream;
import java.util.HashMap;
import org.docx4j.jaxb.Context;
import org.docx4j.model.datastorage.migration.VariablePrepare;
import org.docx4j.openpackaging.packages.WordprocessingMLPackage;
import org.docx4j.openpackaging.parts.WordprocessingML.MainDocumentPart;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.webui.CustomJavaAction;
import customlvnl.proxies.NOTAMDoc;

public class GenerateDocument extends CustomJavaAction<IMendixObject>
{
	private IMendixObject __Item;
	private customlvnl.proxies.NOTAMTransient Item;
	private IMendixObject __TemplateParameter1;
	private customlvnl.proxies.NOTAMTemplate TemplateParameter1;

	public GenerateDocument(IContext context, IMendixObject Item, IMendixObject TemplateParameter1)
	{
		super(context);
		this.__Item = Item;
		this.__TemplateParameter1 = TemplateParameter1;
	}

	@Override
	public IMendixObject executeAction() throws Exception
	{
		this.Item = __Item == null ? null : customlvnl.proxies.NOTAMTransient.initialize(getContext(), __Item);

		this.TemplateParameter1 = __TemplateParameter1 == null ? null : customlvnl.proxies.NOTAMTemplate.initialize(getContext(), __TemplateParameter1);

		// BEGIN USER CODE

		InputStream stream = (FileInputStream) Core.getFileDocumentContent(context, this.TemplateParameter1.getMendixObject());

		@SuppressWarnings("unused")
		org.docx4j.wml.ObjectFactory foo = Context.getWmlObjectFactory();

		WordprocessingMLPackage wordMLPackage = WordprocessingMLPackage
				.load(stream);
		VariablePrepare.prepare(wordMLPackage);
		MainDocumentPart documentPart = wordMLPackage.getMainDocumentPart();

		HashMap<String, String> mappings = new HashMap<String, String>();
		mappings.put("NotamAttr1", Item.getNotamCode());
		mappings.put("PlannedStartUTC", Item.getPlannedStart());
		mappings.put("PlannedEndUTC", Item.getPlannedEnd());
		mappings.put("NotamText", Item.getNotamText());
		documentPart.variableReplace(mappings);
		
		ByteArrayOutputStream out = new ByteArrayOutputStream();		
		wordMLPackage.save(out);
		
		byte[] data = out.toByteArray();
		ByteArrayInputStream istream = new ByteArrayInputStream(data);
			
		NOTAMDoc doc = new NOTAMDoc(context);
		
		Core.storeFileDocumentContent(context, doc.getMendixObject(), Item.getFileName() + ".docx", istream);
		
		return doc.getMendixObject();
		
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "GenerateDocument";
	}

	// BEGIN EXTRA CODE
	public IContext context = Core.createSystemContext();
	// END EXTRA CODE
}
