// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package approval.proxies;

public class ApprovalInstancePersonBatch
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject approvalInstancePersonBatchMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Approval.ApprovalInstancePersonBatch";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		UU95_ValidCaptcha("UU95_ValidCaptcha"),
		PasswordVerified("PasswordVerified"),
		PasswordVerification("PasswordVerification"),
		Feedback("Feedback"),
		Approved("Approved"),
		DecisionDate("DecisionDate"),
		ApprovalInstancePersonBatch_Person("Approval.ApprovalInstancePersonBatch_Person");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public ApprovalInstancePersonBatch(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Approval.ApprovalInstancePersonBatch"));
	}

	protected ApprovalInstancePersonBatch(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject approvalInstancePersonBatchMendixObject)
	{
		if (approvalInstancePersonBatchMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Approval.ApprovalInstancePersonBatch", approvalInstancePersonBatchMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Approval.ApprovalInstancePersonBatch");

		this.approvalInstancePersonBatchMendixObject = approvalInstancePersonBatchMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'ApprovalInstancePersonBatch.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static approval.proxies.ApprovalInstancePersonBatch initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return approval.proxies.ApprovalInstancePersonBatch.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static approval.proxies.ApprovalInstancePersonBatch initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new approval.proxies.ApprovalInstancePersonBatch(context, mendixObject);
	}

	public static approval.proxies.ApprovalInstancePersonBatch load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return approval.proxies.ApprovalInstancePersonBatch.initialize(context, mendixObject);
	}

	public static java.util.List<approval.proxies.ApprovalInstancePersonBatch> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<approval.proxies.ApprovalInstancePersonBatch> result = new java.util.ArrayList<approval.proxies.ApprovalInstancePersonBatch>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Approval.ApprovalInstancePersonBatch" + xpathConstraint))
			result.add(approval.proxies.ApprovalInstancePersonBatch.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of UU95_ValidCaptcha
	 */
	public final java.lang.Boolean getUU95_ValidCaptcha()
	{
		return getUU95_ValidCaptcha(getContext());
	}

	/**
	 * @param context
	 * @return value of UU95_ValidCaptcha
	 */
	public final java.lang.Boolean getUU95_ValidCaptcha(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.UU95_ValidCaptcha.toString());
	}

	/**
	 * Set value of UU95_ValidCaptcha
	 * @param uu95_validcaptcha
	 */
	public final void setUU95_ValidCaptcha(java.lang.Boolean uu95_validcaptcha)
	{
		setUU95_ValidCaptcha(getContext(), uu95_validcaptcha);
	}

	/**
	 * Set value of UU95_ValidCaptcha
	 * @param context
	 * @param uu95_validcaptcha
	 */
	public final void setUU95_ValidCaptcha(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean uu95_validcaptcha)
	{
		getMendixObject().setValue(context, MemberNames.UU95_ValidCaptcha.toString(), uu95_validcaptcha);
	}

	/**
	 * @return value of PasswordVerified
	 */
	public final java.lang.Boolean getPasswordVerified()
	{
		return getPasswordVerified(getContext());
	}

	/**
	 * @param context
	 * @return value of PasswordVerified
	 */
	public final java.lang.Boolean getPasswordVerified(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.PasswordVerified.toString());
	}

	/**
	 * Set value of PasswordVerified
	 * @param passwordverified
	 */
	public final void setPasswordVerified(java.lang.Boolean passwordverified)
	{
		setPasswordVerified(getContext(), passwordverified);
	}

	/**
	 * Set value of PasswordVerified
	 * @param context
	 * @param passwordverified
	 */
	public final void setPasswordVerified(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean passwordverified)
	{
		getMendixObject().setValue(context, MemberNames.PasswordVerified.toString(), passwordverified);
	}

	/**
	 * @return value of PasswordVerification
	 */
	public final java.lang.String getPasswordVerification()
	{
		return getPasswordVerification(getContext());
	}

	/**
	 * @param context
	 * @return value of PasswordVerification
	 */
	public final java.lang.String getPasswordVerification(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.PasswordVerification.toString());
	}

	/**
	 * Set value of PasswordVerification
	 * @param passwordverification
	 */
	public final void setPasswordVerification(java.lang.String passwordverification)
	{
		setPasswordVerification(getContext(), passwordverification);
	}

	/**
	 * Set value of PasswordVerification
	 * @param context
	 * @param passwordverification
	 */
	public final void setPasswordVerification(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String passwordverification)
	{
		getMendixObject().setValue(context, MemberNames.PasswordVerification.toString(), passwordverification);
	}

	/**
	 * @return value of Feedback
	 */
	public final java.lang.String getFeedback()
	{
		return getFeedback(getContext());
	}

	/**
	 * @param context
	 * @return value of Feedback
	 */
	public final java.lang.String getFeedback(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Feedback.toString());
	}

	/**
	 * Set value of Feedback
	 * @param feedback
	 */
	public final void setFeedback(java.lang.String feedback)
	{
		setFeedback(getContext(), feedback);
	}

	/**
	 * Set value of Feedback
	 * @param context
	 * @param feedback
	 */
	public final void setFeedback(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String feedback)
	{
		getMendixObject().setValue(context, MemberNames.Feedback.toString(), feedback);
	}

	/**
	 * Set value of Approved
	 * @param approved
	 */
	public final approval.proxies.ApprovalResultEnum getApproved()
	{
		return getApproved(getContext());
	}

	/**
	 * @param context
	 * @return value of Approved
	 */
	public final approval.proxies.ApprovalResultEnum getApproved(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.Approved.toString());
		if (obj == null)
			return null;

		return approval.proxies.ApprovalResultEnum.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of Approved
	 * @param approved
	 */
	public final void setApproved(approval.proxies.ApprovalResultEnum approved)
	{
		setApproved(getContext(), approved);
	}

	/**
	 * Set value of Approved
	 * @param context
	 * @param approved
	 */
	public final void setApproved(com.mendix.systemwideinterfaces.core.IContext context, approval.proxies.ApprovalResultEnum approved)
	{
		if (approved != null)
			getMendixObject().setValue(context, MemberNames.Approved.toString(), approved.toString());
		else
			getMendixObject().setValue(context, MemberNames.Approved.toString(), null);
	}

	/**
	 * @return value of DecisionDate
	 */
	public final java.util.Date getDecisionDate()
	{
		return getDecisionDate(getContext());
	}

	/**
	 * @param context
	 * @return value of DecisionDate
	 */
	public final java.util.Date getDecisionDate(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.DecisionDate.toString());
	}

	/**
	 * Set value of DecisionDate
	 * @param decisiondate
	 */
	public final void setDecisionDate(java.util.Date decisiondate)
	{
		setDecisionDate(getContext(), decisiondate);
	}

	/**
	 * Set value of DecisionDate
	 * @param context
	 * @param decisiondate
	 */
	public final void setDecisionDate(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date decisiondate)
	{
		getMendixObject().setValue(context, MemberNames.DecisionDate.toString(), decisiondate);
	}

	/**
	 * @return value of ApprovalInstancePersonBatch_Person
	 */
	public final nap.proxies.Person getApprovalInstancePersonBatch_Person() throws com.mendix.core.CoreException
	{
		return getApprovalInstancePersonBatch_Person(getContext());
	}

	/**
	 * @param context
	 * @return value of ApprovalInstancePersonBatch_Person
	 */
	public final nap.proxies.Person getApprovalInstancePersonBatch_Person(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		nap.proxies.Person result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ApprovalInstancePersonBatch_Person.toString());
		if (identifier != null)
			result = nap.proxies.Person.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ApprovalInstancePersonBatch_Person
	 * @param approvalinstancepersonbatch_person
	 */
	public final void setApprovalInstancePersonBatch_Person(nap.proxies.Person approvalinstancepersonbatch_person)
	{
		setApprovalInstancePersonBatch_Person(getContext(), approvalinstancepersonbatch_person);
	}

	/**
	 * Set value of ApprovalInstancePersonBatch_Person
	 * @param context
	 * @param approvalinstancepersonbatch_person
	 */
	public final void setApprovalInstancePersonBatch_Person(com.mendix.systemwideinterfaces.core.IContext context, nap.proxies.Person approvalinstancepersonbatch_person)
	{
		if (approvalinstancepersonbatch_person == null)
			getMendixObject().setValue(context, MemberNames.ApprovalInstancePersonBatch_Person.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ApprovalInstancePersonBatch_Person.toString(), approvalinstancepersonbatch_person.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return approvalInstancePersonBatchMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final approval.proxies.ApprovalInstancePersonBatch that = (approval.proxies.ApprovalInstancePersonBatch) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Approval.ApprovalInstancePersonBatch";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
