// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package upgrade.proxies;

public class SQLExecutionHistory
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject sQLExecutionHistoryMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Upgrade.SQLExecutionHistory";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		SQLStatement("SQLStatement"),
		SQLResults("SQLResults"),
		IsQuery("IsQuery"),
		IsBatch("IsBatch"),
		JDBCURL("JDBCURL"),
		JDBCUser("JDBCUser"),
		JDBCStatementSeparator("JDBCStatementSeparator");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public SQLExecutionHistory(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Upgrade.SQLExecutionHistory"));
	}

	protected SQLExecutionHistory(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject sQLExecutionHistoryMendixObject)
	{
		if (sQLExecutionHistoryMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Upgrade.SQLExecutionHistory", sQLExecutionHistoryMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Upgrade.SQLExecutionHistory");

		this.sQLExecutionHistoryMendixObject = sQLExecutionHistoryMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'SQLExecutionHistory.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static upgrade.proxies.SQLExecutionHistory initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return upgrade.proxies.SQLExecutionHistory.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static upgrade.proxies.SQLExecutionHistory initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new upgrade.proxies.SQLExecutionHistory(context, mendixObject);
	}

	public static upgrade.proxies.SQLExecutionHistory load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return upgrade.proxies.SQLExecutionHistory.initialize(context, mendixObject);
	}

	public static java.util.List<upgrade.proxies.SQLExecutionHistory> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<upgrade.proxies.SQLExecutionHistory> result = new java.util.ArrayList<upgrade.proxies.SQLExecutionHistory>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Upgrade.SQLExecutionHistory" + xpathConstraint))
			result.add(upgrade.proxies.SQLExecutionHistory.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of SQLStatement
	 */
	public final java.lang.String getSQLStatement()
	{
		return getSQLStatement(getContext());
	}

	/**
	 * @param context
	 * @return value of SQLStatement
	 */
	public final java.lang.String getSQLStatement(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.SQLStatement.toString());
	}

	/**
	 * Set value of SQLStatement
	 * @param sqlstatement
	 */
	public final void setSQLStatement(java.lang.String sqlstatement)
	{
		setSQLStatement(getContext(), sqlstatement);
	}

	/**
	 * Set value of SQLStatement
	 * @param context
	 * @param sqlstatement
	 */
	public final void setSQLStatement(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String sqlstatement)
	{
		getMendixObject().setValue(context, MemberNames.SQLStatement.toString(), sqlstatement);
	}

	/**
	 * @return value of SQLResults
	 */
	public final java.lang.String getSQLResults()
	{
		return getSQLResults(getContext());
	}

	/**
	 * @param context
	 * @return value of SQLResults
	 */
	public final java.lang.String getSQLResults(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.SQLResults.toString());
	}

	/**
	 * Set value of SQLResults
	 * @param sqlresults
	 */
	public final void setSQLResults(java.lang.String sqlresults)
	{
		setSQLResults(getContext(), sqlresults);
	}

	/**
	 * Set value of SQLResults
	 * @param context
	 * @param sqlresults
	 */
	public final void setSQLResults(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String sqlresults)
	{
		getMendixObject().setValue(context, MemberNames.SQLResults.toString(), sqlresults);
	}

	/**
	 * @return value of IsQuery
	 */
	public final java.lang.Boolean getIsQuery()
	{
		return getIsQuery(getContext());
	}

	/**
	 * @param context
	 * @return value of IsQuery
	 */
	public final java.lang.Boolean getIsQuery(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsQuery.toString());
	}

	/**
	 * Set value of IsQuery
	 * @param isquery
	 */
	public final void setIsQuery(java.lang.Boolean isquery)
	{
		setIsQuery(getContext(), isquery);
	}

	/**
	 * Set value of IsQuery
	 * @param context
	 * @param isquery
	 */
	public final void setIsQuery(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean isquery)
	{
		getMendixObject().setValue(context, MemberNames.IsQuery.toString(), isquery);
	}

	/**
	 * @return value of IsBatch
	 */
	public final java.lang.Boolean getIsBatch()
	{
		return getIsBatch(getContext());
	}

	/**
	 * @param context
	 * @return value of IsBatch
	 */
	public final java.lang.Boolean getIsBatch(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsBatch.toString());
	}

	/**
	 * Set value of IsBatch
	 * @param isbatch
	 */
	public final void setIsBatch(java.lang.Boolean isbatch)
	{
		setIsBatch(getContext(), isbatch);
	}

	/**
	 * Set value of IsBatch
	 * @param context
	 * @param isbatch
	 */
	public final void setIsBatch(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean isbatch)
	{
		getMendixObject().setValue(context, MemberNames.IsBatch.toString(), isbatch);
	}

	/**
	 * @return value of JDBCURL
	 */
	public final java.lang.String getJDBCURL()
	{
		return getJDBCURL(getContext());
	}

	/**
	 * @param context
	 * @return value of JDBCURL
	 */
	public final java.lang.String getJDBCURL(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.JDBCURL.toString());
	}

	/**
	 * Set value of JDBCURL
	 * @param jdbcurl
	 */
	public final void setJDBCURL(java.lang.String jdbcurl)
	{
		setJDBCURL(getContext(), jdbcurl);
	}

	/**
	 * Set value of JDBCURL
	 * @param context
	 * @param jdbcurl
	 */
	public final void setJDBCURL(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String jdbcurl)
	{
		getMendixObject().setValue(context, MemberNames.JDBCURL.toString(), jdbcurl);
	}

	/**
	 * @return value of JDBCUser
	 */
	public final java.lang.String getJDBCUser()
	{
		return getJDBCUser(getContext());
	}

	/**
	 * @param context
	 * @return value of JDBCUser
	 */
	public final java.lang.String getJDBCUser(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.JDBCUser.toString());
	}

	/**
	 * Set value of JDBCUser
	 * @param jdbcuser
	 */
	public final void setJDBCUser(java.lang.String jdbcuser)
	{
		setJDBCUser(getContext(), jdbcuser);
	}

	/**
	 * Set value of JDBCUser
	 * @param context
	 * @param jdbcuser
	 */
	public final void setJDBCUser(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String jdbcuser)
	{
		getMendixObject().setValue(context, MemberNames.JDBCUser.toString(), jdbcuser);
	}

	/**
	 * @return value of JDBCStatementSeparator
	 */
	public final java.lang.String getJDBCStatementSeparator()
	{
		return getJDBCStatementSeparator(getContext());
	}

	/**
	 * @param context
	 * @return value of JDBCStatementSeparator
	 */
	public final java.lang.String getJDBCStatementSeparator(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.JDBCStatementSeparator.toString());
	}

	/**
	 * Set value of JDBCStatementSeparator
	 * @param jdbcstatementseparator
	 */
	public final void setJDBCStatementSeparator(java.lang.String jdbcstatementseparator)
	{
		setJDBCStatementSeparator(getContext(), jdbcstatementseparator);
	}

	/**
	 * Set value of JDBCStatementSeparator
	 * @param context
	 * @param jdbcstatementseparator
	 */
	public final void setJDBCStatementSeparator(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String jdbcstatementseparator)
	{
		getMendixObject().setValue(context, MemberNames.JDBCStatementSeparator.toString(), jdbcstatementseparator);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return sQLExecutionHistoryMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final upgrade.proxies.SQLExecutionHistory that = (upgrade.proxies.SQLExecutionHistory) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Upgrade.SQLExecutionHistory";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
