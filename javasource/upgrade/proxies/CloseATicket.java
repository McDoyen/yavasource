// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package upgrade.proxies;

public class CloseATicket
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject closeATicketMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Upgrade.CloseATicket";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		RequestTicketIDShort("RequestTicketIDShort"),
		CloseATicket_Service_Process("Upgrade.CloseATicket_Service_Process");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public CloseATicket(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Upgrade.CloseATicket"));
	}

	protected CloseATicket(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject closeATicketMendixObject)
	{
		if (closeATicketMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Upgrade.CloseATicket", closeATicketMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Upgrade.CloseATicket");

		this.closeATicketMendixObject = closeATicketMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'CloseATicket.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static upgrade.proxies.CloseATicket initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return upgrade.proxies.CloseATicket.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static upgrade.proxies.CloseATicket initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new upgrade.proxies.CloseATicket(context, mendixObject);
	}

	public static upgrade.proxies.CloseATicket load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return upgrade.proxies.CloseATicket.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of RequestTicketIDShort
	 */
	public final java.lang.Integer getRequestTicketIDShort()
	{
		return getRequestTicketIDShort(getContext());
	}

	/**
	 * @param context
	 * @return value of RequestTicketIDShort
	 */
	public final java.lang.Integer getRequestTicketIDShort(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.RequestTicketIDShort.toString());
	}

	/**
	 * Set value of RequestTicketIDShort
	 * @param requestticketidshort
	 */
	public final void setRequestTicketIDShort(java.lang.Integer requestticketidshort)
	{
		setRequestTicketIDShort(getContext(), requestticketidshort);
	}

	/**
	 * Set value of RequestTicketIDShort
	 * @param context
	 * @param requestticketidshort
	 */
	public final void setRequestTicketIDShort(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer requestticketidshort)
	{
		getMendixObject().setValue(context, MemberNames.RequestTicketIDShort.toString(), requestticketidshort);
	}

	/**
	 * @return value of CloseATicket_Service_Process
	 */
	public final slm.proxies.Service_Process getCloseATicket_Service_Process() throws com.mendix.core.CoreException
	{
		return getCloseATicket_Service_Process(getContext());
	}

	/**
	 * @param context
	 * @return value of CloseATicket_Service_Process
	 */
	public final slm.proxies.Service_Process getCloseATicket_Service_Process(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		slm.proxies.Service_Process result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.CloseATicket_Service_Process.toString());
		if (identifier != null)
			result = slm.proxies.Service_Process.load(context, identifier);
		return result;
	}

	/**
	 * Set value of CloseATicket_Service_Process
	 * @param closeaticket_service_process
	 */
	public final void setCloseATicket_Service_Process(slm.proxies.Service_Process closeaticket_service_process)
	{
		setCloseATicket_Service_Process(getContext(), closeaticket_service_process);
	}

	/**
	 * Set value of CloseATicket_Service_Process
	 * @param context
	 * @param closeaticket_service_process
	 */
	public final void setCloseATicket_Service_Process(com.mendix.systemwideinterfaces.core.IContext context, slm.proxies.Service_Process closeaticket_service_process)
	{
		if (closeaticket_service_process == null)
			getMendixObject().setValue(context, MemberNames.CloseATicket_Service_Process.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.CloseATicket_Service_Process.toString(), closeaticket_service_process.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return closeATicketMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final upgrade.proxies.CloseATicket that = (upgrade.proxies.CloseATicket) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Upgrade.CloseATicket";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
