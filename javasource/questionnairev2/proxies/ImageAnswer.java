// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package questionnairev2.proxies;

/**
 * When a question needs to be answered by uploading an image, this entity will store the answer
 */
public class ImageAnswer extends system.proxies.Image
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "QuestionnaireV2.ImageAnswer";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		PublicThumbnailPath("PublicThumbnailPath"),
		FileID("FileID"),
		Name("Name"),
		DeleteAfterDownload("DeleteAfterDownload"),
		Contents("Contents"),
		HasContents("HasContents"),
		Size("Size"),
		ImageAnswer_Question("QuestionnaireV2.ImageAnswer_Question"),
		GradingImage_Option("QuestionnaireV2.GradingImage_Option");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public ImageAnswer(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "QuestionnaireV2.ImageAnswer"));
	}

	protected ImageAnswer(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject imageAnswerMendixObject)
	{
		super(context, imageAnswerMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("QuestionnaireV2.ImageAnswer", imageAnswerMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a QuestionnaireV2.ImageAnswer");
	}

	/**
	 * @deprecated Use 'ImageAnswer.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static questionnairev2.proxies.ImageAnswer initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return questionnairev2.proxies.ImageAnswer.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static questionnairev2.proxies.ImageAnswer initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new questionnairev2.proxies.ImageAnswer(context, mendixObject);
	}

	public static questionnairev2.proxies.ImageAnswer load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return questionnairev2.proxies.ImageAnswer.initialize(context, mendixObject);
	}

	public static java.util.List<questionnairev2.proxies.ImageAnswer> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<questionnairev2.proxies.ImageAnswer> result = new java.util.ArrayList<questionnairev2.proxies.ImageAnswer>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//QuestionnaireV2.ImageAnswer" + xpathConstraint))
			result.add(questionnairev2.proxies.ImageAnswer.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of ImageAnswer_Question
	 */
	public final questionnairev2.proxies.Question getImageAnswer_Question() throws com.mendix.core.CoreException
	{
		return getImageAnswer_Question(getContext());
	}

	/**
	 * @param context
	 * @return value of ImageAnswer_Question
	 */
	public final questionnairev2.proxies.Question getImageAnswer_Question(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		questionnairev2.proxies.Question result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ImageAnswer_Question.toString());
		if (identifier != null)
			result = questionnairev2.proxies.Question.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ImageAnswer_Question
	 * @param imageanswer_question
	 */
	public final void setImageAnswer_Question(questionnairev2.proxies.Question imageanswer_question)
	{
		setImageAnswer_Question(getContext(), imageanswer_question);
	}

	/**
	 * Set value of ImageAnswer_Question
	 * @param context
	 * @param imageanswer_question
	 */
	public final void setImageAnswer_Question(com.mendix.systemwideinterfaces.core.IContext context, questionnairev2.proxies.Question imageanswer_question)
	{
		if (imageanswer_question == null)
			getMendixObject().setValue(context, MemberNames.ImageAnswer_Question.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ImageAnswer_Question.toString(), imageanswer_question.getMendixObject().getId());
	}

	/**
	 * @return value of GradingImage_Option
	 */
	public final questionnairev2.proxies.Option getGradingImage_Option() throws com.mendix.core.CoreException
	{
		return getGradingImage_Option(getContext());
	}

	/**
	 * @param context
	 * @return value of GradingImage_Option
	 */
	public final questionnairev2.proxies.Option getGradingImage_Option(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		questionnairev2.proxies.Option result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.GradingImage_Option.toString());
		if (identifier != null)
			result = questionnairev2.proxies.Option.load(context, identifier);
		return result;
	}

	/**
	 * Set value of GradingImage_Option
	 * @param gradingimage_option
	 */
	public final void setGradingImage_Option(questionnairev2.proxies.Option gradingimage_option)
	{
		setGradingImage_Option(getContext(), gradingimage_option);
	}

	/**
	 * Set value of GradingImage_Option
	 * @param context
	 * @param gradingimage_option
	 */
	public final void setGradingImage_Option(com.mendix.systemwideinterfaces.core.IContext context, questionnairev2.proxies.Option gradingimage_option)
	{
		if (gradingimage_option == null)
			getMendixObject().setValue(context, MemberNames.GradingImage_Option.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.GradingImage_Option.toString(), gradingimage_option.getMendixObject().getId());
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final questionnairev2.proxies.ImageAnswer that = (questionnairev2.proxies.ImageAnswer) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "QuestionnaireV2.ImageAnswer";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
