// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package questionnairev2.proxies;

/**
 * Needed due to mendix bug where association between request and questionnairetemplate can not be retrieved consistently
 */
public class TemplateSelectHelper
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject templateSelectHelperMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "QuestionnaireV2.TemplateSelectHelper";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		TemplateSelectHelper_QuestionnaireTemplate("QuestionnaireV2.TemplateSelectHelper_QuestionnaireTemplate"),
		TemplateSelectHelper_Request("QuestionnaireV2.TemplateSelectHelper_Request");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public TemplateSelectHelper(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "QuestionnaireV2.TemplateSelectHelper"));
	}

	protected TemplateSelectHelper(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject templateSelectHelperMendixObject)
	{
		if (templateSelectHelperMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("QuestionnaireV2.TemplateSelectHelper", templateSelectHelperMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a QuestionnaireV2.TemplateSelectHelper");

		this.templateSelectHelperMendixObject = templateSelectHelperMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'TemplateSelectHelper.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static questionnairev2.proxies.TemplateSelectHelper initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return questionnairev2.proxies.TemplateSelectHelper.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static questionnairev2.proxies.TemplateSelectHelper initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new questionnairev2.proxies.TemplateSelectHelper(context, mendixObject);
	}

	public static questionnairev2.proxies.TemplateSelectHelper load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return questionnairev2.proxies.TemplateSelectHelper.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of TemplateSelectHelper_QuestionnaireTemplate
	 */
	public final questionnairev2.proxies.QuestionnaireTemplate getTemplateSelectHelper_QuestionnaireTemplate() throws com.mendix.core.CoreException
	{
		return getTemplateSelectHelper_QuestionnaireTemplate(getContext());
	}

	/**
	 * @param context
	 * @return value of TemplateSelectHelper_QuestionnaireTemplate
	 */
	public final questionnairev2.proxies.QuestionnaireTemplate getTemplateSelectHelper_QuestionnaireTemplate(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		questionnairev2.proxies.QuestionnaireTemplate result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.TemplateSelectHelper_QuestionnaireTemplate.toString());
		if (identifier != null)
			result = questionnairev2.proxies.QuestionnaireTemplate.load(context, identifier);
		return result;
	}

	/**
	 * Set value of TemplateSelectHelper_QuestionnaireTemplate
	 * @param templateselecthelper_questionnairetemplate
	 */
	public final void setTemplateSelectHelper_QuestionnaireTemplate(questionnairev2.proxies.QuestionnaireTemplate templateselecthelper_questionnairetemplate)
	{
		setTemplateSelectHelper_QuestionnaireTemplate(getContext(), templateselecthelper_questionnairetemplate);
	}

	/**
	 * Set value of TemplateSelectHelper_QuestionnaireTemplate
	 * @param context
	 * @param templateselecthelper_questionnairetemplate
	 */
	public final void setTemplateSelectHelper_QuestionnaireTemplate(com.mendix.systemwideinterfaces.core.IContext context, questionnairev2.proxies.QuestionnaireTemplate templateselecthelper_questionnairetemplate)
	{
		if (templateselecthelper_questionnairetemplate == null)
			getMendixObject().setValue(context, MemberNames.TemplateSelectHelper_QuestionnaireTemplate.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.TemplateSelectHelper_QuestionnaireTemplate.toString(), templateselecthelper_questionnairetemplate.getMendixObject().getId());
	}

	/**
	 * @return value of TemplateSelectHelper_Request
	 */
	public final process.proxies.Request getTemplateSelectHelper_Request() throws com.mendix.core.CoreException
	{
		return getTemplateSelectHelper_Request(getContext());
	}

	/**
	 * @param context
	 * @return value of TemplateSelectHelper_Request
	 */
	public final process.proxies.Request getTemplateSelectHelper_Request(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		process.proxies.Request result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.TemplateSelectHelper_Request.toString());
		if (identifier != null)
			result = process.proxies.Request.load(context, identifier);
		return result;
	}

	/**
	 * Set value of TemplateSelectHelper_Request
	 * @param templateselecthelper_request
	 */
	public final void setTemplateSelectHelper_Request(process.proxies.Request templateselecthelper_request)
	{
		setTemplateSelectHelper_Request(getContext(), templateselecthelper_request);
	}

	/**
	 * Set value of TemplateSelectHelper_Request
	 * @param context
	 * @param templateselecthelper_request
	 */
	public final void setTemplateSelectHelper_Request(com.mendix.systemwideinterfaces.core.IContext context, process.proxies.Request templateselecthelper_request)
	{
		if (templateselecthelper_request == null)
			getMendixObject().setValue(context, MemberNames.TemplateSelectHelper_Request.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.TemplateSelectHelper_Request.toString(), templateselecthelper_request.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return templateSelectHelperMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final questionnairev2.proxies.TemplateSelectHelper that = (questionnairev2.proxies.TemplateSelectHelper) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "QuestionnaireV2.TemplateSelectHelper";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
