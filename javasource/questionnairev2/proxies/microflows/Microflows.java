// This file was generated by Mendix Modeler 7.7.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package questionnairev2.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the QuestionnaireV2 module
	public static boolean bC_Questionnaire(IContext context, questionnairev2.proxies.Questionnaire _questionnaire)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Questionnaire", _questionnaire == null ? null : _questionnaire.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "QuestionnaireV2.BC_Questionnaire", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bco_SetLastMofidiedUser(IContext context, questionnairev2.proxies.DefaultAnswerSet _defaultAnswerSet)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultAnswerSet", _defaultAnswerSet == null ? null : _defaultAnswerSet.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "QuestionnaireV2.Bco_SetLastMofidiedUser", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean cA_ShowQuestionYesNo(IContext context, questionnairev2.proxies.Question _question)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Question", _question == null ? null : _question.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "QuestionnaireV2.CA_ShowQuestionYesNo", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean calcGetOptionSelected(IContext context, questionnairev2.proxies.Option _option)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Option", _option == null ? null : _option.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "QuestionnaireV2.calcGetOptionSelected", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Double calculateTotalScore(IContext context, questionnairev2.proxies.Questionnaire _questionnaire)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Questionnaire", _questionnaire == null ? null : _questionnaire.getMendixObject());
			return (java.lang.Double)Core.execute(context, "QuestionnaireV2.CalculateTotalScore", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static questionnairev2.proxies.Questionnaire dS_GenerateSampleQuestionnaireFromDefaultAnswerSet(IContext context, questionnairev2.proxies.DefaultAnswerSet _defaultAnswerSet)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultAnswerSet", _defaultAnswerSet == null ? null : _defaultAnswerSet.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "QuestionnaireV2.DS_GenerateSampleQuestionnaireFromDefaultAnswerSet", params);
			return result == null ? null : questionnairev2.proxies.Questionnaire.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AddCondition(IContext context, questionnairev2.proxies.QuestionTemplate _questionSetup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QuestionSetup", _questionSetup == null ? null : _questionSetup.getMendixObject());
			Core.execute(context, "QuestionnaireV2.IVK_AddCondition", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AddImageDesktop(IContext context, questionnairev2.proxies.ImageAnswer _imageAnswer)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ImageAnswer", _imageAnswer == null ? null : _imageAnswer.getMendixObject());
			Core.execute(context, "QuestionnaireV2.IVK_AddImageDesktop", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AddOption(IContext context, questionnairev2.proxies.QuestionTemplate _questionSetup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QuestionSetup", _questionSetup == null ? null : _questionSetup.getMendixObject());
			Core.execute(context, "QuestionnaireV2.IVK_AddOption", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AddOther(IContext context, questionnairev2.proxies.QuestionTemplate _questionSetup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QuestionSetup", _questionSetup == null ? null : _questionSetup.getMendixObject());
			Core.execute(context, "QuestionnaireV2.IVK_AddOther", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CancelDefaultAnswerSet(IContext context, questionnairev2.proxies.DefaultAnswerSet _defaultAnswerSet, questionnairev2.proxies.Questionnaire _questionnaire)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultAnswerSet", _defaultAnswerSet == null ? null : _defaultAnswerSet.getMendixObject());
			params.put("Questionnaire", _questionnaire == null ? null : _questionnaire.getMendixObject());
			Core.execute(context, "QuestionnaireV2.IVK_CancelDefaultAnswerSet", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ChangeCondition(IContext context, questionnairev2.proxies.ConditionVisablity _conditionVisablity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ConditionVisablity", _conditionVisablity == null ? null : _conditionVisablity.getMendixObject());
			Core.execute(context, "QuestionnaireV2.IVK_ChangeCondition", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ChangeTemplate(IContext context, questionnairev2.proxies.Questionnaire _questionnaire)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Questionnaire", _questionnaire == null ? null : _questionnaire.getMendixObject());
			Core.execute(context, "QuestionnaireV2.IVK_ChangeTemplate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClosePopUp(IContext context, questionnairev2.proxies.DefaultAnswerSet _defaultAnswerSet)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultAnswerSet", _defaultAnswerSet == null ? null : _defaultAnswerSet.getMendixObject());
			Core.execute(context, "QuestionnaireV2.IVK_ClosePopUp", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [714503] Copy Questionnaire when copying a planning workorder
	 */
	public static questionnairev2.proxies.Questionnaire iVK_CopyQuestionnaire(IContext context, questionnairev2.proxies.Questionnaire _sourceQuestionnaire, boolean _commitImmediately)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SourceQuestionnaire", _sourceQuestionnaire == null ? null : _sourceQuestionnaire.getMendixObject());
			params.put("CommitImmediately", _commitImmediately);
			IMendixObject result = (IMendixObject)Core.execute(context, "QuestionnaireV2.IVK_CopyQuestionnaire", params);
			return result == null ? null : questionnairev2.proxies.Questionnaire.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DeleteAlQuestionnaires(IContext context, java.util.List<questionnairev2.proxies.Questionnaire> _questionGroupList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_questionGroupList = null;
			if (_questionGroupList != null)
			{
				listparam_questionGroupList = new java.util.ArrayList<IMendixObject>();
				for (questionnairev2.proxies.Questionnaire obj : _questionGroupList)
					listparam_questionGroupList.add(obj.getMendixObject());
			}
			params.put("QuestionGroupList", listparam_questionGroupList);
			Core.execute(context, "QuestionnaireV2.IVK_DeleteAlQuestionnaires", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DeleteDisplayCondition(IContext context, questionnairev2.proxies.ConditionVisablity _conditionVisablity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ConditionVisablity", _conditionVisablity == null ? null : _conditionVisablity.getMendixObject());
			Core.execute(context, "QuestionnaireV2.IVK_DeleteDisplayCondition", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DeleteQuestion(IContext context, questionnairev2.proxies.QuestionTemplate _questionSetup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QuestionSetup", _questionSetup == null ? null : _questionSetup.getMendixObject());
			Core.execute(context, "QuestionnaireV2.IVK_DeleteQuestion", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DeleteQuestionOption(IContext context, questionnairev2.proxies.OptionSetup _optionSetup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OptionSetup", _optionSetup == null ? null : _optionSetup.getMendixObject());
			Core.execute(context, "QuestionnaireV2.IVK_DeleteQuestionOption", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DuplicateQuestion(IContext context, questionnairev2.proxies.QuestionTemplate _inputQuestionSetup, questionnairev2.proxies.QuestionnaireTemplate _questionSetupGroup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputQuestionSetup", _inputQuestionSetup == null ? null : _inputQuestionSetup.getMendixObject());
			params.put("QuestionSetupGroup", _questionSetupGroup == null ? null : _questionSetupGroup.getMendixObject());
			Core.execute(context, "QuestionnaireV2.IVK_DuplicateQuestion", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NewQuestionMulitSelect(IContext context, questionnairev2.proxies.QuestionnaireTemplate _questionSetupGroup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QuestionSetupGroup", _questionSetupGroup == null ? null : _questionSetupGroup.getMendixObject());
			Core.execute(context, "QuestionnaireV2.IVK_NewQuestionMulitSelect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NewQuestionPhoto(IContext context, questionnairev2.proxies.QuestionnaireTemplate _questionSetupGroup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QuestionSetupGroup", _questionSetupGroup == null ? null : _questionSetupGroup.getMendixObject());
			Core.execute(context, "QuestionnaireV2.IVK_NewQuestionPhoto", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NewQuestionRadio(IContext context, questionnairev2.proxies.QuestionnaireTemplate _questionSetupGroup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QuestionSetupGroup", _questionSetupGroup == null ? null : _questionSetupGroup.getMendixObject());
			Core.execute(context, "QuestionnaireV2.IVK_NewQuestionRadio", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NewQuestionText(IContext context, questionnairev2.proxies.QuestionnaireTemplate _questionSetupGroup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QuestionSetupGroup", _questionSetupGroup == null ? null : _questionSetupGroup.getMendixObject());
			Core.execute(context, "QuestionnaireV2.IVK_NewQuestionText", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RefreshSummary(IContext context, questionnairev2.proxies.Questionnaire _questionGroup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QuestionGroup", _questionGroup == null ? null : _questionGroup.getMendixObject());
			Core.execute(context, "QuestionnaireV2.IVK_RefreshSummary", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * CustomLVNL;  Store the default free text answers
	 */
	public static void iVK_SaveAndCloseDefaultAnswerSet(IContext context, questionnairev2.proxies.DefaultAnswerSet _defaultAnswerSet, questionnairev2.proxies.Questionnaire _sampleQuestionnaire)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultAnswerSet", _defaultAnswerSet == null ? null : _defaultAnswerSet.getMendixObject());
			params.put("SampleQuestionnaire", _sampleQuestionnaire == null ? null : _sampleQuestionnaire.getMendixObject());
			Core.execute(context, "QuestionnaireV2.IVK_SaveAndCloseDefaultAnswerSet", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SaveCloseQuestionnaire(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "QuestionnaireV2.IVK_SaveCloseQuestionnaire", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SaveQuestionnaire(IContext context, questionnairev2.proxies.Questionnaire _questionnaire)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Questionnaire", _questionnaire == null ? null : _questionnaire.getMendixObject());
			Core.execute(context, "QuestionnaireV2.IVK_SaveQuestionnaire", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_setEditble(IContext context, questionnairev2.proxies.QuestionnaireTemplate _questionSetupGroup, questionnairev2.proxies.QuestionTemplate _questionSetup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QuestionSetupGroup", _questionSetupGroup == null ? null : _questionSetupGroup.getMendixObject());
			params.put("QuestionSetup", _questionSetup == null ? null : _questionSetup.getMendixObject());
			Core.execute(context, "QuestionnaireV2.IVK_setEditble", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ToggleCoordinatorOnlyQuestion(IContext context, questionnairev2.proxies.QuestionTemplate _questionTemplate, questionnairev2.proxies.QuestionnaireTemplate _questionnaireTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QuestionTemplate", _questionTemplate == null ? null : _questionTemplate.getMendixObject());
			params.put("QuestionnaireTemplate", _questionnaireTemplate == null ? null : _questionnaireTemplate.getMendixObject());
			Core.execute(context, "QuestionnaireV2.IVK_ToggleCoordinatorOnlyQuestion", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ToggleEdit(IContext context, questionnairev2.proxies.QuestionTemplate _questionSetup, questionnairev2.proxies.QuestionnaireTemplate _questionSetupGroup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QuestionSetup", _questionSetup == null ? null : _questionSetup.getMendixObject());
			params.put("QuestionSetupGroup", _questionSetupGroup == null ? null : _questionSetupGroup.getMendixObject());
			Core.execute(context, "QuestionnaireV2.IVK_ToggleEdit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ToggleHelp(IContext context, questionnairev2.proxies.Question _question)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Question", _question == null ? null : _question.getMendixObject());
			Core.execute(context, "QuestionnaireV2.IVK_ToggleHelp", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ToggleSelect(IContext context, questionnairev2.proxies.Option _option)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Option", _option == null ? null : _option.getMendixObject());
			Core.execute(context, "QuestionnaireV2.IVK_ToggleSelect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ViewWO(IContext context, questionnairev2.proxies.Questionnaire _questionnaire)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Questionnaire", _questionnaire == null ? null : _questionnaire.getMendixObject());
			Core.execute(context, "QuestionnaireV2.IVK_ViewWO", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String mL_ShowDefaultScore(IContext context, questionnairev2.proxies.Questionnaire _questionnaire)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Questionnaire", _questionnaire == null ? null : _questionnaire.getMendixObject());
			return (java.lang.String)Core.execute(context, "QuestionnaireV2.ML_ShowDefaultScore", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String mL_ShowScoreRangeDefinition(IContext context, questionnairev2.proxies.Questionnaire _questionnaire)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Questionnaire", _questionnaire == null ? null : _questionnaire.getMendixObject());
			return (java.lang.String)Core.execute(context, "QuestionnaireV2.ML_ShowScoreRangeDefinition", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String mL_ShowScoreRangePreparation(IContext context, questionnairev2.proxies.Questionnaire _questionnaire)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Questionnaire", _questionnaire == null ? null : _questionnaire.getMendixObject());
			return (java.lang.String)Core.execute(context, "QuestionnaireV2.ML_ShowScoreRangePreparation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oCh_ConditionQuestion(IContext context, questionnairev2.proxies.ConditionVisablity _conditionVisablity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ConditionVisablity", _conditionVisablity == null ? null : _conditionVisablity.getMendixObject());
			Core.execute(context, "QuestionnaireV2.OCh_ConditionQuestion", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * CustomerLVNL - Set is answered free text
	 */
	public static void oCh_SetAnsweredQuestion(IContext context, questionnairev2.proxies.Question _question)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Question", _question == null ? null : _question.getMendixObject());
			Core.execute(context, "QuestionnaireV2.OCh_SetAnsweredQuestion", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oCh_SetQuestionRequired(IContext context, questionnairev2.proxies.QuestionTemplate _questionSetup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QuestionSetup", _questionSetup == null ? null : _questionSetup.getMendixObject());
			Core.execute(context, "QuestionnaireV2.OCh_SetQuestionRequired", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oLe_SaveOption(IContext context, questionnairev2.proxies.Option _option)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Option", _option == null ? null : _option.getMendixObject());
			Core.execute(context, "QuestionnaireV2.OLe_SaveOption", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oLe_SaveOptionSetup(IContext context, questionnairev2.proxies.OptionSetup _optionSetup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OptionSetup", _optionSetup == null ? null : _optionSetup.getMendixObject());
			Core.execute(context, "QuestionnaireV2.OLe_SaveOptionSetup", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oLe_SaveQuestion(IContext context, questionnairev2.proxies.Question _question)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Question", _question == null ? null : _question.getMendixObject());
			Core.execute(context, "QuestionnaireV2.OLe_SaveQuestion", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oLe_SaveQuestionSetup(IContext context, questionnairev2.proxies.QuestionTemplate _questionSetup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QuestionSetup", _questionSetup == null ? null : _questionSetup.getMendixObject());
			Core.execute(context, "QuestionnaireV2.OLe_SaveQuestionSetup", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void onChangeQuestion_CheckBox(IContext context, questionnairev2.proxies.Question _question)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Question", _question == null ? null : _question.getMendixObject());
			Core.execute(context, "QuestionnaireV2.onChangeQuestion_CheckBox", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void onChangeQuestion_RadioButton(IContext context, questionnairev2.proxies.Question _question)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Question", _question == null ? null : _question.getMendixObject());
			Core.execute(context, "QuestionnaireV2.onChangeQuestion_RadioButton", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [714503] Copy Questionnaire when copying a planning workorder
	 */
	public static questionnairev2.proxies.Question sUB_CopyQuestion(IContext context, questionnairev2.proxies.Questionnaire _sourceQuestionnaire, questionnairev2.proxies.Questionnaire _targetQuestionnaire, questionnairev2.proxies.Question _sourceQuestion)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SourceQuestionnaire", _sourceQuestionnaire == null ? null : _sourceQuestionnaire.getMendixObject());
			params.put("TargetQuestionnaire", _targetQuestionnaire == null ? null : _targetQuestionnaire.getMendixObject());
			params.put("SourceQuestion", _sourceQuestion == null ? null : _sourceQuestion.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "QuestionnaireV2.SUB_CopyQuestion", params);
			return result == null ? null : questionnairev2.proxies.Question.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [714503] Copy Questionnaire when copying a planning workorder
	 */
	public static java.util.List<questionnairev2.proxies.Option> sUB_CopySelectionAnswers(IContext context, questionnairev2.proxies.Question _sourceQuestion, questionnairev2.proxies.Question _targetQuestion)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SourceQuestion", _sourceQuestion == null ? null : _sourceQuestion.getMendixObject());
			params.put("TargetQuestion", _targetQuestion == null ? null : _targetQuestion.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "QuestionnaireV2.SUB_CopySelectionAnswers", params);
			java.util.List<questionnairev2.proxies.Option> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<questionnairev2.proxies.Option>();
				for (IMendixObject obj : objs)
					result.add(questionnairev2.proxies.Option.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * CustomLVNL;  Get the default free text answers
	 */
	public static questionnairev2.proxies.Questionnaire sub_GenerateQuestions(IContext context, questionnairev2.proxies.QuestionnaireTemplate _questionnaireTemplate, questionnairev2.proxies.DefaultAnswerSet _defaultAnswerSet)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QuestionnaireTemplate", _questionnaireTemplate == null ? null : _questionnaireTemplate.getMendixObject());
			params.put("DefaultAnswerSet", _defaultAnswerSet == null ? null : _defaultAnswerSet.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "QuestionnaireV2.Sub_GenerateQuestions", params);
			return result == null ? null : questionnairev2.proxies.Questionnaire.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String sub_GetAnswer(IContext context, questionnairev2.proxies.Question _question, questionnairev2.proxies.QuestionTemplate _questionSetup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Question", _question == null ? null : _question.getMendixObject());
			params.put("QuestionSetup", _questionSetup == null ? null : _questionSetup.getMendixObject());
			return (java.lang.String)Core.execute(context, "QuestionnaireV2.Sub_GetAnswer", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static questionnairev2.proxies.Question sub_GetNextQuestion(IContext context, questionnairev2.proxies.Questionnaire _questionGroup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QuestionGroup", _questionGroup == null ? null : _questionGroup.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "QuestionnaireV2.Sub_GetNextQuestion", params);
			return result == null ? null : questionnairev2.proxies.Question.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean sub_ValidateQuestion(IContext context, questionnairev2.proxies.Questionnaire _questionGroup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QuestionGroup", _questionGroup == null ? null : _questionGroup.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "QuestionnaireV2.Sub_ValidateQuestion", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean vA_IsCompleted(IContext context, questionnairev2.proxies.Questionnaire _questionnaire)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Questionnaire", _questionnaire == null ? null : _questionnaire.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "QuestionnaireV2.VA_IsCompleted", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String vA_OptionValueCombined(IContext context, questionnairev2.proxies.Option _option)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Option", _option == null ? null : _option.getMendixObject());
			return (java.lang.String)Core.execute(context, "QuestionnaireV2.VA_OptionValueCombined", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}