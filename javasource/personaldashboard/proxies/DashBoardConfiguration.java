// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package personaldashboard.proxies;

public class DashBoardConfiguration
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject dashBoardConfigurationMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "PersonalDashboard.DashBoardConfiguration";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		FormPath("FormPath"),
		Active("Active"),
		ConfigName("ConfigName"),
		ConfigDescription("ConfigDescription"),
		IsDefault("IsDefault");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public DashBoardConfiguration(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "PersonalDashboard.DashBoardConfiguration"));
	}

	protected DashBoardConfiguration(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject dashBoardConfigurationMendixObject)
	{
		if (dashBoardConfigurationMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("PersonalDashboard.DashBoardConfiguration", dashBoardConfigurationMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a PersonalDashboard.DashBoardConfiguration");

		this.dashBoardConfigurationMendixObject = dashBoardConfigurationMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'DashBoardConfiguration.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static personaldashboard.proxies.DashBoardConfiguration initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return personaldashboard.proxies.DashBoardConfiguration.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static personaldashboard.proxies.DashBoardConfiguration initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new personaldashboard.proxies.DashBoardConfiguration(context, mendixObject);
	}

	public static personaldashboard.proxies.DashBoardConfiguration load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return personaldashboard.proxies.DashBoardConfiguration.initialize(context, mendixObject);
	}

	public static java.util.List<personaldashboard.proxies.DashBoardConfiguration> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<personaldashboard.proxies.DashBoardConfiguration> result = new java.util.ArrayList<personaldashboard.proxies.DashBoardConfiguration>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//PersonalDashboard.DashBoardConfiguration" + xpathConstraint))
			result.add(personaldashboard.proxies.DashBoardConfiguration.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of FormPath
	 */
	public final java.lang.String getFormPath()
	{
		return getFormPath(getContext());
	}

	/**
	 * @param context
	 * @return value of FormPath
	 */
	public final java.lang.String getFormPath(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.FormPath.toString());
	}

	/**
	 * Set value of FormPath
	 * @param formpath
	 */
	public final void setFormPath(java.lang.String formpath)
	{
		setFormPath(getContext(), formpath);
	}

	/**
	 * Set value of FormPath
	 * @param context
	 * @param formpath
	 */
	public final void setFormPath(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String formpath)
	{
		getMendixObject().setValue(context, MemberNames.FormPath.toString(), formpath);
	}

	/**
	 * @return value of Active
	 */
	public final java.lang.Boolean getActive()
	{
		return getActive(getContext());
	}

	/**
	 * @param context
	 * @return value of Active
	 */
	public final java.lang.Boolean getActive(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.Active.toString());
	}

	/**
	 * Set value of Active
	 * @param active
	 */
	public final void setActive(java.lang.Boolean active)
	{
		setActive(getContext(), active);
	}

	/**
	 * Set value of Active
	 * @param context
	 * @param active
	 */
	public final void setActive(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean active)
	{
		getMendixObject().setValue(context, MemberNames.Active.toString(), active);
	}

	/**
	 * @return value of ConfigName
	 */
	public final java.lang.String getConfigName()
	{
		return getConfigName(getContext());
	}

	/**
	 * @param context
	 * @return value of ConfigName
	 */
	public final java.lang.String getConfigName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ConfigName.toString());
	}

	/**
	 * Set value of ConfigName
	 * @param configname
	 */
	public final void setConfigName(java.lang.String configname)
	{
		setConfigName(getContext(), configname);
	}

	/**
	 * Set value of ConfigName
	 * @param context
	 * @param configname
	 */
	public final void setConfigName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String configname)
	{
		getMendixObject().setValue(context, MemberNames.ConfigName.toString(), configname);
	}

	/**
	 * @return value of ConfigDescription
	 */
	public final java.lang.String getConfigDescription()
	{
		return getConfigDescription(getContext());
	}

	/**
	 * @param context
	 * @return value of ConfigDescription
	 */
	public final java.lang.String getConfigDescription(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ConfigDescription.toString());
	}

	/**
	 * Set value of ConfigDescription
	 * @param configdescription
	 */
	public final void setConfigDescription(java.lang.String configdescription)
	{
		setConfigDescription(getContext(), configdescription);
	}

	/**
	 * Set value of ConfigDescription
	 * @param context
	 * @param configdescription
	 */
	public final void setConfigDescription(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String configdescription)
	{
		getMendixObject().setValue(context, MemberNames.ConfigDescription.toString(), configdescription);
	}

	/**
	 * @return value of IsDefault
	 */
	public final java.lang.Boolean getIsDefault()
	{
		return getIsDefault(getContext());
	}

	/**
	 * @param context
	 * @return value of IsDefault
	 */
	public final java.lang.Boolean getIsDefault(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsDefault.toString());
	}

	/**
	 * Set value of IsDefault
	 * @param isdefault
	 */
	public final void setIsDefault(java.lang.Boolean isdefault)
	{
		setIsDefault(getContext(), isdefault);
	}

	/**
	 * Set value of IsDefault
	 * @param context
	 * @param isdefault
	 */
	public final void setIsDefault(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean isdefault)
	{
		getMendixObject().setValue(context, MemberNames.IsDefault.toString(), isdefault);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return dashBoardConfigurationMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final personaldashboard.proxies.DashBoardConfiguration that = (personaldashboard.proxies.DashBoardConfiguration) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "PersonalDashboard.DashBoardConfiguration";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
