// This file was generated by Mendix Modeler 7.7.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package roletemplates.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the RoleTemplates module
	public static boolean accountUserRole_PortalUser_InCombinationWithOther(IContext context, java.util.List<system.proxies.UserRole> _toCheckUserRoleList, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_toCheckUserRoleList = null;
			if (_toCheckUserRoleList != null)
			{
				listparam_toCheckUserRoleList = new java.util.ArrayList<IMendixObject>();
				for (system.proxies.UserRole obj : _toCheckUserRoleList)
					listparam_toCheckUserRoleList.add(obj.getMendixObject());
			}
			params.put("ToCheckUserRoleList", listparam_toCheckUserRoleList);
			params.put("Account", _account == null ? null : _account.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "RoleTemplates.AccountUserRole_PortalUser_InCombinationWithOther", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void addRoleToTemplate(IContext context, java.util.List<system.proxies.UserRole> _userRoles, roletemplates.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_userRoles = null;
			if (_userRoles != null)
			{
				listparam_userRoles = new java.util.ArrayList<IMendixObject>();
				for (system.proxies.UserRole obj : _userRoles)
					listparam_userRoles.add(obj.getMendixObject());
			}
			params.put("UserRoles", listparam_userRoles);
			params.put("Template", _template == null ? null : _template.getMendixObject());
			Core.execute(context, "RoleTemplates.AddRoleToTemplate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void addTemplateToUser(IContext context, mendix.proxies.Account _account, java.util.List<roletemplates.proxies.Template> _selectedTemplatesList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_selectedTemplatesList = null;
			if (_selectedTemplatesList != null)
			{
				listparam_selectedTemplatesList = new java.util.ArrayList<IMendixObject>();
				for (roletemplates.proxies.Template obj : _selectedTemplatesList)
					listparam_selectedTemplatesList.add(obj.getMendixObject());
			}
			params.put("SelectedTemplatesList", listparam_selectedTemplatesList);
			Core.execute(context, "RoleTemplates.AddTemplateToUser", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void addTemplateToUser_NoClose(IContext context, mendix.proxies.Account _account, java.util.List<roletemplates.proxies.Template> _selectedTemplatesList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_selectedTemplatesList = null;
			if (_selectedTemplatesList != null)
			{
				listparam_selectedTemplatesList = new java.util.ArrayList<IMendixObject>();
				for (roletemplates.proxies.Template obj : _selectedTemplatesList)
					listparam_selectedTemplatesList.add(obj.getMendixObject());
			}
			params.put("SelectedTemplatesList", listparam_selectedTemplatesList);
			Core.execute(context, "RoleTemplates.AddTemplateToUser_NoClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void addWithSearch(IContext context, roletemplates.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			Core.execute(context, "RoleTemplates.AddWithSearch", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditRoleTemplate_AfterCommit(IContext context, roletemplates.proxies.Template _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "RoleTemplates.AuditRoleTemplate_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditRoleTemplate_AfterDelete(IContext context, roletemplates.proxies.Template _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "RoleTemplates.AuditRoleTemplate_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditRoleTemplate_GetAuditRecord(IContext context, roletemplates.proxies.Template _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "RoleTemplates.AuditRoleTemplate_GetAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyRoleTemplate(IContext context, roletemplates.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			Core.execute(context, "RoleTemplates.CopyRoleTemplate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<system.proxies.UserRole> grantableRoles_currentUser(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.List<IMendixObject> objs = Core.execute(context, "RoleTemplates.GrantableRoles_currentUser", params);
			java.util.List<system.proxies.UserRole> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<system.proxies.UserRole>();
				for (IMendixObject obj : objs)
					result.add(system.proxies.UserRole.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AddTemplateToSelectedAccounts(IContext context, java.util.List<mendix.proxies.Account> _accountList, roletemplates.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_accountList = null;
			if (_accountList != null)
			{
				listparam_accountList = new java.util.ArrayList<IMendixObject>();
				for (mendix.proxies.Account obj : _accountList)
					listparam_accountList.add(obj.getMendixObject());
			}
			params.put("AccountList", listparam_accountList);
			params.put("Template", _template == null ? null : _template.getMendixObject());
			Core.execute(context, "RoleTemplates.IVK_AddTemplateToSelectedAccounts", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ApplyRoleTemplate(IContext context, roletemplates.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			Core.execute(context, "RoleTemplates.IVK_ApplyRoleTemplate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenAddTemplateToRolesSelectionForm(IContext context, roletemplates.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			Core.execute(context, "RoleTemplates.IVK_OpenAddTemplateToRolesSelectionForm", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenRemoveTemplateFromRolesSelectionForm(IContext context, roletemplates.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			Core.execute(context, "RoleTemplates.IVK_OpenRemoveTemplateFromRolesSelectionForm", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RemoveTemplateFromAccount(IContext context, mendix.proxies.Account _account, roletemplates.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			params.put("Template", _template == null ? null : _template.getMendixObject());
			Core.execute(context, "RoleTemplates.IVK_RemoveTemplateFromAccount", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RemoveTemplateFromSelectedAccounts(IContext context, java.util.List<mendix.proxies.Account> _accountList, roletemplates.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_accountList = null;
			if (_accountList != null)
			{
				listparam_accountList = new java.util.ArrayList<IMendixObject>();
				for (mendix.proxies.Account obj : _accountList)
					listparam_accountList.add(obj.getMendixObject());
			}
			params.put("AccountList", listparam_accountList);
			params.put("Template", _template == null ? null : _template.getMendixObject());
			Core.execute(context, "RoleTemplates.IVK_RemoveTemplateFromSelectedAccounts", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SaveRoleTemplate(IContext context, roletemplates.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			Core.execute(context, "RoleTemplates.IVK_SaveRoleTemplate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void removeRolesFromTemplate(IContext context, roletemplates.proxies.Template _template, java.util.List<system.proxies.UserRole> _userRoles)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_userRoles = null;
			if (_userRoles != null)
			{
				listparam_userRoles = new java.util.ArrayList<IMendixObject>();
				for (system.proxies.UserRole obj : _userRoles)
					listparam_userRoles.add(obj.getMendixObject());
			}
			params.put("UserRoles", listparam_userRoles);
			Core.execute(context, "RoleTemplates.RemoveRolesFromTemplate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void removeTemplateFromUserCommit(IContext context, java.util.List<roletemplates.proxies.Template> _removeTemplatesList, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_removeTemplatesList = null;
			if (_removeTemplatesList != null)
			{
				listparam_removeTemplatesList = new java.util.ArrayList<IMendixObject>();
				for (roletemplates.proxies.Template obj : _removeTemplatesList)
					listparam_removeTemplatesList.add(obj.getMendixObject());
			}
			params.put("RemoveTemplatesList", listparam_removeTemplatesList);
			params.put("Account", _account == null ? null : _account.getMendixObject());
			Core.execute(context, "RoleTemplates.RemoveTemplateFromUserCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static mendix.proxies.Account removeTemplateFromUserNoCommit(IContext context, java.util.List<roletemplates.proxies.Template> _removeTemplatesList, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_removeTemplatesList = null;
			if (_removeTemplatesList != null)
			{
				listparam_removeTemplatesList = new java.util.ArrayList<IMendixObject>();
				for (roletemplates.proxies.Template obj : _removeTemplatesList)
					listparam_removeTemplatesList.add(obj.getMendixObject());
			}
			params.put("RemoveTemplatesList", listparam_removeTemplatesList);
			params.put("Account", _account == null ? null : _account.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "RoleTemplates.RemoveTemplateFromUserNoCommit", params);
			return result == null ? null : mendix.proxies.Account.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<system.proxies.UserRole> rolesNotAssociatedToTemplate(IContext context, roletemplates.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "RoleTemplates.RolesNotAssociatedToTemplate", params);
			java.util.List<system.proxies.UserRole> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<system.proxies.UserRole>();
				for (IMendixObject obj : objs)
					result.add(system.proxies.UserRole.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void save_Template(IContext context, roletemplates.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("template", _template == null ? null : _template.getMendixObject());
			Core.execute(context, "RoleTemplates.Save_Template", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<mendix.proxies.LicensePool> selectableLicensePools(IContext context, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "RoleTemplates.SelectableLicensePools", params);
			java.util.List<mendix.proxies.LicensePool> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<mendix.proxies.LicensePool>();
				for (IMendixObject obj : objs)
					result.add(mendix.proxies.LicensePool.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void selectUserRolesFromDialog(IContext context, java.util.List<system.proxies.UserRole> _userRoleList, roletemplates.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_userRoleList = null;
			if (_userRoleList != null)
			{
				listparam_userRoleList = new java.util.ArrayList<IMendixObject>();
				for (system.proxies.UserRole obj : _userRoleList)
					listparam_userRoleList.add(obj.getMendixObject());
			}
			params.put("UserRoleList", listparam_userRoleList);
			params.put("Template", _template == null ? null : _template.getMendixObject());
			Core.execute(context, "RoleTemplates.SelectUserRolesFromDialog", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void swapDataAccess(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "RoleTemplates.SwapDataAccess", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<roletemplates.proxies.Template> templatesNotAssociatedToUser(IContext context, mendix.proxies.Account _account)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Account", _account == null ? null : _account.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "RoleTemplates.TemplatesNotAssociatedToUser", params);
			java.util.List<roletemplates.proxies.Template> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<roletemplates.proxies.Template>();
				for (IMendixObject obj : objs)
					result.add(roletemplates.proxies.Template.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean templateUserRole_PortalUser_InCombinationWithOther(IContext context, java.util.List<system.proxies.UserRole> _toCheckUserRoleList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_toCheckUserRoleList = null;
			if (_toCheckUserRoleList != null)
			{
				listparam_toCheckUserRoleList = new java.util.ArrayList<IMendixObject>();
				for (system.proxies.UserRole obj : _toCheckUserRoleList)
					listparam_toCheckUserRoleList.add(obj.getMendixObject());
			}
			params.put("ToCheckUserRoleList", listparam_toCheckUserRoleList);
			return (java.lang.Boolean)Core.execute(context, "RoleTemplates.TemplateUserRole_PortalUser_InCombinationWithOther", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void updateLDAPRoles(IContext context, roletemplates.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			Core.execute(context, "RoleTemplates.UpdateLDAPRoles", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateRoleTemplate_BeforeDelete(IContext context, roletemplates.proxies.Template _template)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Template", _template == null ? null : _template.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "RoleTemplates.ValidateRoleTemplate_BeforeDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}