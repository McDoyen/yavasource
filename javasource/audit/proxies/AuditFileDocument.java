// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package audit.proxies;

public class AuditFileDocument extends system.proxies.FileDocument
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Audit.AuditFileDocument";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		FileID("FileID"),
		Name("Name"),
		DeleteAfterDownload("DeleteAfterDownload"),
		Contents("Contents"),
		HasContents("HasContents"),
		Size("Size"),
		AuditFileDocument_AuditAttribute("Audit.AuditFileDocument_AuditAttribute"),
		AuditFileDocument_AuditRecord("Audit.AuditFileDocument_AuditRecord");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public AuditFileDocument(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Audit.AuditFileDocument"));
	}

	protected AuditFileDocument(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject auditFileDocumentMendixObject)
	{
		super(context, auditFileDocumentMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("Audit.AuditFileDocument", auditFileDocumentMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Audit.AuditFileDocument");
	}

	/**
	 * @deprecated Use 'AuditFileDocument.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static audit.proxies.AuditFileDocument initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return audit.proxies.AuditFileDocument.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static audit.proxies.AuditFileDocument initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new audit.proxies.AuditFileDocument(context, mendixObject);
	}

	public static audit.proxies.AuditFileDocument load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return audit.proxies.AuditFileDocument.initialize(context, mendixObject);
	}

	public static java.util.List<audit.proxies.AuditFileDocument> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<audit.proxies.AuditFileDocument> result = new java.util.ArrayList<audit.proxies.AuditFileDocument>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Audit.AuditFileDocument" + xpathConstraint))
			result.add(audit.proxies.AuditFileDocument.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of AuditFileDocument_AuditAttribute
	 */
	public final audit.proxies.AuditAttribute getAuditFileDocument_AuditAttribute() throws com.mendix.core.CoreException
	{
		return getAuditFileDocument_AuditAttribute(getContext());
	}

	/**
	 * @param context
	 * @return value of AuditFileDocument_AuditAttribute
	 */
	public final audit.proxies.AuditAttribute getAuditFileDocument_AuditAttribute(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		audit.proxies.AuditAttribute result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.AuditFileDocument_AuditAttribute.toString());
		if (identifier != null)
			result = audit.proxies.AuditAttribute.load(context, identifier);
		return result;
	}

	/**
	 * Set value of AuditFileDocument_AuditAttribute
	 * @param auditfiledocument_auditattribute
	 */
	public final void setAuditFileDocument_AuditAttribute(audit.proxies.AuditAttribute auditfiledocument_auditattribute)
	{
		setAuditFileDocument_AuditAttribute(getContext(), auditfiledocument_auditattribute);
	}

	/**
	 * Set value of AuditFileDocument_AuditAttribute
	 * @param context
	 * @param auditfiledocument_auditattribute
	 */
	public final void setAuditFileDocument_AuditAttribute(com.mendix.systemwideinterfaces.core.IContext context, audit.proxies.AuditAttribute auditfiledocument_auditattribute)
	{
		if (auditfiledocument_auditattribute == null)
			getMendixObject().setValue(context, MemberNames.AuditFileDocument_AuditAttribute.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.AuditFileDocument_AuditAttribute.toString(), auditfiledocument_auditattribute.getMendixObject().getId());
	}

	/**
	 * @return value of AuditFileDocument_AuditRecord
	 */
	public final audit.proxies.AuditRecord getAuditFileDocument_AuditRecord() throws com.mendix.core.CoreException
	{
		return getAuditFileDocument_AuditRecord(getContext());
	}

	/**
	 * @param context
	 * @return value of AuditFileDocument_AuditRecord
	 */
	public final audit.proxies.AuditRecord getAuditFileDocument_AuditRecord(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		audit.proxies.AuditRecord result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.AuditFileDocument_AuditRecord.toString());
		if (identifier != null)
			result = audit.proxies.AuditRecord.load(context, identifier);
		return result;
	}

	/**
	 * Set value of AuditFileDocument_AuditRecord
	 * @param auditfiledocument_auditrecord
	 */
	public final void setAuditFileDocument_AuditRecord(audit.proxies.AuditRecord auditfiledocument_auditrecord)
	{
		setAuditFileDocument_AuditRecord(getContext(), auditfiledocument_auditrecord);
	}

	/**
	 * Set value of AuditFileDocument_AuditRecord
	 * @param context
	 * @param auditfiledocument_auditrecord
	 */
	public final void setAuditFileDocument_AuditRecord(com.mendix.systemwideinterfaces.core.IContext context, audit.proxies.AuditRecord auditfiledocument_auditrecord)
	{
		if (auditfiledocument_auditrecord == null)
			getMendixObject().setValue(context, MemberNames.AuditFileDocument_AuditRecord.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.AuditFileDocument_AuditRecord.toString(), auditfiledocument_auditrecord.getMendixObject().getId());
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final audit.proxies.AuditFileDocument that = (audit.proxies.AuditFileDocument) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Audit.AuditFileDocument";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
