// This file was generated by Mendix Modeler 7.7.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package audit.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the Audit module
	public static void auditAssociation_Open(IContext context, audit.proxies.AuditAssociation _auditAssociation, audit.proxies.AuditItemDisplay _auditItemDisplay)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditAssociation", _auditAssociation == null ? null : _auditAssociation.getMendixObject());
			params.put("AuditItemDisplay", _auditItemDisplay == null ? null : _auditItemDisplay.getMendixObject());
			Core.execute(context, "Audit.AuditAssociation_Open", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditAttributeDisplay_OpenDynamicAttribute(IContext context, audit.proxies.AuditItemDisplay _auditItemDisplay)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditItemDisplay", _auditItemDisplay == null ? null : _auditItemDisplay.getMendixObject());
			Core.execute(context, "Audit.AuditAttributeDisplay_OpenDynamicAttribute", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditEventDisplay_OpenChild(IContext context, audit.proxies.AuditEventDisplay _auditEventDisplay)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditEventDisplay", _auditEventDisplay == null ? null : _auditEventDisplay.getMendixObject());
			Core.execute(context, "Audit.AuditEventDisplay_OpenChild", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditEventDisplay_ShowDetails(IContext context, audit.proxies.AuditEventDisplay _auditEventDisplay)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditEventDisplay", _auditEventDisplay == null ? null : _auditEventDisplay.getMendixObject());
			Core.execute(context, "Audit.AuditEventDisplay_ShowDetails", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditItemDisplay_DynamicData_CMDB_91(IContext context, audit.proxies.AuditRecord _auditRecord, audit.proxies.AuditRecordDisplay _auditRecordDisplay, java.lang.Long _createOrder)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditRecord", _auditRecord == null ? null : _auditRecord.getMendixObject());
			params.put("AuditRecordDisplay", _auditRecordDisplay == null ? null : _auditRecordDisplay.getMendixObject());
			params.put("CreateOrder", _createOrder);
			Core.execute(context, "Audit.AuditItemDisplay_DynamicData_CMDB_91", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditItemDisplay_DynamicData_Process(IContext context, audit.proxies.AuditRecord _auditRecord, audit.proxies.AuditRecordDisplay _auditRecordDisplay, java.lang.Long _createOrder)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditRecord", _auditRecord == null ? null : _auditRecord.getMendixObject());
			params.put("AuditRecordDisplay", _auditRecordDisplay == null ? null : _auditRecordDisplay.getMendixObject());
			params.put("CreateOrder", _createOrder);
			Core.execute(context, "Audit.AuditItemDisplay_DynamicData_Process", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditItemDisplay_DynamicData_ServiceProcess(IContext context, audit.proxies.AuditRecord _auditRecord, audit.proxies.AuditRecordDisplay _auditRecordDisplay, java.lang.Long _createOrder)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditRecord", _auditRecord == null ? null : _auditRecord.getMendixObject());
			params.put("AuditRecordDisplay", _auditRecordDisplay == null ? null : _auditRecordDisplay.getMendixObject());
			params.put("CreateOrder", _createOrder);
			Core.execute(context, "Audit.AuditItemDisplay_DynamicData_ServiceProcess", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<audit.proxies.AuditItemDisplay> auditItemDisplay_GetHistory(IContext context, audit.proxies.AuditItemDisplay _auditItemDisplay)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditItemDisplay", _auditItemDisplay == null ? null : _auditItemDisplay.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Audit.AuditItemDisplay_GetHistory", params);
			java.util.List<audit.proxies.AuditItemDisplay> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<audit.proxies.AuditItemDisplay>();
				for (IMendixObject obj : objs)
					result.add(audit.proxies.AuditItemDisplay.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditItemDisplay_Open(IContext context, audit.proxies.AuditItemDisplay _auditItemDisplay)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditItemDisplay", _auditItemDisplay == null ? null : _auditItemDisplay.getMendixObject());
			Core.execute(context, "Audit.AuditItemDisplay_Open", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditItemDisplay_ViewDetails(IContext context, audit.proxies.AuditItemDisplay _auditItemDisplay, audit.proxies.AuditEventDisplay _auditEventDisplay)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditItemDisplay", _auditItemDisplay == null ? null : _auditItemDisplay.getMendixObject());
			params.put("AuditEventDisplay", _auditEventDisplay == null ? null : _auditEventDisplay.getMendixObject());
			Core.execute(context, "Audit.AuditItemDisplay_ViewDetails", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditItemDisplay_ViewDetails_PointInTime(IContext context, audit.proxies.AuditItemDisplay _auditItemDisplay, audit.proxies.AuditRecordDisplay _auditRecordDisplay)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditItemDisplay", _auditItemDisplay == null ? null : _auditItemDisplay.getMendixObject());
			params.put("AuditRecordDisplay", _auditRecordDisplay == null ? null : _auditRecordDisplay.getMendixObject());
			Core.execute(context, "Audit.AuditItemDisplay_ViewDetails_PointInTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditItemUsedBy_ShowDetails(IContext context, audit.proxies.AuditItemUsedBy _auditItemUsedBy, audit.proxies.AuditRecordDisplay _auditRecordDisplay)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditItemUsedBy", _auditItemUsedBy == null ? null : _auditItemUsedBy.getMendixObject());
			params.put("AuditRecordDisplay", _auditRecordDisplay == null ? null : _auditRecordDisplay.getMendixObject());
			Core.execute(context, "Audit.AuditItemUsedBy_ShowDetails", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditItemUsedBy_ShowSearch(IContext context, audit.proxies.AuditRecordDisplay _auditRecordDisplay)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditRecordDisplay", _auditRecordDisplay == null ? null : _auditRecordDisplay.getMendixObject());
			Core.execute(context, "Audit.AuditItemUsedBy_ShowSearch", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditItemUsedBy_ShowSearch_UsedBy(IContext context, audit.proxies.AuditItemUsedBy _auditItemUsedBy)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditItemUsedBy", _auditItemUsedBy == null ? null : _auditItemUsedBy.getMendixObject());
			Core.execute(context, "Audit.AuditItemUsedBy_ShowSearch_UsedBy", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditItemUsedBy_ShowUsedBy(IContext context, audit.proxies.AuditRecordDisplay _auditRecordDisplay)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditRecordDisplay", _auditRecordDisplay == null ? null : _auditRecordDisplay.getMendixObject());
			Core.execute(context, "Audit.AuditItemUsedBy_ShowUsedBy", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditOnSnapshot_Audit_MendixEntityList(IContext context, java.util.List<metamodel.proxies.MendixEntity> _mendixEntityList, boolean _isInitial, boolean _useChangedDate, boolean _fixAssociations)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_mendixEntityList = null;
			if (_mendixEntityList != null)
			{
				listparam_mendixEntityList = new java.util.ArrayList<IMendixObject>();
				for (metamodel.proxies.MendixEntity obj : _mendixEntityList)
					listparam_mendixEntityList.add(obj.getMendixObject());
			}
			params.put("MendixEntityList", listparam_mendixEntityList);
			params.put("IsInitial", _isInitial);
			params.put("UseChangedDate", _useChangedDate);
			params.put("FixAssociations", _fixAssociations);
			Core.execute(context, "Audit.AuditOnSnapshot_Audit_MendixEntityList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static audit.proxies.AuditRecordDisplay auditRecordDisplay_Create(IContext context, audit.proxies.AuditRecord _auditRecord, boolean _userAttributes, java.lang.Long _depth, java.lang.Long _createOrder, java.lang.String _parentKey)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditRecord", _auditRecord == null ? null : _auditRecord.getMendixObject());
			params.put("UserAttributes", _userAttributes);
			params.put("Depth", _depth);
			params.put("CreateOrder", _createOrder);
			params.put("ParentKey", _parentKey);
			IMendixObject result = (IMendixObject)Core.execute(context, "Audit.AuditRecordDisplay_Create", params);
			return result == null ? null : audit.proxies.AuditRecordDisplay.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditRecordDisplay_DrillDown(IContext context, audit.proxies.AuditRecord _auditRecord, audit.proxies.AuditRecordDisplay _auditRecordDisplay)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditRecord", _auditRecord == null ? null : _auditRecord.getMendixObject());
			params.put("AuditRecordDisplay", _auditRecordDisplay == null ? null : _auditRecordDisplay.getMendixObject());
			Core.execute(context, "Audit.AuditRecordDisplay_DrillDown", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditRecordDisplay_Open(IContext context, audit.proxies.AuditRecord _auditRecord)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditRecord", _auditRecord == null ? null : _auditRecord.getMendixObject());
			Core.execute(context, "Audit.AuditRecordDisplay_Open", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditRecordDisplay_OpenOne(IContext context, java.util.List<audit.proxies.AuditRecord> _auditRecordList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_auditRecordList = null;
			if (_auditRecordList != null)
			{
				listparam_auditRecordList = new java.util.ArrayList<IMendixObject>();
				for (audit.proxies.AuditRecord obj : _auditRecordList)
					listparam_auditRecordList.add(obj.getMendixObject());
			}
			params.put("AuditRecordList", listparam_auditRecordList);
			Core.execute(context, "Audit.AuditRecordDisplay_OpenOne", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditRecordDisplay_Refresh(IContext context, audit.proxies.AuditRecordDisplay _auditRecordDisplay)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditRecordDisplay", _auditRecordDisplay == null ? null : _auditRecordDisplay.getMendixObject());
			Core.execute(context, "Audit.AuditRecordDisplay_Refresh", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditRecordDisplay_Show(IContext context, audit.proxies.AuditRecordDisplay _auditRecordDisplay)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditRecordDisplay", _auditRecordDisplay == null ? null : _auditRecordDisplay.getMendixObject());
			Core.execute(context, "Audit.AuditRecordDisplay_Show", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditRecordDisplay_Show_OldGUI(IContext context, audit.proxies.AuditRecordDisplay _auditRecordDisplay)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditRecordDisplay", _auditRecordDisplay == null ? null : _auditRecordDisplay.getMendixObject());
			Core.execute(context, "Audit.AuditRecordDisplay_Show_OldGUI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditRecordDisplay_Show_PointInTime(IContext context, audit.proxies.AuditEventDisplay _auditEventDisplay)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditEventDisplay", _auditEventDisplay == null ? null : _auditEventDisplay.getMendixObject());
			Core.execute(context, "Audit.AuditRecordDisplay_Show_PointInTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<audit.proxies.AuditAssociation> auditReferenceSetDisplay_AfterEventItems(IContext context, audit.proxies.AuditItemDisplay _auditItemDisplay)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditItemDisplay", _auditItemDisplay == null ? null : _auditItemDisplay.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Audit.AuditReferenceSetDisplay_AfterEventItems", params);
			java.util.List<audit.proxies.AuditAssociation> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<audit.proxies.AuditAssociation>();
				for (IMendixObject obj : objs)
					result.add(audit.proxies.AuditAssociation.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<audit.proxies.AuditAssociation> auditReferenceSetDisplay_BeforeEventItems(IContext context, audit.proxies.AuditItemDisplay _auditItemDisplay)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditItemDisplay", _auditItemDisplay == null ? null : _auditItemDisplay.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Audit.AuditReferenceSetDisplay_BeforeEventItems", params);
			java.util.List<audit.proxies.AuditAssociation> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<audit.proxies.AuditAssociation>();
				for (IMendixObject obj : objs)
					result.add(audit.proxies.AuditAssociation.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<audit.proxies.AuditAssociation> auditReferenceSetDisplay_GetDeletedItems(IContext context, audit.proxies.AuditItemDisplay _auditItemDisplay)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditItemDisplay", _auditItemDisplay == null ? null : _auditItemDisplay.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Audit.AuditReferenceSetDisplay_GetDeletedItems", params);
			java.util.List<audit.proxies.AuditAssociation> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<audit.proxies.AuditAssociation>();
				for (IMendixObject obj : objs)
					result.add(audit.proxies.AuditAssociation.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<audit.proxies.AuditAssociation> auditReferenceSetDisplay_GetNewItems(IContext context, audit.proxies.AuditItemDisplay _auditItemDisplay)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditItemDisplay", _auditItemDisplay == null ? null : _auditItemDisplay.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Audit.AuditReferenceSetDisplay_GetNewItems", params);
			java.util.List<audit.proxies.AuditAssociation> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<audit.proxies.AuditAssociation>();
				for (IMendixObject obj : objs)
					result.add(audit.proxies.AuditAssociation.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditSubItemDisplay_Open(IContext context, audit.proxies.AuditSubItemUsedBy _auditSubItemUsedBy)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditSubItemUsedBy", _auditSubItemUsedBy == null ? null : _auditSubItemUsedBy.getMendixObject());
			Core.execute(context, "Audit.AuditSubItemDisplay_Open", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditUsedBySearch_OpenSelected(IContext context, audit.proxies.AuditAssociation _auditAssociation, audit.proxies.AuditRecord _auditRecord)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditAssociation", _auditAssociation == null ? null : _auditAssociation.getMendixObject());
			params.put("AuditRecord", _auditRecord == null ? null : _auditRecord.getMendixObject());
			Core.execute(context, "Audit.AuditUsedBySearch_OpenSelected", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void batchDelete_FullAudit(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Audit.BatchDelete_FullAudit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void editAssociatedAuditRecord(IContext context, audit.proxies.AuditAssociation _auditAssociation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditAssociation", _auditAssociation == null ? null : _auditAssociation.getMendixObject());
			Core.execute(context, "Audit.EditAssociatedAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void editReverseAssociatedAuditRecord(IContext context, audit.proxies.AuditAssociation _auditAssociation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditAssociation", _auditAssociation == null ? null : _auditAssociation.getMendixObject());
			Core.execute(context, "Audit.EditReverseAssociatedAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void fixAssociatedAuditRecords(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Audit.FixAssociatedAuditRecords", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getAuditAliasAttributeName(IContext context, audit.proxies.AuditAttribute _auditAttribute)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditAttribute", _auditAttribute == null ? null : _auditAttribute.getMendixObject());
			return (java.lang.String)Core.execute(context, "Audit.GetAuditAliasAttributeName", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getAuditAliasReferenceName(IContext context, audit.proxies.AuditAssociation _auditAssociation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditAssociation", _auditAssociation == null ? null : _auditAssociation.getMendixObject());
			return (java.lang.String)Core.execute(context, "Audit.GetAuditAliasReferenceName", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static audit.proxies.AuditAttribute getAuditAttribute_AtEvent(IContext context, audit.proxies.AuditEvent _auditEvent, audit.proxies.AuditRecord _auditRecord, java.lang.String _name)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditEvent", _auditEvent == null ? null : _auditEvent.getMendixObject());
			params.put("AuditRecord", _auditRecord == null ? null : _auditRecord.getMendixObject());
			params.put("Name", _name);
			IMendixObject result = (IMendixObject)Core.execute(context, "Audit.GetAuditAttribute_AtEvent", params);
			return result == null ? null : audit.proxies.AuditAttribute.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getAuditEventDescription(IContext context, audit.proxies.AuditEvent _auditEvent, java.lang.String _key, boolean _isDynamicAttribute, java.lang.String _parentKey, boolean _isChild, java.lang.String _dynamicAttributeName)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditEvent", _auditEvent == null ? null : _auditEvent.getMendixObject());
			params.put("Key", _key);
			params.put("IsDynamicAttribute", _isDynamicAttribute);
			params.put("ParentKey", _parentKey);
			params.put("IsChild", _isChild);
			params.put("DynamicAttributeName", _dynamicAttributeName);
			return (java.lang.String)Core.execute(context, "Audit.GetAuditEventDescription", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<audit.proxies.AuditItemDisplay> getAuditEvents_CMDBSorted(IContext context, cmdb.proxies.ConfigurationItem _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Audit.GetAuditEvents_CMDBSorted", params);
			java.util.List<audit.proxies.AuditItemDisplay> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<audit.proxies.AuditItemDisplay>();
				for (IMendixObject obj : objs)
					result.add(audit.proxies.AuditItemDisplay.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<audit.proxies.AuditItemDisplay> getAuditEvents_CMDBTypeSorted(IContext context, cmdb.proxies.CMDBType _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Audit.GetAuditEvents_CMDBTypeSorted", params);
			java.util.List<audit.proxies.AuditItemDisplay> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<audit.proxies.AuditItemDisplay>();
				for (IMendixObject obj : objs)
					result.add(audit.proxies.AuditItemDisplay.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<audit.proxies.AuditItemDisplay> getAuditEvents_RequestSorted(IContext context, process.proxies.Request _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Audit.GetAuditEvents_RequestSorted", params);
			java.util.List<audit.proxies.AuditItemDisplay> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<audit.proxies.AuditItemDisplay>();
				for (IMendixObject obj : objs)
					result.add(audit.proxies.AuditItemDisplay.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<audit.proxies.AuditEventDisplay> getAuditEvents_Sorted(IContext context, audit.proxies.AuditRecordDisplay _auditRecordDisplay)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditRecordDisplay", _auditRecordDisplay == null ? null : _auditRecordDisplay.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Audit.GetAuditEvents_Sorted", params);
			java.util.List<audit.proxies.AuditEventDisplay> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<audit.proxies.AuditEventDisplay>();
				for (IMendixObject obj : objs)
					result.add(audit.proxies.AuditEventDisplay.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<audit.proxies.AuditItemDisplay> getAuditItems_ByEvent_Sorted(IContext context, audit.proxies.AuditEventDisplay _auditEventDisplay)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditEventDisplay", _auditEventDisplay == null ? null : _auditEventDisplay.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Audit.GetAuditItems_ByEvent_Sorted", params);
			java.util.List<audit.proxies.AuditItemDisplay> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<audit.proxies.AuditItemDisplay>();
				for (IMendixObject obj : objs)
					result.add(audit.proxies.AuditItemDisplay.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<audit.proxies.AuditItemDisplay> getAuditItems_PointInTime_Sorted(IContext context, audit.proxies.AuditRecordDisplay _auditRecordDisplay)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditRecordDisplay", _auditRecordDisplay == null ? null : _auditRecordDisplay.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Audit.GetAuditItems_PointInTime_Sorted", params);
			java.util.List<audit.proxies.AuditItemDisplay> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<audit.proxies.AuditItemDisplay>();
				for (IMendixObject obj : objs)
					result.add(audit.proxies.AuditItemDisplay.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getShortKey(IContext context, java.lang.String _key, java.lang.String _parentKey)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Key", _key);
			params.put("ParentKey", _parentKey);
			return (java.lang.String)Core.execute(context, "Audit.GetShortKey", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void init_Audit_MendixEntityList(IContext context, java.util.List<metamodel.proxies.MendixEntity> _mendixEntityList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_mendixEntityList = null;
			if (_mendixEntityList != null)
			{
				listparam_mendixEntityList = new java.util.ArrayList<IMendixObject>();
				for (metamodel.proxies.MendixEntity obj : _mendixEntityList)
					listparam_mendixEntityList.add(obj.getMendixObject());
			}
			params.put("MendixEntityList", listparam_mendixEntityList);
			Core.execute(context, "Audit.Init_Audit_MendixEntityList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void init_Audit_MendixEntityList_Parallel(IContext context, java.util.List<metamodel.proxies.MendixEntity> _mendixEntityList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_mendixEntityList = null;
			if (_mendixEntityList != null)
			{
				listparam_mendixEntityList = new java.util.ArrayList<IMendixObject>();
				for (metamodel.proxies.MendixEntity obj : _mendixEntityList)
					listparam_mendixEntityList.add(obj.getMendixObject());
			}
			params.put("MendixEntityList", listparam_mendixEntityList);
			Core.execute(context, "Audit.Init_Audit_MendixEntityList_Parallel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void init_FullAudit(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Audit.Init_FullAudit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void init_FullAudit_Parallel(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Audit.Init_FullAudit_Parallel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CloseAudit(IContext context, audit.proxies.AuditRecordDisplay _auditRecordDisplay)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditRecordDisplay", _auditRecordDisplay == null ? null : _auditRecordDisplay.getMendixObject());
			Core.execute(context, "Audit.IVK_CloseAudit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void snapshot_ChangedAudit_Parallel(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Audit.Snapshot_ChangedAudit_Parallel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void snapshot_FullAudit_Parallel(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Audit.Snapshot_FullAudit_Parallel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void viewAssociatedAuditRecord(IContext context, audit.proxies.AuditAssociation _auditAssociation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditAssociation", _auditAssociation == null ? null : _auditAssociation.getMendixObject());
			Core.execute(context, "Audit.ViewAssociatedAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void viewReverseAssociatedAuditRecord(IContext context, audit.proxies.AuditAssociation _auditAssociation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AuditAssociation", _auditAssociation == null ? null : _auditAssociation.getMendixObject());
			Core.execute(context, "Audit.ViewReverseAssociatedAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}