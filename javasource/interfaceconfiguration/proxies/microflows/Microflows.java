// This file was generated by Mendix Modeler 7.7.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package interfaceconfiguration.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the InterfaceConfiguration module
	public static void aC_AuditDefaultTableItem(IContext context, interfaceconfiguration.proxies.DefaultTableItem _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.AC_AuditDefaultTableItem", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void aC_SetNotNew(IContext context, interfaceconfiguration.proxies.LDAPInterfaceConfiguration _lDAPInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPInterfaceConfiguration", _lDAPInterfaceConfiguration == null ? null : _lDAPInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.AC_SetNotNew", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean aD_AuditDefaultTableItem(IContext context, interfaceconfiguration.proxies.DefaultTableItem _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.AD_AuditDefaultTableItem", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bC_CheckExistingMessageStatus(IContext context, interfaceconfiguration.proxies.InterfaceEventGeneration _interfaceEventGeneration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceEventGeneration", _interfaceEventGeneration == null ? null : _interfaceEventGeneration.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.BC_CheckExistingMessageStatus", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bC_CheckHeartBeatUsage(IContext context, interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration _webServiceInterfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("WebServiceInterfaceMessageConfiguration", _webServiceInterfaceMessageConfiguration == null ? null : _webServiceInterfaceMessageConfiguration.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.BC_CheckHeartBeatUsage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bC_DefaultTableItem(IContext context, interfaceconfiguration.proxies.DefaultTableItem _defaultTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultTableItem", _defaultTableItem == null ? null : _defaultTableItem.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.BC_DefaultTableItem", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bC_DynamicTable(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.BC_DynamicTable", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bC_LDAPImportType(IContext context, interfaceconfiguration.proxies.LDAPImportType _lDAPImportType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPImportType", _lDAPImportType == null ? null : _lDAPImportType.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.BC_LDAPImportType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bC_LDAPInterfaceConfiguration(IContext context, interfaceconfiguration.proxies.LDAPInterfaceConfiguration _lDAPInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPInterfaceConfiguration", _lDAPInterfaceConfiguration == null ? null : _lDAPInterfaceConfiguration.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.BC_LDAPInterfaceConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bC_SystemEndPoint(IContext context, interfaceconfiguration.proxies.SystemEndPoint _systemEndPoint)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SystemEndPoint", _systemEndPoint == null ? null : _systemEndPoint.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.BC_SystemEndPoint", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bC_TranslationTableItem(IContext context, interfaceconfiguration.proxies.TranslationTableItem _translationTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TranslationTableItem", _translationTableItem == null ? null : _translationTableItem.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.BC_TranslationTableItem", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 993440
	 * Added validation on cleanup age field for deleting Error Messages
	 */
	public static boolean bC_ValidateInterfaceConfiguration(IContext context, interfaceconfiguration.proxies.InterfaceConfiguration _interfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceConfiguration", _interfaceConfiguration == null ? null : _interfaceConfiguration.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.BC_ValidateInterfaceConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bC_ValidateInterfaceMessageConfiguration(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.BC_ValidateInterfaceMessageConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bC_ValidateLDAPAttributeMapping(IContext context, interfaceconfiguration.proxies.LDAPAttributeMapping _lDAPAttributeMapping)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPAttributeMapping", _lDAPAttributeMapping == null ? null : _lDAPAttributeMapping.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.BC_ValidateLDAPAttributeMapping", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bC_ValidateLDAPFilterClass(IContext context, interfaceconfiguration.proxies.LDAPFilterClass _lDAPFilterClass)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPFilterClass", _lDAPFilterClass == null ? null : _lDAPFilterClass.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.BC_ValidateLDAPFilterClass", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bC_ValidateLDAPGroupMapping(IContext context, interfaceconfiguration.proxies.LDAPGroupMapping _lDAPGroupMapping)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPGroupMapping", _lDAPGroupMapping == null ? null : _lDAPGroupMapping.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.BC_ValidateLDAPGroupMapping", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bC_ValidateSendFaultFilter(IContext context, interfaceconfiguration.proxies.SendFaultFilter _sendFaultFilter)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SendFaultFilter", _sendFaultFilter == null ? null : _sendFaultFilter.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.BC_ValidateSendFaultFilter", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bD_CheckHeartBeatUsage(IContext context, interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration _webServiceInterfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("WebServiceInterfaceMessageConfiguration", _webServiceInterfaceMessageConfiguration == null ? null : _webServiceInterfaceMessageConfiguration.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.BD_CheckHeartBeatUsage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bD_DeleteConfirmationInterfaceMessagesConfiguration(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.BD_DeleteConfirmationInterfaceMessagesConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bD_DeleteRelatedInterfaceMessageConfigurationEntries(IContext context, interfaceconfiguration.proxies.InterfaceConfiguration _interfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceConfiguration", _interfaceConfiguration == null ? null : _interfaceConfiguration.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.BD_DeleteRelatedInterfaceMessageConfigurationEntries", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void changeDefaultTableItem_MessageType(IContext context, interfaceconfiguration.proxies.DefaultTableItem _defaultTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultTableItem", _defaultTableItem == null ? null : _defaultTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.ChangeDefaultTableItem_MessageType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void changeNameOfExistingMessages(IContext context, interfaceconfiguration.proxies.InterfaceConfiguration _interfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceConfiguration", _interfaceConfiguration == null ? null : _interfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.ChangeNameOfExistingMessages", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void checkAttributeEntityType(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.CheckAttributeEntityType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean checkDefaultAlreadyExists(IContext context, interfaceconfiguration.proxies.DefaultTableItem _defaultTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultTableItem", _defaultTableItem == null ? null : _defaultTableItem.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.CheckDefaultAlreadyExists", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean checkDynamictableDuplicateEntry(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.CheckDynamictableDuplicateEntry", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void checkIncomingStatus(IContext context, interfaceconfiguration.proxies.WebServiceInterfaceConfiguration _webServiceInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("WebServiceInterfaceConfiguration", _webServiceInterfaceConfiguration == null ? null : _webServiceInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.CheckIncomingStatus", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean checkIsChild(IContext context, interfaceconfiguration.proxies.LDAPObject _lDAPObject, interfaceconfiguration.proxies.LDAPObject _potentialChildLDAPObject)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPObject", _lDAPObject == null ? null : _lDAPObject.getMendixObject());
			params.put("PotentialChildLDAPObject", _potentialChildLDAPObject == null ? null : _potentialChildLDAPObject.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.CheckIsChild", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void checkOugoingStatus(IContext context, interfaceconfiguration.proxies.WebServiceInterfaceConfiguration _webServiceInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("WebServiceInterfaceConfiguration", _webServiceInterfaceConfiguration == null ? null : _webServiceInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.CheckOugoingStatus", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean checkTranslationAlreadyExists(IContext context, interfaceconfiguration.proxies.TranslationTableItem _translationTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TranslationTableItem", _translationTableItem == null ? null : _translationTableItem.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.CheckTranslationAlreadyExists", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean checkValueCheckChanged(IContext context, interfaceconfiguration.proxies.LDAPInterfaceConfiguration _lDAPInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPInterfaceConfiguration", _lDAPInterfaceConfiguration == null ? null : _lDAPInterfaceConfiguration.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.CheckValueCheckChanged", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void cleanDynamicTable(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.CleanDynamicTable", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void clearIncomingMessageConfiguration(IContext context, interfaceconfiguration.proxies.WebServiceInterfaceConfiguration _webServiceInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("WebServiceInterfaceConfiguration", _webServiceInterfaceConfiguration == null ? null : _webServiceInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.ClearIncomingMessageConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void clearOutgoingMessageConfiguration(IContext context, interfaceconfiguration.proxies.WebServiceInterfaceConfiguration _webServiceInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("WebServiceInterfaceConfiguration", _webServiceInterfaceConfiguration == null ? null : _webServiceInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.ClearOutgoingMessageConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyDynamicTable(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.CopyDynamicTable", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deleteDefaultTableItem(IContext context, interfaceconfiguration.proxies.DefaultTableItem _defaultTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultTableItem", _defaultTableItem == null ? null : _defaultTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.DeleteDefaultTableItem", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String dS_DefaultTableItem_AssociatedEntry(IContext context, interfaceconfiguration.proxies.DefaultTableItem _defaultTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultTableItem", _defaultTableItem == null ? null : _defaultTableItem.getMendixObject());
			return (java.lang.String)Core.execute(context, "InterfaceConfiguration.DS_DefaultTableItem_AssociatedEntry", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<interfaceconfiguration.proxies.InterfaceMessageConfiguration> dS_DefaultTableItem_InterfaceMessageConfiguration(IContext context, interfaceconfiguration.proxies.DefaultTableItem _defaultTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultTableItem", _defaultTableItem == null ? null : _defaultTableItem.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.DS_DefaultTableItem_InterfaceMessageConfiguration", params);
			java.util.List<interfaceconfiguration.proxies.InterfaceMessageConfiguration> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<interfaceconfiguration.proxies.InterfaceMessageConfiguration>();
				for (IMendixObject obj : objs)
					result.add(interfaceconfiguration.proxies.InterfaceMessageConfiguration.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<nap.proxies.BusinessGroup> dS_DefaultTableItemBusinessGroupSelect(IContext context, interfaceconfiguration.proxies.DefaultTableItem _defaultTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultTableItem", _defaultTableItem == null ? null : _defaultTableItem.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.DS_DefaultTableItemBusinessGroupSelect", params);
			java.util.List<nap.proxies.BusinessGroup> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<nap.proxies.BusinessGroup>();
				for (IMendixObject obj : objs)
					result.add(nap.proxies.BusinessGroup.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<nap.proxies.Customer> dS_DefaultTableItemCustomerSelect(IContext context, interfaceconfiguration.proxies.DefaultTableItem _defaultTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultTableItem", _defaultTableItem == null ? null : _defaultTableItem.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.DS_DefaultTableItemCustomerSelect", params);
			java.util.List<nap.proxies.Customer> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<nap.proxies.Customer>();
				for (IMendixObject obj : objs)
					result.add(nap.proxies.Customer.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<nap.proxies.Location> dS_DefaultTableItemLocationSelect(IContext context, interfaceconfiguration.proxies.DefaultTableItem _defaultTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultTableItem", _defaultTableItem == null ? null : _defaultTableItem.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.DS_DefaultTableItemLocationSelect", params);
			java.util.List<nap.proxies.Location> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<nap.proxies.Location>();
				for (IMendixObject obj : objs)
					result.add(nap.proxies.Location.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<interfaceconfiguration.proxies.DefaultTableItem> dS_DefaultTableItems(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.DS_DefaultTableItems", params);
			java.util.List<interfaceconfiguration.proxies.DefaultTableItem> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<interfaceconfiguration.proxies.DefaultTableItem>();
				for (IMendixObject obj : objs)
					result.add(interfaceconfiguration.proxies.DefaultTableItem.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<roletemplates.proxies.Template> dS_DefaultTableItemTemplateSelect(IContext context, interfaceconfiguration.proxies.DefaultTableItem _defaultTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultTableItem", _defaultTableItem == null ? null : _defaultTableItem.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.DS_DefaultTableItemTemplateSelect", params);
			java.util.List<roletemplates.proxies.Template> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<roletemplates.proxies.Template>();
				for (IMendixObject obj : objs)
					result.add(roletemplates.proxies.Template.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<interfaceconfiguration.proxies.InterfaceMessageConfiguration> dS_FillSelectableInterfaceMessageConfigurationConfirmations(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.DS_FillSelectableInterfaceMessageConfigurationConfirmations", params);
			java.util.List<interfaceconfiguration.proxies.InterfaceMessageConfiguration> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<interfaceconfiguration.proxies.InterfaceMessageConfiguration>();
				for (IMendixObject obj : objs)
					result.add(interfaceconfiguration.proxies.InterfaceMessageConfiguration.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<interfaceconfiguration.proxies.InterfaceConfiguration> dS_FillWebServiceInterfaceConfiguration(IContext context, interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration _webServiceInterfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("WebServiceInterfaceMessageConfiguration", _webServiceInterfaceMessageConfiguration == null ? null : _webServiceInterfaceMessageConfiguration.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.DS_FillWebServiceInterfaceConfiguration", params);
			java.util.List<interfaceconfiguration.proxies.InterfaceConfiguration> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<interfaceconfiguration.proxies.InterfaceConfiguration>();
				for (IMendixObject obj : objs)
					result.add(interfaceconfiguration.proxies.InterfaceConfiguration.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static interfaceconfiguration.proxies.ImportType dS_ImportType(IContext context, interfaceconfiguration.proxies.LDAPAttributeMapping _lDAPAttributeMapping)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPAttributeMapping", _lDAPAttributeMapping == null ? null : _lDAPAttributeMapping.getMendixObject());
			java.lang.String result = (java.lang.String)Core.execute(context, "InterfaceConfiguration.DS_ImportType", params);
			if (result == null)
				return null;
			return interfaceconfiguration.proxies.ImportType.valueOf(result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<mendix.proxies.Microflow> dS_InterfacePrepareMicroflows(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.DS_InterfacePrepareMicroflows", params);
			java.util.List<mendix.proxies.Microflow> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<mendix.proxies.Microflow>();
				for (IMendixObject obj : objs)
					result.add(mendix.proxies.Microflow.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<mendix.proxies.Microflow> dS_InterfaceSendMicroflows(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.DS_InterfaceSendMicroflows", params);
			java.util.List<mendix.proxies.Microflow> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<mendix.proxies.Microflow>();
				for (IMendixObject obj : objs)
					result.add(mendix.proxies.Microflow.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean dS_IsLDAPInterfaceConfigurationForCurrentServer(IContext context, interfaceconfiguration.proxies.LDAPInterfaceConfiguration _lDAPInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPInterfaceConfiguration", _lDAPInterfaceConfiguration == null ? null : _lDAPInterfaceConfiguration.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.DS_IsLDAPInterfaceConfigurationForCurrentServer", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<roletemplates.proxies.Template> dS_LDAPGroupMappingTemplateSelect(IContext context, interfaceconfiguration.proxies.LDAPGroupMapping _lDAPGroupMapping)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPGroupMapping", _lDAPGroupMapping == null ? null : _lDAPGroupMapping.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.DS_LDAPGroupMappingTemplateSelect", params);
			java.util.List<roletemplates.proxies.Template> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<roletemplates.proxies.Template>();
				for (IMendixObject obj : objs)
					result.add(roletemplates.proxies.Template.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String dS_LDAPImportAttribute_ImportAttr(IContext context, interfaceconfiguration.proxies.LDAPAttributeMapping _lDAPAttributeMapping)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPAttributeMapping", _lDAPAttributeMapping == null ? null : _lDAPAttributeMapping.getMendixObject());
			return (java.lang.String)Core.execute(context, "InterfaceConfiguration.DS_LDAPImportAttribute_ImportAttr", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean dS_LDAPImportType_InsufficientMappings(IContext context, interfaceconfiguration.proxies.LDAPImportType _lDAPImportType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPImportType", _lDAPImportType == null ? null : _lDAPImportType.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.DS_LDAPImportType_InsufficientMappings", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean dS_LDAPImportType_Valid(IContext context, interfaceconfiguration.proxies.LDAPImportType _lDAPImportType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPImportType", _lDAPImportType == null ? null : _lDAPImportType.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.DS_LDAPImportType_Valid", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean dS_LDAPImportTypeAttributeImported(IContext context, interfaceconfiguration.proxies.LDAPImportType _lDAPImportType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPImportType", _lDAPImportType == null ? null : _lDAPImportType.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.DS_LDAPImportTypeAttributeImported", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<interfaceldap.proxies.LDAPImport> dS_LDAPInterfaceConfiguration_ReadLogging(IContext context, interfaceconfiguration.proxies.LDAPInterfaceConfiguration _lDAPInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPInterfaceConfiguration", _lDAPInterfaceConfiguration == null ? null : _lDAPInterfaceConfiguration.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.DS_LDAPInterfaceConfiguration_ReadLogging", params);
			java.util.List<interfaceldap.proxies.LDAPImport> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<interfaceldap.proxies.LDAPImport>();
				for (IMendixObject obj : objs)
					result.add(interfaceldap.proxies.LDAPImport.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String dS_LDAPInterfaceConfigurationFillHostNameSystemEndPoint(IContext context, interfaceconfiguration.proxies.LDAPInterfaceConfiguration _lDAPInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPInterfaceConfiguration", _lDAPInterfaceConfiguration == null ? null : _lDAPInterfaceConfiguration.getMendixObject());
			return (java.lang.String)Core.execute(context, "InterfaceConfiguration.DS_LDAPInterfaceConfigurationFillHostNameSystemEndPoint", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean dS_LDAPObject_IsImported(IContext context, interfaceconfiguration.proxies.LDAPObject _lDAPObject)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPObject", _lDAPObject == null ? null : _lDAPObject.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.DS_LDAPObject_IsImported", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean dS_LDAPObject_IsRecursiveImported(IContext context, interfaceconfiguration.proxies.LDAPObject _lDAPObject)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPObject", _lDAPObject == null ? null : _lDAPObject.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.DS_LDAPObject_IsRecursiveImported", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean dS_LDAPObject_ParentIsRecursiveImported(IContext context, interfaceconfiguration.proxies.LDAPObject _lDAPObject)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPObject", _lDAPObject == null ? null : _lDAPObject.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.DS_LDAPObject_ParentIsRecursiveImported", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean dS_LDAPObjectView_IsImported(IContext context, interfaceconfiguration.proxies.LDAPObjectView _lDAPObjectView)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPObjectView", _lDAPObjectView == null ? null : _lDAPObjectView.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.DS_LDAPObjectView_IsImported", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean dS_LDAPObjectView_IsRecursiveImported(IContext context, interfaceconfiguration.proxies.LDAPObjectView _lDAPObjectView)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPObjectView", _lDAPObjectView == null ? null : _lDAPObjectView.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.DS_LDAPObjectView_IsRecursiveImported", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<interfaceconfiguration.proxies.LDAPAttribute> dS_LDAPObjectView_LDAPAttributeList(IContext context, interfaceconfiguration.proxies.LDAPObjectView _lDAPObjectView)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPObjectView", _lDAPObjectView == null ? null : _lDAPObjectView.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.DS_LDAPObjectView_LDAPAttributeList", params);
			java.util.List<interfaceconfiguration.proxies.LDAPAttribute> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<interfaceconfiguration.proxies.LDAPAttribute>();
				for (IMendixObject obj : objs)
					result.add(interfaceconfiguration.proxies.LDAPAttribute.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<interfaceconfiguration.proxies.LDAPClass> dS_LDAPObjectView_LDAPClassList(IContext context, interfaceconfiguration.proxies.LDAPObjectView _lDAPObjectView)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPObjectView", _lDAPObjectView == null ? null : _lDAPObjectView.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.DS_LDAPObjectView_LDAPClassList", params);
			java.util.List<interfaceconfiguration.proxies.LDAPClass> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<interfaceconfiguration.proxies.LDAPClass>();
				for (IMendixObject obj : objs)
					result.add(interfaceconfiguration.proxies.LDAPClass.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean dS_LDAPObjectView_ParentIsRecursiveImported(IContext context, interfaceconfiguration.proxies.LDAPObjectView _lDAPObjectView)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPObjectView", _lDAPObjectView == null ? null : _lDAPObjectView.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.DS_LDAPObjectView_ParentIsRecursiveImported", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String dS_LDAPPathImportTypeDescription(IContext context, interfaceconfiguration.proxies.LDAPPath _lDAPPath)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPPath", _lDAPPath == null ? null : _lDAPPath.getMendixObject());
			return (java.lang.String)Core.execute(context, "InterfaceConfiguration.DS_LDAPPathImportTypeDescription", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<interfaceconfiguration.proxies.LDAPObject> dS_ObjectChildren(IContext context, interfaceconfiguration.proxies.LDAPObjectView _lDAPObjectView)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPObjectView", _lDAPObjectView == null ? null : _lDAPObjectView.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.DS_ObjectChildren", params);
			java.util.List<interfaceconfiguration.proxies.LDAPObject> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<interfaceconfiguration.proxies.LDAPObject>();
				for (IMendixObject obj : objs)
					result.add(interfaceconfiguration.proxies.LDAPObject.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static interfaceconfiguration.proxies.PersonImportScope dS_PersonImportScope(IContext context, interfaceconfiguration.proxies.LDAPAttributeMapping _lDAPAttributeMapping)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPAttributeMapping", _lDAPAttributeMapping == null ? null : _lDAPAttributeMapping.getMendixObject());
			java.lang.String result = (java.lang.String)Core.execute(context, "InterfaceConfiguration.DS_PersonImportScope", params);
			if (result == null)
				return null;
			return interfaceconfiguration.proxies.PersonImportScope.valueOf(result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<interfaceconfiguration.proxies.LDAPClass> dS_SelectableClassNames(IContext context, interfaceconfiguration.proxies.LDAPFilterClass _lDAPFilterClass)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPFilterClass", _lDAPFilterClass == null ? null : _lDAPFilterClass.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.DS_SelectableClassNames", params);
			java.util.List<interfaceconfiguration.proxies.LDAPClass> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<interfaceconfiguration.proxies.LDAPClass>();
				for (IMendixObject obj : objs)
					result.add(interfaceconfiguration.proxies.LDAPClass.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<interfaceconfiguration.proxies.LDAPGroup> dS_SelectableFilterGroups(IContext context, interfaceconfiguration.proxies.LDAPImportType _lDAPImportType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPImportType", _lDAPImportType == null ? null : _lDAPImportType.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.DS_SelectableFilterGroups", params);
			java.util.List<interfaceconfiguration.proxies.LDAPGroup> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<interfaceconfiguration.proxies.LDAPGroup>();
				for (IMendixObject obj : objs)
					result.add(interfaceconfiguration.proxies.LDAPGroup.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration> dS_SelectableIncomingHeartBeatWebServiceInterfaceMessageConfigurationList(IContext context, interfaceconfiguration.proxies.WebServiceInterfaceConfiguration _webServiceInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("WebServiceInterfaceConfiguration", _webServiceInterfaceConfiguration == null ? null : _webServiceInterfaceConfiguration.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.DS_SelectableIncomingHeartBeatWebServiceInterfaceMessageConfigurationList", params);
			java.util.List<interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration>();
				for (IMendixObject obj : objs)
					result.add(interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<interfaceconfiguration.proxies.LookupLdapAttr> dS_SelectableLDAPAttributeMappingAttributes(IContext context, interfaceconfiguration.proxies.LDAPAttributeMapping _lDAPAttributeMapping)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPAttributeMapping", _lDAPAttributeMapping == null ? null : _lDAPAttributeMapping.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.DS_SelectableLDAPAttributeMappingAttributes", params);
			java.util.List<interfaceconfiguration.proxies.LookupLdapAttr> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<interfaceconfiguration.proxies.LookupLdapAttr>();
				for (IMendixObject obj : objs)
					result.add(interfaceconfiguration.proxies.LookupLdapAttr.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<interfaceconfiguration.proxies.LDAPGroup> dS_SelectableLDAPGroups(IContext context, interfaceconfiguration.proxies.LDAPGroupMapping _lDAPGroupMapping)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPGroupMapping", _lDAPGroupMapping == null ? null : _lDAPGroupMapping.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.DS_SelectableLDAPGroups", params);
			java.util.List<interfaceconfiguration.proxies.LDAPGroup> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<interfaceconfiguration.proxies.LDAPGroup>();
				for (IMendixObject obj : objs)
					result.add(interfaceconfiguration.proxies.LDAPGroup.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration> dS_SelectableOutgoingHeartBeatWebServiceInterfaceMessageConfigurationList(IContext context, interfaceconfiguration.proxies.WebServiceInterfaceConfiguration _webServiceInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("WebServiceInterfaceConfiguration", _webServiceInterfaceConfiguration == null ? null : _webServiceInterfaceConfiguration.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.DS_SelectableOutgoingHeartBeatWebServiceInterfaceMessageConfigurationList", params);
			java.util.List<interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration>();
				for (IMendixObject obj : objs)
					result.add(interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean dS_ShowGroupMapping(IContext context, interfaceconfiguration.proxies.LDAPImportType _lDAPImportType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPImportType", _lDAPImportType == null ? null : _lDAPImportType.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.DS_ShowGroupMapping", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean dS_ShowImportLDAP(IContext context, interfaceconfiguration.proxies.LDAPInterfaceConfiguration _lDAPInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPInterfaceConfiguration", _lDAPInterfaceConfiguration == null ? null : _lDAPInterfaceConfiguration.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.DS_ShowImportLDAP", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<interfaceconfiguration.proxies.InterfaceMessageConfiguration> dS_StateTransitionTranslation_InterfaceMessageConfiguration(IContext context, interfaceconfiguration.proxies.StateTransitionTranslationTable _stateTransitionTranslationTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("StateTransitionTranslationTable", _stateTransitionTranslationTable == null ? null : _stateTransitionTranslationTable.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.DS_StateTransitionTranslation_InterfaceMessageConfiguration", params);
			java.util.List<interfaceconfiguration.proxies.InterfaceMessageConfiguration> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<interfaceconfiguration.proxies.InterfaceMessageConfiguration>();
				for (IMendixObject obj : objs)
					result.add(interfaceconfiguration.proxies.InterfaceMessageConfiguration.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<interfaceconfiguration.proxies.InterfaceMessageConfiguration> dS_TranslationTableItem_InterfaceMessageConfiguration(IContext context, interfaceconfiguration.proxies.TranslationTableItem _translationTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TranslationTableItem", _translationTableItem == null ? null : _translationTableItem.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.DS_TranslationTableItem_InterfaceMessageConfiguration", params);
			java.util.List<interfaceconfiguration.proxies.InterfaceMessageConfiguration> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<interfaceconfiguration.proxies.InterfaceMessageConfiguration>();
				for (IMendixObject obj : objs)
					result.add(interfaceconfiguration.proxies.InterfaceMessageConfiguration.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<interfaceconfiguration.proxies.TranslationTableItem> dS_TranslationTableItem_Overview(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.DS_TranslationTableItem_Overview", params);
			java.util.List<interfaceconfiguration.proxies.TranslationTableItem> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<interfaceconfiguration.proxies.TranslationTableItem>();
				for (IMendixObject obj : objs)
					result.add(interfaceconfiguration.proxies.TranslationTableItem.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean dS_UserHasInterfaceAdminRole(IContext context, interfaceconfiguration.proxies.TranslationTableItem _translationTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TranslationTableItem", _translationTableItem == null ? null : _translationTableItem.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.DS_UserHasInterfaceAdminRole", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean dS_UserHasLDAPRole(IContext context, interfaceconfiguration.proxies.TranslationTableItem _translationTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TranslationTableItem", _translationTableItem == null ? null : _translationTableItem.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.DS_UserHasLDAPRole", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<interfaceconfiguration.proxies.UserRole> dS_UserRole(IContext context, interfaceconfiguration.proxies.LDAPInterfaceConfiguration _lDAPInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPInterfaceConfiguration", _lDAPInterfaceConfiguration == null ? null : _lDAPInterfaceConfiguration.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.DS_UserRole", params);
			java.util.List<interfaceconfiguration.proxies.UserRole> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<interfaceconfiguration.proxies.UserRole>();
				for (IMendixObject obj : objs)
					result.add(interfaceconfiguration.proxies.UserRole.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<interfaceconfiguration.proxies.Account> dS_UsersAllowedLocalFallback(IContext context, interfaceconfiguration.proxies.LDAPInterfaceConfiguration _lDAPInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPInterfaceConfiguration", _lDAPInterfaceConfiguration == null ? null : _lDAPInterfaceConfiguration.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.DS_UsersAllowedLocalFallback", params);
			java.util.List<interfaceconfiguration.proxies.Account> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<interfaceconfiguration.proxies.Account>();
				for (IMendixObject obj : objs)
					result.add(interfaceconfiguration.proxies.Account.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<interfaceconfiguration.proxies.Account> dS_UsersUsingLocalAuthorization(IContext context, interfaceconfiguration.proxies.LDAPInterfaceConfiguration _lDAPInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPInterfaceConfiguration", _lDAPInterfaceConfiguration == null ? null : _lDAPInterfaceConfiguration.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.DS_UsersUsingLocalAuthorization", params);
			java.util.List<interfaceconfiguration.proxies.Account> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<interfaceconfiguration.proxies.Account>();
				for (IMendixObject obj : objs)
					result.add(interfaceconfiguration.proxies.Account.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration> dS_WebServiceHeaderInterfaceMessageConfiguration(IContext context, interfaceshared.proxies.WebServiceHeader _webServiceHeader)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("WebServiceHeader", _webServiceHeader == null ? null : _webServiceHeader.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.DS_WebServiceHeaderInterfaceMessageConfiguration", params);
			java.util.List<interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration>();
				for (IMendixObject obj : objs)
					result.add(interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<metamodel.proxies.MendixAttribute> dynamicTableDestinationAttributeSelector(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.DynamicTableDestinationAttributeSelector", params);
			java.util.List<metamodel.proxies.MendixAttribute> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<metamodel.proxies.MendixAttribute>();
				for (IMendixObject obj : objs)
					result.add(metamodel.proxies.MendixAttribute.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<metamodel.proxies.MendixEntity> dynamicTableDestinationEntitySelector(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.DynamicTableDestinationEntitySelector", params);
			java.util.List<metamodel.proxies.MendixEntity> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<metamodel.proxies.MendixEntity>();
				for (IMendixObject obj : objs)
					result.add(metamodel.proxies.MendixEntity.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<process.proxies.DynamicAttributeLabel> dynamicTableDynamicLabelSelector(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.DynamicTableDynamicLabelSelector", params);
			java.util.List<process.proxies.DynamicAttributeLabel> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<process.proxies.DynamicAttributeLabel>();
				for (IMendixObject obj : objs)
					result.add(process.proxies.DynamicAttributeLabel.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void dynamicTableFillVisibilityFields(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.DynamicTableFillVisibilityFields", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<metamodel.proxies.MendixAttribute> dynamicTableSourceAttributeSelector(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.DynamicTableSourceAttributeSelector", params);
			java.util.List<metamodel.proxies.MendixAttribute> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<metamodel.proxies.MendixAttribute>();
				for (IMendixObject obj : objs)
					result.add(metamodel.proxies.MendixAttribute.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<metamodel.proxies.MendixEntity> dynamicTableSourceEntitySelector(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.DynamicTableSourceEntitySelector", params);
			java.util.List<metamodel.proxies.MendixEntity> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<metamodel.proxies.MendixEntity>();
				for (IMendixObject obj : objs)
					result.add(metamodel.proxies.MendixEntity.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void fillCanUseHeartBeatAsRetry(IContext context, interfaceconfiguration.proxies.WebServiceInterfaceConfiguration _webServiceInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("WebServiceInterfaceConfiguration", _webServiceInterfaceConfiguration == null ? null : _webServiceInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.FillCanUseHeartBeatAsRetry", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void fillCurrentEndPoint(IContext context, interfaceconfiguration.proxies.SystemEndPoint _systemEndPoint)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SystemEndPoint", _systemEndPoint == null ? null : _systemEndPoint.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.FillCurrentEndPoint", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String fillDefaultDateTimeFormat(IContext context, interfaceconfiguration.proxies.InterfaceConfiguration _interfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceConfiguration", _interfaceConfiguration == null ? null : _interfaceConfiguration.getMendixObject());
			return (java.lang.String)Core.execute(context, "InterfaceConfiguration.FillDefaultDateTimeFormat", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String fillDefaultFailCode(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			return (java.lang.String)Core.execute(context, "InterfaceConfiguration.FillDefaultFailCode", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String fillDefaultSuccessCode(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			return (java.lang.String)Core.execute(context, "InterfaceConfiguration.FillDefaultSuccessCode", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String fillDefaultTableItemValue(IContext context, interfaceconfiguration.proxies.DefaultTableItem _defaultTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultTableItem", _defaultTableItem == null ? null : _defaultTableItem.getMendixObject());
			return (java.lang.String)Core.execute(context, "InterfaceConfiguration.FillDefaultTableItemValue", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String fillHostNameInterfaceMessageConfiguration(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			return (java.lang.String)Core.execute(context, "InterfaceConfiguration.FillHostNameInterfaceMessageConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String fillHostNameSystemEndPoint(IContext context, interfaceconfiguration.proxies.SystemEndPoint _systemEndPoint)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SystemEndPoint", _systemEndPoint == null ? null : _systemEndPoint.getMendixObject());
			return (java.lang.String)Core.execute(context, "InterfaceConfiguration.FillHostNameSystemEndPoint", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static interfaceshared.proxies.InterfaceStatus fillIncomingStatus(IContext context, interfaceconfiguration.proxies.InterfaceConfiguration _interfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceConfiguration", _interfaceConfiguration == null ? null : _interfaceConfiguration.getMendixObject());
			java.lang.String result = (java.lang.String)Core.execute(context, "InterfaceConfiguration.FillIncomingStatus", params);
			if (result == null)
				return null;
			return interfaceshared.proxies.InterfaceStatus.valueOf(result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void fillInterfaceMonitoringMessagesGrid(IContext context, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.FillInterfaceMonitoringMessagesGrid", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<interfaceshared.proxies.ProcessingLog> fillInterfaceMonitoringProcessingLogGrid(IContext context, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.FillInterfaceMonitoringProcessingLogGrid", params);
			java.util.List<interfaceshared.proxies.ProcessingLog> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<interfaceshared.proxies.ProcessingLog>();
				for (IMendixObject obj : objs)
					result.add(interfaceshared.proxies.ProcessingLog.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static interfaceshared.proxies.InterfaceStatus fillOutgoingStatus(IContext context, interfaceconfiguration.proxies.InterfaceConfiguration _interfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceConfiguration", _interfaceConfiguration == null ? null : _interfaceConfiguration.getMendixObject());
			java.lang.String result = (java.lang.String)Core.execute(context, "InterfaceConfiguration.FillOutgoingStatus", params);
			if (result == null)
				return null;
			return interfaceshared.proxies.InterfaceStatus.valueOf(result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean fillShowDestinationMendixAttribute(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.FillShowDestinationMendixAttribute", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean fillShowDestinationMendixEntity(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.FillShowDestinationMendixEntity", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean fillShowDestinationName(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.FillShowDestinationName", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean fillShowDynamicAttributeLabel(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.FillShowDynamicAttributeLabel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean fillShowIncomingSourceType(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.FillShowIncomingSourceType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean fillShowIsRequired(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.FillShowIsRequired", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean fillShowOutgoingSourceType(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.FillShowOutgoingSourceType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean fillShowSourceAndDestination(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.FillShowSourceAndDestination", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean fillShowSourceMendixAttribute(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.FillShowSourceMendixAttribute", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean fillShowSourceMendixEntity(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.FillShowSourceMendixEntity", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean fillShowSourceName(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.FillShowSourceName", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean fillShowValue(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.FillShowValue", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<interfaceshared.proxies.StringWrapper> fillWebServiceHeaderSpecializationSelect(IContext context, interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration _webServiceInterfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("WebServiceInterfaceMessageConfiguration", _webServiceInterfaceMessageConfiguration == null ? null : _webServiceInterfaceMessageConfiguration.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.FillWebServiceHeaderSpecializationSelect", params);
			java.util.List<interfaceshared.proxies.StringWrapper> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<interfaceshared.proxies.StringWrapper>();
				for (IMendixObject obj : objs)
					result.add(interfaceshared.proxies.StringWrapper.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void fillWebServiceInterfaceConfigurationCanUserHeartBeatAsRetry(IContext context, interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration _webServiceInterfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("WebServiceInterfaceMessageConfiguration", _webServiceInterfaceMessageConfiguration == null ? null : _webServiceInterfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.FillWebServiceInterfaceConfigurationCanUserHeartBeatAsRetry", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String generateInterfaceMessageConfigurationName(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			return (java.lang.String)Core.execute(context, "InterfaceConfiguration.GenerateInterfaceMessageConfigurationName", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static interfaceshared.proxies.InterfaceStatus getCurrentInterfaceStatus(IContext context, interfaceconfiguration.proxies.InterfaceConfiguration _interfaceConfiguration, interfaceshared.proxies.MessageDirection _messageDirection)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceConfiguration", _interfaceConfiguration == null ? null : _interfaceConfiguration.getMendixObject());
			params.put("MessageDirection", _messageDirection == null ? null : _messageDirection.name());
			java.lang.String result = (java.lang.String)Core.execute(context, "InterfaceConfiguration.GetCurrentInterfaceStatus", params);
			if (result == null)
				return null;
			return interfaceshared.proxies.InterfaceStatus.valueOf(result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean getDefaultingVisibility(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.GetDefaultingVisibility", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean getInitialStateTranslationVisibility(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.GetInitialStateTranslationVisibility", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean getStateTransitionTranslationVisibility(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.GetStateTransitionTranslationVisibility", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean getTranslationVisibility(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.GetTranslationVisibility", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getValueCheckCode(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.String)Core.execute(context, "InterfaceConfiguration.GetValueCheckCode", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void importLDAPAttributeObject(IContext context, interfaceconfiguration.proxies.LDAPObject _lDAPObject, java.util.List<interfaceconfiguration.proxies.LookupLdapAttr> _lookupLdapAttrList, interfaceconfiguration.proxies.LDAPPath _lDAPPath, interfaceconfiguration.proxies.LDAPImportType _lDAPImportType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPObject", _lDAPObject == null ? null : _lDAPObject.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_lookupLdapAttrList = null;
			if (_lookupLdapAttrList != null)
			{
				listparam_lookupLdapAttrList = new java.util.ArrayList<IMendixObject>();
				for (interfaceconfiguration.proxies.LookupLdapAttr obj : _lookupLdapAttrList)
					listparam_lookupLdapAttrList.add(obj.getMendixObject());
			}
			params.put("LookupLdapAttrList", listparam_lookupLdapAttrList);
			params.put("LDAPPath", _lDAPPath == null ? null : _lDAPPath.getMendixObject());
			params.put("LDAPImportType", _lDAPImportType == null ? null : _lDAPImportType.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.ImportLDAPAttributeObject", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AddFilterGroiups(IContext context, interfaceconfiguration.proxies.LDAPImportType _lDAPImportType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPImportType", _lDAPImportType == null ? null : _lDAPImportType.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_AddFilterGroiups", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AddLDAPInterfaceConfigurationUserRoles(IContext context, interfaceconfiguration.proxies.LDAPInterfaceConfiguration _lDAPInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPInterfaceConfiguration", _lDAPInterfaceConfiguration == null ? null : _lDAPInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_AddLDAPInterfaceConfigurationUserRoles", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AddSelectedFilterGroups(IContext context, java.util.List<interfaceconfiguration.proxies.LDAPGroup> _lDAPGroupList, interfaceconfiguration.proxies.LDAPImportType _lDAPImportType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_lDAPGroupList = null;
			if (_lDAPGroupList != null)
			{
				listparam_lDAPGroupList = new java.util.ArrayList<IMendixObject>();
				for (interfaceconfiguration.proxies.LDAPGroup obj : _lDAPGroupList)
					listparam_lDAPGroupList.add(obj.getMendixObject());
			}
			params.put("LDAPGroupList", listparam_lDAPGroupList);
			params.put("LDAPImportType", _lDAPImportType == null ? null : _lDAPImportType.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_AddSelectedFilterGroups", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AuditDefaultTableItem_GetAuditRecord(IContext context, interfaceconfiguration.proxies.DefaultTableItem _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_AuditDefaultTableItem_GetAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AuditDynamicTable_GetAuditRecord(IContext context, interfaceconfiguration.proxies.DynamicTable _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_AuditDynamicTable_GetAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AuditInterfaceMessageConfiguration_GetAuditRecord(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_AuditInterfaceMessageConfiguration_GetAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * This microflow is used to open the LDAP browse form, from which import locations can be selected
	 */
	public static void iVK_BrowseLDAPFlow(IContext context, interfaceconfiguration.proxies.LDAPImportType _lDAPImportType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPImportType", _lDAPImportType == null ? null : _lDAPImportType.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_BrowseLDAPFlow", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_CreateNewInterfaceTrigger(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "InterfaceConfiguration.IVK_Button_CreateNewInterfaceTrigger", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_OpenCustomInterfaceConfiguration(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "InterfaceConfiguration.IVK_Button_OpenCustomInterfaceConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_OpenDefaultValuesConfiguration(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "InterfaceConfiguration.IVK_Button_OpenDefaultValuesConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_OpenDynamicFieldsMappingConfiguration(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "InterfaceConfiguration.IVK_Button_OpenDynamicFieldsMappingConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_OpenInterfaceConfiguration(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "InterfaceConfiguration.IVK_Button_OpenInterfaceConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_OpenInterfaceMessageConfiguration(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "InterfaceConfiguration.IVK_Button_OpenInterfaceMessageConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_OpenInterfaceMonitoring(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "InterfaceConfiguration.IVK_Button_OpenInterfaceMonitoring", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_OpenInterfaceTriggerConfiguration(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "InterfaceConfiguration.IVK_Button_OpenInterfaceTriggerConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_OpenSendFaultFiltering(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "InterfaceConfiguration.IVK_Button_OpenSendFaultFiltering", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_OpenStateTransitionTranslationConfiguration(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "InterfaceConfiguration.IVK_Button_OpenStateTransitionTranslationConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_OpenTranslationConfiguration(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "InterfaceConfiguration.IVK_Button_OpenTranslationConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearAllConfirmationMessageTypes(IContext context, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_ClearAllConfirmationMessageTypes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearAllErrorStatuses(IContext context, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_ClearAllErrorStatuses", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearAllLogLevels(IContext context, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_ClearAllLogLevels", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearAllMessageTypes(IContext context, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_ClearAllMessageTypes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearAllNormalMessageTypes(IContext context, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_ClearAllNormalMessageTypes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearCustomMicroflow(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_ClearCustomMicroflow", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearFromDate(IContext context, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_ClearFromDate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearInterface(IContext context, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_ClearInterface", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearMessageDirection(IContext context, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_ClearMessageDirection", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearMessageStatus(IContext context, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_ClearMessageStatus", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearToDate(IContext context, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_ClearToDate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CloseInterfaceMessageConfiguration_NewEdit(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_CloseInterfaceMessageConfiguration_NewEdit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CopyClearValueIntoProtectedValue(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_CopyClearValueIntoProtectedValue", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CopyTriggerSetup(IContext context, trigger.proxies.TriggerSetup _triggerSetup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TriggerSetup", _triggerSetup == null ? null : _triggerSetup.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_CopyTriggerSetup", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CreateNewAttributeMapping(IContext context, interfaceconfiguration.proxies.LDAPImportType _lDAPImportType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPImportType", _lDAPImportType == null ? null : _lDAPImportType.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_CreateNewAttributeMapping", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CreateNewDatabaseInterfaceConfiguration(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "InterfaceConfiguration.IVK_CreateNewDatabaseInterfaceConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CreateNewIncomingHeatBeatWebServiceInterfaceMessageConfiguration(IContext context, interfaceconfiguration.proxies.WebServiceInterfaceConfiguration _webServiceInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("WebServiceInterfaceConfiguration", _webServiceInterfaceConfiguration == null ? null : _webServiceInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_CreateNewIncomingHeatBeatWebServiceInterfaceMessageConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CreateNewInterfaceConfiguration(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_CreateNewInterfaceConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CreateNewInterfaceMessageConfigurationConfirmationSpecialization(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_CreateNewInterfaceMessageConfigurationConfirmationSpecialization", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CreateNewInterfaceMessageConfigurationDefaultTableItem(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_CreateNewInterfaceMessageConfigurationDefaultTableItem", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CreateNewInterfaceMessageConfigurationDynamicTableItem(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_CreateNewInterfaceMessageConfigurationDynamicTableItem", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CreateNewInterfaceMessageConfigurationSpecializationFromInterfaceConfiguration(IContext context, interfaceconfiguration.proxies.InterfaceConfiguration _interfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceConfiguration", _interfaceConfiguration == null ? null : _interfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_CreateNewInterfaceMessageConfigurationSpecializationFromInterfaceConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CreateNewInterfaceMessageConfigurationTranslationTableItem(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_CreateNewInterfaceMessageConfigurationTranslationTableItem", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CreateNewLDAPAttributeMapping_TranslationTableItem(IContext context, interfaceconfiguration.proxies.LDAPAttributeMapping _lDAPAttributeMapping)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPAttributeMapping", _lDAPAttributeMapping == null ? null : _lDAPAttributeMapping.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_CreateNewLDAPAttributeMapping_TranslationTableItem", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CreateNewLDAPInterfaceConfiguration(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "InterfaceConfiguration.IVK_CreateNewLDAPInterfaceConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CreateNewOutgoingHeatBeatWebServiceInterfaceMessageConfiguration(IContext context, interfaceconfiguration.proxies.WebServiceInterfaceConfiguration _webServiceInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("WebServiceInterfaceConfiguration", _webServiceInterfaceConfiguration == null ? null : _webServiceInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_CreateNewOutgoingHeatBeatWebServiceInterfaceMessageConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CreateNewTranslationTableItem(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "InterfaceConfiguration.IVK_CreateNewTranslationTableItem", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CreateNewWebServiceHeaderSpecialization(IContext context, interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration _webServiceInterfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("WebServiceInterfaceMessageConfiguration", _webServiceInterfaceMessageConfiguration == null ? null : _webServiceInterfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_CreateNewWebServiceHeaderSpecialization", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CreateNewWebServiceInterfaceConfiguration(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "InterfaceConfiguration.IVK_CreateNewWebServiceInterfaceConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CreateNewWebServiceInterfaceMessageConfiguration(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "InterfaceConfiguration.IVK_CreateNewWebServiceInterfaceMessageConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DatabaseInterfaceConfigurationCancel(IContext context, interfaceconfiguration.proxies.DatabaseInterfaceConfiguration _databaseInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DatabaseInterfaceConfiguration", _databaseInterfaceConfiguration == null ? null : _databaseInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_DatabaseInterfaceConfigurationCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DatabaseInterfaceConfigurationSave(IContext context, interfaceconfiguration.proxies.DatabaseInterfaceConfiguration _databaseInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DatabaseInterfaceConfiguration", _databaseInterfaceConfiguration == null ? null : _databaseInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_DatabaseInterfaceConfigurationSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DatabaseInterfaceConfigurationSaveAndClose(IContext context, interfaceconfiguration.proxies.DatabaseInterfaceConfiguration _databaseInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DatabaseInterfaceConfiguration", _databaseInterfaceConfiguration == null ? null : _databaseInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_DatabaseInterfaceConfigurationSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DatabaseInterfaceConfigurationSaveAndNewContent(IContext context, interfaceconfiguration.proxies.DatabaseInterfaceConfiguration _databaseInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DatabaseInterfaceConfiguration", _databaseInterfaceConfiguration == null ? null : _databaseInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_DatabaseInterfaceConfigurationSaveAndNewContent", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DatabaseInterfaceConfigurationSaveAndNewPopUp(IContext context, interfaceconfiguration.proxies.DatabaseInterfaceConfiguration _databaseInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DatabaseInterfaceConfiguration", _databaseInterfaceConfiguration == null ? null : _databaseInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_DatabaseInterfaceConfigurationSaveAndNewPopUp", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DatabaseInterfaceMessageConfigurationCancel(IContext context, interfaceconfiguration.proxies.DatabaseInterfaceMessageConfiguration _databaseInterfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DatabaseInterfaceMessageConfiguration", _databaseInterfaceMessageConfiguration == null ? null : _databaseInterfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_DatabaseInterfaceMessageConfigurationCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DatabaseInterfaceMessageConfigurationSave(IContext context, interfaceconfiguration.proxies.DatabaseInterfaceMessageConfiguration _databaseInterfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DatabaseInterfaceMessageConfiguration", _databaseInterfaceMessageConfiguration == null ? null : _databaseInterfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_DatabaseInterfaceMessageConfigurationSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DatabaseInterfaceMessageConfigurationSaveAndClose(IContext context, interfaceconfiguration.proxies.DatabaseInterfaceMessageConfiguration _databaseInterfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DatabaseInterfaceMessageConfiguration", _databaseInterfaceMessageConfiguration == null ? null : _databaseInterfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_DatabaseInterfaceMessageConfigurationSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DatabaseInterfaceMessageConfigurationSaveAndNewContent(IContext context, interfaceconfiguration.proxies.DatabaseInterfaceMessageConfiguration _databaseInterfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DatabaseInterfaceMessageConfiguration", _databaseInterfaceMessageConfiguration == null ? null : _databaseInterfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_DatabaseInterfaceMessageConfigurationSaveAndNewContent", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DatabaseInterfaceMessageConfigurationSaveAndNewPopUp(IContext context, interfaceconfiguration.proxies.DatabaseInterfaceMessageConfiguration _databaseInterfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DatabaseInterfaceMessageConfiguration", _databaseInterfaceMessageConfiguration == null ? null : _databaseInterfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_DatabaseInterfaceMessageConfigurationSaveAndNewPopUp", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DefaultTableItem_Template_Select_Cancel(IContext context, interfaceconfiguration.proxies.DefaultTableItem _defaultTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultTableItem", _defaultTableItem == null ? null : _defaultTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_DefaultTableItem_Template_Select_Cancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DefaultTableItemCancel(IContext context, interfaceconfiguration.proxies.DefaultTableItem _defaultTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultTableItem", _defaultTableItem == null ? null : _defaultTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_DefaultTableItemCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DefaultTableItemSave(IContext context, interfaceconfiguration.proxies.DefaultTableItem _defaultTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultTableItem", _defaultTableItem == null ? null : _defaultTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_DefaultTableItemSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DefaultTableItemSaveAndClose(IContext context, interfaceconfiguration.proxies.DefaultTableItem _defaultTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultTableItem", _defaultTableItem == null ? null : _defaultTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_DefaultTableItemSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DefaultTableItemSaveAndNewContent(IContext context, interfaceconfiguration.proxies.DefaultTableItem _defaultTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultTableItem", _defaultTableItem == null ? null : _defaultTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_DefaultTableItemSaveAndNewContent", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DefaultTableItemSaveAndNewPopUp(IContext context, interfaceconfiguration.proxies.DefaultTableItem _defaultTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultTableItem", _defaultTableItem == null ? null : _defaultTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_DefaultTableItemSaveAndNewPopUp", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DeleteAllLogging(IContext context, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_DeleteAllLogging", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DeleteAllMessages(IContext context, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_DeleteAllMessages", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DeleteImportPaths(IContext context, java.util.List<interfaceconfiguration.proxies.LDAPPath> _lDAPPathList, interfaceconfiguration.proxies.LDAPImportType _lDAPImportType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_lDAPPathList = null;
			if (_lDAPPathList != null)
			{
				listparam_lDAPPathList = new java.util.ArrayList<IMendixObject>();
				for (interfaceconfiguration.proxies.LDAPPath obj : _lDAPPathList)
					listparam_lDAPPathList.add(obj.getMendixObject());
			}
			params.put("LDAPPathList", listparam_lDAPPathList);
			params.put("LDAPImportType", _lDAPImportType == null ? null : _lDAPImportType.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_DeleteImportPaths", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DeleteInterfaceConfiguration(IContext context, interfaceconfiguration.proxies.InterfaceConfiguration _interfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceConfiguration", _interfaceConfiguration == null ? null : _interfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_DeleteInterfaceConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DeleteInterfaceMessageConfiguration(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_DeleteInterfaceMessageConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DeleteMessage(IContext context, interfaceshared.proxies.Message _message, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_DeleteMessage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DeleteTranslationTableItem(IContext context, interfaceconfiguration.proxies.TranslationTableItem _translationTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TranslationTableItem", _translationTableItem == null ? null : _translationTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_DeleteTranslationTableItem", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DeleteWebServiceHeader(IContext context, interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration _webServiceInterfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("WebServiceInterfaceMessageConfiguration", _webServiceInterfaceMessageConfiguration == null ? null : _webServiceInterfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_DeleteWebServiceHeader", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DynamicTableCancel(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_DynamicTableCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DynamicTableCopyContent(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_DynamicTableCopyContent", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DynamicTableSave(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_DynamicTableSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DynamicTableSaveAndClose(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_DynamicTableSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DynamicTableSaveAndNewContent(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_DynamicTableSaveAndNewContent", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DynamicTableSaveAndNewPopUp(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_DynamicTableSaveAndNewPopUp", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_EditImportPath(IContext context, java.util.List<interfaceconfiguration.proxies.LDAPPath> _lDAPPathList, interfaceconfiguration.proxies.LDAPImportType _lDAPImportType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_lDAPPathList = null;
			if (_lDAPPathList != null)
			{
				listparam_lDAPPathList = new java.util.ArrayList<IMendixObject>();
				for (interfaceconfiguration.proxies.LDAPPath obj : _lDAPPathList)
					listparam_lDAPPathList.add(obj.getMendixObject());
			}
			params.put("LDAPPathList", listparam_lDAPPathList);
			params.put("LDAPImportType", _lDAPImportType == null ? null : _lDAPImportType.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_EditImportPath", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_EditInterfaceMessageConfiguration(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_EditInterfaceMessageConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_EditLDAPImportType(IContext context, interfaceconfiguration.proxies.LDAPImportType _lDAPImportType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPImportType", _lDAPImportType == null ? null : _lDAPImportType.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_EditLDAPImportType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_EditStateTransitionTranslation(IContext context, interfaceconfiguration.proxies.StateTransitionTranslationTable _stateTransitionTranslationTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("StateTransitionTranslationTable", _stateTransitionTranslationTable == null ? null : _stateTransitionTranslationTable.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_EditStateTransitionTranslation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_GetDefaultExpertDeskEndPoint(IContext context, interfaceconfiguration.proxies.SystemEndPoint _systemEndPoint)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SystemEndPoint", _systemEndPoint == null ? null : _systemEndPoint.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_GetDefaultExpertDeskEndPoint", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_GetFirstMessagesChunk(IContext context, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_GetFirstMessagesChunk", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_GetFirstProcessingLogsChunk(IContext context, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_GetFirstProcessingLogsChunk", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_GetLastMessagesChunk(IContext context, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_GetLastMessagesChunk", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_GetLastProcessingLogsChunk(IContext context, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_GetLastProcessingLogsChunk", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_GetNextMessagesChunk(IContext context, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_GetNextMessagesChunk", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_GetNextProcessingLogsChunk(IContext context, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_GetNextProcessingLogsChunk", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_GetPreviousMessagesChunk(IContext context, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_GetPreviousMessagesChunk", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_GetPreviousProcessingLogsChunk(IContext context, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_GetPreviousProcessingLogsChunk", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * imports users from the ldap store, as configured in the ldapserver
	 */
	public static void iVK_ImportLDAP(IContext context, interfaceconfiguration.proxies.LDAPInterfaceConfiguration _lDAPInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPInterfaceConfiguration", _lDAPInterfaceConfiguration == null ? null : _lDAPInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_ImportLDAP", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ImportLDAPAttributes(IContext context, interfaceconfiguration.proxies.LDAPImportType _lDAPImportType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPImportType", _lDAPImportType == null ? null : _lDAPImportType.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_ImportLDAPAttributes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ImportLDAPImportType(IContext context, interfaceconfiguration.proxies.LDAPImportType _lDAPImportType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPImportType", _lDAPImportType == null ? null : _lDAPImportType.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_ImportLDAPImportType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_InitialStateTransitionTranslationSaveAndNewContent(IContext context, interfaceconfiguration.proxies.StateTransitionTranslationTable _stateTransitionTranslationTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("StateTransitionTranslationTable", _stateTransitionTranslationTable == null ? null : _stateTransitionTranslationTable.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_InitialStateTransitionTranslationSaveAndNewContent", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_InitialStateTransitionTranslationSaveAndNewPopUp(IContext context, interfaceconfiguration.proxies.StateTransitionTranslationTable _stateTransitionTranslationTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("StateTransitionTranslationTable", _stateTransitionTranslationTable == null ? null : _stateTransitionTranslationTable.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_InitialStateTransitionTranslationSaveAndNewPopUp", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_InterfaceConfiguration_NewEditClose(IContext context, interfaceconfiguration.proxies.InterfaceConfiguration _interfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceConfiguration", _interfaceConfiguration == null ? null : _interfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_InterfaceConfiguration_NewEditClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_InterfaceEventGenerationCancel(IContext context, interfaceconfiguration.proxies.InterfaceEventGeneration _interfaceEventGeneration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceEventGeneration", _interfaceEventGeneration == null ? null : _interfaceEventGeneration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_InterfaceEventGenerationCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_InterfaceEventGenerationSave(IContext context, interfaceconfiguration.proxies.InterfaceEventGeneration _interfaceEventGeneration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceEventGeneration", _interfaceEventGeneration == null ? null : _interfaceEventGeneration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_InterfaceEventGenerationSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_InterfaceEventGenerationSaveAndClose(IContext context, interfaceconfiguration.proxies.InterfaceEventGeneration _interfaceEventGeneration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceEventGeneration", _interfaceEventGeneration == null ? null : _interfaceEventGeneration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_InterfaceEventGenerationSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_InterfaceEventGenerationSaveAndNewPopUp(IContext context, interfaceconfiguration.proxies.InterfaceEventGeneration _interfaceEventGeneration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceEventGeneration", _interfaceEventGeneration == null ? null : _interfaceEventGeneration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_InterfaceEventGenerationSaveAndNewPopUp", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_InterfaceMessageConfiguration_SelectCancel(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "InterfaceConfiguration.IVK_InterfaceMessageConfiguration_SelectCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_LDAPAttributeMappingCancel(IContext context, interfaceconfiguration.proxies.LDAPAttributeMapping _lDAPAttributeMapping)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPAttributeMapping", _lDAPAttributeMapping == null ? null : _lDAPAttributeMapping.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_LDAPAttributeMappingCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_LDAPAttributeMappingSave(IContext context, interfaceconfiguration.proxies.LDAPAttributeMapping _lDAPAttributeMapping)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPAttributeMapping", _lDAPAttributeMapping == null ? null : _lDAPAttributeMapping.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_LDAPAttributeMappingSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_LDAPAttributeMappingSaveAndClose(IContext context, interfaceconfiguration.proxies.LDAPAttributeMapping _lDAPAttributeMapping)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPAttributeMapping", _lDAPAttributeMapping == null ? null : _lDAPAttributeMapping.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_LDAPAttributeMappingSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_LDAPAttributeMappingSaveAndNew(IContext context, interfaceconfiguration.proxies.LDAPAttributeMapping _lDAPAttributeMapping)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPAttributeMapping", _lDAPAttributeMapping == null ? null : _lDAPAttributeMapping.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_LDAPAttributeMappingSaveAndNew", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_LDAPFilterClassCancel(IContext context, interfaceconfiguration.proxies.LDAPFilterClass _lDAPFilterClass)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPFilterClass", _lDAPFilterClass == null ? null : _lDAPFilterClass.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_LDAPFilterClassCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_LDAPFilterClassSave(IContext context, interfaceconfiguration.proxies.LDAPFilterClass _lDAPFilterClass)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPFilterClass", _lDAPFilterClass == null ? null : _lDAPFilterClass.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_LDAPFilterClassSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_LDAPFilterClassSaveAndClose(IContext context, interfaceconfiguration.proxies.LDAPFilterClass _lDAPFilterClass)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPFilterClass", _lDAPFilterClass == null ? null : _lDAPFilterClass.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_LDAPFilterClassSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_LDAPFilterClassSaveAndNew(IContext context, interfaceconfiguration.proxies.LDAPFilterClass _lDAPFilterClass)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPFilterClass", _lDAPFilterClass == null ? null : _lDAPFilterClass.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_LDAPFilterClassSaveAndNew", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_LDAPFilterGroup_SelectCancel(IContext context, interfaceconfiguration.proxies.LDAPImportType _lDAPImportType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPImportType", _lDAPImportType == null ? null : _lDAPImportType.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_LDAPFilterGroup_SelectCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_LDAPGroup_SelectCancel(IContext context, interfaceconfiguration.proxies.LDAPGroupMapping _lDAPGroupMapping)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPGroupMapping", _lDAPGroupMapping == null ? null : _lDAPGroupMapping.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_LDAPGroup_SelectCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_LDAPGroupMappingCancel(IContext context, interfaceconfiguration.proxies.LDAPGroupMapping _lDAPGroupMapping)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPGroupMapping", _lDAPGroupMapping == null ? null : _lDAPGroupMapping.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_LDAPGroupMappingCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_LDAPGroupMappingImportLDAPGroups(IContext context, interfaceconfiguration.proxies.LDAPGroupMapping _lDAPGroupMapping)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPGroupMapping", _lDAPGroupMapping == null ? null : _lDAPGroupMapping.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_LDAPGroupMappingImportLDAPGroups", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_LDAPGroupMappingSave(IContext context, interfaceconfiguration.proxies.LDAPGroupMapping _lDAPGroupMapping)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPGroupMapping", _lDAPGroupMapping == null ? null : _lDAPGroupMapping.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_LDAPGroupMappingSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_LDAPGroupMappingSaveAndClose(IContext context, interfaceconfiguration.proxies.LDAPGroupMapping _lDAPGroupMapping)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPGroupMapping", _lDAPGroupMapping == null ? null : _lDAPGroupMapping.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_LDAPGroupMappingSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_LDAPGroupMappingSaveAndNew(IContext context, interfaceconfiguration.proxies.LDAPGroupMapping _lDAPGroupMapping)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPGroupMapping", _lDAPGroupMapping == null ? null : _lDAPGroupMapping.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_LDAPGroupMappingSaveAndNew", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_LDAPGroupMappingTemplate_SelectCancel(IContext context, interfaceconfiguration.proxies.LDAPGroupMapping _lDAPGroupMapping)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPGroupMapping", _lDAPGroupMapping == null ? null : _lDAPGroupMapping.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_LDAPGroupMappingTemplate_SelectCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_LDAPImportTypeCancel(IContext context, interfaceconfiguration.proxies.LDAPImportType _lDAPImportType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPImportType", _lDAPImportType == null ? null : _lDAPImportType.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_LDAPImportTypeCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_LDAPImportTypeSave(IContext context, interfaceconfiguration.proxies.LDAPImportType _lDAPImportType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPImportType", _lDAPImportType == null ? null : _lDAPImportType.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_LDAPImportTypeSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_LDAPImportTypeSaveAndClose(IContext context, interfaceconfiguration.proxies.LDAPImportType _lDAPImportType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPImportType", _lDAPImportType == null ? null : _lDAPImportType.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_LDAPImportTypeSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_LDAPImportTypeSaveAndNew(IContext context, interfaceconfiguration.proxies.LDAPImportType _lDAPImportType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPImportType", _lDAPImportType == null ? null : _lDAPImportType.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_LDAPImportTypeSaveAndNew", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_LDAPInterfaceConfigurationCancel(IContext context, interfaceconfiguration.proxies.LDAPInterfaceConfiguration _lDAPInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPInterfaceConfiguration", _lDAPInterfaceConfiguration == null ? null : _lDAPInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_LDAPInterfaceConfigurationCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_LDAPInterfaceConfigurationFillCurrentEndPoint(IContext context, interfaceconfiguration.proxies.LDAPInterfaceConfiguration _lDAPInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPInterfaceConfiguration", _lDAPInterfaceConfiguration == null ? null : _lDAPInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_LDAPInterfaceConfigurationFillCurrentEndPoint", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_LDAPInterfaceConfigurationSave(IContext context, interfaceconfiguration.proxies.LDAPInterfaceConfiguration _lDAPInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPInterfaceConfiguration", _lDAPInterfaceConfiguration == null ? null : _lDAPInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_LDAPInterfaceConfigurationSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_LDAPInterfaceConfigurationSaveAndClose(IContext context, interfaceconfiguration.proxies.LDAPInterfaceConfiguration _lDAPInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPInterfaceConfiguration", _lDAPInterfaceConfiguration == null ? null : _lDAPInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_LDAPInterfaceConfigurationSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_LDAPInterfaceConfigurationSaveAndNewContent(IContext context, interfaceconfiguration.proxies.LDAPInterfaceConfiguration _lDAPInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPInterfaceConfiguration", _lDAPInterfaceConfiguration == null ? null : _lDAPInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_LDAPInterfaceConfigurationSaveAndNewContent", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_LDAPInterfaceConfigurationSaveAndNewPopUp(IContext context, interfaceconfiguration.proxies.LDAPInterfaceConfiguration _lDAPInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPInterfaceConfiguration", _lDAPInterfaceConfiguration == null ? null : _lDAPInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_LDAPInterfaceConfigurationSaveAndNewPopUp", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_LDAPObject_ViewCancel(IContext context, interfaceconfiguration.proxies.LDAPObjectView _lDAPObjectView)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPObjectView", _lDAPObjectView == null ? null : _lDAPObjectView.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_LDAPObject_ViewCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MendixWebServiceHeaderCancel(IContext context, interfaceshared.proxies.MendixWebServiceHeader _mendixWebServiceHeader)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MendixWebServiceHeader", _mendixWebServiceHeader == null ? null : _mendixWebServiceHeader.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_MendixWebServiceHeaderCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MendixWebServiceHeaderSave(IContext context, interfaceshared.proxies.MendixWebServiceHeader _mendixWebServiceHeader)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MendixWebServiceHeader", _mendixWebServiceHeader == null ? null : _mendixWebServiceHeader.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_MendixWebServiceHeaderSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MendixWebServiceHeaderSaveAndClose(IContext context, interfaceshared.proxies.MendixWebServiceHeader _mendixWebServiceHeader)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MendixWebServiceHeader", _mendixWebServiceHeader == null ? null : _mendixWebServiceHeader.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_MendixWebServiceHeaderSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NewInitialTransitionTranslation(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "InterfaceConfiguration.IVK_NewInitialTransitionTranslation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NewStateTransitionTranslation(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "InterfaceConfiguration.IVK_NewStateTransitionTranslation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenEditInterfaceMessageConfiguration(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_OpenEditInterfaceMessageConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenInterfaceConfigurationSpecialization(IContext context, interfaceconfiguration.proxies.InterfaceConfiguration _interfaceConfiguration, interfaceshared.proxies.FormType _formType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceConfiguration", _interfaceConfiguration == null ? null : _interfaceConfiguration.getMendixObject());
			params.put("FormType", _formType == null ? null : _formType.name());
			Core.execute(context, "InterfaceConfiguration.IVK_OpenInterfaceConfigurationSpecialization", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenInterfaceConfigurationSpecializationFromInterfaceMessageConfiguration(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_OpenInterfaceConfigurationSpecializationFromInterfaceMessageConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenInterfaceHistory(IContext context, interfaceconfiguration.proxies.WebServiceInterfaceConfiguration _webServiceInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("WebServiceInterfaceConfiguration", _webServiceInterfaceConfiguration == null ? null : _webServiceInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_OpenInterfaceHistory", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenInterfaceMessageConfigurationSpecialization(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration, interfaceshared.proxies.FormType _formType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			params.put("FormType", _formType == null ? null : _formType.name());
			Core.execute(context, "InterfaceConfiguration.IVK_OpenInterfaceMessageConfigurationSpecialization", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenInterfaceMessageConfigurationSpecializationFromMessage(IContext context, interfaceshared.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_OpenInterfaceMessageConfigurationSpecializationFromMessage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenInterfaceMessageConfigurationSpecializationFromTrigger(IContext context, trigger.proxies.TriggerSetup _triggerSetup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TriggerSetup", _triggerSetup == null ? null : _triggerSetup.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_OpenInterfaceMessageConfigurationSpecializationFromTrigger", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenInterfaceMessageSpecializationFromInterfaceMessageConfigurationConfirmation(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_OpenInterfaceMessageSpecializationFromInterfaceMessageConfigurationConfirmation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenLDAPGroupSelectForm(IContext context, interfaceconfiguration.proxies.LDAPGroupMapping _lDAPGroupMapping)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPGroupMapping", _lDAPGroupMapping == null ? null : _lDAPGroupMapping.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_OpenLDAPGroupSelectForm", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenLogging(IContext context, java.util.List<interfaceshared.proxies.ProcessingLog> _processingLogList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_processingLogList = null;
			if (_processingLogList != null)
			{
				listparam_processingLogList = new java.util.ArrayList<IMendixObject>();
				for (interfaceshared.proxies.ProcessingLog obj : _processingLogList)
					listparam_processingLogList.add(obj.getMendixObject());
			}
			params.put("ProcessingLogList", listparam_processingLogList);
			Core.execute(context, "InterfaceConfiguration.IVK_OpenLogging", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenParent(IContext context, interfaceconfiguration.proxies.LDAPObjectView _lDAPObjectView)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPObjectView", _lDAPObjectView == null ? null : _lDAPObjectView.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_OpenParent", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenWebServiceHeaderSpecializationFromInterfaceMessageConfiguration(IContext context, interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration _webServiceInterfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("WebServiceInterfaceMessageConfiguration", _webServiceInterfaceMessageConfiguration == null ? null : _webServiceInterfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_OpenWebServiceHeaderSpecializationFromInterfaceMessageConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * parses the ldap server so that you can browse it
	 */
	public static void iVK_ReadLDAP(IContext context, interfaceconfiguration.proxies.LDAPInterfaceConfiguration _lDAPInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPInterfaceConfiguration", _lDAPInterfaceConfiguration == null ? null : _lDAPInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_ReadLDAP", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RefreshMessages(IContext context, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_RefreshMessages", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RefreshProcessingLogs(IContext context, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_RefreshProcessingLogs", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ReloadMetaModelDataMicroflow(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "InterfaceConfiguration.IVK_ReloadMetaModelDataMicroflow", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ReloadMicroflows(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_ReloadMicroflows", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RemoveObjectImportPath(IContext context, interfaceconfiguration.proxies.LDAPObjectView _lDAPObjectView)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPObjectView", _lDAPObjectView == null ? null : _lDAPObjectView.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_RemoveObjectImportPath", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RemoveObjectsImportPath(IContext context, interfaceconfiguration.proxies.LDAPObjectView _lDAPObjectView, java.util.List<interfaceconfiguration.proxies.LDAPObject> _lDAPObjectList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPObjectView", _lDAPObjectView == null ? null : _lDAPObjectView.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_lDAPObjectList = null;
			if (_lDAPObjectList != null)
			{
				listparam_lDAPObjectList = new java.util.ArrayList<IMendixObject>();
				for (interfaceconfiguration.proxies.LDAPObject obj : _lDAPObjectList)
					listparam_lDAPObjectList.add(obj.getMendixObject());
			}
			params.put("LDAPObjectList", listparam_lDAPObjectList);
			Core.execute(context, "InterfaceConfiguration.IVK_RemoveObjectsImportPath", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ResetMessagesSearch(IContext context, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_ResetMessagesSearch", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectAllConfirmationMessageTypes(IContext context, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_SelectAllConfirmationMessageTypes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectAllErrorStatuses(IContext context, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_SelectAllErrorStatuses", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectAllLogLevels(IContext context, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_SelectAllLogLevels", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectAllMessageTypes(IContext context, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_SelectAllMessageTypes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectAllNormalMessageTypes(IContext context, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_SelectAllNormalMessageTypes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectBusinessGroups(IContext context, interfaceconfiguration.proxies.DefaultTableItem _defaultTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultTableItem", _defaultTableItem == null ? null : _defaultTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_SelectBusinessGroups", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectCustomers(IContext context, interfaceconfiguration.proxies.DefaultTableItem _defaultTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultTableItem", _defaultTableItem == null ? null : _defaultTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_SelectCustomers", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * This microflow adds an additional import location, namely ldapDirectory, to the current ldapServer (the owner of the provided ldapDirectory)
	 */
	public static void iVK_SelectLDAPDirectoriesFlowNormal(IContext context, java.util.List<interfaceconfiguration.proxies.LDAPObject> _lDAPObjectList, interfaceconfiguration.proxies.LDAPObjectView _lDAPObjectView)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_lDAPObjectList = null;
			if (_lDAPObjectList != null)
			{
				listparam_lDAPObjectList = new java.util.ArrayList<IMendixObject>();
				for (interfaceconfiguration.proxies.LDAPObject obj : _lDAPObjectList)
					listparam_lDAPObjectList.add(obj.getMendixObject());
			}
			params.put("LDAPObjectList", listparam_lDAPObjectList);
			params.put("LDAPObjectView", _lDAPObjectView == null ? null : _lDAPObjectView.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_SelectLDAPDirectoriesFlowNormal", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * This microflow adds an additional import location, namely ldapDirectory, to the current ldapServer (the owner of the provided ldapDirectory)
	 */
	public static void iVK_SelectLDAPDirectoriesFlowRecursive(IContext context, java.util.List<interfaceconfiguration.proxies.LDAPObject> _lDAPObjectList, interfaceconfiguration.proxies.LDAPObjectView _lDAPObjectView)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_lDAPObjectList = null;
			if (_lDAPObjectList != null)
			{
				listparam_lDAPObjectList = new java.util.ArrayList<IMendixObject>();
				for (interfaceconfiguration.proxies.LDAPObject obj : _lDAPObjectList)
					listparam_lDAPObjectList.add(obj.getMendixObject());
			}
			params.put("LDAPObjectList", listparam_lDAPObjectList);
			params.put("LDAPObjectView", _lDAPObjectView == null ? null : _lDAPObjectView.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_SelectLDAPDirectoriesFlowRecursive", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * This microflow adds an additional import location, namely ldapDirectory, to the current ldapServer (the owner of the provided ldapDirectory)
	 */
	public static void iVK_SelectLDAPDirectoryFlowNormal(IContext context, interfaceconfiguration.proxies.LDAPObjectView _lDAPObjectView)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPObjectView", _lDAPObjectView == null ? null : _lDAPObjectView.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_SelectLDAPDirectoryFlowNormal", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * This microflow adds an additional import location, namely ldapDirectory, to the current ldapServer (the owner of the provided ldapDirectory)
	 */
	public static void iVK_SelectLDAPDirectoryFlowRecursive(IContext context, interfaceconfiguration.proxies.LDAPObjectView _lDAPObjectView)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPObjectView", _lDAPObjectView == null ? null : _lDAPObjectView.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_SelectLDAPDirectoryFlowRecursive", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectLDAPGroup(IContext context, interfaceconfiguration.proxies.LDAPGroup _lDAPGroup, interfaceconfiguration.proxies.LDAPGroupMapping _lDAPGroupMapping)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPGroup", _lDAPGroup == null ? null : _lDAPGroup.getMendixObject());
			params.put("LDAPGroupMapping", _lDAPGroupMapping == null ? null : _lDAPGroupMapping.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_SelectLDAPGroup", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectLDAPGroupMappingTemplates(IContext context, interfaceconfiguration.proxies.LDAPGroupMapping _lDAPGroupMapping)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPGroupMapping", _lDAPGroupMapping == null ? null : _lDAPGroupMapping.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_SelectLDAPGroupMappingTemplates", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectLDAPInterfaceConfigurationUserRole(IContext context, java.util.List<interfaceconfiguration.proxies.UserRole> _userRoleList, interfaceconfiguration.proxies.LDAPInterfaceConfiguration _lDAPInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_userRoleList = null;
			if (_userRoleList != null)
			{
				listparam_userRoleList = new java.util.ArrayList<IMendixObject>();
				for (interfaceconfiguration.proxies.UserRole obj : _userRoleList)
					listparam_userRoleList.add(obj.getMendixObject());
			}
			params.put("UserRoleList", listparam_userRoleList);
			params.put("LDAPInterfaceConfiguration", _lDAPInterfaceConfiguration == null ? null : _lDAPInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_SelectLDAPInterfaceConfigurationUserRole", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectLocations(IContext context, interfaceconfiguration.proxies.DefaultTableItem _defaultTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultTableItem", _defaultTableItem == null ? null : _defaultTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_SelectLocations", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectNewWebServiceHeaderSpecialization(IContext context, interfaceshared.proxies.StringWrapper _stringWrapper, interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration _webServiceInterfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("StringWrapper", _stringWrapper == null ? null : _stringWrapper.getMendixObject());
			params.put("WebServiceInterfaceMessageConfiguration", _webServiceInterfaceMessageConfiguration == null ? null : _webServiceInterfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_SelectNewWebServiceHeaderSpecialization", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectTemplates(IContext context, interfaceconfiguration.proxies.DefaultTableItem _defaultTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultTableItem", _defaultTableItem == null ? null : _defaultTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_SelectTemplates", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SendFaultFilter_SelectCancel(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "InterfaceConfiguration.IVK_SendFaultFilter_SelectCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SendFaultFilterCancel(IContext context, interfaceconfiguration.proxies.SendFaultFilter _sendFaultFilter)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SendFaultFilter", _sendFaultFilter == null ? null : _sendFaultFilter.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_SendFaultFilterCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SendFaultFilterSave(IContext context, interfaceconfiguration.proxies.SendFaultFilter _sendFaultFilter)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SendFaultFilter", _sendFaultFilter == null ? null : _sendFaultFilter.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_SendFaultFilterSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SendFaultFilterSaveAndClose(IContext context, interfaceconfiguration.proxies.SendFaultFilter _sendFaultFilter)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SendFaultFilter", _sendFaultFilter == null ? null : _sendFaultFilter.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_SendFaultFilterSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SendFaultFilterSaveAndNewContent(IContext context, interfaceconfiguration.proxies.SendFaultFilter _sendFaultFilter)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SendFaultFilter", _sendFaultFilter == null ? null : _sendFaultFilter.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_SendFaultFilterSaveAndNewContent", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SendFaultFilterSaveAndNewPopUp(IContext context, interfaceconfiguration.proxies.SendFaultFilter _sendFaultFilter)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SendFaultFilter", _sendFaultFilter == null ? null : _sendFaultFilter.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_SendFaultFilterSaveAndNewPopUp", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SetLDAPGroupMappingSelectedTemplates(IContext context, java.util.List<roletemplates.proxies.Template> _templateList, interfaceconfiguration.proxies.LDAPGroupMapping _lDAPGroupMapping)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_templateList = null;
			if (_templateList != null)
			{
				listparam_templateList = new java.util.ArrayList<IMendixObject>();
				for (roletemplates.proxies.Template obj : _templateList)
					listparam_templateList.add(obj.getMendixObject());
			}
			params.put("TemplateList", listparam_templateList);
			params.put("LDAPGroupMapping", _lDAPGroupMapping == null ? null : _lDAPGroupMapping.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_SetLDAPGroupMappingSelectedTemplates", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SetLDAPPathImportRecursive(IContext context, java.util.List<interfaceconfiguration.proxies.LDAPPath> _lDAPPathList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_lDAPPathList = null;
			if (_lDAPPathList != null)
			{
				listparam_lDAPPathList = new java.util.ArrayList<IMendixObject>();
				for (interfaceconfiguration.proxies.LDAPPath obj : _lDAPPathList)
					listparam_lDAPPathList.add(obj.getMendixObject());
			}
			params.put("LDAPPathList", listparam_lDAPPathList);
			Core.execute(context, "InterfaceConfiguration.IVK_SetLDAPPathImportRecursive", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SetLogginIgnored(IContext context, java.util.List<interfaceshared.proxies.ProcessingLog> _processingLogList, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_processingLogList = null;
			if (_processingLogList != null)
			{
				listparam_processingLogList = new java.util.ArrayList<IMendixObject>();
				for (interfaceshared.proxies.ProcessingLog obj : _processingLogList)
					listparam_processingLogList.add(obj.getMendixObject());
			}
			params.put("ProcessingLogList", listparam_processingLogList);
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_SetLogginIgnored", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SetLogginNotViewed(IContext context, java.util.List<interfaceshared.proxies.ProcessingLog> _processingLogList, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_processingLogList = null;
			if (_processingLogList != null)
			{
				listparam_processingLogList = new java.util.ArrayList<IMendixObject>();
				for (interfaceshared.proxies.ProcessingLog obj : _processingLogList)
					listparam_processingLogList.add(obj.getMendixObject());
			}
			params.put("ProcessingLogList", listparam_processingLogList);
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_SetLogginNotViewed", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SetLogginSolved(IContext context, java.util.List<interfaceshared.proxies.ProcessingLog> _processingLogList, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_processingLogList = null;
			if (_processingLogList != null)
			{
				listparam_processingLogList = new java.util.ArrayList<IMendixObject>();
				for (interfaceshared.proxies.ProcessingLog obj : _processingLogList)
					listparam_processingLogList.add(obj.getMendixObject());
			}
			params.put("ProcessingLogList", listparam_processingLogList);
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_SetLogginSolved", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SetLogginViewed(IContext context, java.util.List<interfaceshared.proxies.ProcessingLog> _processingLogList, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_processingLogList = null;
			if (_processingLogList != null)
			{
				listparam_processingLogList = new java.util.ArrayList<IMendixObject>();
				for (interfaceshared.proxies.ProcessingLog obj : _processingLogList)
					listparam_processingLogList.add(obj.getMendixObject());
			}
			params.put("ProcessingLogList", listparam_processingLogList);
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_SetLogginViewed", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SetMessageToIgnoreError(IContext context, interfaceshared.proxies.Message _message, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_SetMessageToIgnoreError", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SetSelectedBusinessGroups(IContext context, java.util.List<nap.proxies.BusinessGroup> _businessGroupList, interfaceconfiguration.proxies.DefaultTableItem _defaultTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_businessGroupList = null;
			if (_businessGroupList != null)
			{
				listparam_businessGroupList = new java.util.ArrayList<IMendixObject>();
				for (nap.proxies.BusinessGroup obj : _businessGroupList)
					listparam_businessGroupList.add(obj.getMendixObject());
			}
			params.put("BusinessGroupList", listparam_businessGroupList);
			params.put("DefaultTableItem", _defaultTableItem == null ? null : _defaultTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_SetSelectedBusinessGroups", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SetSelectedCustomers(IContext context, java.util.List<nap.proxies.Customer> _customerList, interfaceconfiguration.proxies.DefaultTableItem _defaultTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_customerList = null;
			if (_customerList != null)
			{
				listparam_customerList = new java.util.ArrayList<IMendixObject>();
				for (nap.proxies.Customer obj : _customerList)
					listparam_customerList.add(obj.getMendixObject());
			}
			params.put("CustomerList", listparam_customerList);
			params.put("DefaultTableItem", _defaultTableItem == null ? null : _defaultTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_SetSelectedCustomers", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SetSelectedLocations(IContext context, java.util.List<nap.proxies.Location> _locationList, interfaceconfiguration.proxies.DefaultTableItem _defaultTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_locationList = null;
			if (_locationList != null)
			{
				listparam_locationList = new java.util.ArrayList<IMendixObject>();
				for (nap.proxies.Location obj : _locationList)
					listparam_locationList.add(obj.getMendixObject());
			}
			params.put("LocationList", listparam_locationList);
			params.put("DefaultTableItem", _defaultTableItem == null ? null : _defaultTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_SetSelectedLocations", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SetSelectedTemplates(IContext context, java.util.List<roletemplates.proxies.Template> _templateList, interfaceconfiguration.proxies.DefaultTableItem _defaultTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_templateList = null;
			if (_templateList != null)
			{
				listparam_templateList = new java.util.ArrayList<IMendixObject>();
				for (roletemplates.proxies.Template obj : _templateList)
					listparam_templateList.add(obj.getMendixObject());
			}
			params.put("TemplateList", listparam_templateList);
			params.put("DefaultTableItem", _defaultTableItem == null ? null : _defaultTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_SetSelectedTemplates", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_StateTransitionTranslationCancel(IContext context, interfaceconfiguration.proxies.StateTransitionTranslationTable _stateTransitionTranslationTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("StateTransitionTranslationTable", _stateTransitionTranslationTable == null ? null : _stateTransitionTranslationTable.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_StateTransitionTranslationCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_StateTransitionTranslationSave(IContext context, interfaceconfiguration.proxies.StateTransitionTranslationTable _stateTransitionTranslationTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("StateTransitionTranslationTable", _stateTransitionTranslationTable == null ? null : _stateTransitionTranslationTable.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_StateTransitionTranslationSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_StateTransitionTranslationSaveAndClose(IContext context, interfaceconfiguration.proxies.StateTransitionTranslationTable _stateTransitionTranslationTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("StateTransitionTranslationTable", _stateTransitionTranslationTable == null ? null : _stateTransitionTranslationTable.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_StateTransitionTranslationSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_StateTransitionTranslationSaveAndNewContent(IContext context, interfaceconfiguration.proxies.StateTransitionTranslationTable _stateTransitionTranslationTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("StateTransitionTranslationTable", _stateTransitionTranslationTable == null ? null : _stateTransitionTranslationTable.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_StateTransitionTranslationSaveAndNewContent", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_StateTransitionTranslationSaveAndNewPopUp(IContext context, interfaceconfiguration.proxies.StateTransitionTranslationTable _stateTransitionTranslationTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("StateTransitionTranslationTable", _stateTransitionTranslationTable == null ? null : _stateTransitionTranslationTable.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_StateTransitionTranslationSaveAndNewPopUp", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SystemEndPointCancel(IContext context, interfaceconfiguration.proxies.SystemEndPoint _systemEndPoint)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SystemEndPoint", _systemEndPoint == null ? null : _systemEndPoint.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_SystemEndPointCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SystemEndPointSave(IContext context, interfaceconfiguration.proxies.SystemEndPoint _systemEndPoint)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SystemEndPoint", _systemEndPoint == null ? null : _systemEndPoint.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_SystemEndPointSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SystemEndPointSaveAndClose(IContext context, interfaceconfiguration.proxies.SystemEndPoint _systemEndPoint)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SystemEndPoint", _systemEndPoint == null ? null : _systemEndPoint.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_SystemEndPointSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SystemEndPointSaveAndNewPopUp(IContext context, interfaceconfiguration.proxies.SystemEndPoint _systemEndPoint)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SystemEndPoint", _systemEndPoint == null ? null : _systemEndPoint.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_SystemEndPointSaveAndNewPopUp", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ToggleObjectRecursiveImport(IContext context, interfaceconfiguration.proxies.LDAPObjectView _lDAPObjectView)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPObjectView", _lDAPObjectView == null ? null : _lDAPObjectView.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_ToggleObjectRecursiveImport", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_TranslationTableItemCancel(IContext context, interfaceconfiguration.proxies.TranslationTableItem _translationTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TranslationTableItem", _translationTableItem == null ? null : _translationTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_TranslationTableItemCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_TranslationTableItemSave(IContext context, interfaceconfiguration.proxies.TranslationTableItem _translationTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TranslationTableItem", _translationTableItem == null ? null : _translationTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_TranslationTableItemSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_TranslationTableItemSaveAndClose(IContext context, interfaceconfiguration.proxies.TranslationTableItem _translationTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TranslationTableItem", _translationTableItem == null ? null : _translationTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_TranslationTableItemSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_TranslationTableItemSaveAndNewContent(IContext context, interfaceconfiguration.proxies.TranslationTableItem _translationTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TranslationTableItem", _translationTableItem == null ? null : _translationTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_TranslationTableItemSaveAndNewContent", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_TranslationTableItemSaveAndNewPopUp(IContext context, interfaceconfiguration.proxies.TranslationTableItem _translationTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TranslationTableItem", _translationTableItem == null ? null : _translationTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_TranslationTableItemSaveAndNewPopUp", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_TriggerSetupItemSaveAndNewPopUp(IContext context, trigger.proxies.TriggerSetup _triggerSetup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TriggerSetup", _triggerSetup == null ? null : _triggerSetup.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_TriggerSetupItemSaveAndNewPopUp", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_TriggerSetupSaveAndNewContent(IContext context, trigger.proxies.TriggerSetup _triggerSetup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TriggerSetup", _triggerSetup == null ? null : _triggerSetup.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_TriggerSetupSaveAndNewContent", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_UseDefaultDateTimeFormatForIncomingDateTimeFormat(IContext context, interfaceconfiguration.proxies.InterfaceConfiguration _interfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceConfiguration", _interfaceConfiguration == null ? null : _interfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_UseDefaultDateTimeFormatForIncomingDateTimeFormat", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_UseDefaultDateTimeFormatForOutgoingDateTimeFormat(IContext context, interfaceconfiguration.proxies.InterfaceConfiguration _interfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceConfiguration", _interfaceConfiguration == null ? null : _interfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_UseDefaultDateTimeFormatForOutgoingDateTimeFormat", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_UseDefaultFailResponseCode(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_UseDefaultFailResponseCode", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_UseDefaultSuccessResponseCode(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_UseDefaultSuccessResponseCode", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_UserRole_SelectCancel(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "InterfaceConfiguration.IVK_UserRole_SelectCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ViewLDAPObject(IContext context, java.util.List<interfaceconfiguration.proxies.LDAPObject> _lDAPObjectList, interfaceconfiguration.proxies.LDAPObjectView _lDAPObjectView)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_lDAPObjectList = null;
			if (_lDAPObjectList != null)
			{
				listparam_lDAPObjectList = new java.util.ArrayList<IMendixObject>();
				for (interfaceconfiguration.proxies.LDAPObject obj : _lDAPObjectList)
					listparam_lDAPObjectList.add(obj.getMendixObject());
			}
			params.put("LDAPObjectList", listparam_lDAPObjectList);
			params.put("LDAPObjectView", _lDAPObjectView == null ? null : _lDAPObjectView.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_ViewLDAPObject", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_WebServiceHeaderSpecialization_Select_Cancel(IContext context, interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration _webServiceInterfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("WebServiceInterfaceMessageConfiguration", _webServiceInterfaceMessageConfiguration == null ? null : _webServiceInterfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_WebServiceHeaderSpecialization_Select_Cancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_WebServiceInterfaceConfigurationCancel(IContext context, interfaceconfiguration.proxies.WebServiceInterfaceConfiguration _webServiceInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("WebServiceInterfaceConfiguration", _webServiceInterfaceConfiguration == null ? null : _webServiceInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_WebServiceInterfaceConfigurationCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_WebServiceInterfaceConfigurationSave(IContext context, interfaceconfiguration.proxies.WebServiceInterfaceConfiguration _webServiceInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("WebServiceInterfaceConfiguration", _webServiceInterfaceConfiguration == null ? null : _webServiceInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_WebServiceInterfaceConfigurationSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_WebServiceInterfaceConfigurationSaveAndClose(IContext context, interfaceconfiguration.proxies.WebServiceInterfaceConfiguration _webServiceInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("WebServiceInterfaceConfiguration", _webServiceInterfaceConfiguration == null ? null : _webServiceInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_WebServiceInterfaceConfigurationSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_WebServiceInterfaceConfigurationSaveAndNewContent(IContext context, interfaceconfiguration.proxies.WebServiceInterfaceConfiguration _webServiceInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("WebServiceInterfaceConfiguration", _webServiceInterfaceConfiguration == null ? null : _webServiceInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_WebServiceInterfaceConfigurationSaveAndNewContent", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_WebServiceInterfaceConfigurationSaveAndNewPopUp(IContext context, interfaceconfiguration.proxies.WebServiceInterfaceConfiguration _webServiceInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("WebServiceInterfaceConfiguration", _webServiceInterfaceConfiguration == null ? null : _webServiceInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_WebServiceInterfaceConfigurationSaveAndNewPopUp", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_WebServiceInterfaceMessageConfigurationCancel(IContext context, interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration _webServiceInterfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("WebServiceInterfaceMessageConfiguration", _webServiceInterfaceMessageConfiguration == null ? null : _webServiceInterfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_WebServiceInterfaceMessageConfigurationCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_WebServiceInterfaceMessageConfigurationSave(IContext context, interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration _webServiceInterfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("WebServiceInterfaceMessageConfiguration", _webServiceInterfaceMessageConfiguration == null ? null : _webServiceInterfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_WebServiceInterfaceMessageConfigurationSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_WebServiceInterfaceMessageConfigurationSaveAndClose(IContext context, interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration _webServiceInterfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("WebServiceInterfaceMessageConfiguration", _webServiceInterfaceMessageConfiguration == null ? null : _webServiceInterfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_WebServiceInterfaceMessageConfigurationSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_WebServiceInterfaceMessageConfigurationSaveAndNewContent(IContext context, interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration _webServiceInterfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("WebServiceInterfaceMessageConfiguration", _webServiceInterfaceMessageConfiguration == null ? null : _webServiceInterfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_WebServiceInterfaceMessageConfigurationSaveAndNewContent", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_WebServiceInterfaceMessageConfigurationSaveAndNewPopUp(IContext context, interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration _webServiceInterfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("WebServiceInterfaceMessageConfiguration", _webServiceInterfaceMessageConfiguration == null ? null : _webServiceInterfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.IVK_WebServiceInterfaceMessageConfigurationSaveAndNewPopUp", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void lDAPImportTypeValid(IContext context, interfaceconfiguration.proxies.LDAPImportType _lDAPImportType, interfaceshared.proxies.ProcessingPart _parentProcessingPart, java.lang.String _logNode, interfaceconfiguration.proxies.LDAPInterfaceConfiguration _lDAPInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPImportType", _lDAPImportType == null ? null : _lDAPImportType.getMendixObject());
			params.put("ParentProcessingPart", _parentProcessingPart == null ? null : _parentProcessingPart.getMendixObject());
			params.put("LogNode", _logNode);
			params.put("LDAPInterfaceConfiguration", _lDAPInterfaceConfiguration == null ? null : _lDAPInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.LDAPImportTypeValid", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<interfaceshared.proxies.Message> messagesGridSorting(IContext context, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.MessagesGridSorting", params);
			java.util.List<interfaceshared.proxies.Message> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<interfaceshared.proxies.Message>();
				for (IMendixObject obj : objs)
					result.add(interfaceshared.proxies.Message.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_CheckDateTimeFormat(IContext context, interfaceconfiguration.proxies.InterfaceConfiguration _interfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceConfiguration", _interfaceConfiguration == null ? null : _interfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_CheckDateTimeFormat", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_CheckExistingMessageStatus(IContext context, interfaceconfiguration.proxies.InterfaceEventGeneration _interfaceEventGeneration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceEventGeneration", _interfaceEventGeneration == null ? null : _interfaceEventGeneration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_CheckExistingMessageStatus", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_CheckHeartBeatUsageWebServiceInterfaceMessageConfigurationEntry(IContext context, interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration _webServiceInterfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("WebServiceInterfaceMessageConfiguration", _webServiceInterfaceMessageConfiguration == null ? null : _webServiceInterfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_CheckHeartBeatUsageWebServiceInterfaceMessageConfigurationEntry", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_ClassName(IContext context, interfaceconfiguration.proxies.LDAPFilterClass _lDAPFilterClass)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPFilterClass", _lDAPFilterClass == null ? null : _lDAPFilterClass.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_ClassName", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_ConfigureIncomingHeartBeats(IContext context, interfaceconfiguration.proxies.WebServiceInterfaceConfiguration _webServiceInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("WebServiceInterfaceConfiguration", _webServiceInterfaceConfiguration == null ? null : _webServiceInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_ConfigureIncomingHeartBeats", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_ConfigureOutgoingHeartBeats(IContext context, interfaceconfiguration.proxies.WebServiceInterfaceConfiguration _webServiceInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("WebServiceInterfaceConfiguration", _webServiceInterfaceConfiguration == null ? null : _webServiceInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_ConfigureOutgoingHeartBeats", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_DefaultCountry(IContext context, interfaceconfiguration.proxies.DefaultTableItem _defaultTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultTableItem", _defaultTableItem == null ? null : _defaultTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_DefaultCountry", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_DefaultLanguage(IContext context, interfaceconfiguration.proxies.DefaultTableItem _defaultTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultTableItem", _defaultTableItem == null ? null : _defaultTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_DefaultLanguage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_DefaultTableItem_AddUpdateDeleteAffectedCIsFieldCode(IContext context, interfaceconfiguration.proxies.DefaultTableItem _defaultTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultTableItem", _defaultTableItem == null ? null : _defaultTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_DefaultTableItem_AddUpdateDeleteAffectedCIsFieldCode", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_DefaultTableItem_ContractAspectUpdateFieldCode(IContext context, interfaceconfiguration.proxies.DefaultTableItem _defaultTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultTableItem", _defaultTableItem == null ? null : _defaultTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_DefaultTableItem_ContractAspectUpdateFieldCode", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_DefaultTableItem_InterfaceMessageConfiguration(IContext context, interfaceconfiguration.proxies.DefaultTableItem _defaultTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultTableItem", _defaultTableItem == null ? null : _defaultTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_DefaultTableItem_InterfaceMessageConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_DefaultTableItem_RequestFieldCode(IContext context, interfaceconfiguration.proxies.DefaultTableItem _defaultTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultTableItem", _defaultTableItem == null ? null : _defaultTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_DefaultTableItem_RequestFieldCode", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_DefaultTableItem_RequestUpdateFieldCode(IContext context, interfaceconfiguration.proxies.DefaultTableItem _defaultTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultTableItem", _defaultTableItem == null ? null : _defaultTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_DefaultTableItem_RequestUpdateFieldCode", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_DefaultTimeZone(IContext context, interfaceconfiguration.proxies.DefaultTableItem _defaultTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultTableItem", _defaultTableItem == null ? null : _defaultTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_DefaultTimeZone", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_DynamicTable_DestinationMendixAttribute(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_DynamicTable_DestinationMendixAttribute", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_DynamicTable_DestinationMendixEntity(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_DynamicTable_DestinationMendixEntity", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_DynamicTable_DynamicAttributeLabel(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_DynamicTable_DynamicAttributeLabel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_DynamicTable_FillASpecificFieldOfATargetEntity(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_DynamicTable_FillASpecificFieldOfATargetEntity", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_DynamicTable_IncomingSourceType(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_DynamicTable_IncomingSourceType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_DynamicTable_InterfaceMessageConfiguration(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_DynamicTable_InterfaceMessageConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_DynamicTable_OutgoingSourceType(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_DynamicTable_OutgoingSourceType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_DynamicTable_SourceMendixEntity(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_DynamicTable_SourceMendixEntity", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_ImportType(IContext context, interfaceconfiguration.proxies.LDAPImportType _lDAPImportType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPImportType", _lDAPImportType == null ? null : _lDAPImportType.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_ImportType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_InterfaceMessageConfiguration_CustomMicroflow(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_InterfaceMessageConfiguration_CustomMicroflow", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_InterfaceMessageConfiguration_PrepareMicroflow(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_InterfaceMessageConfiguration_PrepareMicroflow", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_InterfaceMessageConfiguration_SendMicroflow(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_InterfaceMessageConfiguration_SendMicroflow", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean oC_InterfaceMessageConfigurationAlreadyExists(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.OC_InterfaceMessageConfigurationAlreadyExists", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_LDAPAttributeMapping_ImportAccountAttribute(IContext context, interfaceconfiguration.proxies.LDAPAttributeMapping _lDAPAttributeMapping)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPAttributeMapping", _lDAPAttributeMapping == null ? null : _lDAPAttributeMapping.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_LDAPAttributeMapping_ImportAccountAttribute", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_LDAPAttributeMapping_ImportPersonAttribute(IContext context, interfaceconfiguration.proxies.LDAPAttributeMapping _lDAPAttributeMapping)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPAttributeMapping", _lDAPAttributeMapping == null ? null : _lDAPAttributeMapping.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_LDAPAttributeMapping_ImportPersonAttribute", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_LDAPAttributeMapping_LocationAttribute(IContext context, interfaceconfiguration.proxies.LDAPAttributeMapping _lDAPAttributeMapping)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPAttributeMapping", _lDAPAttributeMapping == null ? null : _lDAPAttributeMapping.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_LDAPAttributeMapping_LocationAttribute", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_LDAPAttributeMapping_OrganisationAttribute(IContext context, interfaceconfiguration.proxies.LDAPAttributeMapping _lDAPAttributeMapping)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPAttributeMapping", _lDAPAttributeMapping == null ? null : _lDAPAttributeMapping.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_LDAPAttributeMapping_OrganisationAttribute", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_LDAPAttributeMapping_PersonAttribute(IContext context, interfaceconfiguration.proxies.LDAPAttributeMapping _lDAPAttributeMapping)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPAttributeMapping", _lDAPAttributeMapping == null ? null : _lDAPAttributeMapping.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_LDAPAttributeMapping_PersonAttribute", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_LDAPImportType_PersonImportScope(IContext context, interfaceconfiguration.proxies.LDAPImportType _lDAPImportType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPImportType", _lDAPImportType == null ? null : _lDAPImportType.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_LDAPImportType_PersonImportScope", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_LDAPInterfaceConfiguration_HostName(IContext context, interfaceconfiguration.proxies.LDAPInterfaceConfiguration _lDAPInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPInterfaceConfiguration", _lDAPInterfaceConfiguration == null ? null : _lDAPInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_LDAPInterfaceConfiguration_HostName", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_LDAPInterfaceConfiguration_RootDirectory(IContext context, interfaceconfiguration.proxies.LDAPInterfaceConfiguration _lDAPInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPInterfaceConfiguration", _lDAPInterfaceConfiguration == null ? null : _lDAPInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_LDAPInterfaceConfiguration_RootDirectory", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_LDAPInterfaceConfiguration_ServerAddress(IContext context, interfaceconfiguration.proxies.LDAPInterfaceConfiguration _lDAPInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPInterfaceConfiguration", _lDAPInterfaceConfiguration == null ? null : _lDAPInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_LDAPInterfaceConfiguration_ServerAddress", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_LDAPInterfaceConfiguration_UserName(IContext context, interfaceconfiguration.proxies.LDAPInterfaceConfiguration _lDAPInterfaceConfiguratio)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPInterfaceConfiguratio", _lDAPInterfaceConfiguratio == null ? null : _lDAPInterfaceConfiguratio.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_LDAPInterfaceConfiguration_UserName", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_RefreshInterfaceMessageConfiguration(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_RefreshInterfaceMessageConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_RefreshInterfaceMessageConfigurationOnNew(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_RefreshInterfaceMessageConfigurationOnNew", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_RefreshInterfaceMonitoringMessages(IContext context, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_RefreshInterfaceMonitoringMessages", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_RefreshInterfaceMonitoringProcessingLogs(IContext context, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_RefreshInterfaceMonitoringProcessingLogs", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_RefreshWebServiceInterfaceMessageConfiguration(IContext context, interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration _webServiceInterfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("WebServiceInterfaceMessageConfiguration", _webServiceInterfaceMessageConfiguration == null ? null : _webServiceInterfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_RefreshWebServiceInterfaceMessageConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_RefreshWebServiceInterfaceMessageConfigurationOnNew(IContext context, interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration _webServiceInterfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("WebServiceInterfaceMessageConfiguration", _webServiceInterfaceMessageConfiguration == null ? null : _webServiceInterfaceMessageConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_RefreshWebServiceInterfaceMessageConfigurationOnNew", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_RequestEventType(IContext context, trigger.proxies.TriggerSetup _triggerSetup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TriggerSetup", _triggerSetup == null ? null : _triggerSetup.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_RequestEventType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_TranslationTableItem_AddUpdateDeleteAffectedCIsFieldCode(IContext context, interfaceconfiguration.proxies.TranslationTableItem _translationTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TranslationTableItem", _translationTableItem == null ? null : _translationTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_TranslationTableItem_AddUpdateDeleteAffectedCIsFieldCode", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_TranslationTableItem_ContractAspectUpdateFieldCode(IContext context, interfaceconfiguration.proxies.TranslationTableItem _translationTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TranslationTableItem", _translationTableItem == null ? null : _translationTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_TranslationTableItem_ContractAspectUpdateFieldCode", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_TranslationTableItem_InterfaceMessageConfiguration(IContext context, interfaceconfiguration.proxies.TranslationTableItem _translationTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TranslationTableItem", _translationTableItem == null ? null : _translationTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_TranslationTableItem_InterfaceMessageConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_TranslationTableItem_InterfaceTranslationTableItemType(IContext context, interfaceconfiguration.proxies.TranslationTableItem _translationTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TranslationTableItem", _translationTableItem == null ? null : _translationTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_TranslationTableItem_InterfaceTranslationTableItemType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_TranslationTableItem_LDAPAttributeFieldCode(IContext context, interfaceconfiguration.proxies.TranslationTableItem _translationTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TranslationTableItem", _translationTableItem == null ? null : _translationTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_TranslationTableItem_LDAPAttributeFieldCode", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_TranslationTableItem_LDAPTranslationTableItemType(IContext context, interfaceconfiguration.proxies.TranslationTableItem _translationTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TranslationTableItem", _translationTableItem == null ? null : _translationTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_TranslationTableItem_LDAPTranslationTableItemType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_TranslationTableItem_RequestFieldCode(IContext context, interfaceconfiguration.proxies.TranslationTableItem _translationTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TranslationTableItem", _translationTableItem == null ? null : _translationTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_TranslationTableItem_RequestFieldCode", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_TranslationTableItem_RequestUpdateFieldCode(IContext context, interfaceconfiguration.proxies.TranslationTableItem _translationTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TranslationTableItem", _translationTableItem == null ? null : _translationTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_TranslationTableItem_RequestUpdateFieldCode", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_TranslationTableItem_TranslationTableItemType(IContext context, interfaceconfiguration.proxies.TranslationTableItem _translationTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TranslationTableItem", _translationTableItem == null ? null : _translationTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_TranslationTableItem_TranslationTableItemType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_UpdateLDAPAttributeMappingLDAPAttr(IContext context, interfaceconfiguration.proxies.LDAPAttributeMapping _lDAPAttributeMapping)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPAttributeMapping", _lDAPAttributeMapping == null ? null : _lDAPAttributeMapping.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OC_UpdateLDAPAttributeMappingLDAPAttr", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openAtemptLogging(IContext context, interfaceshared.proxies.Attempt _attempt)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Attempt", _attempt == null ? null : _attempt.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OpenAtemptLogging", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void organisationLDAPImportTypeDependenciesValid(IContext context, interfaceconfiguration.proxies.LDAPImportType _lDAPImportType, interfaceshared.proxies.ProcessingPart _parentProcessingPart, java.lang.String _logNode, interfaceconfiguration.proxies.LDAPInterfaceConfiguration _lDAPInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPImportType", _lDAPImportType == null ? null : _lDAPImportType.getMendixObject());
			params.put("ParentProcessingPart", _parentProcessingPart == null ? null : _parentProcessingPart.getMendixObject());
			params.put("LogNode", _logNode);
			params.put("LDAPInterfaceConfiguration", _lDAPInterfaceConfiguration == null ? null : _lDAPInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.OrganisationLDAPImportTypeDependenciesValid", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean parentIsRecursiveImported(IContext context, interfaceconfiguration.proxies.LDAPObject _lDAPObject, interfaceconfiguration.proxies.LDAPImportType _lDAPImportType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPObject", _lDAPObject == null ? null : _lDAPObject.getMendixObject());
			params.put("LDAPImportType", _lDAPImportType == null ? null : _lDAPImportType.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.ParentIsRecursiveImported", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void personLDAPImportTypeDependenciesValid(IContext context, interfaceconfiguration.proxies.LDAPImportType _lDAPImportType, interfaceshared.proxies.ProcessingPart _parentProcessingPart, java.lang.String _logNode, interfaceconfiguration.proxies.LDAPInterfaceConfiguration _lDAPInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPImportType", _lDAPImportType == null ? null : _lDAPImportType.getMendixObject());
			params.put("ParentProcessingPart", _parentProcessingPart == null ? null : _parentProcessingPart.getMendixObject());
			params.put("LogNode", _logNode);
			params.put("LDAPInterfaceConfiguration", _lDAPInterfaceConfiguration == null ? null : _lDAPInterfaceConfiguration.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.PersonLDAPImportTypeDependenciesValid", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<interfaceshared.proxies.ProcessingLog> processingLogGridSorting(IContext context, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring, java.lang.Long _chunkSize)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			params.put("ChunkSize", _chunkSize);
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.ProcessingLogGridSorting", params);
			java.util.List<interfaceshared.proxies.ProcessingLog> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<interfaceshared.proxies.ProcessingLog>();
				for (IMendixObject obj : objs)
					result.add(interfaceshared.proxies.ProcessingLog.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void refreshRelatedObjects(IContext context, interfaceconfiguration.proxies.DefaultTableItem _defaultTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultTableItem", _defaultTableItem == null ? null : _defaultTableItem.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.RefreshRelatedObjects", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static interfaceconfiguration.proxies.DefaultTableItem retrieveDefaultTableItem(IContext context, interfaceshared.proxies.FieldCode _fieldCode, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration, interfaceconfiguration.proxies.LDAPImportType _lDAPImportType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FieldCode", _fieldCode == null ? null : _fieldCode.name());
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			params.put("LDAPImportType", _lDAPImportType == null ? null : _lDAPImportType.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "InterfaceConfiguration.RetrieveDefaultTableItem", params);
			return result == null ? null : interfaceconfiguration.proxies.DefaultTableItem.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<interfaceconfiguration.proxies.DefaultTableItem> retrieveInterfaceMessageConfigurationDefaultTableItems(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "InterfaceConfiguration.RetrieveInterfaceMessageConfigurationDefaultTableItems", params);
			java.util.List<interfaceconfiguration.proxies.DefaultTableItem> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<interfaceconfiguration.proxies.DefaultTableItem>();
				for (IMendixObject obj : objs)
					result.add(interfaceconfiguration.proxies.DefaultTableItem.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static interfaceconfiguration.proxies.WebServiceInterfaceConfiguration retrieveWebServiceInterfaceConfigurationFromInterfaceConfiguration(IContext context, interfaceconfiguration.proxies.InterfaceConfiguration _interfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceConfiguration", _interfaceConfiguration == null ? null : _interfaceConfiguration.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "InterfaceConfiguration.RetrieveWebServiceInterfaceConfigurationFromInterfaceConfiguration", params);
			return result == null ? null : interfaceconfiguration.proxies.WebServiceInterfaceConfiguration.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration retrieveWebServiceInterfaceMessageConfigurationFromInterfaceMessageConfiguration(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "InterfaceConfiguration.RetrieveWebServiceInterfaceMessageConfigurationFromInterfaceMessageConfiguration", params);
			return result == null ? null : interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static advancedsearch.proxies.SearchParams searchBySearchIndex(IContext context, interfaceconfiguration.proxies.InterfaceMonitoring _interfaceMonitoring)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMonitoring", _interfaceMonitoring == null ? null : _interfaceMonitoring.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "InterfaceConfiguration.SearchBySearchIndex", params);
			return result == null ? null : advancedsearch.proxies.SearchParams.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * This microflow adds an additional import location, namely ldapDirectory, to the current ldapServer (the owner of the provided ldapDirectory)
	 */
	public static void selectLDAPDirectoryFlow(IContext context, interfaceconfiguration.proxies.LDAPObject _lDAPObject, boolean _importRecursive, interfaceconfiguration.proxies.LDAPImportType _lDAPImportType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPObject", _lDAPObject == null ? null : _lDAPObject.getMendixObject());
			params.put("ImportRecursive", _importRecursive);
			params.put("LDAPImportType", _lDAPImportType == null ? null : _lDAPImportType.getMendixObject());
			Core.execute(context, "InterfaceConfiguration.SelectLDAPDirectoryFlow", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean startLDAP(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.StartLDAP", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static interfaceconfiguration.proxies.TranslationTableItem translateFunction(IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration _interfaceMessageConfiguration, interfaceshared.proxies.FieldCode _fieldCode, java.lang.String _fromValue, java.lang.String _logNode)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceMessageConfiguration", _interfaceMessageConfiguration == null ? null : _interfaceMessageConfiguration.getMendixObject());
			params.put("FieldCode", _fieldCode == null ? null : _fieldCode.name());
			params.put("FromValue", _fromValue);
			params.put("LogNode", _logNode);
			IMendixObject result = (IMendixObject)Core.execute(context, "InterfaceConfiguration.TranslateFunction", params);
			return result == null ? null : interfaceconfiguration.proxies.TranslationTableItem.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateDefaultTableItem(IContext context, interfaceconfiguration.proxies.DefaultTableItem _defaultTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultTableItem", _defaultTableItem == null ? null : _defaultTableItem.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.ValidateDefaultTableItem", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * LVNL - added IUP
	 */
	public static boolean validateDefaultTableItemAttributes(IContext context, interfaceconfiguration.proxies.DefaultTableItem _defaultTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultTableItem", _defaultTableItem == null ? null : _defaultTableItem.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.ValidateDefaultTableItemAttributes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateDynamicTable(IContext context, interfaceconfiguration.proxies.DynamicTable _dynamicTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicTable", _dynamicTable == null ? null : _dynamicTable.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.ValidateDynamicTable", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateLDAPImportType(IContext context, interfaceconfiguration.proxies.LDAPImportType _lDAPImportType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPImportType", _lDAPImportType == null ? null : _lDAPImportType.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.ValidateLDAPImportType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateLDAPImportTypeWithFeedback(IContext context, interfaceconfiguration.proxies.LDAPImportType _lDAPImportType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LDAPImportType", _lDAPImportType == null ? null : _lDAPImportType.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.ValidateLDAPImportTypeWithFeedback", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateStateTransitionRelation(IContext context, interfaceconfiguration.proxies.StateTransitionTranslationTable _stateTransitionTranslationTable)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("StateTransitionTranslationTable", _stateTransitionTranslationTable == null ? null : _stateTransitionTranslationTable.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.ValidateStateTransitionRelation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateSystemEndPoint(IContext context, interfaceconfiguration.proxies.SystemEndPoint _systemEndPoint)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SystemEndPoint", _systemEndPoint == null ? null : _systemEndPoint.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.ValidateSystemEndPoint", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateTranslationTableItem(IContext context, interfaceconfiguration.proxies.TranslationTableItem _translationTableItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TranslationTableItem", _translationTableItem == null ? null : _translationTableItem.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.ValidateTranslationTableItem", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateWebServiceInterfaceConfiguration(IContext context, interfaceconfiguration.proxies.WebServiceInterfaceConfiguration _webServiceInterfaceConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("WebServiceInterfaceConfiguration", _webServiceInterfaceConfiguration == null ? null : _webServiceInterfaceConfiguration.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "InterfaceConfiguration.ValidateWebServiceInterfaceConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}