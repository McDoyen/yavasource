// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package interfaceconfiguration.proxies;

public class LDAPImportType
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject lDAPImportTypeMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "InterfaceConfiguration.LDAPImportType";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		ImportEntity("ImportEntity"),
		Description("Description"),
		ImportType("ImportType"),
		ShowGroupMapping("ShowGroupMapping"),
		PersonImportScope("PersonImportScope"),
		Valid("Valid"),
		InsufficientMappings("InsufficientMappings"),
		AttributeImported("AttributeImported"),
		AllowManualAddingOfTemplates("AllowManualAddingOfTemplates"),
		AllowManualAddingOfCustomers("AllowManualAddingOfCustomers"),
		AllowManualAddingOfBusinessGroups("AllowManualAddingOfBusinessGroups"),
		AllowManualAddingOfLocations("AllowManualAddingOfLocations"),
		LDAPImportType_LDAPInterfaceConfiguration("InterfaceConfiguration.LDAPImportType_LDAPInterfaceConfiguration"),
		DefaultTableItem_LDAPImportType("InterfaceConfiguration.DefaultTableItem_LDAPImportType"),
		LDAPImportType_LDAPFilterGroup("InterfaceConfiguration.LDAPImportType_LDAPFilterGroup");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public LDAPImportType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "InterfaceConfiguration.LDAPImportType"));
	}

	protected LDAPImportType(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject lDAPImportTypeMendixObject)
	{
		if (lDAPImportTypeMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("InterfaceConfiguration.LDAPImportType", lDAPImportTypeMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a InterfaceConfiguration.LDAPImportType");

		this.lDAPImportTypeMendixObject = lDAPImportTypeMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'LDAPImportType.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static interfaceconfiguration.proxies.LDAPImportType initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return interfaceconfiguration.proxies.LDAPImportType.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static interfaceconfiguration.proxies.LDAPImportType initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new interfaceconfiguration.proxies.LDAPImportType(context, mendixObject);
	}

	public static interfaceconfiguration.proxies.LDAPImportType load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return interfaceconfiguration.proxies.LDAPImportType.initialize(context, mendixObject);
	}

	public static java.util.List<interfaceconfiguration.proxies.LDAPImportType> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<interfaceconfiguration.proxies.LDAPImportType> result = new java.util.ArrayList<interfaceconfiguration.proxies.LDAPImportType>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//InterfaceConfiguration.LDAPImportType" + xpathConstraint))
			result.add(interfaceconfiguration.proxies.LDAPImportType.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of ImportEntity
	 */
	public final java.lang.String getImportEntity()
	{
		return getImportEntity(getContext());
	}

	/**
	 * @param context
	 * @return value of ImportEntity
	 */
	public final java.lang.String getImportEntity(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ImportEntity.toString());
	}

	/**
	 * Set value of ImportEntity
	 * @param importentity
	 */
	public final void setImportEntity(java.lang.String importentity)
	{
		setImportEntity(getContext(), importentity);
	}

	/**
	 * Set value of ImportEntity
	 * @param context
	 * @param importentity
	 */
	public final void setImportEntity(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String importentity)
	{
		getMendixObject().setValue(context, MemberNames.ImportEntity.toString(), importentity);
	}

	/**
	 * @return value of Description
	 */
	public final java.lang.String getDescription()
	{
		return getDescription(getContext());
	}

	/**
	 * @param context
	 * @return value of Description
	 */
	public final java.lang.String getDescription(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Description.toString());
	}

	/**
	 * Set value of Description
	 * @param description
	 */
	public final void setDescription(java.lang.String description)
	{
		setDescription(getContext(), description);
	}

	/**
	 * Set value of Description
	 * @param context
	 * @param description
	 */
	public final void setDescription(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String description)
	{
		getMendixObject().setValue(context, MemberNames.Description.toString(), description);
	}

	/**
	 * Set value of ImportType
	 * @param importtype
	 */
	public final interfaceconfiguration.proxies.ImportType getImportType()
	{
		return getImportType(getContext());
	}

	/**
	 * @param context
	 * @return value of ImportType
	 */
	public final interfaceconfiguration.proxies.ImportType getImportType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.ImportType.toString());
		if (obj == null)
			return null;

		return interfaceconfiguration.proxies.ImportType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of ImportType
	 * @param importtype
	 */
	public final void setImportType(interfaceconfiguration.proxies.ImportType importtype)
	{
		setImportType(getContext(), importtype);
	}

	/**
	 * Set value of ImportType
	 * @param context
	 * @param importtype
	 */
	public final void setImportType(com.mendix.systemwideinterfaces.core.IContext context, interfaceconfiguration.proxies.ImportType importtype)
	{
		if (importtype != null)
			getMendixObject().setValue(context, MemberNames.ImportType.toString(), importtype.toString());
		else
			getMendixObject().setValue(context, MemberNames.ImportType.toString(), null);
	}

	/**
	 * @return value of ShowGroupMapping
	 */
	public final java.lang.Boolean getShowGroupMapping()
	{
		return getShowGroupMapping(getContext());
	}

	/**
	 * @param context
	 * @return value of ShowGroupMapping
	 */
	public final java.lang.Boolean getShowGroupMapping(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.ShowGroupMapping.toString());
	}

	/**
	 * Set value of ShowGroupMapping
	 * @param showgroupmapping
	 */
	public final void setShowGroupMapping(java.lang.Boolean showgroupmapping)
	{
		setShowGroupMapping(getContext(), showgroupmapping);
	}

	/**
	 * Set value of ShowGroupMapping
	 * @param context
	 * @param showgroupmapping
	 */
	public final void setShowGroupMapping(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean showgroupmapping)
	{
		getMendixObject().setValue(context, MemberNames.ShowGroupMapping.toString(), showgroupmapping);
	}

	/**
	 * Set value of PersonImportScope
	 * @param personimportscope
	 */
	public final interfaceconfiguration.proxies.PersonImportScope getPersonImportScope()
	{
		return getPersonImportScope(getContext());
	}

	/**
	 * @param context
	 * @return value of PersonImportScope
	 */
	public final interfaceconfiguration.proxies.PersonImportScope getPersonImportScope(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.PersonImportScope.toString());
		if (obj == null)
			return null;

		return interfaceconfiguration.proxies.PersonImportScope.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of PersonImportScope
	 * @param personimportscope
	 */
	public final void setPersonImportScope(interfaceconfiguration.proxies.PersonImportScope personimportscope)
	{
		setPersonImportScope(getContext(), personimportscope);
	}

	/**
	 * Set value of PersonImportScope
	 * @param context
	 * @param personimportscope
	 */
	public final void setPersonImportScope(com.mendix.systemwideinterfaces.core.IContext context, interfaceconfiguration.proxies.PersonImportScope personimportscope)
	{
		if (personimportscope != null)
			getMendixObject().setValue(context, MemberNames.PersonImportScope.toString(), personimportscope.toString());
		else
			getMendixObject().setValue(context, MemberNames.PersonImportScope.toString(), null);
	}

	/**
	 * @return value of Valid
	 */
	public final java.lang.Boolean getValid()
	{
		return getValid(getContext());
	}

	/**
	 * @param context
	 * @return value of Valid
	 */
	public final java.lang.Boolean getValid(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.Valid.toString());
	}

	/**
	 * Set value of Valid
	 * @param valid
	 */
	public final void setValid(java.lang.Boolean valid)
	{
		setValid(getContext(), valid);
	}

	/**
	 * Set value of Valid
	 * @param context
	 * @param valid
	 */
	public final void setValid(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean valid)
	{
		getMendixObject().setValue(context, MemberNames.Valid.toString(), valid);
	}

	/**
	 * @return value of InsufficientMappings
	 */
	public final java.lang.Boolean getInsufficientMappings()
	{
		return getInsufficientMappings(getContext());
	}

	/**
	 * @param context
	 * @return value of InsufficientMappings
	 */
	public final java.lang.Boolean getInsufficientMappings(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.InsufficientMappings.toString());
	}

	/**
	 * Set value of InsufficientMappings
	 * @param insufficientmappings
	 */
	public final void setInsufficientMappings(java.lang.Boolean insufficientmappings)
	{
		setInsufficientMappings(getContext(), insufficientmappings);
	}

	/**
	 * Set value of InsufficientMappings
	 * @param context
	 * @param insufficientmappings
	 */
	public final void setInsufficientMappings(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean insufficientmappings)
	{
		getMendixObject().setValue(context, MemberNames.InsufficientMappings.toString(), insufficientmappings);
	}

	/**
	 * @return value of AttributeImported
	 */
	public final java.lang.Boolean getAttributeImported()
	{
		return getAttributeImported(getContext());
	}

	/**
	 * @param context
	 * @return value of AttributeImported
	 */
	public final java.lang.Boolean getAttributeImported(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.AttributeImported.toString());
	}

	/**
	 * Set value of AttributeImported
	 * @param attributeimported
	 */
	public final void setAttributeImported(java.lang.Boolean attributeimported)
	{
		setAttributeImported(getContext(), attributeimported);
	}

	/**
	 * Set value of AttributeImported
	 * @param context
	 * @param attributeimported
	 */
	public final void setAttributeImported(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean attributeimported)
	{
		getMendixObject().setValue(context, MemberNames.AttributeImported.toString(), attributeimported);
	}

	/**
	 * @return value of AllowManualAddingOfTemplates
	 */
	public final java.lang.Boolean getAllowManualAddingOfTemplates()
	{
		return getAllowManualAddingOfTemplates(getContext());
	}

	/**
	 * @param context
	 * @return value of AllowManualAddingOfTemplates
	 */
	public final java.lang.Boolean getAllowManualAddingOfTemplates(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.AllowManualAddingOfTemplates.toString());
	}

	/**
	 * Set value of AllowManualAddingOfTemplates
	 * @param allowmanualaddingoftemplates
	 */
	public final void setAllowManualAddingOfTemplates(java.lang.Boolean allowmanualaddingoftemplates)
	{
		setAllowManualAddingOfTemplates(getContext(), allowmanualaddingoftemplates);
	}

	/**
	 * Set value of AllowManualAddingOfTemplates
	 * @param context
	 * @param allowmanualaddingoftemplates
	 */
	public final void setAllowManualAddingOfTemplates(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean allowmanualaddingoftemplates)
	{
		getMendixObject().setValue(context, MemberNames.AllowManualAddingOfTemplates.toString(), allowmanualaddingoftemplates);
	}

	/**
	 * @return value of AllowManualAddingOfCustomers
	 */
	public final java.lang.Boolean getAllowManualAddingOfCustomers()
	{
		return getAllowManualAddingOfCustomers(getContext());
	}

	/**
	 * @param context
	 * @return value of AllowManualAddingOfCustomers
	 */
	public final java.lang.Boolean getAllowManualAddingOfCustomers(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.AllowManualAddingOfCustomers.toString());
	}

	/**
	 * Set value of AllowManualAddingOfCustomers
	 * @param allowmanualaddingofcustomers
	 */
	public final void setAllowManualAddingOfCustomers(java.lang.Boolean allowmanualaddingofcustomers)
	{
		setAllowManualAddingOfCustomers(getContext(), allowmanualaddingofcustomers);
	}

	/**
	 * Set value of AllowManualAddingOfCustomers
	 * @param context
	 * @param allowmanualaddingofcustomers
	 */
	public final void setAllowManualAddingOfCustomers(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean allowmanualaddingofcustomers)
	{
		getMendixObject().setValue(context, MemberNames.AllowManualAddingOfCustomers.toString(), allowmanualaddingofcustomers);
	}

	/**
	 * @return value of AllowManualAddingOfBusinessGroups
	 */
	public final java.lang.Boolean getAllowManualAddingOfBusinessGroups()
	{
		return getAllowManualAddingOfBusinessGroups(getContext());
	}

	/**
	 * @param context
	 * @return value of AllowManualAddingOfBusinessGroups
	 */
	public final java.lang.Boolean getAllowManualAddingOfBusinessGroups(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.AllowManualAddingOfBusinessGroups.toString());
	}

	/**
	 * Set value of AllowManualAddingOfBusinessGroups
	 * @param allowmanualaddingofbusinessgroups
	 */
	public final void setAllowManualAddingOfBusinessGroups(java.lang.Boolean allowmanualaddingofbusinessgroups)
	{
		setAllowManualAddingOfBusinessGroups(getContext(), allowmanualaddingofbusinessgroups);
	}

	/**
	 * Set value of AllowManualAddingOfBusinessGroups
	 * @param context
	 * @param allowmanualaddingofbusinessgroups
	 */
	public final void setAllowManualAddingOfBusinessGroups(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean allowmanualaddingofbusinessgroups)
	{
		getMendixObject().setValue(context, MemberNames.AllowManualAddingOfBusinessGroups.toString(), allowmanualaddingofbusinessgroups);
	}

	/**
	 * @return value of AllowManualAddingOfLocations
	 */
	public final java.lang.Boolean getAllowManualAddingOfLocations()
	{
		return getAllowManualAddingOfLocations(getContext());
	}

	/**
	 * @param context
	 * @return value of AllowManualAddingOfLocations
	 */
	public final java.lang.Boolean getAllowManualAddingOfLocations(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.AllowManualAddingOfLocations.toString());
	}

	/**
	 * Set value of AllowManualAddingOfLocations
	 * @param allowmanualaddingoflocations
	 */
	public final void setAllowManualAddingOfLocations(java.lang.Boolean allowmanualaddingoflocations)
	{
		setAllowManualAddingOfLocations(getContext(), allowmanualaddingoflocations);
	}

	/**
	 * Set value of AllowManualAddingOfLocations
	 * @param context
	 * @param allowmanualaddingoflocations
	 */
	public final void setAllowManualAddingOfLocations(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean allowmanualaddingoflocations)
	{
		getMendixObject().setValue(context, MemberNames.AllowManualAddingOfLocations.toString(), allowmanualaddingoflocations);
	}

	/**
	 * @return value of LDAPImportType_LDAPInterfaceConfiguration
	 */
	public final interfaceconfiguration.proxies.LDAPInterfaceConfiguration getLDAPImportType_LDAPInterfaceConfiguration() throws com.mendix.core.CoreException
	{
		return getLDAPImportType_LDAPInterfaceConfiguration(getContext());
	}

	/**
	 * @param context
	 * @return value of LDAPImportType_LDAPInterfaceConfiguration
	 */
	public final interfaceconfiguration.proxies.LDAPInterfaceConfiguration getLDAPImportType_LDAPInterfaceConfiguration(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfaceconfiguration.proxies.LDAPInterfaceConfiguration result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.LDAPImportType_LDAPInterfaceConfiguration.toString());
		if (identifier != null)
			result = interfaceconfiguration.proxies.LDAPInterfaceConfiguration.load(context, identifier);
		return result;
	}

	/**
	 * Set value of LDAPImportType_LDAPInterfaceConfiguration
	 * @param ldapimporttype_ldapinterfaceconfiguration
	 */
	public final void setLDAPImportType_LDAPInterfaceConfiguration(interfaceconfiguration.proxies.LDAPInterfaceConfiguration ldapimporttype_ldapinterfaceconfiguration)
	{
		setLDAPImportType_LDAPInterfaceConfiguration(getContext(), ldapimporttype_ldapinterfaceconfiguration);
	}

	/**
	 * Set value of LDAPImportType_LDAPInterfaceConfiguration
	 * @param context
	 * @param ldapimporttype_ldapinterfaceconfiguration
	 */
	public final void setLDAPImportType_LDAPInterfaceConfiguration(com.mendix.systemwideinterfaces.core.IContext context, interfaceconfiguration.proxies.LDAPInterfaceConfiguration ldapimporttype_ldapinterfaceconfiguration)
	{
		if (ldapimporttype_ldapinterfaceconfiguration == null)
			getMendixObject().setValue(context, MemberNames.LDAPImportType_LDAPInterfaceConfiguration.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.LDAPImportType_LDAPInterfaceConfiguration.toString(), ldapimporttype_ldapinterfaceconfiguration.getMendixObject().getId());
	}

	/**
	 * @return value of DefaultTableItem_LDAPImportType
	 */
	public final interfaceconfiguration.proxies.DefaultTableItem getDefaultTableItem_LDAPImportType() throws com.mendix.core.CoreException
	{
		return getDefaultTableItem_LDAPImportType(getContext());
	}

	/**
	 * @param context
	 * @return value of DefaultTableItem_LDAPImportType
	 */
	public final interfaceconfiguration.proxies.DefaultTableItem getDefaultTableItem_LDAPImportType(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfaceconfiguration.proxies.DefaultTableItem result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.DefaultTableItem_LDAPImportType.toString());
		if (identifier != null)
			result = interfaceconfiguration.proxies.DefaultTableItem.load(context, identifier);
		return result;
	}

	/**
	 * Set value of DefaultTableItem_LDAPImportType
	 * @param defaulttableitem_ldapimporttype
	 */
	public final void setDefaultTableItem_LDAPImportType(interfaceconfiguration.proxies.DefaultTableItem defaulttableitem_ldapimporttype)
	{
		setDefaultTableItem_LDAPImportType(getContext(), defaulttableitem_ldapimporttype);
	}

	/**
	 * Set value of DefaultTableItem_LDAPImportType
	 * @param context
	 * @param defaulttableitem_ldapimporttype
	 */
	public final void setDefaultTableItem_LDAPImportType(com.mendix.systemwideinterfaces.core.IContext context, interfaceconfiguration.proxies.DefaultTableItem defaulttableitem_ldapimporttype)
	{
		if (defaulttableitem_ldapimporttype == null)
			getMendixObject().setValue(context, MemberNames.DefaultTableItem_LDAPImportType.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.DefaultTableItem_LDAPImportType.toString(), defaulttableitem_ldapimporttype.getMendixObject().getId());
	}

	/**
	 * @return value of LDAPImportType_LDAPFilterGroup
	 */
	public final java.util.List<interfaceconfiguration.proxies.LDAPGroup> getLDAPImportType_LDAPFilterGroup() throws com.mendix.core.CoreException
	{
		return getLDAPImportType_LDAPFilterGroup(getContext());
	}

	/**
	 * @param context
	 * @return value of LDAPImportType_LDAPFilterGroup
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<interfaceconfiguration.proxies.LDAPGroup> getLDAPImportType_LDAPFilterGroup(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<interfaceconfiguration.proxies.LDAPGroup> result = new java.util.ArrayList<interfaceconfiguration.proxies.LDAPGroup>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.LDAPImportType_LDAPFilterGroup.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(interfaceconfiguration.proxies.LDAPGroup.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of LDAPImportType_LDAPFilterGroup
	 * @param ldapimporttype_ldapfiltergroup
	 */
	public final void setLDAPImportType_LDAPFilterGroup(java.util.List<interfaceconfiguration.proxies.LDAPGroup> ldapimporttype_ldapfiltergroup)
	{
		setLDAPImportType_LDAPFilterGroup(getContext(), ldapimporttype_ldapfiltergroup);
	}

	/**
	 * Set value of LDAPImportType_LDAPFilterGroup
	 * @param context
	 * @param ldapimporttype_ldapfiltergroup
	 */
	public final void setLDAPImportType_LDAPFilterGroup(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<interfaceconfiguration.proxies.LDAPGroup> ldapimporttype_ldapfiltergroup)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (interfaceconfiguration.proxies.LDAPGroup proxyObject : ldapimporttype_ldapfiltergroup)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.LDAPImportType_LDAPFilterGroup.toString(), identifiers);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return lDAPImportTypeMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final interfaceconfiguration.proxies.LDAPImportType that = (interfaceconfiguration.proxies.LDAPImportType) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "InterfaceConfiguration.LDAPImportType";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
