// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package interfaceconfiguration.proxies;

public class WebServiceInterfaceConfiguration extends interfaceconfiguration.proxies.InterfaceConfiguration
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "InterfaceConfiguration.WebServiceInterfaceConfiguration";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		ConfigureIncomingHeartBeats("ConfigureIncomingHeartBeats"),
		ConfigureOutgoingHeartBeats("ConfigureOutgoingHeartBeats"),
		OutgoingHeartBeatSuccessThreshold("OutgoingHeartBeatSuccessThreshold"),
		IncomingHeartBeatSuccessThreshold("IncomingHeartBeatSuccessThreshold"),
		OutgoingHeartBeatFrequency("OutgoingHeartBeatFrequency"),
		IncomingHeartBeatFrequency("IncomingHeartBeatFrequency"),
		CanUseHeartBeatAsRetry("CanUseHeartBeatAsRetry"),
		Name("Name"),
		Description("Description"),
		RetryInterval("RetryInterval"),
		IncomingDateTimeFormat("IncomingDateTimeFormat"),
		OutgoingDateTimeFormat("OutgoingDateTimeFormat"),
		DefaultDateTimeFormat("DefaultDateTimeFormat"),
		AsynchronousTimeOut("AsynchronousTimeOut"),
		IncomingStatus("IncomingStatus"),
		OutgoingStatus("OutgoingStatus"),
		MessageCleanUpAge("MessageCleanUpAge"),
		Debug("Debug"),
		ErrorMessageCleanUpAge("ErrorMessageCleanUpAge"),
		OutgoingHeartBeatWebServiceInterfaceMessageConfiguration_WebServiceInterfaceConfiguration("InterfaceConfiguration.OutgoingHeartBeatWebServiceInterfaceMessageConfiguration_WebServiceInterfaceConfiguration"),
		IncomingHeartBeatWebServiceInterfaceMessageConfiguration_WebServiceInterfaceConfiguration("InterfaceConfiguration.IncomingHeartBeatWebServiceInterfaceMessageConfiguration_WebServiceInterfaceConfiguration"),
		BINDING_WebServiceInterfaceMessageConfiguration_TO_WebServiceInterfaceConfiguration_DO_NOT_USE_IN_WORKFLOW("InterfaceConfiguration.BINDING_WebServiceInterfaceMessageConfiguration_TO_WebServiceInterfaceConfiguration_DO_NOT_USE_IN_WORKFLOW"),
		InterfaceMonitoring_InterfaceConfiguration("InterfaceConfiguration.InterfaceMonitoring_InterfaceConfiguration"),
		Note_InitiatingInterfaceConfiguration("Notes.Note_InitiatingInterfaceConfiguration"),
		UU95_RequestAttachment_InitiatingInterfaceConfiguration("Process.UU95_RequestAttachment_InitiatingInterfaceConfiguration"),
		TicketRelations_InitiatingInterfaceConfiguration("Process.TicketRelations_InitiatingInterfaceConfiguration");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public WebServiceInterfaceConfiguration(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "InterfaceConfiguration.WebServiceInterfaceConfiguration"));
	}

	protected WebServiceInterfaceConfiguration(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject webServiceInterfaceConfigurationMendixObject)
	{
		super(context, webServiceInterfaceConfigurationMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("InterfaceConfiguration.WebServiceInterfaceConfiguration", webServiceInterfaceConfigurationMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a InterfaceConfiguration.WebServiceInterfaceConfiguration");
	}

	/**
	 * @deprecated Use 'WebServiceInterfaceConfiguration.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static interfaceconfiguration.proxies.WebServiceInterfaceConfiguration initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return interfaceconfiguration.proxies.WebServiceInterfaceConfiguration.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static interfaceconfiguration.proxies.WebServiceInterfaceConfiguration initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new interfaceconfiguration.proxies.WebServiceInterfaceConfiguration(context, mendixObject);
	}

	public static interfaceconfiguration.proxies.WebServiceInterfaceConfiguration load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return interfaceconfiguration.proxies.WebServiceInterfaceConfiguration.initialize(context, mendixObject);
	}

	public static java.util.List<interfaceconfiguration.proxies.WebServiceInterfaceConfiguration> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<interfaceconfiguration.proxies.WebServiceInterfaceConfiguration> result = new java.util.ArrayList<interfaceconfiguration.proxies.WebServiceInterfaceConfiguration>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//InterfaceConfiguration.WebServiceInterfaceConfiguration" + xpathConstraint))
			result.add(interfaceconfiguration.proxies.WebServiceInterfaceConfiguration.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of ConfigureIncomingHeartBeats
	 */
	public final java.lang.Boolean getConfigureIncomingHeartBeats()
	{
		return getConfigureIncomingHeartBeats(getContext());
	}

	/**
	 * @param context
	 * @return value of ConfigureIncomingHeartBeats
	 */
	public final java.lang.Boolean getConfigureIncomingHeartBeats(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.ConfigureIncomingHeartBeats.toString());
	}

	/**
	 * Set value of ConfigureIncomingHeartBeats
	 * @param configureincomingheartbeats
	 */
	public final void setConfigureIncomingHeartBeats(java.lang.Boolean configureincomingheartbeats)
	{
		setConfigureIncomingHeartBeats(getContext(), configureincomingheartbeats);
	}

	/**
	 * Set value of ConfigureIncomingHeartBeats
	 * @param context
	 * @param configureincomingheartbeats
	 */
	public final void setConfigureIncomingHeartBeats(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean configureincomingheartbeats)
	{
		getMendixObject().setValue(context, MemberNames.ConfigureIncomingHeartBeats.toString(), configureincomingheartbeats);
	}

	/**
	 * @return value of ConfigureOutgoingHeartBeats
	 */
	public final java.lang.Boolean getConfigureOutgoingHeartBeats()
	{
		return getConfigureOutgoingHeartBeats(getContext());
	}

	/**
	 * @param context
	 * @return value of ConfigureOutgoingHeartBeats
	 */
	public final java.lang.Boolean getConfigureOutgoingHeartBeats(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.ConfigureOutgoingHeartBeats.toString());
	}

	/**
	 * Set value of ConfigureOutgoingHeartBeats
	 * @param configureoutgoingheartbeats
	 */
	public final void setConfigureOutgoingHeartBeats(java.lang.Boolean configureoutgoingheartbeats)
	{
		setConfigureOutgoingHeartBeats(getContext(), configureoutgoingheartbeats);
	}

	/**
	 * Set value of ConfigureOutgoingHeartBeats
	 * @param context
	 * @param configureoutgoingheartbeats
	 */
	public final void setConfigureOutgoingHeartBeats(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean configureoutgoingheartbeats)
	{
		getMendixObject().setValue(context, MemberNames.ConfigureOutgoingHeartBeats.toString(), configureoutgoingheartbeats);
	}

	/**
	 * @return value of OutgoingHeartBeatSuccessThreshold
	 */
	public final java.lang.Integer getOutgoingHeartBeatSuccessThreshold()
	{
		return getOutgoingHeartBeatSuccessThreshold(getContext());
	}

	/**
	 * @param context
	 * @return value of OutgoingHeartBeatSuccessThreshold
	 */
	public final java.lang.Integer getOutgoingHeartBeatSuccessThreshold(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.OutgoingHeartBeatSuccessThreshold.toString());
	}

	/**
	 * Set value of OutgoingHeartBeatSuccessThreshold
	 * @param outgoingheartbeatsuccessthreshold
	 */
	public final void setOutgoingHeartBeatSuccessThreshold(java.lang.Integer outgoingheartbeatsuccessthreshold)
	{
		setOutgoingHeartBeatSuccessThreshold(getContext(), outgoingheartbeatsuccessthreshold);
	}

	/**
	 * Set value of OutgoingHeartBeatSuccessThreshold
	 * @param context
	 * @param outgoingheartbeatsuccessthreshold
	 */
	public final void setOutgoingHeartBeatSuccessThreshold(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer outgoingheartbeatsuccessthreshold)
	{
		getMendixObject().setValue(context, MemberNames.OutgoingHeartBeatSuccessThreshold.toString(), outgoingheartbeatsuccessthreshold);
	}

	/**
	 * @return value of IncomingHeartBeatSuccessThreshold
	 */
	public final java.lang.Integer getIncomingHeartBeatSuccessThreshold()
	{
		return getIncomingHeartBeatSuccessThreshold(getContext());
	}

	/**
	 * @param context
	 * @return value of IncomingHeartBeatSuccessThreshold
	 */
	public final java.lang.Integer getIncomingHeartBeatSuccessThreshold(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.IncomingHeartBeatSuccessThreshold.toString());
	}

	/**
	 * Set value of IncomingHeartBeatSuccessThreshold
	 * @param incomingheartbeatsuccessthreshold
	 */
	public final void setIncomingHeartBeatSuccessThreshold(java.lang.Integer incomingheartbeatsuccessthreshold)
	{
		setIncomingHeartBeatSuccessThreshold(getContext(), incomingheartbeatsuccessthreshold);
	}

	/**
	 * Set value of IncomingHeartBeatSuccessThreshold
	 * @param context
	 * @param incomingheartbeatsuccessthreshold
	 */
	public final void setIncomingHeartBeatSuccessThreshold(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer incomingheartbeatsuccessthreshold)
	{
		getMendixObject().setValue(context, MemberNames.IncomingHeartBeatSuccessThreshold.toString(), incomingheartbeatsuccessthreshold);
	}

	/**
	 * @return value of OutgoingHeartBeatFrequency
	 */
	public final java.lang.Integer getOutgoingHeartBeatFrequency()
	{
		return getOutgoingHeartBeatFrequency(getContext());
	}

	/**
	 * @param context
	 * @return value of OutgoingHeartBeatFrequency
	 */
	public final java.lang.Integer getOutgoingHeartBeatFrequency(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.OutgoingHeartBeatFrequency.toString());
	}

	/**
	 * Set value of OutgoingHeartBeatFrequency
	 * @param outgoingheartbeatfrequency
	 */
	public final void setOutgoingHeartBeatFrequency(java.lang.Integer outgoingheartbeatfrequency)
	{
		setOutgoingHeartBeatFrequency(getContext(), outgoingheartbeatfrequency);
	}

	/**
	 * Set value of OutgoingHeartBeatFrequency
	 * @param context
	 * @param outgoingheartbeatfrequency
	 */
	public final void setOutgoingHeartBeatFrequency(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer outgoingheartbeatfrequency)
	{
		getMendixObject().setValue(context, MemberNames.OutgoingHeartBeatFrequency.toString(), outgoingheartbeatfrequency);
	}

	/**
	 * @return value of IncomingHeartBeatFrequency
	 */
	public final java.lang.Integer getIncomingHeartBeatFrequency()
	{
		return getIncomingHeartBeatFrequency(getContext());
	}

	/**
	 * @param context
	 * @return value of IncomingHeartBeatFrequency
	 */
	public final java.lang.Integer getIncomingHeartBeatFrequency(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.IncomingHeartBeatFrequency.toString());
	}

	/**
	 * Set value of IncomingHeartBeatFrequency
	 * @param incomingheartbeatfrequency
	 */
	public final void setIncomingHeartBeatFrequency(java.lang.Integer incomingheartbeatfrequency)
	{
		setIncomingHeartBeatFrequency(getContext(), incomingheartbeatfrequency);
	}

	/**
	 * Set value of IncomingHeartBeatFrequency
	 * @param context
	 * @param incomingheartbeatfrequency
	 */
	public final void setIncomingHeartBeatFrequency(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer incomingheartbeatfrequency)
	{
		getMendixObject().setValue(context, MemberNames.IncomingHeartBeatFrequency.toString(), incomingheartbeatfrequency);
	}

	/**
	 * @return value of CanUseHeartBeatAsRetry
	 */
	public final java.lang.Boolean getCanUseHeartBeatAsRetry()
	{
		return getCanUseHeartBeatAsRetry(getContext());
	}

	/**
	 * @param context
	 * @return value of CanUseHeartBeatAsRetry
	 */
	public final java.lang.Boolean getCanUseHeartBeatAsRetry(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.CanUseHeartBeatAsRetry.toString());
	}

	/**
	 * Set value of CanUseHeartBeatAsRetry
	 * @param canuseheartbeatasretry
	 */
	public final void setCanUseHeartBeatAsRetry(java.lang.Boolean canuseheartbeatasretry)
	{
		setCanUseHeartBeatAsRetry(getContext(), canuseheartbeatasretry);
	}

	/**
	 * Set value of CanUseHeartBeatAsRetry
	 * @param context
	 * @param canuseheartbeatasretry
	 */
	public final void setCanUseHeartBeatAsRetry(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean canuseheartbeatasretry)
	{
		getMendixObject().setValue(context, MemberNames.CanUseHeartBeatAsRetry.toString(), canuseheartbeatasretry);
	}

	/**
	 * @return value of OutgoingHeartBeatWebServiceInterfaceMessageConfiguration_WebServiceInterfaceConfiguration
	 */
	public final interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration getOutgoingHeartBeatWebServiceInterfaceMessageConfiguration_WebServiceInterfaceConfiguration() throws com.mendix.core.CoreException
	{
		return getOutgoingHeartBeatWebServiceInterfaceMessageConfiguration_WebServiceInterfaceConfiguration(getContext());
	}

	/**
	 * @param context
	 * @return value of OutgoingHeartBeatWebServiceInterfaceMessageConfiguration_WebServiceInterfaceConfiguration
	 */
	public final interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration getOutgoingHeartBeatWebServiceInterfaceMessageConfiguration_WebServiceInterfaceConfiguration(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.OutgoingHeartBeatWebServiceInterfaceMessageConfiguration_WebServiceInterfaceConfiguration.toString());
		if (identifier != null)
			result = interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration.load(context, identifier);
		return result;
	}

	/**
	 * Set value of OutgoingHeartBeatWebServiceInterfaceMessageConfiguration_WebServiceInterfaceConfiguration
	 * @param outgoingheartbeatwebserviceinterfacemessageconfiguration_webserviceinterfaceconfiguration
	 */
	public final void setOutgoingHeartBeatWebServiceInterfaceMessageConfiguration_WebServiceInterfaceConfiguration(interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration outgoingheartbeatwebserviceinterfacemessageconfiguration_webserviceinterfaceconfiguration)
	{
		setOutgoingHeartBeatWebServiceInterfaceMessageConfiguration_WebServiceInterfaceConfiguration(getContext(), outgoingheartbeatwebserviceinterfacemessageconfiguration_webserviceinterfaceconfiguration);
	}

	/**
	 * Set value of OutgoingHeartBeatWebServiceInterfaceMessageConfiguration_WebServiceInterfaceConfiguration
	 * @param context
	 * @param outgoingheartbeatwebserviceinterfacemessageconfiguration_webserviceinterfaceconfiguration
	 */
	public final void setOutgoingHeartBeatWebServiceInterfaceMessageConfiguration_WebServiceInterfaceConfiguration(com.mendix.systemwideinterfaces.core.IContext context, interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration outgoingheartbeatwebserviceinterfacemessageconfiguration_webserviceinterfaceconfiguration)
	{
		if (outgoingheartbeatwebserviceinterfacemessageconfiguration_webserviceinterfaceconfiguration == null)
			getMendixObject().setValue(context, MemberNames.OutgoingHeartBeatWebServiceInterfaceMessageConfiguration_WebServiceInterfaceConfiguration.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.OutgoingHeartBeatWebServiceInterfaceMessageConfiguration_WebServiceInterfaceConfiguration.toString(), outgoingheartbeatwebserviceinterfacemessageconfiguration_webserviceinterfaceconfiguration.getMendixObject().getId());
	}

	/**
	 * @return value of IncomingHeartBeatWebServiceInterfaceMessageConfiguration_WebServiceInterfaceConfiguration
	 */
	public final interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration getIncomingHeartBeatWebServiceInterfaceMessageConfiguration_WebServiceInterfaceConfiguration() throws com.mendix.core.CoreException
	{
		return getIncomingHeartBeatWebServiceInterfaceMessageConfiguration_WebServiceInterfaceConfiguration(getContext());
	}

	/**
	 * @param context
	 * @return value of IncomingHeartBeatWebServiceInterfaceMessageConfiguration_WebServiceInterfaceConfiguration
	 */
	public final interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration getIncomingHeartBeatWebServiceInterfaceMessageConfiguration_WebServiceInterfaceConfiguration(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.IncomingHeartBeatWebServiceInterfaceMessageConfiguration_WebServiceInterfaceConfiguration.toString());
		if (identifier != null)
			result = interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration.load(context, identifier);
		return result;
	}

	/**
	 * Set value of IncomingHeartBeatWebServiceInterfaceMessageConfiguration_WebServiceInterfaceConfiguration
	 * @param incomingheartbeatwebserviceinterfacemessageconfiguration_webserviceinterfaceconfiguration
	 */
	public final void setIncomingHeartBeatWebServiceInterfaceMessageConfiguration_WebServiceInterfaceConfiguration(interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration incomingheartbeatwebserviceinterfacemessageconfiguration_webserviceinterfaceconfiguration)
	{
		setIncomingHeartBeatWebServiceInterfaceMessageConfiguration_WebServiceInterfaceConfiguration(getContext(), incomingheartbeatwebserviceinterfacemessageconfiguration_webserviceinterfaceconfiguration);
	}

	/**
	 * Set value of IncomingHeartBeatWebServiceInterfaceMessageConfiguration_WebServiceInterfaceConfiguration
	 * @param context
	 * @param incomingheartbeatwebserviceinterfacemessageconfiguration_webserviceinterfaceconfiguration
	 */
	public final void setIncomingHeartBeatWebServiceInterfaceMessageConfiguration_WebServiceInterfaceConfiguration(com.mendix.systemwideinterfaces.core.IContext context, interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration incomingheartbeatwebserviceinterfacemessageconfiguration_webserviceinterfaceconfiguration)
	{
		if (incomingheartbeatwebserviceinterfacemessageconfiguration_webserviceinterfaceconfiguration == null)
			getMendixObject().setValue(context, MemberNames.IncomingHeartBeatWebServiceInterfaceMessageConfiguration_WebServiceInterfaceConfiguration.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.IncomingHeartBeatWebServiceInterfaceMessageConfiguration_WebServiceInterfaceConfiguration.toString(), incomingheartbeatwebserviceinterfacemessageconfiguration_webserviceinterfaceconfiguration.getMendixObject().getId());
	}

	/**
	 * @return value of BINDING_WebServiceInterfaceMessageConfiguration_TO_WebServiceInterfaceConfiguration_DO_NOT_USE_IN_WORKFLOW
	 */
	public final interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration getBINDING_WebServiceInterfaceMessageConfiguration_TO_WebServiceInterfaceConfiguration_DO_NOT_USE_IN_WORKFLOW() throws com.mendix.core.CoreException
	{
		return getBINDING_WebServiceInterfaceMessageConfiguration_TO_WebServiceInterfaceConfiguration_DO_NOT_USE_IN_WORKFLOW(getContext());
	}

	/**
	 * @param context
	 * @return value of BINDING_WebServiceInterfaceMessageConfiguration_TO_WebServiceInterfaceConfiguration_DO_NOT_USE_IN_WORKFLOW
	 */
	public final interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration getBINDING_WebServiceInterfaceMessageConfiguration_TO_WebServiceInterfaceConfiguration_DO_NOT_USE_IN_WORKFLOW(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.BINDING_WebServiceInterfaceMessageConfiguration_TO_WebServiceInterfaceConfiguration_DO_NOT_USE_IN_WORKFLOW.toString());
		if (identifier != null)
			result = interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration.load(context, identifier);
		return result;
	}

	/**
	 * Set value of BINDING_WebServiceInterfaceMessageConfiguration_TO_WebServiceInterfaceConfiguration_DO_NOT_USE_IN_WORKFLOW
	 * @param binding_webserviceinterfacemessageconfiguration_to_webserviceinterfaceconfiguration_do_not_use_in_workflow
	 */
	public final void setBINDING_WebServiceInterfaceMessageConfiguration_TO_WebServiceInterfaceConfiguration_DO_NOT_USE_IN_WORKFLOW(interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration binding_webserviceinterfacemessageconfiguration_to_webserviceinterfaceconfiguration_do_not_use_in_workflow)
	{
		setBINDING_WebServiceInterfaceMessageConfiguration_TO_WebServiceInterfaceConfiguration_DO_NOT_USE_IN_WORKFLOW(getContext(), binding_webserviceinterfacemessageconfiguration_to_webserviceinterfaceconfiguration_do_not_use_in_workflow);
	}

	/**
	 * Set value of BINDING_WebServiceInterfaceMessageConfiguration_TO_WebServiceInterfaceConfiguration_DO_NOT_USE_IN_WORKFLOW
	 * @param context
	 * @param binding_webserviceinterfacemessageconfiguration_to_webserviceinterfaceconfiguration_do_not_use_in_workflow
	 */
	public final void setBINDING_WebServiceInterfaceMessageConfiguration_TO_WebServiceInterfaceConfiguration_DO_NOT_USE_IN_WORKFLOW(com.mendix.systemwideinterfaces.core.IContext context, interfaceconfiguration.proxies.WebServiceInterfaceMessageConfiguration binding_webserviceinterfacemessageconfiguration_to_webserviceinterfaceconfiguration_do_not_use_in_workflow)
	{
		if (binding_webserviceinterfacemessageconfiguration_to_webserviceinterfaceconfiguration_do_not_use_in_workflow == null)
			getMendixObject().setValue(context, MemberNames.BINDING_WebServiceInterfaceMessageConfiguration_TO_WebServiceInterfaceConfiguration_DO_NOT_USE_IN_WORKFLOW.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.BINDING_WebServiceInterfaceMessageConfiguration_TO_WebServiceInterfaceConfiguration_DO_NOT_USE_IN_WORKFLOW.toString(), binding_webserviceinterfacemessageconfiguration_to_webserviceinterfaceconfiguration_do_not_use_in_workflow.getMendixObject().getId());
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final interfaceconfiguration.proxies.WebServiceInterfaceConfiguration that = (interfaceconfiguration.proxies.WebServiceInterfaceConfiguration) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "InterfaceConfiguration.WebServiceInterfaceConfiguration";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
