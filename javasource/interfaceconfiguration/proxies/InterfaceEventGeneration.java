// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package interfaceconfiguration.proxies;

public class InterfaceEventGeneration
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject interfaceEventGenerationMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "InterfaceConfiguration.InterfaceEventGeneration";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		MessageStatus("MessageStatus"),
		InterfaceEventGeneration_InterfaceMessageConfiguration("InterfaceConfiguration.InterfaceEventGeneration_InterfaceMessageConfiguration");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public InterfaceEventGeneration(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "InterfaceConfiguration.InterfaceEventGeneration"));
	}

	protected InterfaceEventGeneration(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject interfaceEventGenerationMendixObject)
	{
		if (interfaceEventGenerationMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("InterfaceConfiguration.InterfaceEventGeneration", interfaceEventGenerationMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a InterfaceConfiguration.InterfaceEventGeneration");

		this.interfaceEventGenerationMendixObject = interfaceEventGenerationMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'InterfaceEventGeneration.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static interfaceconfiguration.proxies.InterfaceEventGeneration initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return interfaceconfiguration.proxies.InterfaceEventGeneration.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static interfaceconfiguration.proxies.InterfaceEventGeneration initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new interfaceconfiguration.proxies.InterfaceEventGeneration(context, mendixObject);
	}

	public static interfaceconfiguration.proxies.InterfaceEventGeneration load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return interfaceconfiguration.proxies.InterfaceEventGeneration.initialize(context, mendixObject);
	}

	public static java.util.List<interfaceconfiguration.proxies.InterfaceEventGeneration> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<interfaceconfiguration.proxies.InterfaceEventGeneration> result = new java.util.ArrayList<interfaceconfiguration.proxies.InterfaceEventGeneration>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//InterfaceConfiguration.InterfaceEventGeneration" + xpathConstraint))
			result.add(interfaceconfiguration.proxies.InterfaceEventGeneration.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * Set value of MessageStatus
	 * @param messagestatus
	 */
	public final interfaceshared.proxies.MessageStatus getMessageStatus()
	{
		return getMessageStatus(getContext());
	}

	/**
	 * @param context
	 * @return value of MessageStatus
	 */
	public final interfaceshared.proxies.MessageStatus getMessageStatus(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.MessageStatus.toString());
		if (obj == null)
			return null;

		return interfaceshared.proxies.MessageStatus.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of MessageStatus
	 * @param messagestatus
	 */
	public final void setMessageStatus(interfaceshared.proxies.MessageStatus messagestatus)
	{
		setMessageStatus(getContext(), messagestatus);
	}

	/**
	 * Set value of MessageStatus
	 * @param context
	 * @param messagestatus
	 */
	public final void setMessageStatus(com.mendix.systemwideinterfaces.core.IContext context, interfaceshared.proxies.MessageStatus messagestatus)
	{
		if (messagestatus != null)
			getMendixObject().setValue(context, MemberNames.MessageStatus.toString(), messagestatus.toString());
		else
			getMendixObject().setValue(context, MemberNames.MessageStatus.toString(), null);
	}

	/**
	 * @return value of InterfaceEventGeneration_InterfaceMessageConfiguration
	 */
	public final interfaceconfiguration.proxies.InterfaceMessageConfiguration getInterfaceEventGeneration_InterfaceMessageConfiguration() throws com.mendix.core.CoreException
	{
		return getInterfaceEventGeneration_InterfaceMessageConfiguration(getContext());
	}

	/**
	 * @param context
	 * @return value of InterfaceEventGeneration_InterfaceMessageConfiguration
	 */
	public final interfaceconfiguration.proxies.InterfaceMessageConfiguration getInterfaceEventGeneration_InterfaceMessageConfiguration(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfaceconfiguration.proxies.InterfaceMessageConfiguration result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.InterfaceEventGeneration_InterfaceMessageConfiguration.toString());
		if (identifier != null)
			result = interfaceconfiguration.proxies.InterfaceMessageConfiguration.load(context, identifier);
		return result;
	}

	/**
	 * Set value of InterfaceEventGeneration_InterfaceMessageConfiguration
	 * @param interfaceeventgeneration_interfacemessageconfiguration
	 */
	public final void setInterfaceEventGeneration_InterfaceMessageConfiguration(interfaceconfiguration.proxies.InterfaceMessageConfiguration interfaceeventgeneration_interfacemessageconfiguration)
	{
		setInterfaceEventGeneration_InterfaceMessageConfiguration(getContext(), interfaceeventgeneration_interfacemessageconfiguration);
	}

	/**
	 * Set value of InterfaceEventGeneration_InterfaceMessageConfiguration
	 * @param context
	 * @param interfaceeventgeneration_interfacemessageconfiguration
	 */
	public final void setInterfaceEventGeneration_InterfaceMessageConfiguration(com.mendix.systemwideinterfaces.core.IContext context, interfaceconfiguration.proxies.InterfaceMessageConfiguration interfaceeventgeneration_interfacemessageconfiguration)
	{
		if (interfaceeventgeneration_interfacemessageconfiguration == null)
			getMendixObject().setValue(context, MemberNames.InterfaceEventGeneration_InterfaceMessageConfiguration.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.InterfaceEventGeneration_InterfaceMessageConfiguration.toString(), interfaceeventgeneration_interfacemessageconfiguration.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return interfaceEventGenerationMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final interfaceconfiguration.proxies.InterfaceEventGeneration that = (interfaceconfiguration.proxies.InterfaceEventGeneration) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "InterfaceConfiguration.InterfaceEventGeneration";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
