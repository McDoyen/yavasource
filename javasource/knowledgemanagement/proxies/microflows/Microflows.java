// This file was generated by Mendix Modeler 7.7.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package knowledgemanagement.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the KnowledgeManagement module
	public static void cI_SetAspect(IContext context, knowledgemanagement.proxies.Knowledge _knowledge, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation, boolean _usedForScheduledRequest, java.lang.Long _maxDropDownResultSize)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			params.put("UsedForScheduledRequest", _usedForScheduledRequest);
			params.put("MaxDropDownResultSize", _maxDropDownResultSize);
			Core.execute(context, "KnowledgeManagement.CI_SetAspect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<cmdb.proxies.ConfigurationItem> cIList_All_EntityAccess(IContext context, knowledgemanagement.proxies.Knowledge _knowledge, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			java.util.List<IMendixObject> objs = Core.execute(context, "KnowledgeManagement.CIList_All_EntityAccess", params);
			java.util.List<cmdb.proxies.ConfigurationItem> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<cmdb.proxies.ConfigurationItem>();
				for (IMendixObject obj : objs)
					result.add(cmdb.proxies.ConfigurationItem.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long cIList_Count(IContext context, knowledgemanagement.proxies.Knowledge _knowledge, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation, boolean _usedForScheduledRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			params.put("UsedForScheduledRequest", _usedForScheduledRequest);
			return (java.lang.Long)Core.execute(context, "KnowledgeManagement.CIList_Count", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<cmdb.proxies.ConfigurationItem> cIList_SLA_All_EntityAccess(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "KnowledgeManagement.CIList_SLA_All_EntityAccess", params);
			java.util.List<cmdb.proxies.ConfigurationItem> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<cmdb.proxies.ConfigurationItem>();
				for (IMendixObject obj : objs)
					result.add(cmdb.proxies.ConfigurationItem.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<cmdb.proxies.ConfigurationItem> cIList_SLA_All_PopUp(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "KnowledgeManagement.CIList_SLA_All_PopUp", params);
			java.util.List<cmdb.proxies.ConfigurationItem> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<cmdb.proxies.ConfigurationItem>();
				for (IMendixObject obj : objs)
					result.add(cmdb.proxies.ConfigurationItem.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void contract_SetAspect(IContext context, knowledgemanagement.proxies.Knowledge _knowledge, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation, boolean _usedForScheduledRequest, java.lang.Long _maxDropDownResultSize)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			params.put("UsedForScheduledRequest", _usedForScheduledRequest);
			params.put("MaxDropDownResultSize", _maxDropDownResultSize);
			Core.execute(context, "KnowledgeManagement.Contract_SetAspect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Contract> contractList_All_EntityAccess(IContext context, knowledgemanagement.proxies.Knowledge _knowledge, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			java.util.List<IMendixObject> objs = Core.execute(context, "KnowledgeManagement.ContractList_All_EntityAccess", params);
			java.util.List<slm.proxies.Contract> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Contract>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Contract.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long contractList_Count(IContext context, knowledgemanagement.proxies.Knowledge _knowledge, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation, boolean _usedForScheduledRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			params.put("UsedForScheduledRequest", _usedForScheduledRequest);
			return (java.lang.Long)Core.execute(context, "KnowledgeManagement.ContractList_Count", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Contract> contractList_SLA_All_EntityAccess(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "KnowledgeManagement.ContractList_SLA_All_EntityAccess", params);
			java.util.List<slm.proxies.Contract> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Contract>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Contract.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Contract> contractList_SLA_All_PopUp(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "KnowledgeManagement.ContractList_SLA_All_PopUp", params);
			java.util.List<slm.proxies.Contract> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Contract>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Contract.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void createNewKnowledge(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "KnowledgeManagement.CreateNewKnowledge", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deliveringOrganisation_SetAspect(IContext context, knowledgemanagement.proxies.Knowledge _knowledge, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation, boolean _usedForScheduledRequest, java.lang.Long _maxDropDownResultSize)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			params.put("UsedForScheduledRequest", _usedForScheduledRequest);
			params.put("MaxDropDownResultSize", _maxDropDownResultSize);
			Core.execute(context, "KnowledgeManagement.DeliveringOrganisation_SetAspect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<nap.proxies.Organisation> deliveringOrganisationList_All_EntityAccess(IContext context, knowledgemanagement.proxies.Knowledge _knowledge, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			java.util.List<IMendixObject> objs = Core.execute(context, "KnowledgeManagement.DeliveringOrganisationList_All_EntityAccess", params);
			java.util.List<nap.proxies.Organisation> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<nap.proxies.Organisation>();
				for (IMendixObject obj : objs)
					result.add(nap.proxies.Organisation.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long deliveringOrganisationList_Count(IContext context, knowledgemanagement.proxies.Knowledge _knowledge, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation, boolean _usedForScheduledRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			params.put("UsedForScheduledRequest", _usedForScheduledRequest);
			return (java.lang.Long)Core.execute(context, "KnowledgeManagement.DeliveringOrganisationList_Count", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<nap.proxies.Organisation> deliveringOrganisationList_SLA_All_EntityAccess(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "KnowledgeManagement.DeliveringOrganisationList_SLA_All_EntityAccess", params);
			java.util.List<nap.proxies.Organisation> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<nap.proxies.Organisation>();
				for (IMendixObject obj : objs)
					result.add(nap.proxies.Organisation.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<nap.proxies.Organisation> deliveringOrganisationList_SLA_All_PopUp(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "KnowledgeManagement.DeliveringOrganisationList_SLA_All_PopUp", params);
			java.util.List<nap.proxies.Organisation> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<nap.proxies.Organisation>();
				for (IMendixObject obj : objs)
					result.add(nap.proxies.Organisation.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void fill_IUP_combination_by_Impact_Urgency_Priority(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			Core.execute(context, "KnowledgeManagement.Fill_IUP_combination_by_Impact_Urgency_Priority", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void get_Commitment_WithContract(IContext context, knowledgemanagement.proxies.Knowledge _knowledge, slm.proxies.Contract _contract)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			params.put("Contract", _contract == null ? null : _contract.getMendixObject());
			Core.execute(context, "KnowledgeManagement.Get_Commitment_WithContract", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<categories.proxies.Category> getCategoryListClosure_Root_Knowledge(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "KnowledgeManagement.GetCategoryListClosure_Root_Knowledge", params);
			java.util.List<categories.proxies.Category> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<categories.proxies.Category>();
				for (IMendixObject obj : objs)
					result.add(categories.proxies.Category.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<categories.proxies.Category> getCategoryListOpening_Root_Knowledge(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "KnowledgeManagement.GetCategoryListOpening_Root_Knowledge", params);
			java.util.List<categories.proxies.Category> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<categories.proxies.Category>();
				for (IMendixObject obj : objs)
					result.add(categories.proxies.Category.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<categories.proxies.Category> getClosureCategoryListSubLevel_Knowledge(IContext context, knowledgemanagement.proxies.Knowledge _knowledgeItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("KnowledgeItem", _knowledgeItem == null ? null : _knowledgeItem.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "KnowledgeManagement.GetClosureCategoryListSubLevel_Knowledge", params);
			java.util.List<categories.proxies.Category> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<categories.proxies.Category>();
				for (IMendixObject obj : objs)
					result.add(categories.proxies.Category.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static slm_notifications.proxies.ResolveTimeBy getCommitmentResolveTimeBy(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			java.lang.String result = (java.lang.String)Core.execute(context, "KnowledgeManagement.GetCommitmentResolveTimeBy", params);
			if (result == null)
				return null;
			return slm_notifications.proxies.ResolveTimeBy.valueOf(result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<categories.proxies.Category> getOpeningCategoryListSubLevel_Knowledge(IContext context, knowledgemanagement.proxies.Knowledge _knowledgeItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("KnowledgeItem", _knowledgeItem == null ? null : _knowledgeItem.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "KnowledgeManagement.GetOpeningCategoryListSubLevel_Knowledge", params);
			java.util.List<categories.proxies.Category> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<categories.proxies.Category>();
				for (IMendixObject obj : objs)
					result.add(categories.proxies.Category.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void handleCategories(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			Core.execute(context, "KnowledgeManagement.HandleCategories", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void impact_SetAspect(IContext context, knowledgemanagement.proxies.Knowledge _knowledge, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation, boolean _usedForScheduledRequest, java.lang.Long _maxDropDownResultSize)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			params.put("UsedForScheduledRequest", _usedForScheduledRequest);
			params.put("MaxDropDownResultSize", _maxDropDownResultSize);
			Core.execute(context, "KnowledgeManagement.Impact_SetAspect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Impact> impactList_All_EntityAccess(IContext context, knowledgemanagement.proxies.Knowledge _knowledge, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			java.util.List<IMendixObject> objs = Core.execute(context, "KnowledgeManagement.ImpactList_All_EntityAccess", params);
			java.util.List<slm.proxies.Impact> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Impact>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Impact.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long impactList_Count(IContext context, knowledgemanagement.proxies.Knowledge _knowledge, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation, boolean _usedForScheduledRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			params.put("UsedForScheduledRequest", _usedForScheduledRequest);
			return (java.lang.Long)Core.execute(context, "KnowledgeManagement.ImpactList_Count", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Impact> impactList_SLA_All_EntityAccess(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "KnowledgeManagement.ImpactList_SLA_All_EntityAccess", params);
			java.util.List<slm.proxies.Impact> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Impact>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Impact.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Impact> impactList_SLA_All_PopUp(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "KnowledgeManagement.ImpactList_SLA_All_PopUp", params);
			java.util.List<slm.proxies.Impact> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Impact>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Impact.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long iUPCombinationList_Count(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			return (java.lang.Long)Core.execute(context, "KnowledgeManagement.IUPCombinationList_Count", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static slm.proxies.IUP_Combination iUPCombinationList_First(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "KnowledgeManagement.IUPCombinationList_First", params);
			return result == null ? null : slm.proxies.IUP_Combination.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_Open_Knowledge(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "KnowledgeManagement.IVK_Button_Open_Knowledge", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearAspectFields(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			Core.execute(context, "KnowledgeManagement.IVK_ClearAspectFields", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearIUP_SLA(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			Core.execute(context, "KnowledgeManagement.IVK_ClearIUP_SLA", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearServiceProcess(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			Core.execute(context, "KnowledgeManagement.IVK_ClearServiceProcess", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Knowledge_SelectSLACI(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			Core.execute(context, "KnowledgeManagement.IVK_Knowledge_SelectSLACI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Knowledge_SelectSLACI_2(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			Core.execute(context, "KnowledgeManagement.IVK_Knowledge_SelectSLACI_2", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Knowledge_SelectSLACI_3(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			Core.execute(context, "KnowledgeManagement.IVK_Knowledge_SelectSLACI_3", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Knowledge_SelectSLAContract(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			Core.execute(context, "KnowledgeManagement.IVK_Knowledge_SelectSLAContract", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Knowledge_SelectSLADeliveringOrganisation(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			Core.execute(context, "KnowledgeManagement.IVK_Knowledge_SelectSLADeliveringOrganisation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Knowledge_SelectSLAImpact(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			Core.execute(context, "KnowledgeManagement.IVK_Knowledge_SelectSLAImpact", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Knowledge_SelectSLAPriority(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			Core.execute(context, "KnowledgeManagement.IVK_Knowledge_SelectSLAPriority", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Knowledge_SelectSLAService(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			Core.execute(context, "KnowledgeManagement.IVK_Knowledge_SelectSLAService", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Knowledge_SelectSLAServiceProcess(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			Core.execute(context, "KnowledgeManagement.IVK_Knowledge_SelectSLAServiceProcess", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Knowledge_SelectSLAUrgency(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			Core.execute(context, "KnowledgeManagement.IVK_Knowledge_SelectSLAUrgency", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_KnowledgeCancel(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			Core.execute(context, "KnowledgeManagement.IVK_KnowledgeCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_KnowledgeSave(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			Core.execute(context, "KnowledgeManagement.IVK_KnowledgeSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_KnowledgeSaveAndClose(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			Core.execute(context, "KnowledgeManagement.IVK_KnowledgeSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Organisation_SelectCancel(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "KnowledgeManagement.IVK_Organisation_SelectCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectKnowledgeSLACI(IContext context, cmdb.proxies.ConfigurationItem _configurationItem, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ConfigurationItem", _configurationItem == null ? null : _configurationItem.getMendixObject());
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			Core.execute(context, "KnowledgeManagement.IVK_SelectKnowledgeSLACI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectKnowledgeSLACI_2(IContext context, cmdb.proxies.ConfigurationItem _configurationItem, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ConfigurationItem", _configurationItem == null ? null : _configurationItem.getMendixObject());
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			Core.execute(context, "KnowledgeManagement.IVK_SelectKnowledgeSLACI_2", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectKnowledgeSLACI_3(IContext context, cmdb.proxies.ConfigurationItem _configurationItem, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ConfigurationItem", _configurationItem == null ? null : _configurationItem.getMendixObject());
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			Core.execute(context, "KnowledgeManagement.IVK_SelectKnowledgeSLACI_3", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectKnowledgeSLAContract(IContext context, slm.proxies.Contract _contract, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Contract", _contract == null ? null : _contract.getMendixObject());
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			Core.execute(context, "KnowledgeManagement.IVK_SelectKnowledgeSLAContract", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectKnowledgeSLADeliveringOrganisation(IContext context, nap.proxies.Organisation _deliveringOrganisation, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DeliveringOrganisation", _deliveringOrganisation == null ? null : _deliveringOrganisation.getMendixObject());
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			Core.execute(context, "KnowledgeManagement.IVK_SelectKnowledgeSLADeliveringOrganisation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectKnowledgeSLAImpact(IContext context, slm.proxies.Impact _impact, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Impact", _impact == null ? null : _impact.getMendixObject());
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			Core.execute(context, "KnowledgeManagement.IVK_SelectKnowledgeSLAImpact", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectKnowledgeSLAPriority(IContext context, slm.proxies.Priority _priority, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Priority", _priority == null ? null : _priority.getMendixObject());
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			Core.execute(context, "KnowledgeManagement.IVK_SelectKnowledgeSLAPriority", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectKnowledgeSLAService(IContext context, slm.proxies.Service _service, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Service", _service == null ? null : _service.getMendixObject());
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			Core.execute(context, "KnowledgeManagement.IVK_SelectKnowledgeSLAService", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectKnowledgeSLAServiceProcess(IContext context, slm.proxies.Service_Process _service_Process, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Service_Process", _service_Process == null ? null : _service_Process.getMendixObject());
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			Core.execute(context, "KnowledgeManagement.IVK_SelectKnowledgeSLAServiceProcess", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectKnowledgeSLAUrgency(IContext context, slm.proxies.Urgency _urgency, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Urgency", _urgency == null ? null : _urgency.getMendixObject());
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			Core.execute(context, "KnowledgeManagement.IVK_SelectKnowledgeSLAUrgency", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void priority_SetAspect(IContext context, knowledgemanagement.proxies.Knowledge _knowledge, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation, boolean _usedForScheduledRequest, java.lang.Long _maxDropDownResultSize)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			params.put("UsedForScheduledRequest", _usedForScheduledRequest);
			params.put("MaxDropDownResultSize", _maxDropDownResultSize);
			Core.execute(context, "KnowledgeManagement.Priority_SetAspect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Priority> priorityList_All_EntityAccess(IContext context, knowledgemanagement.proxies.Knowledge _knowledge, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			java.util.List<IMendixObject> objs = Core.execute(context, "KnowledgeManagement.PriorityList_All_EntityAccess", params);
			java.util.List<slm.proxies.Priority> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Priority>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Priority.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long priorityList_Count(IContext context, knowledgemanagement.proxies.Knowledge _knowledge, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation, boolean _usedForScheduledRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			params.put("UsedForScheduledRequest", _usedForScheduledRequest);
			return (java.lang.Long)Core.execute(context, "KnowledgeManagement.PriorityList_Count", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Priority> priorityList_SLA_All_EntityAccess(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "KnowledgeManagement.PriorityList_SLA_All_EntityAccess", params);
			java.util.List<slm.proxies.Priority> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Priority>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Priority.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Priority> priorityList_SLA_All_PopUp(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "KnowledgeManagement.PriorityList_SLA_All_PopUp", params);
			java.util.List<slm.proxies.Priority> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Priority>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Priority.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean sanitizeKnowledgeDescriptionHTML(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "KnowledgeManagement.SanitizeKnowledgeDescriptionHTML", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<cmdb.proxies.ConfigurationItem> selectCILevel2(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "KnowledgeManagement.SelectCILevel2", params);
			java.util.List<cmdb.proxies.ConfigurationItem> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<cmdb.proxies.ConfigurationItem>();
				for (IMendixObject obj : objs)
					result.add(cmdb.proxies.ConfigurationItem.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<cmdb.proxies.ConfigurationItem> selectLevel2CI(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "KnowledgeManagement.SelectLevel2CI", params);
			java.util.List<cmdb.proxies.ConfigurationItem> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<cmdb.proxies.ConfigurationItem>();
				for (IMendixObject obj : objs)
					result.add(cmdb.proxies.ConfigurationItem.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<cmdb.proxies.ConfigurationItem> selectLevel3CI(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "KnowledgeManagement.SelectLevel3CI", params);
			java.util.List<cmdb.proxies.ConfigurationItem> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<cmdb.proxies.ConfigurationItem>();
				for (IMendixObject obj : objs)
					result.add(cmdb.proxies.ConfigurationItem.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void service_SetAspect(IContext context, knowledgemanagement.proxies.Knowledge _knowledge, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation, boolean _usedForScheduledRequest, java.lang.Long _maxDropDownResultSize)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			params.put("UsedForScheduledRequest", _usedForScheduledRequest);
			params.put("MaxDropDownResultSize", _maxDropDownResultSize);
			Core.execute(context, "KnowledgeManagement.Service_SetAspect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Service> serviceList_All_EntityAccess(IContext context, knowledgemanagement.proxies.Knowledge _knowledge, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			java.util.List<IMendixObject> objs = Core.execute(context, "KnowledgeManagement.ServiceList_All_EntityAccess", params);
			java.util.List<slm.proxies.Service> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Service>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Service.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long serviceList_Count(IContext context, knowledgemanagement.proxies.Knowledge _knowledge, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation, boolean _usedForScheduledRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			params.put("UsedForScheduledRequest", _usedForScheduledRequest);
			return (java.lang.Long)Core.execute(context, "KnowledgeManagement.ServiceList_Count", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Service> serviceList_SLA_All_EntityAccess(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "KnowledgeManagement.ServiceList_SLA_All_EntityAccess", params);
			java.util.List<slm.proxies.Service> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Service>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Service.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Service> serviceList_SLA_All_PopUp(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "KnowledgeManagement.ServiceList_SLA_All_PopUp", params);
			java.util.List<slm.proxies.Service> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Service>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Service.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void serviceProcess_SetAspect(IContext context, knowledgemanagement.proxies.Knowledge _knowledge, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation, boolean _usedForScheduledRequest, java.lang.Long _maxDropDownResultSize)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			params.put("UsedForScheduledRequest", _usedForScheduledRequest);
			params.put("MaxDropDownResultSize", _maxDropDownResultSize);
			Core.execute(context, "KnowledgeManagement.ServiceProcess_SetAspect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Service_Process> serviceProcessList_All_EntityAccess(IContext context, knowledgemanagement.proxies.Knowledge _knowledge, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			java.util.List<IMendixObject> objs = Core.execute(context, "KnowledgeManagement.ServiceProcessList_All_EntityAccess", params);
			java.util.List<slm.proxies.Service_Process> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Service_Process>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Service_Process.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long serviceProcessList_Count(IContext context, knowledgemanagement.proxies.Knowledge _knowledge, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation, boolean _usedForScheduledRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			params.put("UsedForScheduledRequest", _usedForScheduledRequest);
			return (java.lang.Long)Core.execute(context, "KnowledgeManagement.ServiceProcessList_Count", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Service_Process> serviceProcessList_SLA_All_EntityAccess(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "KnowledgeManagement.ServiceProcessList_SLA_All_EntityAccess", params);
			java.util.List<slm.proxies.Service_Process> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Service_Process>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Service_Process.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Service_Process> serviceProcessList_SLA_All_PopUp(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "KnowledgeManagement.ServiceProcessList_SLA_All_PopUp", params);
			java.util.List<slm.proxies.Service_Process> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Service_Process>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Service_Process.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setAspects(IContext context, knowledgemanagement.proxies.Knowledge _knowLedge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("KnowLedge", _knowLedge == null ? null : _knowLedge.getMendixObject());
			Core.execute(context, "KnowledgeManagement.SetAspects", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setAspects_SLA(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			Core.execute(context, "KnowledgeManagement.SetAspects_SLA", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setOrResetProcessType(IContext context, knowledgemanagement.proxies.Knowledge _knowledge, slm.proxies.Contract _contract)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			params.put("Contract", _contract == null ? null : _contract.getMendixObject());
			Core.execute(context, "KnowledgeManagement.SetOrResetProcessType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void urgency_SetAspect(IContext context, knowledgemanagement.proxies.Knowledge _knowledge, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation, boolean _usedForScheduledRequest, java.lang.Long _maxDropDownResultSize)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			params.put("UsedForScheduledRequest", _usedForScheduledRequest);
			params.put("MaxDropDownResultSize", _maxDropDownResultSize);
			Core.execute(context, "KnowledgeManagement.Urgency_SetAspect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Urgency> urgencyList_All_EntityAccess(IContext context, knowledgemanagement.proxies.Knowledge _knowledge, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			java.util.List<IMendixObject> objs = Core.execute(context, "KnowledgeManagement.UrgencyList_All_EntityAccess", params);
			java.util.List<slm.proxies.Urgency> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Urgency>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Urgency.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long urgencyList_Count(IContext context, knowledgemanagement.proxies.Knowledge _knowledge, slm.proxies.Contract_Type _contractType, boolean _withReceivingOrganisation, boolean _usedForScheduledRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("WithReceivingOrganisation", _withReceivingOrganisation);
			params.put("UsedForScheduledRequest", _usedForScheduledRequest);
			return (java.lang.Long)Core.execute(context, "KnowledgeManagement.UrgencyList_Count", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Urgency> urgencyList_SLA_All_EntityAccess(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "KnowledgeManagement.UrgencyList_SLA_All_EntityAccess", params);
			java.util.List<slm.proxies.Urgency> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Urgency>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Urgency.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Urgency> urgencyList_SLA_All_PopUp(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "KnowledgeManagement.UrgencyList_SLA_All_PopUp", params);
			java.util.List<slm.proxies.Urgency> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Urgency>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Urgency.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}