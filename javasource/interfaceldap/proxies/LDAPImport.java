// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package interfaceldap.proxies;

public class LDAPImport extends interfaceshared.proxies.IncomingMessage
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "InterfaceLDAP.LDAPImport";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		InterfaceName("InterfaceName"),
		ExternalReferenceID("ExternalReferenceID"),
		InternalReferenceID("InternalReferenceID"),
		SuccessfullyProcessed("SuccessfullyProcessed"),
		MessageID("MessageID"),
		MessageType("MessageType"),
		MessageDirection("MessageDirection"),
		Status("Status"),
		RetrievedInterfaceName("RetrievedInterfaceName"),
		CreatedByCustomMessage("CreatedByCustomMessage"),
		TempCurrentLDAPImport_LDAPProcessingAttempt("InterfaceLDAP.TempCurrentLDAPImport_LDAPProcessingAttempt"),
		LDAPImport_ImportedPerson("InterfaceLDAP.LDAPImport_ImportedPerson"),
		LDAPImport_ImportedLocation("InterfaceLDAP.LDAPImport_ImportedLocation"),
		LDAPImport_ImportedOrganisation("InterfaceLDAP.LDAPImport_ImportedOrganisation"),
		LDAPImport_ImportedLDAPGroup("InterfaceLDAP.LDAPImport_ImportedLDAPGroup"),
		LDAPImport_LDAPImportType("InterfaceLDAP.LDAPImport_LDAPImportType"),
		LDAPImport_DeactivatedPerson("InterfaceLDAP.LDAPImport_DeactivatedPerson"),
		LDAPImport_DeactivatedLocation("InterfaceLDAP.LDAPImport_DeactivatedLocation"),
		LDAPImport_DeactivatedOrganisation("InterfaceLDAP.LDAPImport_DeactivatedOrganisation"),
		LDAPImport_DeactivatedLDAPGroup("InterfaceLDAP.LDAPImport_DeactivatedLDAPGroup"),
		ReadLDAPImport_LDAPInterfaceConfiguration("InterfaceLDAP.ReadLDAPImport_LDAPInterfaceConfiguration"),
		LDAPImport_ImportedAccount("InterfaceLDAP.LDAPImport_ImportedAccount"),
		LDAPImport_DeactivatedAccount("InterfaceLDAP.LDAPImport_DeactivatedAccount"),
		IncomingMessage_SynchronousResponse("InterfaceShared.IncomingMessage_SynchronousResponse"),
		BooleanWrapper_Message("InterfaceShared.BooleanWrapper_Message"),
		Message_IndexData("InterfaceShared.Message_IndexData"),
		Message_InterfaceMessageConfiguration("InterfaceShared.Message_InterfaceMessageConfiguration"),
		Message_InterfaceConfiguration("InterfaceShared.Message_InterfaceConfiguration");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public LDAPImport(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "InterfaceLDAP.LDAPImport"));
	}

	protected LDAPImport(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject lDAPImportMendixObject)
	{
		super(context, lDAPImportMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("InterfaceLDAP.LDAPImport", lDAPImportMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a InterfaceLDAP.LDAPImport");
	}

	/**
	 * @deprecated Use 'LDAPImport.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static interfaceldap.proxies.LDAPImport initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return interfaceldap.proxies.LDAPImport.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static interfaceldap.proxies.LDAPImport initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new interfaceldap.proxies.LDAPImport(context, mendixObject);
	}

	public static interfaceldap.proxies.LDAPImport load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return interfaceldap.proxies.LDAPImport.initialize(context, mendixObject);
	}

	public static java.util.List<interfaceldap.proxies.LDAPImport> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<interfaceldap.proxies.LDAPImport> result = new java.util.ArrayList<interfaceldap.proxies.LDAPImport>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//InterfaceLDAP.LDAPImport" + xpathConstraint))
			result.add(interfaceldap.proxies.LDAPImport.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of TempCurrentLDAPImport_LDAPProcessingAttempt
	 */
	public final interfaceshared.proxies.LDAPProcessingAttempt getTempCurrentLDAPImport_LDAPProcessingAttempt() throws com.mendix.core.CoreException
	{
		return getTempCurrentLDAPImport_LDAPProcessingAttempt(getContext());
	}

	/**
	 * @param context
	 * @return value of TempCurrentLDAPImport_LDAPProcessingAttempt
	 */
	public final interfaceshared.proxies.LDAPProcessingAttempt getTempCurrentLDAPImport_LDAPProcessingAttempt(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfaceshared.proxies.LDAPProcessingAttempt result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.TempCurrentLDAPImport_LDAPProcessingAttempt.toString());
		if (identifier != null)
			result = interfaceshared.proxies.LDAPProcessingAttempt.load(context, identifier);
		return result;
	}

	/**
	 * Set value of TempCurrentLDAPImport_LDAPProcessingAttempt
	 * @param tempcurrentldapimport_ldapprocessingattempt
	 */
	public final void setTempCurrentLDAPImport_LDAPProcessingAttempt(interfaceshared.proxies.LDAPProcessingAttempt tempcurrentldapimport_ldapprocessingattempt)
	{
		setTempCurrentLDAPImport_LDAPProcessingAttempt(getContext(), tempcurrentldapimport_ldapprocessingattempt);
	}

	/**
	 * Set value of TempCurrentLDAPImport_LDAPProcessingAttempt
	 * @param context
	 * @param tempcurrentldapimport_ldapprocessingattempt
	 */
	public final void setTempCurrentLDAPImport_LDAPProcessingAttempt(com.mendix.systemwideinterfaces.core.IContext context, interfaceshared.proxies.LDAPProcessingAttempt tempcurrentldapimport_ldapprocessingattempt)
	{
		if (tempcurrentldapimport_ldapprocessingattempt == null)
			getMendixObject().setValue(context, MemberNames.TempCurrentLDAPImport_LDAPProcessingAttempt.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.TempCurrentLDAPImport_LDAPProcessingAttempt.toString(), tempcurrentldapimport_ldapprocessingattempt.getMendixObject().getId());
	}

	/**
	 * @return value of LDAPImport_ImportedPerson
	 */
	public final java.util.List<nap.proxies.Person> getLDAPImport_ImportedPerson() throws com.mendix.core.CoreException
	{
		return getLDAPImport_ImportedPerson(getContext());
	}

	/**
	 * @param context
	 * @return value of LDAPImport_ImportedPerson
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<nap.proxies.Person> getLDAPImport_ImportedPerson(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<nap.proxies.Person> result = new java.util.ArrayList<nap.proxies.Person>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.LDAPImport_ImportedPerson.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(nap.proxies.Person.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of LDAPImport_ImportedPerson
	 * @param ldapimport_importedperson
	 */
	public final void setLDAPImport_ImportedPerson(java.util.List<nap.proxies.Person> ldapimport_importedperson)
	{
		setLDAPImport_ImportedPerson(getContext(), ldapimport_importedperson);
	}

	/**
	 * Set value of LDAPImport_ImportedPerson
	 * @param context
	 * @param ldapimport_importedperson
	 */
	public final void setLDAPImport_ImportedPerson(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<nap.proxies.Person> ldapimport_importedperson)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (nap.proxies.Person proxyObject : ldapimport_importedperson)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.LDAPImport_ImportedPerson.toString(), identifiers);
	}

	/**
	 * @return value of LDAPImport_ImportedLocation
	 */
	public final java.util.List<nap.proxies.Location> getLDAPImport_ImportedLocation() throws com.mendix.core.CoreException
	{
		return getLDAPImport_ImportedLocation(getContext());
	}

	/**
	 * @param context
	 * @return value of LDAPImport_ImportedLocation
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<nap.proxies.Location> getLDAPImport_ImportedLocation(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<nap.proxies.Location> result = new java.util.ArrayList<nap.proxies.Location>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.LDAPImport_ImportedLocation.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(nap.proxies.Location.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of LDAPImport_ImportedLocation
	 * @param ldapimport_importedlocation
	 */
	public final void setLDAPImport_ImportedLocation(java.util.List<nap.proxies.Location> ldapimport_importedlocation)
	{
		setLDAPImport_ImportedLocation(getContext(), ldapimport_importedlocation);
	}

	/**
	 * Set value of LDAPImport_ImportedLocation
	 * @param context
	 * @param ldapimport_importedlocation
	 */
	public final void setLDAPImport_ImportedLocation(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<nap.proxies.Location> ldapimport_importedlocation)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (nap.proxies.Location proxyObject : ldapimport_importedlocation)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.LDAPImport_ImportedLocation.toString(), identifiers);
	}

	/**
	 * @return value of LDAPImport_ImportedOrganisation
	 */
	public final java.util.List<nap.proxies.Organisation> getLDAPImport_ImportedOrganisation() throws com.mendix.core.CoreException
	{
		return getLDAPImport_ImportedOrganisation(getContext());
	}

	/**
	 * @param context
	 * @return value of LDAPImport_ImportedOrganisation
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<nap.proxies.Organisation> getLDAPImport_ImportedOrganisation(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<nap.proxies.Organisation> result = new java.util.ArrayList<nap.proxies.Organisation>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.LDAPImport_ImportedOrganisation.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(nap.proxies.Organisation.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of LDAPImport_ImportedOrganisation
	 * @param ldapimport_importedorganisation
	 */
	public final void setLDAPImport_ImportedOrganisation(java.util.List<nap.proxies.Organisation> ldapimport_importedorganisation)
	{
		setLDAPImport_ImportedOrganisation(getContext(), ldapimport_importedorganisation);
	}

	/**
	 * Set value of LDAPImport_ImportedOrganisation
	 * @param context
	 * @param ldapimport_importedorganisation
	 */
	public final void setLDAPImport_ImportedOrganisation(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<nap.proxies.Organisation> ldapimport_importedorganisation)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (nap.proxies.Organisation proxyObject : ldapimport_importedorganisation)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.LDAPImport_ImportedOrganisation.toString(), identifiers);
	}

	/**
	 * @return value of LDAPImport_ImportedLDAPGroup
	 */
	public final java.util.List<interfaceconfiguration.proxies.LDAPGroup> getLDAPImport_ImportedLDAPGroup() throws com.mendix.core.CoreException
	{
		return getLDAPImport_ImportedLDAPGroup(getContext());
	}

	/**
	 * @param context
	 * @return value of LDAPImport_ImportedLDAPGroup
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<interfaceconfiguration.proxies.LDAPGroup> getLDAPImport_ImportedLDAPGroup(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<interfaceconfiguration.proxies.LDAPGroup> result = new java.util.ArrayList<interfaceconfiguration.proxies.LDAPGroup>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.LDAPImport_ImportedLDAPGroup.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(interfaceconfiguration.proxies.LDAPGroup.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of LDAPImport_ImportedLDAPGroup
	 * @param ldapimport_importedldapgroup
	 */
	public final void setLDAPImport_ImportedLDAPGroup(java.util.List<interfaceconfiguration.proxies.LDAPGroup> ldapimport_importedldapgroup)
	{
		setLDAPImport_ImportedLDAPGroup(getContext(), ldapimport_importedldapgroup);
	}

	/**
	 * Set value of LDAPImport_ImportedLDAPGroup
	 * @param context
	 * @param ldapimport_importedldapgroup
	 */
	public final void setLDAPImport_ImportedLDAPGroup(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<interfaceconfiguration.proxies.LDAPGroup> ldapimport_importedldapgroup)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (interfaceconfiguration.proxies.LDAPGroup proxyObject : ldapimport_importedldapgroup)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.LDAPImport_ImportedLDAPGroup.toString(), identifiers);
	}

	/**
	 * @return value of LDAPImport_LDAPImportType
	 */
	public final interfaceconfiguration.proxies.LDAPImportType getLDAPImport_LDAPImportType() throws com.mendix.core.CoreException
	{
		return getLDAPImport_LDAPImportType(getContext());
	}

	/**
	 * @param context
	 * @return value of LDAPImport_LDAPImportType
	 */
	public final interfaceconfiguration.proxies.LDAPImportType getLDAPImport_LDAPImportType(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfaceconfiguration.proxies.LDAPImportType result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.LDAPImport_LDAPImportType.toString());
		if (identifier != null)
			result = interfaceconfiguration.proxies.LDAPImportType.load(context, identifier);
		return result;
	}

	/**
	 * Set value of LDAPImport_LDAPImportType
	 * @param ldapimport_ldapimporttype
	 */
	public final void setLDAPImport_LDAPImportType(interfaceconfiguration.proxies.LDAPImportType ldapimport_ldapimporttype)
	{
		setLDAPImport_LDAPImportType(getContext(), ldapimport_ldapimporttype);
	}

	/**
	 * Set value of LDAPImport_LDAPImportType
	 * @param context
	 * @param ldapimport_ldapimporttype
	 */
	public final void setLDAPImport_LDAPImportType(com.mendix.systemwideinterfaces.core.IContext context, interfaceconfiguration.proxies.LDAPImportType ldapimport_ldapimporttype)
	{
		if (ldapimport_ldapimporttype == null)
			getMendixObject().setValue(context, MemberNames.LDAPImport_LDAPImportType.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.LDAPImport_LDAPImportType.toString(), ldapimport_ldapimporttype.getMendixObject().getId());
	}

	/**
	 * @return value of LDAPImport_DeactivatedPerson
	 */
	public final java.util.List<nap.proxies.Person> getLDAPImport_DeactivatedPerson() throws com.mendix.core.CoreException
	{
		return getLDAPImport_DeactivatedPerson(getContext());
	}

	/**
	 * @param context
	 * @return value of LDAPImport_DeactivatedPerson
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<nap.proxies.Person> getLDAPImport_DeactivatedPerson(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<nap.proxies.Person> result = new java.util.ArrayList<nap.proxies.Person>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.LDAPImport_DeactivatedPerson.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(nap.proxies.Person.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of LDAPImport_DeactivatedPerson
	 * @param ldapimport_deactivatedperson
	 */
	public final void setLDAPImport_DeactivatedPerson(java.util.List<nap.proxies.Person> ldapimport_deactivatedperson)
	{
		setLDAPImport_DeactivatedPerson(getContext(), ldapimport_deactivatedperson);
	}

	/**
	 * Set value of LDAPImport_DeactivatedPerson
	 * @param context
	 * @param ldapimport_deactivatedperson
	 */
	public final void setLDAPImport_DeactivatedPerson(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<nap.proxies.Person> ldapimport_deactivatedperson)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (nap.proxies.Person proxyObject : ldapimport_deactivatedperson)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.LDAPImport_DeactivatedPerson.toString(), identifiers);
	}

	/**
	 * @return value of LDAPImport_DeactivatedLocation
	 */
	public final java.util.List<nap.proxies.Location> getLDAPImport_DeactivatedLocation() throws com.mendix.core.CoreException
	{
		return getLDAPImport_DeactivatedLocation(getContext());
	}

	/**
	 * @param context
	 * @return value of LDAPImport_DeactivatedLocation
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<nap.proxies.Location> getLDAPImport_DeactivatedLocation(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<nap.proxies.Location> result = new java.util.ArrayList<nap.proxies.Location>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.LDAPImport_DeactivatedLocation.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(nap.proxies.Location.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of LDAPImport_DeactivatedLocation
	 * @param ldapimport_deactivatedlocation
	 */
	public final void setLDAPImport_DeactivatedLocation(java.util.List<nap.proxies.Location> ldapimport_deactivatedlocation)
	{
		setLDAPImport_DeactivatedLocation(getContext(), ldapimport_deactivatedlocation);
	}

	/**
	 * Set value of LDAPImport_DeactivatedLocation
	 * @param context
	 * @param ldapimport_deactivatedlocation
	 */
	public final void setLDAPImport_DeactivatedLocation(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<nap.proxies.Location> ldapimport_deactivatedlocation)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (nap.proxies.Location proxyObject : ldapimport_deactivatedlocation)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.LDAPImport_DeactivatedLocation.toString(), identifiers);
	}

	/**
	 * @return value of LDAPImport_DeactivatedOrganisation
	 */
	public final java.util.List<nap.proxies.Organisation> getLDAPImport_DeactivatedOrganisation() throws com.mendix.core.CoreException
	{
		return getLDAPImport_DeactivatedOrganisation(getContext());
	}

	/**
	 * @param context
	 * @return value of LDAPImport_DeactivatedOrganisation
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<nap.proxies.Organisation> getLDAPImport_DeactivatedOrganisation(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<nap.proxies.Organisation> result = new java.util.ArrayList<nap.proxies.Organisation>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.LDAPImport_DeactivatedOrganisation.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(nap.proxies.Organisation.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of LDAPImport_DeactivatedOrganisation
	 * @param ldapimport_deactivatedorganisation
	 */
	public final void setLDAPImport_DeactivatedOrganisation(java.util.List<nap.proxies.Organisation> ldapimport_deactivatedorganisation)
	{
		setLDAPImport_DeactivatedOrganisation(getContext(), ldapimport_deactivatedorganisation);
	}

	/**
	 * Set value of LDAPImport_DeactivatedOrganisation
	 * @param context
	 * @param ldapimport_deactivatedorganisation
	 */
	public final void setLDAPImport_DeactivatedOrganisation(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<nap.proxies.Organisation> ldapimport_deactivatedorganisation)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (nap.proxies.Organisation proxyObject : ldapimport_deactivatedorganisation)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.LDAPImport_DeactivatedOrganisation.toString(), identifiers);
	}

	/**
	 * @return value of LDAPImport_DeactivatedLDAPGroup
	 */
	public final java.util.List<interfaceconfiguration.proxies.LDAPGroup> getLDAPImport_DeactivatedLDAPGroup() throws com.mendix.core.CoreException
	{
		return getLDAPImport_DeactivatedLDAPGroup(getContext());
	}

	/**
	 * @param context
	 * @return value of LDAPImport_DeactivatedLDAPGroup
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<interfaceconfiguration.proxies.LDAPGroup> getLDAPImport_DeactivatedLDAPGroup(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<interfaceconfiguration.proxies.LDAPGroup> result = new java.util.ArrayList<interfaceconfiguration.proxies.LDAPGroup>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.LDAPImport_DeactivatedLDAPGroup.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(interfaceconfiguration.proxies.LDAPGroup.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of LDAPImport_DeactivatedLDAPGroup
	 * @param ldapimport_deactivatedldapgroup
	 */
	public final void setLDAPImport_DeactivatedLDAPGroup(java.util.List<interfaceconfiguration.proxies.LDAPGroup> ldapimport_deactivatedldapgroup)
	{
		setLDAPImport_DeactivatedLDAPGroup(getContext(), ldapimport_deactivatedldapgroup);
	}

	/**
	 * Set value of LDAPImport_DeactivatedLDAPGroup
	 * @param context
	 * @param ldapimport_deactivatedldapgroup
	 */
	public final void setLDAPImport_DeactivatedLDAPGroup(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<interfaceconfiguration.proxies.LDAPGroup> ldapimport_deactivatedldapgroup)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (interfaceconfiguration.proxies.LDAPGroup proxyObject : ldapimport_deactivatedldapgroup)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.LDAPImport_DeactivatedLDAPGroup.toString(), identifiers);
	}

	/**
	 * @return value of ReadLDAPImport_LDAPInterfaceConfiguration
	 */
	public final interfaceconfiguration.proxies.LDAPInterfaceConfiguration getReadLDAPImport_LDAPInterfaceConfiguration() throws com.mendix.core.CoreException
	{
		return getReadLDAPImport_LDAPInterfaceConfiguration(getContext());
	}

	/**
	 * @param context
	 * @return value of ReadLDAPImport_LDAPInterfaceConfiguration
	 */
	public final interfaceconfiguration.proxies.LDAPInterfaceConfiguration getReadLDAPImport_LDAPInterfaceConfiguration(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfaceconfiguration.proxies.LDAPInterfaceConfiguration result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ReadLDAPImport_LDAPInterfaceConfiguration.toString());
		if (identifier != null)
			result = interfaceconfiguration.proxies.LDAPInterfaceConfiguration.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ReadLDAPImport_LDAPInterfaceConfiguration
	 * @param readldapimport_ldapinterfaceconfiguration
	 */
	public final void setReadLDAPImport_LDAPInterfaceConfiguration(interfaceconfiguration.proxies.LDAPInterfaceConfiguration readldapimport_ldapinterfaceconfiguration)
	{
		setReadLDAPImport_LDAPInterfaceConfiguration(getContext(), readldapimport_ldapinterfaceconfiguration);
	}

	/**
	 * Set value of ReadLDAPImport_LDAPInterfaceConfiguration
	 * @param context
	 * @param readldapimport_ldapinterfaceconfiguration
	 */
	public final void setReadLDAPImport_LDAPInterfaceConfiguration(com.mendix.systemwideinterfaces.core.IContext context, interfaceconfiguration.proxies.LDAPInterfaceConfiguration readldapimport_ldapinterfaceconfiguration)
	{
		if (readldapimport_ldapinterfaceconfiguration == null)
			getMendixObject().setValue(context, MemberNames.ReadLDAPImport_LDAPInterfaceConfiguration.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ReadLDAPImport_LDAPInterfaceConfiguration.toString(), readldapimport_ldapinterfaceconfiguration.getMendixObject().getId());
	}

	/**
	 * @return value of LDAPImport_ImportedAccount
	 */
	public final java.util.List<mendix.proxies.Account> getLDAPImport_ImportedAccount() throws com.mendix.core.CoreException
	{
		return getLDAPImport_ImportedAccount(getContext());
	}

	/**
	 * @param context
	 * @return value of LDAPImport_ImportedAccount
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<mendix.proxies.Account> getLDAPImport_ImportedAccount(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<mendix.proxies.Account> result = new java.util.ArrayList<mendix.proxies.Account>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.LDAPImport_ImportedAccount.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(mendix.proxies.Account.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of LDAPImport_ImportedAccount
	 * @param ldapimport_importedaccount
	 */
	public final void setLDAPImport_ImportedAccount(java.util.List<mendix.proxies.Account> ldapimport_importedaccount)
	{
		setLDAPImport_ImportedAccount(getContext(), ldapimport_importedaccount);
	}

	/**
	 * Set value of LDAPImport_ImportedAccount
	 * @param context
	 * @param ldapimport_importedaccount
	 */
	public final void setLDAPImport_ImportedAccount(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<mendix.proxies.Account> ldapimport_importedaccount)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (mendix.proxies.Account proxyObject : ldapimport_importedaccount)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.LDAPImport_ImportedAccount.toString(), identifiers);
	}

	/**
	 * @return value of LDAPImport_DeactivatedAccount
	 */
	public final java.util.List<mendix.proxies.Account> getLDAPImport_DeactivatedAccount() throws com.mendix.core.CoreException
	{
		return getLDAPImport_DeactivatedAccount(getContext());
	}

	/**
	 * @param context
	 * @return value of LDAPImport_DeactivatedAccount
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<mendix.proxies.Account> getLDAPImport_DeactivatedAccount(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<mendix.proxies.Account> result = new java.util.ArrayList<mendix.proxies.Account>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.LDAPImport_DeactivatedAccount.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(mendix.proxies.Account.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of LDAPImport_DeactivatedAccount
	 * @param ldapimport_deactivatedaccount
	 */
	public final void setLDAPImport_DeactivatedAccount(java.util.List<mendix.proxies.Account> ldapimport_deactivatedaccount)
	{
		setLDAPImport_DeactivatedAccount(getContext(), ldapimport_deactivatedaccount);
	}

	/**
	 * Set value of LDAPImport_DeactivatedAccount
	 * @param context
	 * @param ldapimport_deactivatedaccount
	 */
	public final void setLDAPImport_DeactivatedAccount(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<mendix.proxies.Account> ldapimport_deactivatedaccount)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (mendix.proxies.Account proxyObject : ldapimport_deactivatedaccount)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.LDAPImport_DeactivatedAccount.toString(), identifiers);
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final interfaceldap.proxies.LDAPImport that = (interfaceldap.proxies.LDAPImport) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "InterfaceLDAP.LDAPImport";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
