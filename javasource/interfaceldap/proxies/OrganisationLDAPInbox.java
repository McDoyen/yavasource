// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package interfaceldap.proxies;

public class OrganisationLDAPInbox extends interfaceldap.proxies.LDAPInbox
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "InterfaceLDAP.OrganisationLDAPInbox";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		OrganisationName("OrganisationName"),
		LocationName("LocationName"),
		isCustomer("isCustomer"),
		AccountActive("AccountActive"),
		LDAPID("LDAPID"),
		ProcessingStatus("ProcessingStatus"),
		LDAPID_OldStyle("LDAPID_OldStyle"),
		OrganisationLDAPInbox_Organisation("InterfaceLDAP.OrganisationLDAPInbox_Organisation"),
		OrganisationLDAPInbox_Location("InterfaceLDAP.OrganisationLDAPInbox_Location"),
		LDAPInbox_LDAPImport("InterfaceLDAP.LDAPInbox_LDAPImport"),
		LDAPInbox_LDAPPath("InterfaceLDAP.LDAPInbox_LDAPPath"),
		CurrentRepeatingStructureProcessingAttempt_LDAPInbox("InterfaceShared.CurrentRepeatingStructureProcessingAttempt_LDAPInbox"),
		ParentProcessingPart_LDAPInbox("InterfaceShared.ParentProcessingPart_LDAPInbox");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public OrganisationLDAPInbox(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "InterfaceLDAP.OrganisationLDAPInbox"));
	}

	protected OrganisationLDAPInbox(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject organisationLDAPInboxMendixObject)
	{
		super(context, organisationLDAPInboxMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("InterfaceLDAP.OrganisationLDAPInbox", organisationLDAPInboxMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a InterfaceLDAP.OrganisationLDAPInbox");
	}

	/**
	 * @deprecated Use 'OrganisationLDAPInbox.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static interfaceldap.proxies.OrganisationLDAPInbox initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return interfaceldap.proxies.OrganisationLDAPInbox.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static interfaceldap.proxies.OrganisationLDAPInbox initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new interfaceldap.proxies.OrganisationLDAPInbox(context, mendixObject);
	}

	public static interfaceldap.proxies.OrganisationLDAPInbox load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return interfaceldap.proxies.OrganisationLDAPInbox.initialize(context, mendixObject);
	}

	public static java.util.List<interfaceldap.proxies.OrganisationLDAPInbox> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<interfaceldap.proxies.OrganisationLDAPInbox> result = new java.util.ArrayList<interfaceldap.proxies.OrganisationLDAPInbox>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//InterfaceLDAP.OrganisationLDAPInbox" + xpathConstraint))
			result.add(interfaceldap.proxies.OrganisationLDAPInbox.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of OrganisationName
	 */
	public final java.lang.String getOrganisationName()
	{
		return getOrganisationName(getContext());
	}

	/**
	 * @param context
	 * @return value of OrganisationName
	 */
	public final java.lang.String getOrganisationName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.OrganisationName.toString());
	}

	/**
	 * Set value of OrganisationName
	 * @param organisationname
	 */
	public final void setOrganisationName(java.lang.String organisationname)
	{
		setOrganisationName(getContext(), organisationname);
	}

	/**
	 * Set value of OrganisationName
	 * @param context
	 * @param organisationname
	 */
	public final void setOrganisationName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String organisationname)
	{
		getMendixObject().setValue(context, MemberNames.OrganisationName.toString(), organisationname);
	}

	/**
	 * @return value of LocationName
	 */
	public final java.lang.String getLocationName()
	{
		return getLocationName(getContext());
	}

	/**
	 * @param context
	 * @return value of LocationName
	 */
	public final java.lang.String getLocationName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.LocationName.toString());
	}

	/**
	 * Set value of LocationName
	 * @param locationname
	 */
	public final void setLocationName(java.lang.String locationname)
	{
		setLocationName(getContext(), locationname);
	}

	/**
	 * Set value of LocationName
	 * @param context
	 * @param locationname
	 */
	public final void setLocationName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String locationname)
	{
		getMendixObject().setValue(context, MemberNames.LocationName.toString(), locationname);
	}

	/**
	 * @return value of isCustomer
	 */
	public final java.lang.String getisCustomer()
	{
		return getisCustomer(getContext());
	}

	/**
	 * @param context
	 * @return value of isCustomer
	 */
	public final java.lang.String getisCustomer(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.isCustomer.toString());
	}

	/**
	 * Set value of isCustomer
	 * @param iscustomer
	 */
	public final void setisCustomer(java.lang.String iscustomer)
	{
		setisCustomer(getContext(), iscustomer);
	}

	/**
	 * Set value of isCustomer
	 * @param context
	 * @param iscustomer
	 */
	public final void setisCustomer(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String iscustomer)
	{
		getMendixObject().setValue(context, MemberNames.isCustomer.toString(), iscustomer);
	}

	/**
	 * @return value of AccountActive
	 */
	public final java.lang.Boolean getAccountActive()
	{
		return getAccountActive(getContext());
	}

	/**
	 * @param context
	 * @return value of AccountActive
	 */
	public final java.lang.Boolean getAccountActive(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.AccountActive.toString());
	}

	/**
	 * Set value of AccountActive
	 * @param accountactive
	 */
	public final void setAccountActive(java.lang.Boolean accountactive)
	{
		setAccountActive(getContext(), accountactive);
	}

	/**
	 * Set value of AccountActive
	 * @param context
	 * @param accountactive
	 */
	public final void setAccountActive(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean accountactive)
	{
		getMendixObject().setValue(context, MemberNames.AccountActive.toString(), accountactive);
	}

	/**
	 * @return value of OrganisationLDAPInbox_Organisation
	 */
	public final nap.proxies.Organisation getOrganisationLDAPInbox_Organisation() throws com.mendix.core.CoreException
	{
		return getOrganisationLDAPInbox_Organisation(getContext());
	}

	/**
	 * @param context
	 * @return value of OrganisationLDAPInbox_Organisation
	 */
	public final nap.proxies.Organisation getOrganisationLDAPInbox_Organisation(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		nap.proxies.Organisation result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.OrganisationLDAPInbox_Organisation.toString());
		if (identifier != null)
			result = nap.proxies.Organisation.load(context, identifier);
		return result;
	}

	/**
	 * Set value of OrganisationLDAPInbox_Organisation
	 * @param organisationldapinbox_organisation
	 */
	public final void setOrganisationLDAPInbox_Organisation(nap.proxies.Organisation organisationldapinbox_organisation)
	{
		setOrganisationLDAPInbox_Organisation(getContext(), organisationldapinbox_organisation);
	}

	/**
	 * Set value of OrganisationLDAPInbox_Organisation
	 * @param context
	 * @param organisationldapinbox_organisation
	 */
	public final void setOrganisationLDAPInbox_Organisation(com.mendix.systemwideinterfaces.core.IContext context, nap.proxies.Organisation organisationldapinbox_organisation)
	{
		if (organisationldapinbox_organisation == null)
			getMendixObject().setValue(context, MemberNames.OrganisationLDAPInbox_Organisation.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.OrganisationLDAPInbox_Organisation.toString(), organisationldapinbox_organisation.getMendixObject().getId());
	}

	/**
	 * @return value of OrganisationLDAPInbox_Location
	 */
	public final java.util.List<nap.proxies.Location> getOrganisationLDAPInbox_Location() throws com.mendix.core.CoreException
	{
		return getOrganisationLDAPInbox_Location(getContext());
	}

	/**
	 * @param context
	 * @return value of OrganisationLDAPInbox_Location
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<nap.proxies.Location> getOrganisationLDAPInbox_Location(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<nap.proxies.Location> result = new java.util.ArrayList<nap.proxies.Location>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.OrganisationLDAPInbox_Location.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(nap.proxies.Location.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of OrganisationLDAPInbox_Location
	 * @param organisationldapinbox_location
	 */
	public final void setOrganisationLDAPInbox_Location(java.util.List<nap.proxies.Location> organisationldapinbox_location)
	{
		setOrganisationLDAPInbox_Location(getContext(), organisationldapinbox_location);
	}

	/**
	 * Set value of OrganisationLDAPInbox_Location
	 * @param context
	 * @param organisationldapinbox_location
	 */
	public final void setOrganisationLDAPInbox_Location(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<nap.proxies.Location> organisationldapinbox_location)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (nap.proxies.Location proxyObject : organisationldapinbox_location)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.OrganisationLDAPInbox_Location.toString(), identifiers);
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final interfaceldap.proxies.OrganisationLDAPInbox that = (interfaceldap.proxies.OrganisationLDAPInbox) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "InterfaceLDAP.OrganisationLDAPInbox";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
