// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package interfaceldap.proxies;

public class LDAPImportedBusinessGroup
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject lDAPImportedBusinessGroupMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "InterfaceLDAP.LDAPImportedBusinessGroup";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		LDAPImportedBusinessGroup_Person("InterfaceLDAP.LDAPImportedBusinessGroup_Person"),
		LDAPImportedBusinessGroup_BusinessGroup("InterfaceLDAP.LDAPImportedBusinessGroup_BusinessGroup");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public LDAPImportedBusinessGroup(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "InterfaceLDAP.LDAPImportedBusinessGroup"));
	}

	protected LDAPImportedBusinessGroup(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject lDAPImportedBusinessGroupMendixObject)
	{
		if (lDAPImportedBusinessGroupMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("InterfaceLDAP.LDAPImportedBusinessGroup", lDAPImportedBusinessGroupMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a InterfaceLDAP.LDAPImportedBusinessGroup");

		this.lDAPImportedBusinessGroupMendixObject = lDAPImportedBusinessGroupMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'LDAPImportedBusinessGroup.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static interfaceldap.proxies.LDAPImportedBusinessGroup initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return interfaceldap.proxies.LDAPImportedBusinessGroup.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static interfaceldap.proxies.LDAPImportedBusinessGroup initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new interfaceldap.proxies.LDAPImportedBusinessGroup(context, mendixObject);
	}

	public static interfaceldap.proxies.LDAPImportedBusinessGroup load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return interfaceldap.proxies.LDAPImportedBusinessGroup.initialize(context, mendixObject);
	}

	public static java.util.List<interfaceldap.proxies.LDAPImportedBusinessGroup> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<interfaceldap.proxies.LDAPImportedBusinessGroup> result = new java.util.ArrayList<interfaceldap.proxies.LDAPImportedBusinessGroup>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//InterfaceLDAP.LDAPImportedBusinessGroup" + xpathConstraint))
			result.add(interfaceldap.proxies.LDAPImportedBusinessGroup.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of LDAPImportedBusinessGroup_Person
	 */
	public final nap.proxies.Person getLDAPImportedBusinessGroup_Person() throws com.mendix.core.CoreException
	{
		return getLDAPImportedBusinessGroup_Person(getContext());
	}

	/**
	 * @param context
	 * @return value of LDAPImportedBusinessGroup_Person
	 */
	public final nap.proxies.Person getLDAPImportedBusinessGroup_Person(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		nap.proxies.Person result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.LDAPImportedBusinessGroup_Person.toString());
		if (identifier != null)
			result = nap.proxies.Person.load(context, identifier);
		return result;
	}

	/**
	 * Set value of LDAPImportedBusinessGroup_Person
	 * @param ldapimportedbusinessgroup_person
	 */
	public final void setLDAPImportedBusinessGroup_Person(nap.proxies.Person ldapimportedbusinessgroup_person)
	{
		setLDAPImportedBusinessGroup_Person(getContext(), ldapimportedbusinessgroup_person);
	}

	/**
	 * Set value of LDAPImportedBusinessGroup_Person
	 * @param context
	 * @param ldapimportedbusinessgroup_person
	 */
	public final void setLDAPImportedBusinessGroup_Person(com.mendix.systemwideinterfaces.core.IContext context, nap.proxies.Person ldapimportedbusinessgroup_person)
	{
		if (ldapimportedbusinessgroup_person == null)
			getMendixObject().setValue(context, MemberNames.LDAPImportedBusinessGroup_Person.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.LDAPImportedBusinessGroup_Person.toString(), ldapimportedbusinessgroup_person.getMendixObject().getId());
	}

	/**
	 * @return value of LDAPImportedBusinessGroup_BusinessGroup
	 */
	public final nap.proxies.BusinessGroup getLDAPImportedBusinessGroup_BusinessGroup() throws com.mendix.core.CoreException
	{
		return getLDAPImportedBusinessGroup_BusinessGroup(getContext());
	}

	/**
	 * @param context
	 * @return value of LDAPImportedBusinessGroup_BusinessGroup
	 */
	public final nap.proxies.BusinessGroup getLDAPImportedBusinessGroup_BusinessGroup(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		nap.proxies.BusinessGroup result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.LDAPImportedBusinessGroup_BusinessGroup.toString());
		if (identifier != null)
			result = nap.proxies.BusinessGroup.load(context, identifier);
		return result;
	}

	/**
	 * Set value of LDAPImportedBusinessGroup_BusinessGroup
	 * @param ldapimportedbusinessgroup_businessgroup
	 */
	public final void setLDAPImportedBusinessGroup_BusinessGroup(nap.proxies.BusinessGroup ldapimportedbusinessgroup_businessgroup)
	{
		setLDAPImportedBusinessGroup_BusinessGroup(getContext(), ldapimportedbusinessgroup_businessgroup);
	}

	/**
	 * Set value of LDAPImportedBusinessGroup_BusinessGroup
	 * @param context
	 * @param ldapimportedbusinessgroup_businessgroup
	 */
	public final void setLDAPImportedBusinessGroup_BusinessGroup(com.mendix.systemwideinterfaces.core.IContext context, nap.proxies.BusinessGroup ldapimportedbusinessgroup_businessgroup)
	{
		if (ldapimportedbusinessgroup_businessgroup == null)
			getMendixObject().setValue(context, MemberNames.LDAPImportedBusinessGroup_BusinessGroup.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.LDAPImportedBusinessGroup_BusinessGroup.toString(), ldapimportedbusinessgroup_businessgroup.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return lDAPImportedBusinessGroupMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final interfaceldap.proxies.LDAPImportedBusinessGroup that = (interfaceldap.proxies.LDAPImportedBusinessGroup) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "InterfaceLDAP.LDAPImportedBusinessGroup";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
