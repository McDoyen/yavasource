// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package interfaceldap.proxies;

public class UU95_LDAPDefaults
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject uU95_LDAPDefaultsMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "InterfaceLDAP.UU95_LDAPDefaults";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		UU95_DefaultCountry("UU95_DefaultCountry"),
		UU95_LDAPDefaults_Location("InterfaceLDAP.UU95_LDAPDefaults_Location"),
		UU95_LDAPDefaults_Organisation("InterfaceLDAP.UU95_LDAPDefaults_Organisation"),
		UU95_LDAPDefaults_Language("InterfaceLDAP.UU95_LDAPDefaults_Language"),
		UU95_LDAPDefaults_UserRole("InterfaceLDAP.UU95_LDAPDefaults_UserRole"),
		UU95_LDAPDefaults_Template("InterfaceLDAP.UU95_LDAPDefaults_Template");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public UU95_LDAPDefaults(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "InterfaceLDAP.UU95_LDAPDefaults"));
	}

	protected UU95_LDAPDefaults(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject uU95_LDAPDefaultsMendixObject)
	{
		if (uU95_LDAPDefaultsMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("InterfaceLDAP.UU95_LDAPDefaults", uU95_LDAPDefaultsMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a InterfaceLDAP.UU95_LDAPDefaults");

		this.uU95_LDAPDefaultsMendixObject = uU95_LDAPDefaultsMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'UU95_LDAPDefaults.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static interfaceldap.proxies.UU95_LDAPDefaults initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return interfaceldap.proxies.UU95_LDAPDefaults.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static interfaceldap.proxies.UU95_LDAPDefaults initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new interfaceldap.proxies.UU95_LDAPDefaults(context, mendixObject);
	}

	public static interfaceldap.proxies.UU95_LDAPDefaults load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return interfaceldap.proxies.UU95_LDAPDefaults.initialize(context, mendixObject);
	}

	public static java.util.List<interfaceldap.proxies.UU95_LDAPDefaults> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<interfaceldap.proxies.UU95_LDAPDefaults> result = new java.util.ArrayList<interfaceldap.proxies.UU95_LDAPDefaults>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//InterfaceLDAP.UU95_LDAPDefaults" + xpathConstraint))
			result.add(interfaceldap.proxies.UU95_LDAPDefaults.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * Set value of UU95_DefaultCountry
	 * @param uu95_defaultcountry
	 */
	public final nap.proxies.Countries getUU95_DefaultCountry()
	{
		return getUU95_DefaultCountry(getContext());
	}

	/**
	 * @param context
	 * @return value of UU95_DefaultCountry
	 */
	public final nap.proxies.Countries getUU95_DefaultCountry(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.UU95_DefaultCountry.toString());
		if (obj == null)
			return null;

		return nap.proxies.Countries.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of UU95_DefaultCountry
	 * @param uu95_defaultcountry
	 */
	public final void setUU95_DefaultCountry(nap.proxies.Countries uu95_defaultcountry)
	{
		setUU95_DefaultCountry(getContext(), uu95_defaultcountry);
	}

	/**
	 * Set value of UU95_DefaultCountry
	 * @param context
	 * @param uu95_defaultcountry
	 */
	public final void setUU95_DefaultCountry(com.mendix.systemwideinterfaces.core.IContext context, nap.proxies.Countries uu95_defaultcountry)
	{
		if (uu95_defaultcountry != null)
			getMendixObject().setValue(context, MemberNames.UU95_DefaultCountry.toString(), uu95_defaultcountry.toString());
		else
			getMendixObject().setValue(context, MemberNames.UU95_DefaultCountry.toString(), null);
	}

	/**
	 * @return value of UU95_LDAPDefaults_Location
	 */
	public final nap.proxies.Location getUU95_LDAPDefaults_Location() throws com.mendix.core.CoreException
	{
		return getUU95_LDAPDefaults_Location(getContext());
	}

	/**
	 * @param context
	 * @return value of UU95_LDAPDefaults_Location
	 */
	public final nap.proxies.Location getUU95_LDAPDefaults_Location(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		nap.proxies.Location result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.UU95_LDAPDefaults_Location.toString());
		if (identifier != null)
			result = nap.proxies.Location.load(context, identifier);
		return result;
	}

	/**
	 * Set value of UU95_LDAPDefaults_Location
	 * @param uu95_ldapdefaults_location
	 */
	public final void setUU95_LDAPDefaults_Location(nap.proxies.Location uu95_ldapdefaults_location)
	{
		setUU95_LDAPDefaults_Location(getContext(), uu95_ldapdefaults_location);
	}

	/**
	 * Set value of UU95_LDAPDefaults_Location
	 * @param context
	 * @param uu95_ldapdefaults_location
	 */
	public final void setUU95_LDAPDefaults_Location(com.mendix.systemwideinterfaces.core.IContext context, nap.proxies.Location uu95_ldapdefaults_location)
	{
		if (uu95_ldapdefaults_location == null)
			getMendixObject().setValue(context, MemberNames.UU95_LDAPDefaults_Location.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.UU95_LDAPDefaults_Location.toString(), uu95_ldapdefaults_location.getMendixObject().getId());
	}

	/**
	 * @return value of UU95_LDAPDefaults_Organisation
	 */
	public final nap.proxies.Organisation getUU95_LDAPDefaults_Organisation() throws com.mendix.core.CoreException
	{
		return getUU95_LDAPDefaults_Organisation(getContext());
	}

	/**
	 * @param context
	 * @return value of UU95_LDAPDefaults_Organisation
	 */
	public final nap.proxies.Organisation getUU95_LDAPDefaults_Organisation(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		nap.proxies.Organisation result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.UU95_LDAPDefaults_Organisation.toString());
		if (identifier != null)
			result = nap.proxies.Organisation.load(context, identifier);
		return result;
	}

	/**
	 * Set value of UU95_LDAPDefaults_Organisation
	 * @param uu95_ldapdefaults_organisation
	 */
	public final void setUU95_LDAPDefaults_Organisation(nap.proxies.Organisation uu95_ldapdefaults_organisation)
	{
		setUU95_LDAPDefaults_Organisation(getContext(), uu95_ldapdefaults_organisation);
	}

	/**
	 * Set value of UU95_LDAPDefaults_Organisation
	 * @param context
	 * @param uu95_ldapdefaults_organisation
	 */
	public final void setUU95_LDAPDefaults_Organisation(com.mendix.systemwideinterfaces.core.IContext context, nap.proxies.Organisation uu95_ldapdefaults_organisation)
	{
		if (uu95_ldapdefaults_organisation == null)
			getMendixObject().setValue(context, MemberNames.UU95_LDAPDefaults_Organisation.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.UU95_LDAPDefaults_Organisation.toString(), uu95_ldapdefaults_organisation.getMendixObject().getId());
	}

	/**
	 * @return value of UU95_LDAPDefaults_Language
	 */
	public final system.proxies.Language getUU95_LDAPDefaults_Language() throws com.mendix.core.CoreException
	{
		return getUU95_LDAPDefaults_Language(getContext());
	}

	/**
	 * @param context
	 * @return value of UU95_LDAPDefaults_Language
	 */
	public final system.proxies.Language getUU95_LDAPDefaults_Language(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		system.proxies.Language result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.UU95_LDAPDefaults_Language.toString());
		if (identifier != null)
			result = system.proxies.Language.load(context, identifier);
		return result;
	}

	/**
	 * Set value of UU95_LDAPDefaults_Language
	 * @param uu95_ldapdefaults_language
	 */
	public final void setUU95_LDAPDefaults_Language(system.proxies.Language uu95_ldapdefaults_language)
	{
		setUU95_LDAPDefaults_Language(getContext(), uu95_ldapdefaults_language);
	}

	/**
	 * Set value of UU95_LDAPDefaults_Language
	 * @param context
	 * @param uu95_ldapdefaults_language
	 */
	public final void setUU95_LDAPDefaults_Language(com.mendix.systemwideinterfaces.core.IContext context, system.proxies.Language uu95_ldapdefaults_language)
	{
		if (uu95_ldapdefaults_language == null)
			getMendixObject().setValue(context, MemberNames.UU95_LDAPDefaults_Language.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.UU95_LDAPDefaults_Language.toString(), uu95_ldapdefaults_language.getMendixObject().getId());
	}

	/**
	 * @return value of UU95_LDAPDefaults_UserRole
	 */
	public final java.util.List<system.proxies.UserRole> getUU95_LDAPDefaults_UserRole() throws com.mendix.core.CoreException
	{
		return getUU95_LDAPDefaults_UserRole(getContext());
	}

	/**
	 * @param context
	 * @return value of UU95_LDAPDefaults_UserRole
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<system.proxies.UserRole> getUU95_LDAPDefaults_UserRole(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<system.proxies.UserRole> result = new java.util.ArrayList<system.proxies.UserRole>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.UU95_LDAPDefaults_UserRole.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(system.proxies.UserRole.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of UU95_LDAPDefaults_UserRole
	 * @param uu95_ldapdefaults_userrole
	 */
	public final void setUU95_LDAPDefaults_UserRole(java.util.List<system.proxies.UserRole> uu95_ldapdefaults_userrole)
	{
		setUU95_LDAPDefaults_UserRole(getContext(), uu95_ldapdefaults_userrole);
	}

	/**
	 * Set value of UU95_LDAPDefaults_UserRole
	 * @param context
	 * @param uu95_ldapdefaults_userrole
	 */
	public final void setUU95_LDAPDefaults_UserRole(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<system.proxies.UserRole> uu95_ldapdefaults_userrole)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (system.proxies.UserRole proxyObject : uu95_ldapdefaults_userrole)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.UU95_LDAPDefaults_UserRole.toString(), identifiers);
	}

	/**
	 * @return value of UU95_LDAPDefaults_Template
	 */
	public final java.util.List<roletemplates.proxies.Template> getUU95_LDAPDefaults_Template() throws com.mendix.core.CoreException
	{
		return getUU95_LDAPDefaults_Template(getContext());
	}

	/**
	 * @param context
	 * @return value of UU95_LDAPDefaults_Template
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<roletemplates.proxies.Template> getUU95_LDAPDefaults_Template(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<roletemplates.proxies.Template> result = new java.util.ArrayList<roletemplates.proxies.Template>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.UU95_LDAPDefaults_Template.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(roletemplates.proxies.Template.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of UU95_LDAPDefaults_Template
	 * @param uu95_ldapdefaults_template
	 */
	public final void setUU95_LDAPDefaults_Template(java.util.List<roletemplates.proxies.Template> uu95_ldapdefaults_template)
	{
		setUU95_LDAPDefaults_Template(getContext(), uu95_ldapdefaults_template);
	}

	/**
	 * Set value of UU95_LDAPDefaults_Template
	 * @param context
	 * @param uu95_ldapdefaults_template
	 */
	public final void setUU95_LDAPDefaults_Template(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<roletemplates.proxies.Template> uu95_ldapdefaults_template)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (roletemplates.proxies.Template proxyObject : uu95_ldapdefaults_template)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.UU95_LDAPDefaults_Template.toString(), identifiers);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return uU95_LDAPDefaultsMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final interfaceldap.proxies.UU95_LDAPDefaults that = (interfaceldap.proxies.UU95_LDAPDefaults) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "InterfaceLDAP.UU95_LDAPDefaults";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
