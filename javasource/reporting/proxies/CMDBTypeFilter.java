// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package reporting.proxies;

public class CMDBTypeFilter extends reporting.proxies.ReportFilter
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Reporting.CMDBTypeFilter";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		FilterType("FilterType"),
		ReadableString("ReadableString"),
		Editable("Editable"),
		IsDefault("IsDefault"),
		IsCopyOfDefault("IsCopyOfDefault"),
		FilterID("FilterID"),
		FilterDefinitionName("FilterDefinitionName"),
		CMDBTypeFilter_CMDBType("Reporting.CMDBTypeFilter_CMDBType"),
		ReportFilter_ReportSelect("Reporting.ReportFilter_ReportSelect"),
		ReportFilter_Definition("Reporting.ReportFilter_Definition"),
		ReportFilter_User("Reporting.ReportFilter_User");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public CMDBTypeFilter(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Reporting.CMDBTypeFilter"));
	}

	protected CMDBTypeFilter(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject cMDBTypeFilterMendixObject)
	{
		super(context, cMDBTypeFilterMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("Reporting.CMDBTypeFilter", cMDBTypeFilterMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Reporting.CMDBTypeFilter");
	}

	/**
	 * @deprecated Use 'CMDBTypeFilter.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static reporting.proxies.CMDBTypeFilter initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return reporting.proxies.CMDBTypeFilter.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static reporting.proxies.CMDBTypeFilter initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new reporting.proxies.CMDBTypeFilter(context, mendixObject);
	}

	public static reporting.proxies.CMDBTypeFilter load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return reporting.proxies.CMDBTypeFilter.initialize(context, mendixObject);
	}

	public static java.util.List<reporting.proxies.CMDBTypeFilter> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<reporting.proxies.CMDBTypeFilter> result = new java.util.ArrayList<reporting.proxies.CMDBTypeFilter>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Reporting.CMDBTypeFilter" + xpathConstraint))
			result.add(reporting.proxies.CMDBTypeFilter.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of CMDBTypeFilter_CMDBType
	 */
	public final java.util.List<cmdb.proxies.CMDBType> getCMDBTypeFilter_CMDBType() throws com.mendix.core.CoreException
	{
		return getCMDBTypeFilter_CMDBType(getContext());
	}

	/**
	 * @param context
	 * @return value of CMDBTypeFilter_CMDBType
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<cmdb.proxies.CMDBType> getCMDBTypeFilter_CMDBType(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<cmdb.proxies.CMDBType> result = new java.util.ArrayList<cmdb.proxies.CMDBType>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.CMDBTypeFilter_CMDBType.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(cmdb.proxies.CMDBType.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of CMDBTypeFilter_CMDBType
	 * @param cmdbtypefilter_cmdbtype
	 */
	public final void setCMDBTypeFilter_CMDBType(java.util.List<cmdb.proxies.CMDBType> cmdbtypefilter_cmdbtype)
	{
		setCMDBTypeFilter_CMDBType(getContext(), cmdbtypefilter_cmdbtype);
	}

	/**
	 * Set value of CMDBTypeFilter_CMDBType
	 * @param context
	 * @param cmdbtypefilter_cmdbtype
	 */
	public final void setCMDBTypeFilter_CMDBType(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<cmdb.proxies.CMDBType> cmdbtypefilter_cmdbtype)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (cmdb.proxies.CMDBType proxyObject : cmdbtypefilter_cmdbtype)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.CMDBTypeFilter_CMDBType.toString(), identifiers);
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final reporting.proxies.CMDBTypeFilter that = (reporting.proxies.CMDBTypeFilter) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Reporting.CMDBTypeFilter";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
