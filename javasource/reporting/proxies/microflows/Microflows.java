// This file was generated by Mendix Modeler 7.7.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package reporting.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the Reporting module
	public static void addSelectAttribute(IContext context, reporting.proxies.ReportSelect _report, java.util.List<reporting.proxies.SelectAttribute> _selectAttributeList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Report", _report == null ? null : _report.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_selectAttributeList = null;
			if (_selectAttributeList != null)
			{
				listparam_selectAttributeList = new java.util.ArrayList<IMendixObject>();
				for (reporting.proxies.SelectAttribute obj : _selectAttributeList)
					listparam_selectAttributeList.add(obj.getMendixObject());
			}
			params.put("SelectAttributeList", listparam_selectAttributeList);
			Core.execute(context, "Reporting.AddSelectAttribute", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void addSelectAttributePerUser(IContext context, reporting.proxies.ReportSelect _report, java.util.List<reporting.proxies.SelectAttribute> _selectAttributeList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Report", _report == null ? null : _report.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_selectAttributeList = null;
			if (_selectAttributeList != null)
			{
				listparam_selectAttributeList = new java.util.ArrayList<IMendixObject>();
				for (reporting.proxies.SelectAttribute obj : _selectAttributeList)
					listparam_selectAttributeList.add(obj.getMendixObject());
			}
			params.put("SelectAttributeList", listparam_selectAttributeList);
			Core.execute(context, "Reporting.AddSelectAttributePerUser", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void addSeriesToReport(IContext context, java.util.List<reporting.proxies.ReportSerie> _reportSerieList, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_reportSerieList = null;
			if (_reportSerieList != null)
			{
				listparam_reportSerieList = new java.util.ArrayList<IMendixObject>();
				for (reporting.proxies.ReportSerie obj : _reportSerieList)
					listparam_reportSerieList.add(obj.getMendixObject());
			}
			params.put("ReportSerieList", listparam_reportSerieList);
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			Core.execute(context, "Reporting.AddSeriesToReport", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditReportFilter_AfterCommit(IContext context, reporting.proxies.ReportFilter _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Reporting.AuditReportFilter_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditReportFilter_AfterDelete(IContext context, reporting.proxies.ReportFilter _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Reporting.AuditReportFilter_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditReportFilterDefinition_AfterCommit(IContext context, reporting.proxies.FilterDefinition _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Reporting.AuditReportFilterDefinition_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditReportFilterDefinition_AfterDelete(IContext context, reporting.proxies.FilterDefinition _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Reporting.AuditReportFilterDefinition_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditReportGroup_AfterCommit(IContext context, reporting.proxies.ReportGroup _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Reporting.AuditReportGroup_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditReportGroup_AfterDelete(IContext context, reporting.proxies.ReportGroup _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Reporting.AuditReportGroup_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditReportQuery_AfterCommit(IContext context, reporting.proxies.ReportQuery _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Reporting.AuditReportQuery_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditReportQuery_AfterDelete(IContext context, reporting.proxies.ReportQuery _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Reporting.AuditReportQuery_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditReportSelect_AfterCommit(IContext context, reporting.proxies.ReportSelect _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Reporting.AuditReportSelect_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditReportSelect_AfterDelete(IContext context, reporting.proxies.ReportSelect _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Reporting.AuditReportSelect_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditReportSelectAttribute_AfterCommit(IContext context, reporting.proxies.ReportSelectAttribute _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Reporting.AuditReportSelectAttribute_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditReportSelectAttribute_AfterDelete(IContext context, reporting.proxies.ReportSelectAttribute _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Reporting.AuditReportSelectAttribute_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditReportSerie_AfterCommit(IContext context, reporting.proxies.ReportSerie _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Reporting.AuditReportSerie_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditReportSerie_AfterDelete(IContext context, reporting.proxies.ReportSerie _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Reporting.AuditReportSerie_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditSelectAttribute_AfterCommit(IContext context, reporting.proxies.SelectAttribute _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Reporting.AuditSelectAttribute_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditSelectAttribute_AfterDelete(IContext context, reporting.proxies.SelectAttribute _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Reporting.AuditSelectAttribute_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean checkAdvancedBooleanSyntax_MF(IContext context, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Reporting.CheckAdvancedBooleanSyntax_MF", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void cleanUp_DrillDownReports(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Reporting.CleanUp_DrillDownReports", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void clearStartEnd_DEBUG(IContext context, reporting.proxies.AttributeFilter _attributeFilter)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AttributeFilter", _attributeFilter == null ? null : _attributeFilter.getMendixObject());
			Core.execute(context, "Reporting.ClearStartEnd_DEBUG", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyAttributesAndAssociations(IContext context, reporting.proxies.ReportSelect _fromReportSelect, reporting.proxies.ReportSelect _toReportSelect, boolean _copyUserFilters)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FromReportSelect", _fromReportSelect == null ? null : _fromReportSelect.getMendixObject());
			params.put("ToReportSelect", _toReportSelect == null ? null : _toReportSelect.getMendixObject());
			params.put("CopyUserFilters", _copyUserFilters);
			Core.execute(context, "Reporting.CopyAttributesAndAssociations", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyReport(IContext context, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			Core.execute(context, "Reporting.CopyReport", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyReport_MultiSelect(IContext context, java.util.List<reporting.proxies.ReportSelect> _reportSelectList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_reportSelectList = null;
			if (_reportSelectList != null)
			{
				listparam_reportSelectList = new java.util.ArrayList<IMendixObject>();
				for (reporting.proxies.ReportSelect obj : _reportSelectList)
					listparam_reportSelectList.add(obj.getMendixObject());
			}
			params.put("ReportSelectList", listparam_reportSelectList);
			Core.execute(context, "Reporting.CopyReport_MultiSelect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 1179278: Filter on Person in reporting module
	 */
	public static reporting.proxies.ReportFilter copyReportFilter(IContext context, reporting.proxies.ReportFilter _reportFilter, reporting.proxies.ReportSelect _reportSelect, system.proxies.User _user)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportFilter", _reportFilter == null ? null : _reportFilter.getMendixObject());
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			params.put("User", _user == null ? null : _user.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Reporting.CopyReportFilter", params);
			return result == null ? null : reporting.proxies.ReportFilter.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyReportFilterDefinition(IContext context, reporting.proxies.FilterDefinition _reportFilterDefinition, reporting.proxies.ReportQuery _reportQuery)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportFilterDefinition", _reportFilterDefinition == null ? null : _reportFilterDefinition.getMendixObject());
			params.put("ReportQuery", _reportQuery == null ? null : _reportQuery.getMendixObject());
			Core.execute(context, "Reporting.CopyReportFilterDefinition", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyReportFilterDefinitionList(IContext context, java.util.List<reporting.proxies.FilterDefinition> _objectList, reporting.proxies.ReportQuery _reportQuery)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_objectList = null;
			if (_objectList != null)
			{
				listparam_objectList = new java.util.ArrayList<IMendixObject>();
				for (reporting.proxies.FilterDefinition obj : _objectList)
					listparam_objectList.add(obj.getMendixObject());
			}
			params.put("ObjectList", listparam_objectList);
			params.put("ReportQuery", _reportQuery == null ? null : _reportQuery.getMendixObject());
			Core.execute(context, "Reporting.CopyReportFilterDefinitionList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyReportGroup(IContext context, reporting.proxies.ReportGroup _reportGroup, reporting.proxies.ReportQuery _reportQuery)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportGroup", _reportGroup == null ? null : _reportGroup.getMendixObject());
			params.put("ReportQuery", _reportQuery == null ? null : _reportQuery.getMendixObject());
			Core.execute(context, "Reporting.CopyReportGroup", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyReportGroupList(IContext context, java.util.List<reporting.proxies.ReportGroup> _objectList, reporting.proxies.ReportQuery _reportQuery)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_objectList = null;
			if (_objectList != null)
			{
				listparam_objectList = new java.util.ArrayList<IMendixObject>();
				for (reporting.proxies.ReportGroup obj : _objectList)
					listparam_objectList.add(obj.getMendixObject());
			}
			params.put("ObjectList", listparam_objectList);
			params.put("ReportQuery", _reportQuery == null ? null : _reportQuery.getMendixObject());
			Core.execute(context, "Reporting.CopyReportGroupList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyReportQuery(IContext context, reporting.proxies.ReportQuery _reportQuery)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportQuery", _reportQuery == null ? null : _reportQuery.getMendixObject());
			Core.execute(context, "Reporting.CopyReportQuery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyReportQueryList(IContext context, java.util.List<reporting.proxies.ReportQuery> _objectList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_objectList = null;
			if (_objectList != null)
			{
				listparam_objectList = new java.util.ArrayList<IMendixObject>();
				for (reporting.proxies.ReportQuery obj : _objectList)
					listparam_objectList.add(obj.getMendixObject());
			}
			params.put("ObjectList", listparam_objectList);
			Core.execute(context, "Reporting.CopyReportQueryList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyReportSerie(IContext context, reporting.proxies.ReportSerie _reportSerie, reporting.proxies.ReportQuery _reportQuery)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSerie", _reportSerie == null ? null : _reportSerie.getMendixObject());
			params.put("ReportQuery", _reportQuery == null ? null : _reportQuery.getMendixObject());
			Core.execute(context, "Reporting.CopyReportSerie", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyReportSerieList(IContext context, java.util.List<reporting.proxies.ReportSerie> _objectList, reporting.proxies.ReportQuery _reportQuery)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_objectList = null;
			if (_objectList != null)
			{
				listparam_objectList = new java.util.ArrayList<IMendixObject>();
				for (reporting.proxies.ReportSerie obj : _objectList)
					listparam_objectList.add(obj.getMendixObject());
			}
			params.put("ObjectList", listparam_objectList);
			params.put("ReportQuery", _reportQuery == null ? null : _reportQuery.getMendixObject());
			Core.execute(context, "Reporting.CopyReportSerieList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copySelectAttribute(IContext context, reporting.proxies.SelectAttribute _selectAttribute, reporting.proxies.ReportQuery _reportQuery)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SelectAttribute", _selectAttribute == null ? null : _selectAttribute.getMendixObject());
			params.put("ReportQuery", _reportQuery == null ? null : _reportQuery.getMendixObject());
			Core.execute(context, "Reporting.CopySelectAttribute", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copySelectAttributeList(IContext context, java.util.List<reporting.proxies.SelectAttribute> _objectList, reporting.proxies.ReportQuery _reportQuery)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_objectList = null;
			if (_objectList != null)
			{
				listparam_objectList = new java.util.ArrayList<IMendixObject>();
				for (reporting.proxies.SelectAttribute obj : _objectList)
					listparam_objectList.add(obj.getMendixObject());
			}
			params.put("ObjectList", listparam_objectList);
			params.put("ReportQuery", _reportQuery == null ? null : _reportQuery.getMendixObject());
			Core.execute(context, "Reporting.CopySelectAttributeList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void delete_ReportFilter(IContext context, reporting.proxies.ReportFilter _reportFilter)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportFilter", _reportFilter == null ? null : _reportFilter.getMendixObject());
			Core.execute(context, "Reporting.Delete_ReportFilter", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deleteReport(IContext context, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			Core.execute(context, "Reporting.DeleteReport", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void editDefinitionOfFilter(IContext context, reporting.proxies.ReportFilter _reportFilter)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportFilter", _reportFilter == null ? null : _reportFilter.getMendixObject());
			Core.execute(context, "Reporting.EditDefinitionOfFilter", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void editReportFilter_Selected(IContext context, reporting.proxies.ReportFilter _reportFilter)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportFilter", _reportFilter == null ? null : _reportFilter.getMendixObject());
			Core.execute(context, "Reporting.EditReportFilter_Selected", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 1179278: Filter on Person in reporting module
	 */
	public static void editReportFilter_ShowForm(IContext context, reporting.proxies.ReportFilter _reportFilter)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportFilter", _reportFilter == null ? null : _reportFilter.getMendixObject());
			Core.execute(context, "Reporting.EditReportFilter_ShowForm", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void exportSelectedReportQueries(IContext context, java.util.List<reporting.proxies.ReportQuery> _objectList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_objectList = null;
			if (_objectList != null)
			{
				listparam_objectList = new java.util.ArrayList<IMendixObject>();
				for (reporting.proxies.ReportQuery obj : _objectList)
					listparam_objectList.add(obj.getMendixObject());
			}
			params.put("ObjectList", listparam_objectList);
			Core.execute(context, "Reporting.ExportSelectedReportQueries", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void exportSelectedReportQueries_Advanced(IContext context, java.util.List<reporting.proxies.ReportQuery> _objectList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_objectList = null;
			if (_objectList != null)
			{
				listparam_objectList = new java.util.ArrayList<IMendixObject>();
				for (reporting.proxies.ReportQuery obj : _objectList)
					listparam_objectList.add(obj.getMendixObject());
			}
			params.put("ObjectList", listparam_objectList);
			Core.execute(context, "Reporting.ExportSelectedReportQueries_Advanced", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void exportSelectedReports(IContext context, java.util.List<reporting.proxies.ReportSelect> _objectList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_objectList = null;
			if (_objectList != null)
			{
				listparam_objectList = new java.util.ArrayList<IMendixObject>();
				for (reporting.proxies.ReportSelect obj : _objectList)
					listparam_objectList.add(obj.getMendixObject());
			}
			params.put("ObjectList", listparam_objectList);
			Core.execute(context, "Reporting.ExportSelectedReports", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void exportSelectedReports_Advanced(IContext context, java.util.List<reporting.proxies.ReportSelect> _objectList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_objectList = null;
			if (_objectList != null)
			{
				listparam_objectList = new java.util.ArrayList<IMendixObject>();
				for (reporting.proxies.ReportSelect obj : _objectList)
					listparam_objectList.add(obj.getMendixObject());
			}
			params.put("ObjectList", listparam_objectList);
			Core.execute(context, "Reporting.ExportSelectedReports_Advanced", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void exportToExcel(IContext context, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			Core.execute(context, "Reporting.ExportToExcel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean field_CalculateFilteredAltered(IContext context, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Reporting.Field_CalculateFilteredAltered", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String field_DataRangeString(IContext context, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			return (java.lang.String)Core.execute(context, "Reporting.Field_DataRangeString", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String field_FilterDefinitionName(IContext context, reporting.proxies.ReportFilter _reportFilter)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportFilter", _reportFilter == null ? null : _reportFilter.getMendixObject());
			return (java.lang.String)Core.execute(context, "Reporting.Field_FilterDefinitionName", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String field_FilterUser(IContext context, reporting.proxies.ReportFilter _reportFilter)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportFilter", _reportFilter == null ? null : _reportFilter.getMendixObject());
			return (java.lang.String)Core.execute(context, "Reporting.Field_FilterUser", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void generateCITypeSeries(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Reporting.GenerateCITypeSeries", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void generateReport(IContext context, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			Core.execute(context, "Reporting.GenerateReport", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void generateReport_MultiSelect(IContext context, java.util.List<reporting.proxies.ReportSelect> _reportSelectList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_reportSelectList = null;
			if (_reportSelectList != null)
			{
				listparam_reportSelectList = new java.util.ArrayList<IMendixObject>();
				for (reporting.proxies.ReportSelect obj : _reportSelectList)
					listparam_reportSelectList.add(obj.getMendixObject());
			}
			params.put("ReportSelectList", listparam_reportSelectList);
			Core.execute(context, "Reporting.GenerateReport_MultiSelect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void generateReportAndOpenFilterDialog(IContext context, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			Core.execute(context, "Reporting.GenerateReportAndOpenFilterDialog", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void generateReportXMLOrRequestListFromOQL(IContext context, reporting.proxies.ReportSelect _reportSelect, boolean _generateExcel, boolean _openFilteringDialog)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			params.put("GenerateExcel", _generateExcel);
			params.put("OpenFilteringDialog", _openFilteringDialog);
			Core.execute(context, "Reporting.GenerateReportXMLOrRequestListFromOQL", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<reporting.proxies.ReportSerie> getAllowedSeriesForReport(IContext context, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Reporting.GetAllowedSeriesForReport", params);
			java.util.List<reporting.proxies.ReportSerie> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<reporting.proxies.ReportSerie>();
				for (IMendixObject obj : objs)
					result.add(reporting.proxies.ReportSerie.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<reporting.proxies.AttributeFilter> getDateRangeFilterList(IContext context, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Reporting.GetDateRangeFilterList", params);
			java.util.List<reporting.proxies.AttributeFilter> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<reporting.proxies.AttributeFilter>();
				for (IMendixObject obj : objs)
					result.add(reporting.proxies.AttributeFilter.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getPeriodRange(IContext context, java.util.Date _start, reporting.proxies.TimePeriodEnum _timePeriod, java.util.Date _end)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Start", _start);
			params.put("TimePeriod", _timePeriod == null ? null : _timePeriod.name());
			params.put("End", _end);
			return (java.lang.String)Core.execute(context, "Reporting.GetPeriodRange", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<reporting.proxies.ReportFilter> getReportFilterList(IContext context, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Reporting.GetReportFilterList", params);
			java.util.List<reporting.proxies.ReportFilter> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<reporting.proxies.ReportFilter>();
				for (IMendixObject obj : objs)
					result.add(reporting.proxies.ReportFilter.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<reporting.proxies.SelectAttribute> getSelectAttributesForReport(IContext context, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Reporting.GetSelectAttributesForReport", params);
			java.util.List<reporting.proxies.SelectAttribute> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<reporting.proxies.SelectAttribute>();
				for (IMendixObject obj : objs)
					result.add(reporting.proxies.SelectAttribute.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<reporting.proxies.SelectAttribute> getSelectAttributesPerUserForReport(IContext context, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Reporting.GetSelectAttributesPerUserForReport", params);
			java.util.List<reporting.proxies.SelectAttribute> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<reporting.proxies.SelectAttribute>();
				for (IMendixObject obj : objs)
					result.add(reporting.proxies.SelectAttribute.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void handle_DrillDown(IContext context, fusionchartsplus.proxies.ChartXML _chartXML)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ChartXML", _chartXML == null ? null : _chartXML.getMendixObject());
			Core.execute(context, "Reporting.Handle_DrillDown", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void newReportFilter_OpenSelectionForm(IContext context, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			Core.execute(context, "Reporting.NewReportFilter_OpenSelectionForm", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void newReportFilter_OpenSelectionForm_From_config(IContext context, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			Core.execute(context, "Reporting.NewReportFilter_OpenSelectionForm_From_config", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 1179278: Filter on Person in reporting module
	 */
	public static void newReportFilter_Selected(IContext context, reporting.proxies.FilterDefinition _reportFilterDefinition, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportFilterDefinition", _reportFilterDefinition == null ? null : _reportFilterDefinition.getMendixObject());
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			Core.execute(context, "Reporting.NewReportFilter_Selected", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 1179278: Filter on Person in reporting module
	 */
	public static void newReportFilter_Selected_FromConfiguration(IContext context, reporting.proxies.FilterDefinition _reportFilterDefinition, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportFilterDefinition", _reportFilterDefinition == null ? null : _reportFilterDefinition.getMendixObject());
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			Core.execute(context, "Reporting.NewReportFilter_Selected_FromConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void open_ExportToExcelDialog(IContext context, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			Core.execute(context, "Reporting.Open_ExportToExcelDialog", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void open_KPIConfiguration(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Reporting.Open_KPIConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void open_LargerReportChart(IContext context, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			Core.execute(context, "Reporting.Open_LargerReportChart", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void open_ReportExecutionAudit(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Reporting.Open_ReportExecutionAudit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void open_ReportFilterDefinitions_DEBUG(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Reporting.Open_ReportFilterDefinitions_DEBUG", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void open_ReportFilters_DEBUG(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Reporting.Open_ReportFilters_DEBUG", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void open_ReportGroups_DEBUG(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Reporting.Open_ReportGroups_DEBUG", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void open_ReportQueries(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Reporting.Open_ReportQueries", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void open_ReportQuery(IContext context, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			Core.execute(context, "Reporting.Open_ReportQuery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void open_Reports(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Reporting.Open_Reports", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void open_ReportSelectAttribute_DEBUG(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Reporting.Open_ReportSelectAttribute_DEBUG", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void open_ReportSeries_DEBUG(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Reporting.Open_ReportSeries_DEBUG", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void open_ReportSharedSelections(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Reporting.Open_ReportSharedSelections", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void open_ReportSharedSelections_DEBUG(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Reporting.Open_ReportSharedSelections_DEBUG", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void open_SelectAttribute(IContext context, java.util.List<reporting.proxies.ReportSelectAttribute> _reportSelectAttributeList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_reportSelectAttributeList = null;
			if (_reportSelectAttributeList != null)
			{
				listparam_reportSelectAttributeList = new java.util.ArrayList<IMendixObject>();
				for (reporting.proxies.ReportSelectAttribute obj : _reportSelectAttributeList)
					listparam_reportSelectAttributeList.add(obj.getMendixObject());
			}
			params.put("ReportSelectAttributeList", listparam_reportSelectAttributeList);
			Core.execute(context, "Reporting.Open_SelectAttribute", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void open_SelectAttributeOverview(IContext context, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			Core.execute(context, "Reporting.Open_SelectAttributeOverview", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void open_SelectAttributePerUserOverview(IContext context, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			Core.execute(context, "Reporting.Open_SelectAttributePerUserOverview", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void open_SeriesSelectForm(IContext context, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			Core.execute(context, "Reporting.Open_SeriesSelectForm", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openFiltering_WithoutReload(IContext context, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			Core.execute(context, "Reporting.OpenFiltering_WithoutReload", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openFiltering_WithReload(IContext context, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			Core.execute(context, "Reporting.OpenFiltering_WithReload", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void remove_SelectAttribute(IContext context, java.util.List<reporting.proxies.ReportSelectAttribute> _reportSelectAttributeList, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_reportSelectAttributeList = null;
			if (_reportSelectAttributeList != null)
			{
				listparam_reportSelectAttributeList = new java.util.ArrayList<IMendixObject>();
				for (reporting.proxies.ReportSelectAttribute obj : _reportSelectAttributeList)
					listparam_reportSelectAttributeList.add(obj.getMendixObject());
			}
			params.put("ReportSelectAttributeList", listparam_reportSelectAttributeList);
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			Core.execute(context, "Reporting.Remove_SelectAttribute", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void remove_SelectAttributePerUser(IContext context, java.util.List<reporting.proxies.ReportSelectAttributePerUser> _reportSelectAttributeList, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_reportSelectAttributeList = null;
			if (_reportSelectAttributeList != null)
			{
				listparam_reportSelectAttributeList = new java.util.ArrayList<IMendixObject>();
				for (reporting.proxies.ReportSelectAttributePerUser obj : _reportSelectAttributeList)
					listparam_reportSelectAttributeList.add(obj.getMendixObject());
			}
			params.put("ReportSelectAttributeList", listparam_reportSelectAttributeList);
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			Core.execute(context, "Reporting.Remove_SelectAttributePerUser", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void remove_SeriesFromReport(IContext context, java.util.List<reporting.proxies.ReportSerie> _reportSeries, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_reportSeries = null;
			if (_reportSeries != null)
			{
				listparam_reportSeries = new java.util.ArrayList<IMendixObject>();
				for (reporting.proxies.ReportSerie obj : _reportSeries)
					listparam_reportSeries.add(obj.getMendixObject());
			}
			params.put("ReportSeries", listparam_reportSeries);
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			Core.execute(context, "Reporting.Remove_SeriesFromReport", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String replaceDecodeHTMLCodes(IContext context, java.lang.String _input)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Input", _input);
			return (java.lang.String)Core.execute(context, "Reporting.ReplaceDecodeHTMLCodes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String replaceDrilldownCharacters(IContext context, reporting.proxies.ReportSelect _reportSelect, java.lang.String _parameters, java.lang.String _emptyValue)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			params.put("Parameters", _parameters);
			params.put("EmptyValue", _emptyValue);
			return (java.lang.String)Core.execute(context, "Reporting.ReplaceDrilldownCharacters", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String replaceEncodeHTMLCodes(IContext context, java.lang.String _input)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Input", _input);
			return (java.lang.String)Core.execute(context, "Reporting.ReplaceEncodeHTMLCodes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String replaceFilterTags(IContext context, reporting.proxies.ReportFilter _reportFilter, java.lang.String _oQLString, java.lang.String _iD_String)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportFilter", _reportFilter == null ? null : _reportFilter.getMendixObject());
			params.put("OQLString", _oQLString);
			params.put("ID_String", _iD_String);
			return (java.lang.String)Core.execute(context, "Reporting.ReplaceFilterTags", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String replaceGroupByCodes(IContext context, java.lang.String _oQLString, java.lang.String _parameter, reporting.proxies.TimePeriodEnum _timePeriodEnum)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OQLString", _oQLString);
			params.put("Parameter", _parameter);
			params.put("TimePeriodEnum", _timePeriodEnum == null ? null : _timePeriodEnum.name());
			return (java.lang.String)Core.execute(context, "Reporting.ReplaceGroupByCodes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void reportFilter_SetToDefault_DEBUG(IContext context, java.util.List<reporting.proxies.ReportFilter> _reportFilterList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_reportFilterList = null;
			if (_reportFilterList != null)
			{
				listparam_reportFilterList = new java.util.ArrayList<IMendixObject>();
				for (reporting.proxies.ReportFilter obj : _reportFilterList)
					listparam_reportFilterList.add(obj.getMendixObject());
			}
			params.put("ReportFilterList", listparam_reportFilterList);
			Core.execute(context, "Reporting.ReportFilter_SetToDefault_DEBUG", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void reportFilterArrowDown(IContext context, reporting.proxies.ReportFilter _reportFilter)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportFilter", _reportFilter == null ? null : _reportFilter.getMendixObject());
			Core.execute(context, "Reporting.ReportFilterArrowDown", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void reportFilterArrowUp(IContext context, reporting.proxies.ReportFilter _reportFilter)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportFilter", _reportFilter == null ? null : _reportFilter.getMendixObject());
			Core.execute(context, "Reporting.ReportFilterArrowUp", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean reportFilterDeleteSetOrder(IContext context, reporting.proxies.ReportFilter _reportFilter)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportFilter", _reportFilter == null ? null : _reportFilter.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Reporting.ReportFilterDeleteSetOrder", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void reportGroupSelected(IContext context, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			Core.execute(context, "Reporting.ReportGroupSelected", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void reportQuerySelected(IContext context, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			Core.execute(context, "Reporting.ReportQuerySelected", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void reportSelectAttributeArrowDown(IContext context, reporting.proxies.ReportSelectAttribute _reportSelectAttribute, java.util.List<reporting.proxies.ReportSelectAttribute> _reportSelectAttributeList, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelectAttribute", _reportSelectAttribute == null ? null : _reportSelectAttribute.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_reportSelectAttributeList = null;
			if (_reportSelectAttributeList != null)
			{
				listparam_reportSelectAttributeList = new java.util.ArrayList<IMendixObject>();
				for (reporting.proxies.ReportSelectAttribute obj : _reportSelectAttributeList)
					listparam_reportSelectAttributeList.add(obj.getMendixObject());
			}
			params.put("ReportSelectAttributeList", listparam_reportSelectAttributeList);
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			Core.execute(context, "Reporting.ReportSelectAttributeArrowDown", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void reportSelectAttributeArrowUp(IContext context, reporting.proxies.ReportSelectAttribute _reportSelectAttribute, java.util.List<reporting.proxies.ReportSelectAttribute> _reportSelectAttributeList, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelectAttribute", _reportSelectAttribute == null ? null : _reportSelectAttribute.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_reportSelectAttributeList = null;
			if (_reportSelectAttributeList != null)
			{
				listparam_reportSelectAttributeList = new java.util.ArrayList<IMendixObject>();
				for (reporting.proxies.ReportSelectAttribute obj : _reportSelectAttributeList)
					listparam_reportSelectAttributeList.add(obj.getMendixObject());
			}
			params.put("ReportSelectAttributeList", listparam_reportSelectAttributeList);
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			Core.execute(context, "Reporting.ReportSelectAttributeArrowUp", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void reportSelectAttributeDown_List(IContext context, java.util.List<reporting.proxies.ReportSelectAttribute> _reportSelectAttributeList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_reportSelectAttributeList = null;
			if (_reportSelectAttributeList != null)
			{
				listparam_reportSelectAttributeList = new java.util.ArrayList<IMendixObject>();
				for (reporting.proxies.ReportSelectAttribute obj : _reportSelectAttributeList)
					listparam_reportSelectAttributeList.add(obj.getMendixObject());
			}
			params.put("ReportSelectAttributeList", listparam_reportSelectAttributeList);
			Core.execute(context, "Reporting.ReportSelectAttributeDown_List", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void reportSelectAttributeUp_List(IContext context, java.util.List<reporting.proxies.ReportSelectAttribute> _reportSelectAttributeList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_reportSelectAttributeList = null;
			if (_reportSelectAttributeList != null)
			{
				listparam_reportSelectAttributeList = new java.util.ArrayList<IMendixObject>();
				for (reporting.proxies.ReportSelectAttribute obj : _reportSelectAttributeList)
					listparam_reportSelectAttributeList.add(obj.getMendixObject());
			}
			params.put("ReportSelectAttributeList", listparam_reportSelectAttributeList);
			Core.execute(context, "Reporting.ReportSelectAttributeUp_List", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void reportTypeSelected(IContext context, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			Core.execute(context, "Reporting.ReportTypeSelected", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 1172370: Relative timeframes in personal queries
	 */
	public static void requestFilter_CalculateRelativeTimePeriod(IContext context, reporting.proxies.AttributeFilter _requestFilter)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RequestFilter", _requestFilter == null ? null : _requestFilter.getMendixObject());
			Core.execute(context, "Reporting.RequestFilter_CalculateRelativeTimePeriod", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 1172370: Relative timeframes in personal queries
	 */
	public static void requestFilter_CalculateRelativeTimePeriod_GUI(IContext context, reporting.proxies.AttributeFilter _requestFilter)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RequestFilter", _requestFilter == null ? null : _requestFilter.getMendixObject());
			Core.execute(context, "Reporting.RequestFilter_CalculateRelativeTimePeriod_GUI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void requestFilter_SelectCalenderMonth_oc(IContext context, reporting.proxies.AttributeFilter _attributeFilter)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AttributeFilter", _attributeFilter == null ? null : _attributeFilter.getMendixObject());
			Core.execute(context, "Reporting.RequestFilter_SelectCalenderMonth_oc", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void reset_Filters_To_Default(IContext context, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			Core.execute(context, "Reporting.Reset_Filters_To_Default", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void runOQL_DEBUG(IContext context, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			Core.execute(context, "Reporting.RunOQL_DEBUG", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void save_ReportSelect(IContext context, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			Core.execute(context, "Reporting.Save_ReportSelect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void saveAndOpen(IContext context, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			Core.execute(context, "Reporting.SaveAndOpen", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void saveAndRefreshChart_Debug(IContext context, fusionchartsplus.proxies.ChartXML _chartXML)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ChartXML", _chartXML == null ? null : _chartXML.getMendixObject());
			Core.execute(context, "Reporting.SaveAndRefreshChart_Debug", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setFilterAndRefreshReport(IContext context, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			Core.execute(context, "Reporting.SetFilterAndRefreshReport", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setFilterEditable(IContext context, reporting.proxies.ReportFilter _reportFilter)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportFilter", _reportFilter == null ? null : _reportFilter.getMendixObject());
			Core.execute(context, "Reporting.SetFilterEditable", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setOrderBy_List(IContext context, java.util.List<reporting.proxies.ReportSelectAttribute> _reportSelectAttributeList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_reportSelectAttributeList = null;
			if (_reportSelectAttributeList != null)
			{
				listparam_reportSelectAttributeList = new java.util.ArrayList<IMendixObject>();
				for (reporting.proxies.ReportSelectAttribute obj : _reportSelectAttributeList)
					listparam_reportSelectAttributeList.add(obj.getMendixObject());
			}
			params.put("ReportSelectAttributeList", listparam_reportSelectAttributeList);
			Core.execute(context, "Reporting.SetOrderBy_List", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void synchronizeUserFilters(IContext context, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			Core.execute(context, "Reporting.SynchronizeUserFilters", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * SprintR 1090793 readable string for user-defined custom timeframes
	 * 1179278: Filter on Person in reporting module
	 */
	public static boolean validateReportFilter(IContext context, reporting.proxies.ReportFilter _reportFilter)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportFilter", _reportFilter == null ? null : _reportFilter.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Reporting.ValidateReportFilter", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateReportSelect(IContext context, reporting.proxies.ReportSelect _reportSelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelect", _reportSelect == null ? null : _reportSelect.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Reporting.ValidateReportSelect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateRequestSelect(IContext context, reporting.proxies.ReportSelectAttribute _reportSelectAttribute)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReportSelectAttribute", _reportSelectAttribute == null ? null : _reportSelectAttribute.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Reporting.ValidateRequestSelect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}