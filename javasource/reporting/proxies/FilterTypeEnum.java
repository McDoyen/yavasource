// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package reporting.proxies;

public enum FilterTypeEnum
{
	_Void(new java.lang.String[][] { new java.lang.String[] { "en_US", "Void" }, new java.lang.String[] { "nl_NL", "Wissen" }, new java.lang.String[] { "de_DE", "Nichtig" } }),
	Date_Time_Range(new java.lang.String[][] { new java.lang.String[] { "en_US", "Date Time Range" }, new java.lang.String[] { "nl_NL", "Datumtijdperiode" }, new java.lang.String[] { "de_DE", "Zeitspanne" } }),
	Single_Date_Time(new java.lang.String[][] { new java.lang.String[] { "en_US", "Single Date Time" }, new java.lang.String[] { "nl_NL", "Enkele datum" } }),
	Boolean_Attribute(new java.lang.String[][] { new java.lang.String[] { "en_US", "Boolean Attribute" }, new java.lang.String[] { "nl_NL", "Boolean attribuut" }, new java.lang.String[] { "de_DE", "Boolesches Attribut" } }),
	Currency_Attribute(new java.lang.String[][] { new java.lang.String[] { "en_US", "Currency Attribute" }, new java.lang.String[] { "nl_NL", "Geldeenheid attribuut" }, new java.lang.String[] { "de_DE", "Währungs-Attribut" } }),
	Float_Attribute(new java.lang.String[][] { new java.lang.String[] { "en_US", "Float Attribute" }, new java.lang.String[] { "nl_NL", "Float attribuut" }, new java.lang.String[] { "de_DE", "Float-Attribut" } }),
	Integer_Attribute(new java.lang.String[][] { new java.lang.String[] { "en_US", "Integer Attribute" }, new java.lang.String[] { "nl_NL", "Integer attribuut" }, new java.lang.String[] { "de_DE", "Integer-Attribute" } }),
	Long_Attribute(new java.lang.String[][] { new java.lang.String[] { "en_US", "Long Attribute" }, new java.lang.String[] { "nl_NL", "Lang attribuut" }, new java.lang.String[] { "de_DE", "Langes Attribut" } }),
	String_Attribute(new java.lang.String[][] { new java.lang.String[] { "en_US", "String Attribute" }, new java.lang.String[] { "nl_NL", "Stringattribuut" }, new java.lang.String[] { "de_DE", "String-Attribut" } }),
	PlannedOpenClosed(new java.lang.String[][] { new java.lang.String[] { "en_US", "Planned Open Closed Enum" }, new java.lang.String[] { "nl_NL", "Gepland/Open/Gesloten opsomming" }, new java.lang.String[] { "de_DE", "Auswahl Geplant/Offen/Geschlossen" } }),
	Process(new java.lang.String[][] { new java.lang.String[] { "en_US", "Process Enum" }, new java.lang.String[] { "nl_NL", "Procesopsomming" }, new java.lang.String[] { "de_DE", "Prozess-Auswahl" } }),
	TicketTask(new java.lang.String[][] { new java.lang.String[] { "en_US", "Ticket Task Enum" }, new java.lang.String[] { "nl_NL", "Ticket/Taak opsomming" }, new java.lang.String[] { "de_DE", "Ticket-Task-Auswahl" } }),
	Category(new java.lang.String[][] { new java.lang.String[] { "en_US", "Category" }, new java.lang.String[] { "nl_NL", "Categorie" } }),
	Impact(new java.lang.String[][] { new java.lang.String[] { "en_US", "Impact" }, new java.lang.String[] { "nl_NL", "Impact" }, new java.lang.String[] { "de_DE", "Auswirkung  " } }),
	Location(new java.lang.String[][] { new java.lang.String[] { "en_US", "Location" }, new java.lang.String[] { "nl_NL", "Locatie" }, new java.lang.String[] { "de_DE", "Standort " } }),
	Organisation(new java.lang.String[][] { new java.lang.String[] { "en_US", "Organisation" }, new java.lang.String[] { "nl_NL", "Organisatie" }, new java.lang.String[] { "de_DE", "Organisation" } }),
	Phase(new java.lang.String[][] { new java.lang.String[] { "en_US", "Phase" }, new java.lang.String[] { "nl_NL", "Fase" }, new java.lang.String[] { "de_DE", "Phase " } }),
	Priority(new java.lang.String[][] { new java.lang.String[] { "en_US", "Priority" }, new java.lang.String[] { "nl_NL", "Prioriteit" }, new java.lang.String[] { "de_DE", "Priorität  " } }),
	Service(new java.lang.String[][] { new java.lang.String[] { "en_US", "Type" }, new java.lang.String[] { "nl_NL", "Type" }, new java.lang.String[] { "de_DE", "Service" } }),
	Service_Process(new java.lang.String[][] { new java.lang.String[] { "en_US", "Service Process" }, new java.lang.String[] { "nl_NL", "Serviceproces" }, new java.lang.String[] { "de_DE", "Serviceprozess" } }),
	State(new java.lang.String[][] { new java.lang.String[] { "en_US", "State" }, new java.lang.String[] { "nl_NL", "Status" }, new java.lang.String[] { "de_DE", "Status" } }),
	Urgency(new java.lang.String[][] { new java.lang.String[] { "en_US", "Urgency" }, new java.lang.String[] { "nl_NL", "Urgentie" }, new java.lang.String[] { "de_DE", "Dringlichkeit" } }),
	CMDB_Type(new java.lang.String[][] { new java.lang.String[] { "en_US", "CI Type" }, new java.lang.String[] { "nl_NL", "CI type" }, new java.lang.String[] { "de_DE", "CMDB Typ" } }),
	Person(new java.lang.String[][] { new java.lang.String[] { "en_US", "Person" }, new java.lang.String[] { "nl_NL", "Persoon" } });

	private java.util.Map<java.lang.String, java.lang.String> captions;

	private FilterTypeEnum(java.lang.String[][] captionStrings)
	{
		this.captions = new java.util.HashMap<java.lang.String, java.lang.String>();
		for (java.lang.String[] captionString : captionStrings)
			captions.put(captionString[0], captionString[1]);
	}

	public java.lang.String getCaption(java.lang.String languageCode)
	{
		if (captions.containsKey(languageCode))
			return captions.get(languageCode);
		return captions.get("en_US");
	}

	public java.lang.String getCaption()
	{
		return captions.get("en_US");
	}
}
