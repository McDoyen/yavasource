// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package reporting.proxies;

public enum SingleSeriesCharts
{
	Area2D(new java.lang.String[][] { new java.lang.String[] { "en_US", "Area 2D (Area Chart)" }, new java.lang.String[] { "de_DE", "Area 2D (Area Chart)" }, new java.lang.String[] { "nl_NL", "Area 2D (Area Chart)" } }),
	Bar2D(new java.lang.String[][] { new java.lang.String[] { "en_US", "Bar 2D (Column & Bar)" }, new java.lang.String[] { "de_DE", "Balken 2D (Zeile &  Balken)" }, new java.lang.String[] { "nl_NL", "Bar 2D  (Column & Bar)" } }),
	Column2D(new java.lang.String[][] { new java.lang.String[] { "en_US", "Column 2D (Column & Bar)" }, new java.lang.String[] { "de_DE", "Spalte 2D (Spalte & Balken)" }, new java.lang.String[] { "nl_NL", "Column 2D (Column & Bar)" } }),
	Column3D(new java.lang.String[][] { new java.lang.String[] { "en_US", "Column 3D (Column & Bar)" }, new java.lang.String[] { "de_DE", "Spalte 3D  (Spalte & Balken)" }, new java.lang.String[] { "nl_NL", "Column 3D  (Column & Bar)" } }),
	Doughnut2D(new java.lang.String[][] { new java.lang.String[] { "en_US", "Doughnut 2D (Doughnut & Pie)" }, new java.lang.String[] { "nl_NL", "Doughnut 2D (Doughnut & Pie)" }, new java.lang.String[] { "de_DE", "Doughnut 2D (Doughnut & Pie)" } }),
	Doughnut3D(new java.lang.String[][] { new java.lang.String[] { "en_US", "Doughnut 3D (Doughnut & Pie)" }, new java.lang.String[] { "nl_NL", "Doughnut 3D (Doughnut & Pie)" }, new java.lang.String[] { "de_DE", "Doughnut 3D (Doughnut & Pie)" } }),
	Funnel(new java.lang.String[][] { new java.lang.String[] { "en_US", "Funnel" }, new java.lang.String[] { "nl_NL", "Funnel" } }),
	Line(new java.lang.String[][] { new java.lang.String[] { "en_US", "Line (Line Chart)" }, new java.lang.String[] { "de_DE", "Line (Line Chart)" }, new java.lang.String[] { "nl_NL", "Line (Line Chart)" } }),
	Pareto2D(new java.lang.String[][] { new java.lang.String[] { "en_US", "Pareto2D" }, new java.lang.String[] { "nl_NL", "Pareto 2D" } }),
	Pareto3D(new java.lang.String[][] { new java.lang.String[] { "en_US", "Pareto3D" }, new java.lang.String[] { "nl_NL", "Pareto 3D" } }),
	Pie2D(new java.lang.String[][] { new java.lang.String[] { "en_US", "Pie 2D (Dougnut & Pie)" }, new java.lang.String[] { "de_DE", "Pie 2D (Dougnut & Pie)" }, new java.lang.String[] { "nl_NL", "Pie 2D (Dougnut & Pie)" } }),
	Pie3D(new java.lang.String[][] { new java.lang.String[] { "en_US", "Pie 3D (Dougnut & Pie)" }, new java.lang.String[] { "nl_NL", "Pie 3D (Dougnut & Pie)" }, new java.lang.String[] { "de_DE", "Pie 3D (Dougnut & Pie)" } }),
	Pyramid(new java.lang.String[][] { new java.lang.String[] { "en_US", "Pyramid" }, new java.lang.String[] { "nl_NL", "Pyramide" } }),
	Waterfall2D(new java.lang.String[][] { new java.lang.String[] { "en_US", "Waterfall2D" }, new java.lang.String[] { "nl_NL", "Waterfall 2D" } });

	private java.util.Map<java.lang.String, java.lang.String> captions;

	private SingleSeriesCharts(java.lang.String[][] captionStrings)
	{
		this.captions = new java.util.HashMap<java.lang.String, java.lang.String>();
		for (java.lang.String[] captionString : captionStrings)
			captions.put(captionString[0], captionString[1]);
	}

	public java.lang.String getCaption(java.lang.String languageCode)
	{
		if (captions.containsKey(languageCode))
			return captions.get(languageCode);
		return captions.get("en_US");
	}

	public java.lang.String getCaption()
	{
		return captions.get("en_US");
	}
}
