// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package reporting.proxies;

public class SelectAttribute
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject selectAttributeMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Reporting.SelectAttribute";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		AttributeName("AttributeName"),
		AttributeOQL("AttributeOQL"),
		JoinOQL("JoinOQL"),
		SelectAttribute_ReportQuery("Reporting.SelectAttribute_ReportQuery");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public SelectAttribute(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Reporting.SelectAttribute"));
	}

	protected SelectAttribute(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject selectAttributeMendixObject)
	{
		if (selectAttributeMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Reporting.SelectAttribute", selectAttributeMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Reporting.SelectAttribute");

		this.selectAttributeMendixObject = selectAttributeMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'SelectAttribute.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static reporting.proxies.SelectAttribute initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return reporting.proxies.SelectAttribute.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static reporting.proxies.SelectAttribute initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new reporting.proxies.SelectAttribute(context, mendixObject);
	}

	public static reporting.proxies.SelectAttribute load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return reporting.proxies.SelectAttribute.initialize(context, mendixObject);
	}

	public static java.util.List<reporting.proxies.SelectAttribute> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<reporting.proxies.SelectAttribute> result = new java.util.ArrayList<reporting.proxies.SelectAttribute>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Reporting.SelectAttribute" + xpathConstraint))
			result.add(reporting.proxies.SelectAttribute.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of AttributeName
	 */
	public final java.lang.String getAttributeName()
	{
		return getAttributeName(getContext());
	}

	/**
	 * @param context
	 * @return value of AttributeName
	 */
	public final java.lang.String getAttributeName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.AttributeName.toString());
	}

	/**
	 * Set value of AttributeName
	 * @param attributename
	 */
	public final void setAttributeName(java.lang.String attributename)
	{
		setAttributeName(getContext(), attributename);
	}

	/**
	 * Set value of AttributeName
	 * @param context
	 * @param attributename
	 */
	public final void setAttributeName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String attributename)
	{
		getMendixObject().setValue(context, MemberNames.AttributeName.toString(), attributename);
	}

	/**
	 * @return value of AttributeOQL
	 */
	public final java.lang.String getAttributeOQL()
	{
		return getAttributeOQL(getContext());
	}

	/**
	 * @param context
	 * @return value of AttributeOQL
	 */
	public final java.lang.String getAttributeOQL(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.AttributeOQL.toString());
	}

	/**
	 * Set value of AttributeOQL
	 * @param attributeoql
	 */
	public final void setAttributeOQL(java.lang.String attributeoql)
	{
		setAttributeOQL(getContext(), attributeoql);
	}

	/**
	 * Set value of AttributeOQL
	 * @param context
	 * @param attributeoql
	 */
	public final void setAttributeOQL(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String attributeoql)
	{
		getMendixObject().setValue(context, MemberNames.AttributeOQL.toString(), attributeoql);
	}

	/**
	 * @return value of JoinOQL
	 */
	public final java.lang.String getJoinOQL()
	{
		return getJoinOQL(getContext());
	}

	/**
	 * @param context
	 * @return value of JoinOQL
	 */
	public final java.lang.String getJoinOQL(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.JoinOQL.toString());
	}

	/**
	 * Set value of JoinOQL
	 * @param joinoql
	 */
	public final void setJoinOQL(java.lang.String joinoql)
	{
		setJoinOQL(getContext(), joinoql);
	}

	/**
	 * Set value of JoinOQL
	 * @param context
	 * @param joinoql
	 */
	public final void setJoinOQL(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String joinoql)
	{
		getMendixObject().setValue(context, MemberNames.JoinOQL.toString(), joinoql);
	}

	/**
	 * @return value of SelectAttribute_ReportQuery
	 */
	public final reporting.proxies.ReportQuery getSelectAttribute_ReportQuery() throws com.mendix.core.CoreException
	{
		return getSelectAttribute_ReportQuery(getContext());
	}

	/**
	 * @param context
	 * @return value of SelectAttribute_ReportQuery
	 */
	public final reporting.proxies.ReportQuery getSelectAttribute_ReportQuery(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		reporting.proxies.ReportQuery result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.SelectAttribute_ReportQuery.toString());
		if (identifier != null)
			result = reporting.proxies.ReportQuery.load(context, identifier);
		return result;
	}

	/**
	 * Set value of SelectAttribute_ReportQuery
	 * @param selectattribute_reportquery
	 */
	public final void setSelectAttribute_ReportQuery(reporting.proxies.ReportQuery selectattribute_reportquery)
	{
		setSelectAttribute_ReportQuery(getContext(), selectattribute_reportquery);
	}

	/**
	 * Set value of SelectAttribute_ReportQuery
	 * @param context
	 * @param selectattribute_reportquery
	 */
	public final void setSelectAttribute_ReportQuery(com.mendix.systemwideinterfaces.core.IContext context, reporting.proxies.ReportQuery selectattribute_reportquery)
	{
		if (selectattribute_reportquery == null)
			getMendixObject().setValue(context, MemberNames.SelectAttribute_ReportQuery.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.SelectAttribute_ReportQuery.toString(), selectattribute_reportquery.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return selectAttributeMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final reporting.proxies.SelectAttribute that = (reporting.proxies.SelectAttribute) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Reporting.SelectAttribute";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
