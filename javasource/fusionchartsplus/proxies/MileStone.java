// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package fusionchartsplus.proxies;

public class MileStone
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject mileStoneMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "FusionChartsPlus.MileStone";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		date("date"),
		taskId("taskId"),
		shape("shape"),
		numSides("numSides"),
		borderColor("borderColor"),
		borderThickness("borderThickness"),
		color("color"),
		alpha("alpha");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public MileStone(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "FusionChartsPlus.MileStone"));
	}

	protected MileStone(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mileStoneMendixObject)
	{
		if (mileStoneMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("FusionChartsPlus.MileStone", mileStoneMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a FusionChartsPlus.MileStone");

		this.mileStoneMendixObject = mileStoneMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'MileStone.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static fusionchartsplus.proxies.MileStone initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return fusionchartsplus.proxies.MileStone.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static fusionchartsplus.proxies.MileStone initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new fusionchartsplus.proxies.MileStone(context, mendixObject);
	}

	public static fusionchartsplus.proxies.MileStone load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return fusionchartsplus.proxies.MileStone.initialize(context, mendixObject);
	}

	public static java.util.List<fusionchartsplus.proxies.MileStone> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<fusionchartsplus.proxies.MileStone> result = new java.util.ArrayList<fusionchartsplus.proxies.MileStone>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//FusionChartsPlus.MileStone" + xpathConstraint))
			result.add(fusionchartsplus.proxies.MileStone.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of date
	 */
	public final java.util.Date getdate()
	{
		return getdate(getContext());
	}

	/**
	 * @param context
	 * @return value of date
	 */
	public final java.util.Date getdate(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.date.toString());
	}

	/**
	 * Set value of date
	 * @param date
	 */
	public final void setdate(java.util.Date date)
	{
		setdate(getContext(), date);
	}

	/**
	 * Set value of date
	 * @param context
	 * @param date
	 */
	public final void setdate(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date date)
	{
		getMendixObject().setValue(context, MemberNames.date.toString(), date);
	}

	/**
	 * @return value of taskId
	 */
	public final java.lang.String gettaskId()
	{
		return gettaskId(getContext());
	}

	/**
	 * @param context
	 * @return value of taskId
	 */
	public final java.lang.String gettaskId(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.taskId.toString());
	}

	/**
	 * Set value of taskId
	 * @param taskid
	 */
	public final void settaskId(java.lang.String taskid)
	{
		settaskId(getContext(), taskid);
	}

	/**
	 * Set value of taskId
	 * @param context
	 * @param taskid
	 */
	public final void settaskId(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String taskid)
	{
		getMendixObject().setValue(context, MemberNames.taskId.toString(), taskid);
	}

	/**
	 * Set value of shape
	 * @param shape
	 */
	public final fusionchartsplus.proxies.MileStoneShape getshape()
	{
		return getshape(getContext());
	}

	/**
	 * @param context
	 * @return value of shape
	 */
	public final fusionchartsplus.proxies.MileStoneShape getshape(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.shape.toString());
		if (obj == null)
			return null;

		return fusionchartsplus.proxies.MileStoneShape.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of shape
	 * @param shape
	 */
	public final void setshape(fusionchartsplus.proxies.MileStoneShape shape)
	{
		setshape(getContext(), shape);
	}

	/**
	 * Set value of shape
	 * @param context
	 * @param shape
	 */
	public final void setshape(com.mendix.systemwideinterfaces.core.IContext context, fusionchartsplus.proxies.MileStoneShape shape)
	{
		if (shape != null)
			getMendixObject().setValue(context, MemberNames.shape.toString(), shape.toString());
		else
			getMendixObject().setValue(context, MemberNames.shape.toString(), null);
	}

	/**
	 * @return value of numSides
	 */
	public final java.lang.String getnumSides()
	{
		return getnumSides(getContext());
	}

	/**
	 * @param context
	 * @return value of numSides
	 */
	public final java.lang.String getnumSides(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.numSides.toString());
	}

	/**
	 * Set value of numSides
	 * @param numsides
	 */
	public final void setnumSides(java.lang.String numsides)
	{
		setnumSides(getContext(), numsides);
	}

	/**
	 * Set value of numSides
	 * @param context
	 * @param numsides
	 */
	public final void setnumSides(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String numsides)
	{
		getMendixObject().setValue(context, MemberNames.numSides.toString(), numsides);
	}

	/**
	 * @return value of borderColor
	 */
	public final java.lang.String getborderColor()
	{
		return getborderColor(getContext());
	}

	/**
	 * @param context
	 * @return value of borderColor
	 */
	public final java.lang.String getborderColor(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.borderColor.toString());
	}

	/**
	 * Set value of borderColor
	 * @param bordercolor
	 */
	public final void setborderColor(java.lang.String bordercolor)
	{
		setborderColor(getContext(), bordercolor);
	}

	/**
	 * Set value of borderColor
	 * @param context
	 * @param bordercolor
	 */
	public final void setborderColor(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String bordercolor)
	{
		getMendixObject().setValue(context, MemberNames.borderColor.toString(), bordercolor);
	}

	/**
	 * @return value of borderThickness
	 */
	public final java.lang.Integer getborderThickness()
	{
		return getborderThickness(getContext());
	}

	/**
	 * @param context
	 * @return value of borderThickness
	 */
	public final java.lang.Integer getborderThickness(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.borderThickness.toString());
	}

	/**
	 * Set value of borderThickness
	 * @param borderthickness
	 */
	public final void setborderThickness(java.lang.Integer borderthickness)
	{
		setborderThickness(getContext(), borderthickness);
	}

	/**
	 * Set value of borderThickness
	 * @param context
	 * @param borderthickness
	 */
	public final void setborderThickness(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer borderthickness)
	{
		getMendixObject().setValue(context, MemberNames.borderThickness.toString(), borderthickness);
	}

	/**
	 * @return value of color
	 */
	public final java.lang.String getcolor()
	{
		return getcolor(getContext());
	}

	/**
	 * @param context
	 * @return value of color
	 */
	public final java.lang.String getcolor(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.color.toString());
	}

	/**
	 * Set value of color
	 * @param color
	 */
	public final void setcolor(java.lang.String color)
	{
		setcolor(getContext(), color);
	}

	/**
	 * Set value of color
	 * @param context
	 * @param color
	 */
	public final void setcolor(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String color)
	{
		getMendixObject().setValue(context, MemberNames.color.toString(), color);
	}

	/**
	 * @return value of alpha
	 */
	public final java.lang.String getalpha()
	{
		return getalpha(getContext());
	}

	/**
	 * @param context
	 * @return value of alpha
	 */
	public final java.lang.String getalpha(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.alpha.toString());
	}

	/**
	 * Set value of alpha
	 * @param alpha
	 */
	public final void setalpha(java.lang.String alpha)
	{
		setalpha(getContext(), alpha);
	}

	/**
	 * Set value of alpha
	 * @param context
	 * @param alpha
	 */
	public final void setalpha(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String alpha)
	{
		getMendixObject().setValue(context, MemberNames.alpha.toString(), alpha);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return mileStoneMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final fusionchartsplus.proxies.MileStone that = (fusionchartsplus.proxies.MileStone) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "FusionChartsPlus.MileStone";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
