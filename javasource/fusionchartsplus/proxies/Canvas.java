// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package fusionchartsplus.proxies;

public class Canvas
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject canvasMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "FusionChartsPlus.Canvas";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		canvasBgColor("canvasBgColor"),
		canvasBgAlpha("canvasBgAlpha"),
		canvasBorderColor("canvasBorderColor"),
		canvasBorderThickness("canvasBorderThickness"),
		Canvas_Chart("FusionChartsPlus.Canvas_Chart");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Canvas(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "FusionChartsPlus.Canvas"));
	}

	protected Canvas(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject canvasMendixObject)
	{
		if (canvasMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("FusionChartsPlus.Canvas", canvasMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a FusionChartsPlus.Canvas");

		this.canvasMendixObject = canvasMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Canvas.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static fusionchartsplus.proxies.Canvas initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return fusionchartsplus.proxies.Canvas.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static fusionchartsplus.proxies.Canvas initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new fusionchartsplus.proxies.Canvas(context, mendixObject);
	}

	public static fusionchartsplus.proxies.Canvas load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return fusionchartsplus.proxies.Canvas.initialize(context, mendixObject);
	}

	public static java.util.List<fusionchartsplus.proxies.Canvas> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<fusionchartsplus.proxies.Canvas> result = new java.util.ArrayList<fusionchartsplus.proxies.Canvas>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//FusionChartsPlus.Canvas" + xpathConstraint))
			result.add(fusionchartsplus.proxies.Canvas.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of canvasBgColor
	 */
	public final java.lang.String getcanvasBgColor()
	{
		return getcanvasBgColor(getContext());
	}

	/**
	 * @param context
	 * @return value of canvasBgColor
	 */
	public final java.lang.String getcanvasBgColor(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.canvasBgColor.toString());
	}

	/**
	 * Set value of canvasBgColor
	 * @param canvasbgcolor
	 */
	public final void setcanvasBgColor(java.lang.String canvasbgcolor)
	{
		setcanvasBgColor(getContext(), canvasbgcolor);
	}

	/**
	 * Set value of canvasBgColor
	 * @param context
	 * @param canvasbgcolor
	 */
	public final void setcanvasBgColor(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String canvasbgcolor)
	{
		getMendixObject().setValue(context, MemberNames.canvasBgColor.toString(), canvasbgcolor);
	}

	/**
	 * @return value of canvasBgAlpha
	 */
	public final java.lang.String getcanvasBgAlpha()
	{
		return getcanvasBgAlpha(getContext());
	}

	/**
	 * @param context
	 * @return value of canvasBgAlpha
	 */
	public final java.lang.String getcanvasBgAlpha(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.canvasBgAlpha.toString());
	}

	/**
	 * Set value of canvasBgAlpha
	 * @param canvasbgalpha
	 */
	public final void setcanvasBgAlpha(java.lang.String canvasbgalpha)
	{
		setcanvasBgAlpha(getContext(), canvasbgalpha);
	}

	/**
	 * Set value of canvasBgAlpha
	 * @param context
	 * @param canvasbgalpha
	 */
	public final void setcanvasBgAlpha(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String canvasbgalpha)
	{
		getMendixObject().setValue(context, MemberNames.canvasBgAlpha.toString(), canvasbgalpha);
	}

	/**
	 * @return value of canvasBorderColor
	 */
	public final java.lang.String getcanvasBorderColor()
	{
		return getcanvasBorderColor(getContext());
	}

	/**
	 * @param context
	 * @return value of canvasBorderColor
	 */
	public final java.lang.String getcanvasBorderColor(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.canvasBorderColor.toString());
	}

	/**
	 * Set value of canvasBorderColor
	 * @param canvasbordercolor
	 */
	public final void setcanvasBorderColor(java.lang.String canvasbordercolor)
	{
		setcanvasBorderColor(getContext(), canvasbordercolor);
	}

	/**
	 * Set value of canvasBorderColor
	 * @param context
	 * @param canvasbordercolor
	 */
	public final void setcanvasBorderColor(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String canvasbordercolor)
	{
		getMendixObject().setValue(context, MemberNames.canvasBorderColor.toString(), canvasbordercolor);
	}

	/**
	 * @return value of canvasBorderThickness
	 */
	public final java.lang.Integer getcanvasBorderThickness()
	{
		return getcanvasBorderThickness(getContext());
	}

	/**
	 * @param context
	 * @return value of canvasBorderThickness
	 */
	public final java.lang.Integer getcanvasBorderThickness(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.canvasBorderThickness.toString());
	}

	/**
	 * Set value of canvasBorderThickness
	 * @param canvasborderthickness
	 */
	public final void setcanvasBorderThickness(java.lang.Integer canvasborderthickness)
	{
		setcanvasBorderThickness(getContext(), canvasborderthickness);
	}

	/**
	 * Set value of canvasBorderThickness
	 * @param context
	 * @param canvasborderthickness
	 */
	public final void setcanvasBorderThickness(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer canvasborderthickness)
	{
		getMendixObject().setValue(context, MemberNames.canvasBorderThickness.toString(), canvasborderthickness);
	}

	/**
	 * @return value of Canvas_Chart
	 */
	public final fusionchartsplus.proxies.Chart getCanvas_Chart() throws com.mendix.core.CoreException
	{
		return getCanvas_Chart(getContext());
	}

	/**
	 * @param context
	 * @return value of Canvas_Chart
	 */
	public final fusionchartsplus.proxies.Chart getCanvas_Chart(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		fusionchartsplus.proxies.Chart result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Canvas_Chart.toString());
		if (identifier != null)
			result = fusionchartsplus.proxies.Chart.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Canvas_Chart
	 * @param canvas_chart
	 */
	public final void setCanvas_Chart(fusionchartsplus.proxies.Chart canvas_chart)
	{
		setCanvas_Chart(getContext(), canvas_chart);
	}

	/**
	 * Set value of Canvas_Chart
	 * @param context
	 * @param canvas_chart
	 */
	public final void setCanvas_Chart(com.mendix.systemwideinterfaces.core.IContext context, fusionchartsplus.proxies.Chart canvas_chart)
	{
		if (canvas_chart == null)
			getMendixObject().setValue(context, MemberNames.Canvas_Chart.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Canvas_Chart.toString(), canvas_chart.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return canvasMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final fusionchartsplus.proxies.Canvas that = (fusionchartsplus.proxies.Canvas) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "FusionChartsPlus.Canvas";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
