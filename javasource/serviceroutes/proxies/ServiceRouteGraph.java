// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package serviceroutes.proxies;

public class ServiceRouteGraph
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject serviceRouteGraphMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "ServiceRoutes.ServiceRouteGraph";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		UseTechnicalServices("UseTechnicalServices"),
		LeftAligned("LeftAligned"),
		source("source"),
		chartType("chartType"),
		HasDifferentAlignments("HasDifferentAlignments"),
		MaximumXPosition("MaximumXPosition"),
		RestrictProcess("RestrictProcess"),
		ProcessType("ProcessType"),
		ServiceRouteGraph_StartingServices("ServiceRoutes.ServiceRouteGraph_StartingServices"),
		ServiceRouteGraph_User("ServiceRoutes.ServiceRouteGraph_User");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public ServiceRouteGraph(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "ServiceRoutes.ServiceRouteGraph"));
	}

	protected ServiceRouteGraph(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject serviceRouteGraphMendixObject)
	{
		if (serviceRouteGraphMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("ServiceRoutes.ServiceRouteGraph", serviceRouteGraphMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a ServiceRoutes.ServiceRouteGraph");

		this.serviceRouteGraphMendixObject = serviceRouteGraphMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'ServiceRouteGraph.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static serviceroutes.proxies.ServiceRouteGraph initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return serviceroutes.proxies.ServiceRouteGraph.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static serviceroutes.proxies.ServiceRouteGraph initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new serviceroutes.proxies.ServiceRouteGraph(context, mendixObject);
	}

	public static serviceroutes.proxies.ServiceRouteGraph load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return serviceroutes.proxies.ServiceRouteGraph.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of UseTechnicalServices
	 */
	public final java.lang.Boolean getUseTechnicalServices()
	{
		return getUseTechnicalServices(getContext());
	}

	/**
	 * @param context
	 * @return value of UseTechnicalServices
	 */
	public final java.lang.Boolean getUseTechnicalServices(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.UseTechnicalServices.toString());
	}

	/**
	 * Set value of UseTechnicalServices
	 * @param usetechnicalservices
	 */
	public final void setUseTechnicalServices(java.lang.Boolean usetechnicalservices)
	{
		setUseTechnicalServices(getContext(), usetechnicalservices);
	}

	/**
	 * Set value of UseTechnicalServices
	 * @param context
	 * @param usetechnicalservices
	 */
	public final void setUseTechnicalServices(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean usetechnicalservices)
	{
		getMendixObject().setValue(context, MemberNames.UseTechnicalServices.toString(), usetechnicalservices);
	}

	/**
	 * @return value of LeftAligned
	 */
	public final java.lang.Boolean getLeftAligned()
	{
		return getLeftAligned(getContext());
	}

	/**
	 * @param context
	 * @return value of LeftAligned
	 */
	public final java.lang.Boolean getLeftAligned(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.LeftAligned.toString());
	}

	/**
	 * Set value of LeftAligned
	 * @param leftaligned
	 */
	public final void setLeftAligned(java.lang.Boolean leftaligned)
	{
		setLeftAligned(getContext(), leftaligned);
	}

	/**
	 * Set value of LeftAligned
	 * @param context
	 * @param leftaligned
	 */
	public final void setLeftAligned(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean leftaligned)
	{
		getMendixObject().setValue(context, MemberNames.LeftAligned.toString(), leftaligned);
	}

	/**
	 * @return value of source
	 */
	public final java.lang.String getsource()
	{
		return getsource(getContext());
	}

	/**
	 * @param context
	 * @return value of source
	 */
	public final java.lang.String getsource(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.source.toString());
	}

	/**
	 * Set value of source
	 * @param source
	 */
	public final void setsource(java.lang.String source)
	{
		setsource(getContext(), source);
	}

	/**
	 * Set value of source
	 * @param context
	 * @param source
	 */
	public final void setsource(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String source)
	{
		getMendixObject().setValue(context, MemberNames.source.toString(), source);
	}

	/**
	 * Set value of chartType
	 * @param charttype
	 */
	public final serviceroutes.proxies.ChartType getchartType()
	{
		return getchartType(getContext());
	}

	/**
	 * @param context
	 * @return value of chartType
	 */
	public final serviceroutes.proxies.ChartType getchartType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.chartType.toString());
		if (obj == null)
			return null;

		return serviceroutes.proxies.ChartType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of chartType
	 * @param charttype
	 */
	public final void setchartType(serviceroutes.proxies.ChartType charttype)
	{
		setchartType(getContext(), charttype);
	}

	/**
	 * Set value of chartType
	 * @param context
	 * @param charttype
	 */
	public final void setchartType(com.mendix.systemwideinterfaces.core.IContext context, serviceroutes.proxies.ChartType charttype)
	{
		if (charttype != null)
			getMendixObject().setValue(context, MemberNames.chartType.toString(), charttype.toString());
		else
			getMendixObject().setValue(context, MemberNames.chartType.toString(), null);
	}

	/**
	 * @return value of HasDifferentAlignments
	 */
	public final java.lang.Boolean getHasDifferentAlignments()
	{
		return getHasDifferentAlignments(getContext());
	}

	/**
	 * @param context
	 * @return value of HasDifferentAlignments
	 */
	public final java.lang.Boolean getHasDifferentAlignments(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.HasDifferentAlignments.toString());
	}

	/**
	 * Set value of HasDifferentAlignments
	 * @param hasdifferentalignments
	 */
	public final void setHasDifferentAlignments(java.lang.Boolean hasdifferentalignments)
	{
		setHasDifferentAlignments(getContext(), hasdifferentalignments);
	}

	/**
	 * Set value of HasDifferentAlignments
	 * @param context
	 * @param hasdifferentalignments
	 */
	public final void setHasDifferentAlignments(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean hasdifferentalignments)
	{
		getMendixObject().setValue(context, MemberNames.HasDifferentAlignments.toString(), hasdifferentalignments);
	}

	/**
	 * @return value of MaximumXPosition
	 */
	public final java.lang.Integer getMaximumXPosition()
	{
		return getMaximumXPosition(getContext());
	}

	/**
	 * @param context
	 * @return value of MaximumXPosition
	 */
	public final java.lang.Integer getMaximumXPosition(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.MaximumXPosition.toString());
	}

	/**
	 * Set value of MaximumXPosition
	 * @param maximumxposition
	 */
	public final void setMaximumXPosition(java.lang.Integer maximumxposition)
	{
		setMaximumXPosition(getContext(), maximumxposition);
	}

	/**
	 * Set value of MaximumXPosition
	 * @param context
	 * @param maximumxposition
	 */
	public final void setMaximumXPosition(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer maximumxposition)
	{
		getMendixObject().setValue(context, MemberNames.MaximumXPosition.toString(), maximumxposition);
	}

	/**
	 * @return value of RestrictProcess
	 */
	public final java.lang.Boolean getRestrictProcess()
	{
		return getRestrictProcess(getContext());
	}

	/**
	 * @param context
	 * @return value of RestrictProcess
	 */
	public final java.lang.Boolean getRestrictProcess(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.RestrictProcess.toString());
	}

	/**
	 * Set value of RestrictProcess
	 * @param restrictprocess
	 */
	public final void setRestrictProcess(java.lang.Boolean restrictprocess)
	{
		setRestrictProcess(getContext(), restrictprocess);
	}

	/**
	 * Set value of RestrictProcess
	 * @param context
	 * @param restrictprocess
	 */
	public final void setRestrictProcess(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean restrictprocess)
	{
		getMendixObject().setValue(context, MemberNames.RestrictProcess.toString(), restrictprocess);
	}

	/**
	 * Set value of ProcessType
	 * @param processtype
	 */
	public final slm.proxies.ProcessType getProcessType()
	{
		return getProcessType(getContext());
	}

	/**
	 * @param context
	 * @return value of ProcessType
	 */
	public final slm.proxies.ProcessType getProcessType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.ProcessType.toString());
		if (obj == null)
			return null;

		return slm.proxies.ProcessType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of ProcessType
	 * @param processtype
	 */
	public final void setProcessType(slm.proxies.ProcessType processtype)
	{
		setProcessType(getContext(), processtype);
	}

	/**
	 * Set value of ProcessType
	 * @param context
	 * @param processtype
	 */
	public final void setProcessType(com.mendix.systemwideinterfaces.core.IContext context, slm.proxies.ProcessType processtype)
	{
		if (processtype != null)
			getMendixObject().setValue(context, MemberNames.ProcessType.toString(), processtype.toString());
		else
			getMendixObject().setValue(context, MemberNames.ProcessType.toString(), null);
	}

	/**
	 * @return value of ServiceRouteGraph_StartingServices
	 */
	public final java.util.List<slm.proxies.Service> getServiceRouteGraph_StartingServices() throws com.mendix.core.CoreException
	{
		return getServiceRouteGraph_StartingServices(getContext());
	}

	/**
	 * @param context
	 * @return value of ServiceRouteGraph_StartingServices
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<slm.proxies.Service> getServiceRouteGraph_StartingServices(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<slm.proxies.Service> result = new java.util.ArrayList<slm.proxies.Service>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.ServiceRouteGraph_StartingServices.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(slm.proxies.Service.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of ServiceRouteGraph_StartingServices
	 * @param serviceroutegraph_startingservices
	 */
	public final void setServiceRouteGraph_StartingServices(java.util.List<slm.proxies.Service> serviceroutegraph_startingservices)
	{
		setServiceRouteGraph_StartingServices(getContext(), serviceroutegraph_startingservices);
	}

	/**
	 * Set value of ServiceRouteGraph_StartingServices
	 * @param context
	 * @param serviceroutegraph_startingservices
	 */
	public final void setServiceRouteGraph_StartingServices(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<slm.proxies.Service> serviceroutegraph_startingservices)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (slm.proxies.Service proxyObject : serviceroutegraph_startingservices)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.ServiceRouteGraph_StartingServices.toString(), identifiers);
	}

	/**
	 * @return value of ServiceRouteGraph_User
	 */
	public final system.proxies.User getServiceRouteGraph_User() throws com.mendix.core.CoreException
	{
		return getServiceRouteGraph_User(getContext());
	}

	/**
	 * @param context
	 * @return value of ServiceRouteGraph_User
	 */
	public final system.proxies.User getServiceRouteGraph_User(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		system.proxies.User result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ServiceRouteGraph_User.toString());
		if (identifier != null)
			result = system.proxies.User.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ServiceRouteGraph_User
	 * @param serviceroutegraph_user
	 */
	public final void setServiceRouteGraph_User(system.proxies.User serviceroutegraph_user)
	{
		setServiceRouteGraph_User(getContext(), serviceroutegraph_user);
	}

	/**
	 * Set value of ServiceRouteGraph_User
	 * @param context
	 * @param serviceroutegraph_user
	 */
	public final void setServiceRouteGraph_User(com.mendix.systemwideinterfaces.core.IContext context, system.proxies.User serviceroutegraph_user)
	{
		if (serviceroutegraph_user == null)
			getMendixObject().setValue(context, MemberNames.ServiceRouteGraph_User.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ServiceRouteGraph_User.toString(), serviceroutegraph_user.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return serviceRouteGraphMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final serviceroutes.proxies.ServiceRouteGraph that = (serviceroutes.proxies.ServiceRouteGraph) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "ServiceRoutes.ServiceRouteGraph";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
