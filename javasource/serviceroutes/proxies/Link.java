// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package serviceroutes.proxies;

/**
 * implicit means related via same service or same technical service.
 * 
 * complete means all parent delivering organisations have this contract as receiving.
 */
public class Link
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject linkMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "ServiceRoutes.Link";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		ParentName("ParentName"),
		ChildName("ChildName"),
		hasDifferentProcess("hasDifferentProcess"),
		implicit("implicit"),
		complete("complete"),
		Link_ChildNode("ServiceRoutes.Link_ChildNode"),
		Link_ParentNode("ServiceRoutes.Link_ParentNode"),
		Link_ServiceRouteGraph("ServiceRoutes.Link_ServiceRouteGraph");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Link(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "ServiceRoutes.Link"));
	}

	protected Link(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject linkMendixObject)
	{
		if (linkMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("ServiceRoutes.Link", linkMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a ServiceRoutes.Link");

		this.linkMendixObject = linkMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Link.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static serviceroutes.proxies.Link initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return serviceroutes.proxies.Link.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static serviceroutes.proxies.Link initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new serviceroutes.proxies.Link(context, mendixObject);
	}

	public static serviceroutes.proxies.Link load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return serviceroutes.proxies.Link.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of ParentName
	 */
	public final java.lang.String getParentName()
	{
		return getParentName(getContext());
	}

	/**
	 * @param context
	 * @return value of ParentName
	 */
	public final java.lang.String getParentName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ParentName.toString());
	}

	/**
	 * Set value of ParentName
	 * @param parentname
	 */
	public final void setParentName(java.lang.String parentname)
	{
		setParentName(getContext(), parentname);
	}

	/**
	 * Set value of ParentName
	 * @param context
	 * @param parentname
	 */
	public final void setParentName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String parentname)
	{
		getMendixObject().setValue(context, MemberNames.ParentName.toString(), parentname);
	}

	/**
	 * @return value of ChildName
	 */
	public final java.lang.String getChildName()
	{
		return getChildName(getContext());
	}

	/**
	 * @param context
	 * @return value of ChildName
	 */
	public final java.lang.String getChildName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ChildName.toString());
	}

	/**
	 * Set value of ChildName
	 * @param childname
	 */
	public final void setChildName(java.lang.String childname)
	{
		setChildName(getContext(), childname);
	}

	/**
	 * Set value of ChildName
	 * @param context
	 * @param childname
	 */
	public final void setChildName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String childname)
	{
		getMendixObject().setValue(context, MemberNames.ChildName.toString(), childname);
	}

	/**
	 * @return value of hasDifferentProcess
	 */
	public final java.lang.Boolean gethasDifferentProcess()
	{
		return gethasDifferentProcess(getContext());
	}

	/**
	 * @param context
	 * @return value of hasDifferentProcess
	 */
	public final java.lang.Boolean gethasDifferentProcess(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.hasDifferentProcess.toString());
	}

	/**
	 * Set value of hasDifferentProcess
	 * @param hasdifferentprocess
	 */
	public final void sethasDifferentProcess(java.lang.Boolean hasdifferentprocess)
	{
		sethasDifferentProcess(getContext(), hasdifferentprocess);
	}

	/**
	 * Set value of hasDifferentProcess
	 * @param context
	 * @param hasdifferentprocess
	 */
	public final void sethasDifferentProcess(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean hasdifferentprocess)
	{
		getMendixObject().setValue(context, MemberNames.hasDifferentProcess.toString(), hasdifferentprocess);
	}

	/**
	 * @return value of implicit
	 */
	public final java.lang.Boolean getimplicit()
	{
		return getimplicit(getContext());
	}

	/**
	 * @param context
	 * @return value of implicit
	 */
	public final java.lang.Boolean getimplicit(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.implicit.toString());
	}

	/**
	 * Set value of implicit
	 * @param implicit
	 */
	public final void setimplicit(java.lang.Boolean implicit)
	{
		setimplicit(getContext(), implicit);
	}

	/**
	 * Set value of implicit
	 * @param context
	 * @param implicit
	 */
	public final void setimplicit(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean implicit)
	{
		getMendixObject().setValue(context, MemberNames.implicit.toString(), implicit);
	}

	/**
	 * @return value of complete
	 */
	public final java.lang.Boolean getcomplete()
	{
		return getcomplete(getContext());
	}

	/**
	 * @param context
	 * @return value of complete
	 */
	public final java.lang.Boolean getcomplete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.complete.toString());
	}

	/**
	 * Set value of complete
	 * @param complete
	 */
	public final void setcomplete(java.lang.Boolean complete)
	{
		setcomplete(getContext(), complete);
	}

	/**
	 * Set value of complete
	 * @param context
	 * @param complete
	 */
	public final void setcomplete(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean complete)
	{
		getMendixObject().setValue(context, MemberNames.complete.toString(), complete);
	}

	/**
	 * @return value of Link_ChildNode
	 */
	public final serviceroutes.proxies.Node getLink_ChildNode() throws com.mendix.core.CoreException
	{
		return getLink_ChildNode(getContext());
	}

	/**
	 * @param context
	 * @return value of Link_ChildNode
	 */
	public final serviceroutes.proxies.Node getLink_ChildNode(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		serviceroutes.proxies.Node result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Link_ChildNode.toString());
		if (identifier != null)
			result = serviceroutes.proxies.Node.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Link_ChildNode
	 * @param link_childnode
	 */
	public final void setLink_ChildNode(serviceroutes.proxies.Node link_childnode)
	{
		setLink_ChildNode(getContext(), link_childnode);
	}

	/**
	 * Set value of Link_ChildNode
	 * @param context
	 * @param link_childnode
	 */
	public final void setLink_ChildNode(com.mendix.systemwideinterfaces.core.IContext context, serviceroutes.proxies.Node link_childnode)
	{
		if (link_childnode == null)
			getMendixObject().setValue(context, MemberNames.Link_ChildNode.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Link_ChildNode.toString(), link_childnode.getMendixObject().getId());
	}

	/**
	 * @return value of Link_ParentNode
	 */
	public final serviceroutes.proxies.Node getLink_ParentNode() throws com.mendix.core.CoreException
	{
		return getLink_ParentNode(getContext());
	}

	/**
	 * @param context
	 * @return value of Link_ParentNode
	 */
	public final serviceroutes.proxies.Node getLink_ParentNode(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		serviceroutes.proxies.Node result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Link_ParentNode.toString());
		if (identifier != null)
			result = serviceroutes.proxies.Node.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Link_ParentNode
	 * @param link_parentnode
	 */
	public final void setLink_ParentNode(serviceroutes.proxies.Node link_parentnode)
	{
		setLink_ParentNode(getContext(), link_parentnode);
	}

	/**
	 * Set value of Link_ParentNode
	 * @param context
	 * @param link_parentnode
	 */
	public final void setLink_ParentNode(com.mendix.systemwideinterfaces.core.IContext context, serviceroutes.proxies.Node link_parentnode)
	{
		if (link_parentnode == null)
			getMendixObject().setValue(context, MemberNames.Link_ParentNode.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Link_ParentNode.toString(), link_parentnode.getMendixObject().getId());
	}

	/**
	 * @return value of Link_ServiceRouteGraph
	 */
	public final serviceroutes.proxies.ServiceRouteGraph getLink_ServiceRouteGraph() throws com.mendix.core.CoreException
	{
		return getLink_ServiceRouteGraph(getContext());
	}

	/**
	 * @param context
	 * @return value of Link_ServiceRouteGraph
	 */
	public final serviceroutes.proxies.ServiceRouteGraph getLink_ServiceRouteGraph(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		serviceroutes.proxies.ServiceRouteGraph result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Link_ServiceRouteGraph.toString());
		if (identifier != null)
			result = serviceroutes.proxies.ServiceRouteGraph.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Link_ServiceRouteGraph
	 * @param link_serviceroutegraph
	 */
	public final void setLink_ServiceRouteGraph(serviceroutes.proxies.ServiceRouteGraph link_serviceroutegraph)
	{
		setLink_ServiceRouteGraph(getContext(), link_serviceroutegraph);
	}

	/**
	 * Set value of Link_ServiceRouteGraph
	 * @param context
	 * @param link_serviceroutegraph
	 */
	public final void setLink_ServiceRouteGraph(com.mendix.systemwideinterfaces.core.IContext context, serviceroutes.proxies.ServiceRouteGraph link_serviceroutegraph)
	{
		if (link_serviceroutegraph == null)
			getMendixObject().setValue(context, MemberNames.Link_ServiceRouteGraph.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Link_ServiceRouteGraph.toString(), link_serviceroutegraph.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return linkMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final serviceroutes.proxies.Link that = (serviceroutes.proxies.Link) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "ServiceRoutes.Link";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
