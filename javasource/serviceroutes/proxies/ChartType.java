// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package serviceroutes.proxies;

public enum ChartType
{
	DragNode(new java.lang.String[][] { new java.lang.String[] { "en_US", "Drag Node" }, new java.lang.String[] { "nl_NL", "Dragnode" }, new java.lang.String[] { "de_DE", "Knoten ziehen" } }),
	Column2D(new java.lang.String[][] { new java.lang.String[] { "en_US", "Column 2D (Column & Bar)" }, new java.lang.String[] { "de_DE", "Spalte 2D (Spalte & Balken)" }, new java.lang.String[] { "nl_NL", "Column 2D (Column & Bar)" } }),
	Column3D(new java.lang.String[][] { new java.lang.String[] { "en_US", "Column 3D (Column & Bar)" }, new java.lang.String[] { "de_DE", "Spalte 3D  (Spalte & Balken)" }, new java.lang.String[] { "nl_NL", "Column 3D  (Column & Bar)" } }),
	MSColumn2D(new java.lang.String[][] { new java.lang.String[] { "en_US", "MS Column 2D (Column & Bar)" }, new java.lang.String[] { "de_DE", "MS Column 2D  (Zeile & Balken)" }, new java.lang.String[] { "nl_NL", "MS Column 2D  (Column & Bar)" } }),
	MSColumn3D(new java.lang.String[][] { new java.lang.String[] { "en_US", "MS Column 3D (Column & Bar)" }, new java.lang.String[] { "de_DE", "MS Column 3D  (Zeile & Balken)" }, new java.lang.String[] { "nl_NL", "MS Column 3D  (Column & Bar)" } }),
	Bar2D(new java.lang.String[][] { new java.lang.String[] { "en_US", "Bar 2D (Column & Bar)" }, new java.lang.String[] { "de_DE", "Balken 2D (Zeile &  Balken)" }, new java.lang.String[] { "nl_NL", "Bar 2D  (Column & Bar)" } }),
	MSBar2D(new java.lang.String[][] { new java.lang.String[] { "en_US", "MS Bar 2D (Column & Bar)" }, new java.lang.String[] { "de_DE", "MS Bar 2D (Zeilen & Balken)" }, new java.lang.String[] { "nl_NL", "MS Bar 2D (Column & Bar)" } }),
	Line(new java.lang.String[][] { new java.lang.String[] { "en_US", "Line (Line Chart)" }, new java.lang.String[] { "de_DE", "Line (Line Chart)" }, new java.lang.String[] { "nl_NL", "Line (Line Chart)" } }),
	MSLine(new java.lang.String[][] { new java.lang.String[] { "en_US", "MS Line ( Line Chart)" }, new java.lang.String[] { "de_DE", "MS Line ( Line Chart)" }, new java.lang.String[] { "nl_NL", "MS Line ( Line Chart)" } }),
	Dougnut2D(new java.lang.String[][] { new java.lang.String[] { "en_US", "Dougnut 2D (Doughnut & Pie)" }, new java.lang.String[] { "de_DE", "Doughnut 2D (Doughnu & PIE)" }, new java.lang.String[] { "nl_NL", "Dougnut 2D (Doughnut & Pie)" } }),
	Pie2D(new java.lang.String[][] { new java.lang.String[] { "en_US", "Pie 2D (Dougnut & Pie)" }, new java.lang.String[] { "de_DE", "Pie 2D (Dougnut & Pie)" }, new java.lang.String[] { "nl_NL", "Pie 2D (Dougnut & Pie)" } }),
	Pie3D(new java.lang.String[][] { new java.lang.String[] { "en_US", "Pie 3D (Dougnut & Pie)" }, new java.lang.String[] { "nl_NL", "Pie 3D (Dougnut & Pie)" }, new java.lang.String[] { "de_DE", "Pie 3D (Dougnut & Pie)" } }),
	Area2D(new java.lang.String[][] { new java.lang.String[] { "en_US", "Area 2D (Area Chart)" }, new java.lang.String[] { "de_DE", "Area 2D (Area Chart)" }, new java.lang.String[] { "nl_NL", "Area 2D (Area Chart)" } }),
	MSArea2D(new java.lang.String[][] { new java.lang.String[] { "en_US", "MS Area 2D (Area Chart)" }, new java.lang.String[] { "de_DE", "MS Area 2D (Area Chart)" }, new java.lang.String[] { "nl_NL", "MS Area 2D (Area Chart)" } }),
	StackedArea2D(new java.lang.String[][] { new java.lang.String[] { "en_US", "Stacked Area 2D (Stacked Chart)" }, new java.lang.String[] { "de_DE", "Stacked Area 2D (Stacked Chart)" }, new java.lang.String[] { "nl_NL", "Stacked Area 2D (Stacked Chart)" } }),
	StackedBar2D(new java.lang.String[][] { new java.lang.String[] { "en_US", "Stacked Bar 2D (Stacked Chart)" }, new java.lang.String[] { "de_DE", "Stacked Bar 2D (Stacked Chart)" }, new java.lang.String[] { "nl_NL", "Stacked Bar 2D (Stacked Chart)" } }),
	StackedColumn2D(new java.lang.String[][] { new java.lang.String[] { "en_US", "Stacked Column 2D (Stacked Chart)" }, new java.lang.String[] { "de_DE", "Stacked Column 2D (Stacked Chart)" }, new java.lang.String[] { "nl_NL", "Stacked Column 2D (Stacked Chart)" } }),
	StackedColumn3D(new java.lang.String[][] { new java.lang.String[] { "en_US", "Stacked Column 3D (Stacked Chart)" }, new java.lang.String[] { "de_DE", "Stacked Column 3D (Stacked Chart)" }, new java.lang.String[] { "nl_NL", "Stacked Column 3D (Stacked Chart)" } }),
	Funnel(new java.lang.String[][] { new java.lang.String[] { "en_US", "Funnel (Funnel Chart)" }, new java.lang.String[] { "de_DE", "Funnel (Funnel Chart)" }, new java.lang.String[] { "nl_NL", "Trechter (trechtergrafiek)" } }),
	Gantt(new java.lang.String[][] { new java.lang.String[] { "en_US", "Gantt (Gantt Chart)" }, new java.lang.String[] { "de_DE", "Gantt (Gantt Chart)" }, new java.lang.String[] { "nl_NL", "Gantt (Gantt Chart)" } }),
	Cylinder(new java.lang.String[][] { new java.lang.String[] { "en_US", "Cylinder" }, new java.lang.String[] { "nl_NL", "Cylinder" }, new java.lang.String[] { "de_DE", "Zylinder" } }),
	AngularGauge(new java.lang.String[][] { new java.lang.String[] { "en_US", "AngularGauge" }, new java.lang.String[] { "nl_NL", "AngularGauge" }, new java.lang.String[] { "de_DE", "AngularGauge" } }),
	HBullet(new java.lang.String[][] { new java.lang.String[] { "en_US", "HBullet" }, new java.lang.String[] { "nl_NL", "HBullet" }, new java.lang.String[] { "de_DE", "HBullet" } }),
	Pyramid(new java.lang.String[][] { new java.lang.String[] { "en_US", "Pyramid" }, new java.lang.String[] { "nl_NL", "Pyramide" }, new java.lang.String[] { "de_DE", "Pyramide" } }),
	HeatMap(new java.lang.String[][] { new java.lang.String[] { "en_US", "Heat map" }, new java.lang.String[] { "nl_NL", "HeatMap" }, new java.lang.String[] { "de_DE", "HeatMap" } }),
	MultiAxisLine(new java.lang.String[][] { new java.lang.String[] { "en_US", "MultiAxisLine" }, new java.lang.String[] { "nl_NL", "MultiAxisLine" }, new java.lang.String[] { "de_DE", "MultiAxisLine" } }),
	Radar(new java.lang.String[][] { new java.lang.String[] { "en_US", "Radar" }, new java.lang.String[] { "nl_NL", "Radar" }, new java.lang.String[] { "de_DE", "Radar" } });

	private java.util.Map<java.lang.String, java.lang.String> captions;

	private ChartType(java.lang.String[][] captionStrings)
	{
		this.captions = new java.util.HashMap<java.lang.String, java.lang.String>();
		for (java.lang.String[] captionString : captionStrings)
			captions.put(captionString[0], captionString[1]);
	}

	public java.lang.String getCaption(java.lang.String languageCode)
	{
		if (captions.containsKey(languageCode))
			return captions.get(languageCode);
		return captions.get("en_US");
	}

	public java.lang.String getCaption()
	{
		return captions.get("en_US");
	}
}
