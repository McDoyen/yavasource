// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package serviceroutes.actions;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;

public class CalculateYPositionEven extends CustomJavaAction<java.lang.Boolean>
{
	private java.util.List<IMendixObject> __NodeParameter1;
	private java.util.List<serviceroutes.proxies.Node> NodeParameter1;
	private java.lang.Long CanvasHeight;
	private java.lang.Long BoxSize;
	private java.lang.Long NumberOfObjects;

	public CalculateYPositionEven(IContext context, java.util.List<IMendixObject> NodeParameter1, java.lang.Long CanvasHeight, java.lang.Long BoxSize, java.lang.Long NumberOfObjects)
	{
		super(context);
		this.__NodeParameter1 = NodeParameter1;
		this.CanvasHeight = CanvasHeight;
		this.BoxSize = BoxSize;
		this.NumberOfObjects = NumberOfObjects;
	}

	@Override
	public java.lang.Boolean executeAction() throws Exception
	{
		this.NodeParameter1 = new java.util.ArrayList<serviceroutes.proxies.Node>();
		if (__NodeParameter1 != null)
			for (IMendixObject __NodeParameter1Element : __NodeParameter1)
				this.NodeParameter1.add(serviceroutes.proxies.Node.initialize(getContext(), __NodeParameter1Element));

		// BEGIN USER CODE
		int halfObjects = (int) (NumberOfObjects/2);
		int canvasMiddleHeight = (int) (CanvasHeight/2);
		int yPositionCenter;
		
		
		//Calulate boxes under middle box
		for(int i = halfObjects; i>0;i--){
			if (i == 1){
				yPositionCenter = (int) (canvasMiddleHeight + BoxSize);  
			}
			else
				yPositionCenter = (int) ((canvasMiddleHeight+i*(BoxSize/2) + i*(BoxSize))-BoxSize/2); 
			NodeParameter1.get(i-1).setyPosition(yPositionCenter);
		}

		//Calculate boxes above middle box
		for(int i = halfObjects; i>0;i--){
			if (i == 1){
				yPositionCenter = (int) (canvasMiddleHeight - BoxSize);  
			}
			else
				yPositionCenter = (int) ((canvasMiddleHeight-i*(BoxSize/2) - i*(BoxSize))+BoxSize/2); 
			
			NodeParameter1.get(i-1+halfObjects).setyPosition(yPositionCenter);
		}
		Core.commit(this.getContext(), __NodeParameter1);
		
		return true;
		
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "CalculateYPositionEven";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
