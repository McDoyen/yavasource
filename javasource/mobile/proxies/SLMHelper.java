// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package mobile.proxies;

/**
 * [879875] Assign to group and person directly (new association to NAP.Organisation)
 */
public class SLMHelper
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject sLMHelperMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Mobile.SLMHelper";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		SLMHelper_Request("Mobile.SLMHelper_Request"),
		SLMHelper_Contract("Mobile.SLMHelper_Contract"),
		SLMHelper_Organisation("Mobile.SLMHelper_Organisation");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public SLMHelper(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Mobile.SLMHelper"));
	}

	protected SLMHelper(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject sLMHelperMendixObject)
	{
		if (sLMHelperMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Mobile.SLMHelper", sLMHelperMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Mobile.SLMHelper");

		this.sLMHelperMendixObject = sLMHelperMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'SLMHelper.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static mobile.proxies.SLMHelper initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return mobile.proxies.SLMHelper.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static mobile.proxies.SLMHelper initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new mobile.proxies.SLMHelper(context, mendixObject);
	}

	public static mobile.proxies.SLMHelper load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return mobile.proxies.SLMHelper.initialize(context, mendixObject);
	}

	public static java.util.List<mobile.proxies.SLMHelper> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<mobile.proxies.SLMHelper> result = new java.util.ArrayList<mobile.proxies.SLMHelper>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Mobile.SLMHelper" + xpathConstraint))
			result.add(mobile.proxies.SLMHelper.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of SLMHelper_Request
	 */
	public final process.proxies.Request getSLMHelper_Request() throws com.mendix.core.CoreException
	{
		return getSLMHelper_Request(getContext());
	}

	/**
	 * @param context
	 * @return value of SLMHelper_Request
	 */
	public final process.proxies.Request getSLMHelper_Request(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		process.proxies.Request result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.SLMHelper_Request.toString());
		if (identifier != null)
			result = process.proxies.Request.load(context, identifier);
		return result;
	}

	/**
	 * Set value of SLMHelper_Request
	 * @param slmhelper_request
	 */
	public final void setSLMHelper_Request(process.proxies.Request slmhelper_request)
	{
		setSLMHelper_Request(getContext(), slmhelper_request);
	}

	/**
	 * Set value of SLMHelper_Request
	 * @param context
	 * @param slmhelper_request
	 */
	public final void setSLMHelper_Request(com.mendix.systemwideinterfaces.core.IContext context, process.proxies.Request slmhelper_request)
	{
		if (slmhelper_request == null)
			getMendixObject().setValue(context, MemberNames.SLMHelper_Request.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.SLMHelper_Request.toString(), slmhelper_request.getMendixObject().getId());
	}

	/**
	 * @return value of SLMHelper_Contract
	 */
	public final slm.proxies.Contract getSLMHelper_Contract() throws com.mendix.core.CoreException
	{
		return getSLMHelper_Contract(getContext());
	}

	/**
	 * @param context
	 * @return value of SLMHelper_Contract
	 */
	public final slm.proxies.Contract getSLMHelper_Contract(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		slm.proxies.Contract result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.SLMHelper_Contract.toString());
		if (identifier != null)
			result = slm.proxies.Contract.load(context, identifier);
		return result;
	}

	/**
	 * Set value of SLMHelper_Contract
	 * @param slmhelper_contract
	 */
	public final void setSLMHelper_Contract(slm.proxies.Contract slmhelper_contract)
	{
		setSLMHelper_Contract(getContext(), slmhelper_contract);
	}

	/**
	 * Set value of SLMHelper_Contract
	 * @param context
	 * @param slmhelper_contract
	 */
	public final void setSLMHelper_Contract(com.mendix.systemwideinterfaces.core.IContext context, slm.proxies.Contract slmhelper_contract)
	{
		if (slmhelper_contract == null)
			getMendixObject().setValue(context, MemberNames.SLMHelper_Contract.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.SLMHelper_Contract.toString(), slmhelper_contract.getMendixObject().getId());
	}

	/**
	 * @return value of SLMHelper_Organisation
	 */
	public final nap.proxies.Organisation getSLMHelper_Organisation() throws com.mendix.core.CoreException
	{
		return getSLMHelper_Organisation(getContext());
	}

	/**
	 * @param context
	 * @return value of SLMHelper_Organisation
	 */
	public final nap.proxies.Organisation getSLMHelper_Organisation(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		nap.proxies.Organisation result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.SLMHelper_Organisation.toString());
		if (identifier != null)
			result = nap.proxies.Organisation.load(context, identifier);
		return result;
	}

	/**
	 * Set value of SLMHelper_Organisation
	 * @param slmhelper_organisation
	 */
	public final void setSLMHelper_Organisation(nap.proxies.Organisation slmhelper_organisation)
	{
		setSLMHelper_Organisation(getContext(), slmhelper_organisation);
	}

	/**
	 * Set value of SLMHelper_Organisation
	 * @param context
	 * @param slmhelper_organisation
	 */
	public final void setSLMHelper_Organisation(com.mendix.systemwideinterfaces.core.IContext context, nap.proxies.Organisation slmhelper_organisation)
	{
		if (slmhelper_organisation == null)
			getMendixObject().setValue(context, MemberNames.SLMHelper_Organisation.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.SLMHelper_Organisation.toString(), slmhelper_organisation.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return sLMHelperMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final mobile.proxies.SLMHelper that = (mobile.proxies.SLMHelper) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Mobile.SLMHelper";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
