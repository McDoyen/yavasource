// This file was generated by Mendix Modeler 7.7.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package changecalendar.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the ChangeCalendar module
	public static void aCo_Request_ChangeCalendar(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "ChangeCalendar.ACo_Request_ChangeCalendar", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bCo_CalendarSetting(IContext context, changecalendar.proxies.CalendarSetting _calendarSetting)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CalendarSetting", _calendarSetting == null ? null : _calendarSetting.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "ChangeCalendar.BCo_CalendarSetting", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bCo_ChangeCalendar(IContext context, changecalendar.proxies.ChangeCalendar _changeCalendar)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ChangeCalendar", _changeCalendar == null ? null : _changeCalendar.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "ChangeCalendar.BCo_ChangeCalendar", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean changeCalendar_AssociateToRequestTypeObject(IContext context, changecalendar.proxies.ChangeCalendar _changeCalendar)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ChangeCalendar", _changeCalendar == null ? null : _changeCalendar.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "ChangeCalendar.ChangeCalendar_AssociateToRequestTypeObject", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * SprintR582952: Change calendar review: Colors based on service process instead of process type
	 */
	public static boolean changeCalendar_SetColor(IContext context, changecalendar.proxies.ChangeCalendar _changeCalendar)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ChangeCalendar", _changeCalendar == null ? null : _changeCalendar.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "ChangeCalendar.ChangeCalendar_SetColor", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static changecalendar.proxies.ChangeCalendarRequestType changeCalendarRequestType_Retrieve_CreateIfMissing(IContext context, changecalendar.proxies.ChangeCalenderSelection_TicketTask _changeCalenderSelection_TicketTask)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ChangeCalenderSelection_TicketTask", _changeCalenderSelection_TicketTask == null ? null : _changeCalenderSelection_TicketTask.name());
			IMendixObject result = (IMendixObject)Core.execute(context, "ChangeCalendar.ChangeCalendarRequestType_Retrieve_CreateIfMissing", params);
			return result == null ? null : changecalendar.proxies.ChangeCalendarRequestType.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String changeTask(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.String)Core.execute(context, "ChangeCalendar.ChangeTask", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String changeTicket(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.String)Core.execute(context, "ChangeCalendar.ChangeTicket", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean determineRequestCalendarRelated(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "ChangeCalendar.DetermineRequestCalendarRelated", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void dragDropChangeCalenderItem(IContext context, changecalendar.proxies.ChangeCalendar _changeCalendar)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ChangeCalendar", _changeCalendar == null ? null : _changeCalendar.getMendixObject());
			Core.execute(context, "ChangeCalendar.DragDropChangeCalenderItem", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void filterServiceProcess_SelectAll(IContext context, changecalendar.proxies.CalendarSetting _calendarSetting)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CalendarSetting", _calendarSetting == null ? null : _calendarSetting.getMendixObject());
			Core.execute(context, "ChangeCalendar.FilterServiceProcess_SelectAll", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void filterServiceProcess_SelectNone(IContext context, changecalendar.proxies.CalendarSetting _calendarSetting)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CalendarSetting", _calendarSetting == null ? null : _calendarSetting.getMendixObject());
			Core.execute(context, "ChangeCalendar.FilterServiceProcess_SelectNone", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void filterTicketTask_SelectAll(IContext context, changecalendar.proxies.CalendarSetting _calendarSetting)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CalendarSetting", _calendarSetting == null ? null : _calendarSetting.getMendixObject());
			Core.execute(context, "ChangeCalendar.FilterTicketTask_SelectAll", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void filterTicketTask_SelectNone(IContext context, changecalendar.proxies.CalendarSetting _calendarSetting)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CalendarSetting", _calendarSetting == null ? null : _calendarSetting.getMendixObject());
			Core.execute(context, "ChangeCalendar.FilterTicketTask_SelectNone", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static changecalendar.proxies.ChangeCalendar getRequestChangeCalendarObject(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "ChangeCalendar.GetRequestChangeCalendarObject", params);
			return result == null ? null : changecalendar.proxies.ChangeCalendar.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * SprintR582952: Change calendar review: Colors based on service process instead of process type
	 */
	public static java.lang.String mL_ServiceProcessBasedColor(IContext context, slm.proxies.Service_Process _service_Process)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Service_Process", _service_Process == null ? null : _service_Process.getMendixObject());
			return (java.lang.String)Core.execute(context, "ChangeCalendar.ML_ServiceProcessBasedColor", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 5813:
	 */
	public static void oCh_CalendarSetting(IContext context, changecalendar.proxies.CalendarSetting _calendarSetting)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CalendarSetting", _calendarSetting == null ? null : _calendarSetting.getMendixObject());
			Core.execute(context, "ChangeCalendar.OCh_CalendarSetting", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openRequestTooltip(IContext context, changecalendar.proxies.ChangeCalendar _changeCalendar)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ChangeCalendar", _changeCalendar == null ? null : _changeCalendar.getMendixObject());
			Core.execute(context, "ChangeCalendar.OpenRequestTooltip", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 5813:
	 */
	public static void openToday(IContext context, changecalendar.proxies.CalendarSetting _calendarSetting, changecalendar.proxies.ChangeCalendar _changeCalendar)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CalendarSetting", _calendarSetting == null ? null : _calendarSetting.getMendixObject());
			params.put("ChangeCalendar", _changeCalendar == null ? null : _changeCalendar.getMendixObject());
			Core.execute(context, "ChangeCalendar.OpenToday", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String operationsTask(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.String)Core.execute(context, "ChangeCalendar.OperationsTask", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String operationsTicket(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.String)Core.execute(context, "ChangeCalendar.OperationsTicket", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void refreshCalendar(IContext context, changecalendar.proxies.CalendarSetting _calendarSetting)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CalendarSetting", _calendarSetting == null ? null : _calendarSetting.getMendixObject());
			Core.execute(context, "ChangeCalendar.RefreshCalendar", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void refreshGotoDate(IContext context, changecalendar.proxies.CalendarSetting _calendarSetting)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CalendarSetting", _calendarSetting == null ? null : _calendarSetting.getMendixObject());
			Core.execute(context, "ChangeCalendar.RefreshGotoDate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean requestUserAuthorized(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "ChangeCalendar.RequestUserAuthorized", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static changecalendar.proxies.CalendarSetting retrieveCalendarSetting_CreateIfMissing(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "ChangeCalendar.RetrieveCalendarSetting_CreateIfMissing", params);
			return result == null ? null : changecalendar.proxies.CalendarSetting.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void showChangeCalendar_sub(IContext context, changecalendar.proxies.CalendarSetting _calendarSetting, boolean _showInPopup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CalendarSetting", _calendarSetting == null ? null : _calendarSetting.getMendixObject());
			params.put("ShowInPopup", _showInPopup);
			Core.execute(context, "ChangeCalendar.ShowChangeCalendar_sub", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void updateTicketTaskPlannedStartEnd(IContext context, process.proxies.Request _request, java.util.Date _startDateTime, java.util.Date _endDateTime, changecalendar.proxies.ChangeCalendar _changeCalendar, boolean _authorizationCheck)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("StartDateTime", _startDateTime);
			params.put("EndDateTime", _endDateTime);
			params.put("ChangeCalendar", _changeCalendar == null ? null : _changeCalendar.getMendixObject());
			params.put("AuthorizationCheck", _authorizationCheck);
			Core.execute(context, "ChangeCalendar.UpdateTicketTaskPlannedStartEnd", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}