// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package changecalendar.proxies;

public class CalendarSetting
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject calendarSettingMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "ChangeCalendar.CalendarSetting";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		UU95_SelectionChangeOperation("UU95_SelectionChangeOperation"),
		UU95_SelectionTicketTask("UU95_SelectionTicketTask"),
		HasClearedAllFilters("HasClearedAllFilters"),
		View("View"),
		StartCalendar("StartCalendar"),
		CalendarSetting_ChangeCalendarRequestType("ChangeCalendar.CalendarSetting_ChangeCalendarRequestType"),
		CalendarSetting_ChangeCalendar("ChangeCalendar.CalendarSetting_ChangeCalendar"),
		CalendarSetting_Account("ChangeCalendar.CalendarSetting_Account"),
		CalendarSetting_Service_Process("ChangeCalendar.CalendarSetting_Service_Process"),
		CalendarSetting_Organisation("ChangeCalendar.CalendarSetting_Organisation"),
		CalendarSetting_Category("ChangeCalendar.CalendarSetting_Category");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public CalendarSetting(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "ChangeCalendar.CalendarSetting"));
	}

	protected CalendarSetting(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject calendarSettingMendixObject)
	{
		if (calendarSettingMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("ChangeCalendar.CalendarSetting", calendarSettingMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a ChangeCalendar.CalendarSetting");

		this.calendarSettingMendixObject = calendarSettingMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'CalendarSetting.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static changecalendar.proxies.CalendarSetting initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return changecalendar.proxies.CalendarSetting.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static changecalendar.proxies.CalendarSetting initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new changecalendar.proxies.CalendarSetting(context, mendixObject);
	}

	public static changecalendar.proxies.CalendarSetting load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return changecalendar.proxies.CalendarSetting.initialize(context, mendixObject);
	}

	public static java.util.List<changecalendar.proxies.CalendarSetting> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<changecalendar.proxies.CalendarSetting> result = new java.util.ArrayList<changecalendar.proxies.CalendarSetting>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//ChangeCalendar.CalendarSetting" + xpathConstraint))
			result.add(changecalendar.proxies.CalendarSetting.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * Set value of UU95_SelectionChangeOperation
	 * @param uu95_selectionchangeoperation
	 */
	public final changecalendar.proxies.ChangeCalenderSelection_ChangeOperation getUU95_SelectionChangeOperation()
	{
		return getUU95_SelectionChangeOperation(getContext());
	}

	/**
	 * @param context
	 * @return value of UU95_SelectionChangeOperation
	 */
	public final changecalendar.proxies.ChangeCalenderSelection_ChangeOperation getUU95_SelectionChangeOperation(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.UU95_SelectionChangeOperation.toString());
		if (obj == null)
			return null;

		return changecalendar.proxies.ChangeCalenderSelection_ChangeOperation.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of UU95_SelectionChangeOperation
	 * @param uu95_selectionchangeoperation
	 */
	public final void setUU95_SelectionChangeOperation(changecalendar.proxies.ChangeCalenderSelection_ChangeOperation uu95_selectionchangeoperation)
	{
		setUU95_SelectionChangeOperation(getContext(), uu95_selectionchangeoperation);
	}

	/**
	 * Set value of UU95_SelectionChangeOperation
	 * @param context
	 * @param uu95_selectionchangeoperation
	 */
	public final void setUU95_SelectionChangeOperation(com.mendix.systemwideinterfaces.core.IContext context, changecalendar.proxies.ChangeCalenderSelection_ChangeOperation uu95_selectionchangeoperation)
	{
		if (uu95_selectionchangeoperation != null)
			getMendixObject().setValue(context, MemberNames.UU95_SelectionChangeOperation.toString(), uu95_selectionchangeoperation.toString());
		else
			getMendixObject().setValue(context, MemberNames.UU95_SelectionChangeOperation.toString(), null);
	}

	/**
	 * Set value of UU95_SelectionTicketTask
	 * @param uu95_selectiontickettask
	 */
	public final changecalendar.proxies.ChangeCalenderSelection_TicketTask getUU95_SelectionTicketTask()
	{
		return getUU95_SelectionTicketTask(getContext());
	}

	/**
	 * @param context
	 * @return value of UU95_SelectionTicketTask
	 */
	public final changecalendar.proxies.ChangeCalenderSelection_TicketTask getUU95_SelectionTicketTask(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.UU95_SelectionTicketTask.toString());
		if (obj == null)
			return null;

		return changecalendar.proxies.ChangeCalenderSelection_TicketTask.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of UU95_SelectionTicketTask
	 * @param uu95_selectiontickettask
	 */
	public final void setUU95_SelectionTicketTask(changecalendar.proxies.ChangeCalenderSelection_TicketTask uu95_selectiontickettask)
	{
		setUU95_SelectionTicketTask(getContext(), uu95_selectiontickettask);
	}

	/**
	 * Set value of UU95_SelectionTicketTask
	 * @param context
	 * @param uu95_selectiontickettask
	 */
	public final void setUU95_SelectionTicketTask(com.mendix.systemwideinterfaces.core.IContext context, changecalendar.proxies.ChangeCalenderSelection_TicketTask uu95_selectiontickettask)
	{
		if (uu95_selectiontickettask != null)
			getMendixObject().setValue(context, MemberNames.UU95_SelectionTicketTask.toString(), uu95_selectiontickettask.toString());
		else
			getMendixObject().setValue(context, MemberNames.UU95_SelectionTicketTask.toString(), null);
	}

	/**
	 * @return value of HasClearedAllFilters
	 */
	public final java.lang.Boolean getHasClearedAllFilters()
	{
		return getHasClearedAllFilters(getContext());
	}

	/**
	 * @param context
	 * @return value of HasClearedAllFilters
	 */
	public final java.lang.Boolean getHasClearedAllFilters(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.HasClearedAllFilters.toString());
	}

	/**
	 * Set value of HasClearedAllFilters
	 * @param hasclearedallfilters
	 */
	public final void setHasClearedAllFilters(java.lang.Boolean hasclearedallfilters)
	{
		setHasClearedAllFilters(getContext(), hasclearedallfilters);
	}

	/**
	 * Set value of HasClearedAllFilters
	 * @param context
	 * @param hasclearedallfilters
	 */
	public final void setHasClearedAllFilters(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean hasclearedallfilters)
	{
		getMendixObject().setValue(context, MemberNames.HasClearedAllFilters.toString(), hasclearedallfilters);
	}

	/**
	 * Set value of View
	 * @param view
	 */
	public final changecalendar.proxies.ChangeCalendarView getView()
	{
		return getView(getContext());
	}

	/**
	 * @param context
	 * @return value of View
	 */
	public final changecalendar.proxies.ChangeCalendarView getView(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.View.toString());
		if (obj == null)
			return null;

		return changecalendar.proxies.ChangeCalendarView.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of View
	 * @param view
	 */
	public final void setView(changecalendar.proxies.ChangeCalendarView view)
	{
		setView(getContext(), view);
	}

	/**
	 * Set value of View
	 * @param context
	 * @param view
	 */
	public final void setView(com.mendix.systemwideinterfaces.core.IContext context, changecalendar.proxies.ChangeCalendarView view)
	{
		if (view != null)
			getMendixObject().setValue(context, MemberNames.View.toString(), view.toString());
		else
			getMendixObject().setValue(context, MemberNames.View.toString(), null);
	}

	/**
	 * @return value of StartCalendar
	 */
	public final java.util.Date getStartCalendar()
	{
		return getStartCalendar(getContext());
	}

	/**
	 * @param context
	 * @return value of StartCalendar
	 */
	public final java.util.Date getStartCalendar(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.StartCalendar.toString());
	}

	/**
	 * Set value of StartCalendar
	 * @param startcalendar
	 */
	public final void setStartCalendar(java.util.Date startcalendar)
	{
		setStartCalendar(getContext(), startcalendar);
	}

	/**
	 * Set value of StartCalendar
	 * @param context
	 * @param startcalendar
	 */
	public final void setStartCalendar(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date startcalendar)
	{
		getMendixObject().setValue(context, MemberNames.StartCalendar.toString(), startcalendar);
	}

	/**
	 * @return value of CalendarSetting_ChangeCalendarRequestType
	 */
	public final java.util.List<changecalendar.proxies.ChangeCalendarRequestType> getCalendarSetting_ChangeCalendarRequestType() throws com.mendix.core.CoreException
	{
		return getCalendarSetting_ChangeCalendarRequestType(getContext());
	}

	/**
	 * @param context
	 * @return value of CalendarSetting_ChangeCalendarRequestType
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<changecalendar.proxies.ChangeCalendarRequestType> getCalendarSetting_ChangeCalendarRequestType(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<changecalendar.proxies.ChangeCalendarRequestType> result = new java.util.ArrayList<changecalendar.proxies.ChangeCalendarRequestType>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.CalendarSetting_ChangeCalendarRequestType.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(changecalendar.proxies.ChangeCalendarRequestType.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of CalendarSetting_ChangeCalendarRequestType
	 * @param calendarsetting_changecalendarrequesttype
	 */
	public final void setCalendarSetting_ChangeCalendarRequestType(java.util.List<changecalendar.proxies.ChangeCalendarRequestType> calendarsetting_changecalendarrequesttype)
	{
		setCalendarSetting_ChangeCalendarRequestType(getContext(), calendarsetting_changecalendarrequesttype);
	}

	/**
	 * Set value of CalendarSetting_ChangeCalendarRequestType
	 * @param context
	 * @param calendarsetting_changecalendarrequesttype
	 */
	public final void setCalendarSetting_ChangeCalendarRequestType(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<changecalendar.proxies.ChangeCalendarRequestType> calendarsetting_changecalendarrequesttype)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (changecalendar.proxies.ChangeCalendarRequestType proxyObject : calendarsetting_changecalendarrequesttype)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.CalendarSetting_ChangeCalendarRequestType.toString(), identifiers);
	}

	/**
	 * @return value of CalendarSetting_ChangeCalendar
	 */
	public final changecalendar.proxies.ChangeCalendar getCalendarSetting_ChangeCalendar() throws com.mendix.core.CoreException
	{
		return getCalendarSetting_ChangeCalendar(getContext());
	}

	/**
	 * @param context
	 * @return value of CalendarSetting_ChangeCalendar
	 */
	public final changecalendar.proxies.ChangeCalendar getCalendarSetting_ChangeCalendar(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		changecalendar.proxies.ChangeCalendar result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.CalendarSetting_ChangeCalendar.toString());
		if (identifier != null)
			result = changecalendar.proxies.ChangeCalendar.load(context, identifier);
		return result;
	}

	/**
	 * Set value of CalendarSetting_ChangeCalendar
	 * @param calendarsetting_changecalendar
	 */
	public final void setCalendarSetting_ChangeCalendar(changecalendar.proxies.ChangeCalendar calendarsetting_changecalendar)
	{
		setCalendarSetting_ChangeCalendar(getContext(), calendarsetting_changecalendar);
	}

	/**
	 * Set value of CalendarSetting_ChangeCalendar
	 * @param context
	 * @param calendarsetting_changecalendar
	 */
	public final void setCalendarSetting_ChangeCalendar(com.mendix.systemwideinterfaces.core.IContext context, changecalendar.proxies.ChangeCalendar calendarsetting_changecalendar)
	{
		if (calendarsetting_changecalendar == null)
			getMendixObject().setValue(context, MemberNames.CalendarSetting_ChangeCalendar.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.CalendarSetting_ChangeCalendar.toString(), calendarsetting_changecalendar.getMendixObject().getId());
	}

	/**
	 * @return value of CalendarSetting_Account
	 */
	public final mendix.proxies.Account getCalendarSetting_Account() throws com.mendix.core.CoreException
	{
		return getCalendarSetting_Account(getContext());
	}

	/**
	 * @param context
	 * @return value of CalendarSetting_Account
	 */
	public final mendix.proxies.Account getCalendarSetting_Account(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		mendix.proxies.Account result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.CalendarSetting_Account.toString());
		if (identifier != null)
			result = mendix.proxies.Account.load(context, identifier);
		return result;
	}

	/**
	 * Set value of CalendarSetting_Account
	 * @param calendarsetting_account
	 */
	public final void setCalendarSetting_Account(mendix.proxies.Account calendarsetting_account)
	{
		setCalendarSetting_Account(getContext(), calendarsetting_account);
	}

	/**
	 * Set value of CalendarSetting_Account
	 * @param context
	 * @param calendarsetting_account
	 */
	public final void setCalendarSetting_Account(com.mendix.systemwideinterfaces.core.IContext context, mendix.proxies.Account calendarsetting_account)
	{
		if (calendarsetting_account == null)
			getMendixObject().setValue(context, MemberNames.CalendarSetting_Account.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.CalendarSetting_Account.toString(), calendarsetting_account.getMendixObject().getId());
	}

	/**
	 * @return value of CalendarSetting_Service_Process
	 */
	public final java.util.List<slm.proxies.Service_Process> getCalendarSetting_Service_Process() throws com.mendix.core.CoreException
	{
		return getCalendarSetting_Service_Process(getContext());
	}

	/**
	 * @param context
	 * @return value of CalendarSetting_Service_Process
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<slm.proxies.Service_Process> getCalendarSetting_Service_Process(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<slm.proxies.Service_Process> result = new java.util.ArrayList<slm.proxies.Service_Process>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.CalendarSetting_Service_Process.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(slm.proxies.Service_Process.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of CalendarSetting_Service_Process
	 * @param calendarsetting_service_process
	 */
	public final void setCalendarSetting_Service_Process(java.util.List<slm.proxies.Service_Process> calendarsetting_service_process)
	{
		setCalendarSetting_Service_Process(getContext(), calendarsetting_service_process);
	}

	/**
	 * Set value of CalendarSetting_Service_Process
	 * @param context
	 * @param calendarsetting_service_process
	 */
	public final void setCalendarSetting_Service_Process(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<slm.proxies.Service_Process> calendarsetting_service_process)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (slm.proxies.Service_Process proxyObject : calendarsetting_service_process)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.CalendarSetting_Service_Process.toString(), identifiers);
	}

	/**
	 * @return value of CalendarSetting_Organisation
	 */
	public final java.util.List<nap.proxies.Organisation> getCalendarSetting_Organisation() throws com.mendix.core.CoreException
	{
		return getCalendarSetting_Organisation(getContext());
	}

	/**
	 * @param context
	 * @return value of CalendarSetting_Organisation
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<nap.proxies.Organisation> getCalendarSetting_Organisation(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<nap.proxies.Organisation> result = new java.util.ArrayList<nap.proxies.Organisation>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.CalendarSetting_Organisation.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(nap.proxies.Organisation.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of CalendarSetting_Organisation
	 * @param calendarsetting_organisation
	 */
	public final void setCalendarSetting_Organisation(java.util.List<nap.proxies.Organisation> calendarsetting_organisation)
	{
		setCalendarSetting_Organisation(getContext(), calendarsetting_organisation);
	}

	/**
	 * Set value of CalendarSetting_Organisation
	 * @param context
	 * @param calendarsetting_organisation
	 */
	public final void setCalendarSetting_Organisation(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<nap.proxies.Organisation> calendarsetting_organisation)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (nap.proxies.Organisation proxyObject : calendarsetting_organisation)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.CalendarSetting_Organisation.toString(), identifiers);
	}

	/**
	 * @return value of CalendarSetting_Category
	 */
	public final java.util.List<categories.proxies.Category> getCalendarSetting_Category() throws com.mendix.core.CoreException
	{
		return getCalendarSetting_Category(getContext());
	}

	/**
	 * @param context
	 * @return value of CalendarSetting_Category
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<categories.proxies.Category> getCalendarSetting_Category(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<categories.proxies.Category> result = new java.util.ArrayList<categories.proxies.Category>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.CalendarSetting_Category.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(categories.proxies.Category.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of CalendarSetting_Category
	 * @param calendarsetting_category
	 */
	public final void setCalendarSetting_Category(java.util.List<categories.proxies.Category> calendarsetting_category)
	{
		setCalendarSetting_Category(getContext(), calendarsetting_category);
	}

	/**
	 * Set value of CalendarSetting_Category
	 * @param context
	 * @param calendarsetting_category
	 */
	public final void setCalendarSetting_Category(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<categories.proxies.Category> calendarsetting_category)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (categories.proxies.Category proxyObject : calendarsetting_category)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.CalendarSetting_Category.toString(), identifiers);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return calendarSettingMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final changecalendar.proxies.CalendarSetting that = (changecalendar.proxies.CalendarSetting) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "ChangeCalendar.CalendarSetting";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
