// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package statetransition.proxies;

public class State
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject stateMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "StateTransition.State";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Name("Name"),
		TypeOfState("TypeOfState"),
		LevelOfState("LevelOfState"),
		AllowCreateTask("AllowCreateTask"),
		LabelBGColor("LabelBGColor"),
		LabelTextColor("LabelTextColor"),
		FirstLetterOfName("FirstLetterOfName"),
		InterfaceGUID("InterfaceGUID");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public State(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "StateTransition.State"));
	}

	protected State(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject stateMendixObject)
	{
		if (stateMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("StateTransition.State", stateMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a StateTransition.State");

		this.stateMendixObject = stateMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'State.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static statetransition.proxies.State initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return statetransition.proxies.State.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static statetransition.proxies.State initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new statetransition.proxies.State(context, mendixObject);
	}

	public static statetransition.proxies.State load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return statetransition.proxies.State.initialize(context, mendixObject);
	}

	public static java.util.List<statetransition.proxies.State> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<statetransition.proxies.State> result = new java.util.ArrayList<statetransition.proxies.State>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//StateTransition.State" + xpathConstraint))
			result.add(statetransition.proxies.State.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Name
	 */
	public final java.lang.String getName()
	{
		return getName(getContext());
	}

	/**
	 * @param context
	 * @return value of Name
	 */
	public final java.lang.String getName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Name.toString());
	}

	/**
	 * Set value of Name
	 * @param name
	 */
	public final void setName(java.lang.String name)
	{
		setName(getContext(), name);
	}

	/**
	 * Set value of Name
	 * @param context
	 * @param name
	 */
	public final void setName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String name)
	{
		getMendixObject().setValue(context, MemberNames.Name.toString(), name);
	}

	/**
	 * Set value of TypeOfState
	 * @param typeofstate
	 */
	public final statetransition.proxies.TypeOfPhaseOrState getTypeOfState()
	{
		return getTypeOfState(getContext());
	}

	/**
	 * @param context
	 * @return value of TypeOfState
	 */
	public final statetransition.proxies.TypeOfPhaseOrState getTypeOfState(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.TypeOfState.toString());
		if (obj == null)
			return null;

		return statetransition.proxies.TypeOfPhaseOrState.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of TypeOfState
	 * @param typeofstate
	 */
	public final void setTypeOfState(statetransition.proxies.TypeOfPhaseOrState typeofstate)
	{
		setTypeOfState(getContext(), typeofstate);
	}

	/**
	 * Set value of TypeOfState
	 * @param context
	 * @param typeofstate
	 */
	public final void setTypeOfState(com.mendix.systemwideinterfaces.core.IContext context, statetransition.proxies.TypeOfPhaseOrState typeofstate)
	{
		if (typeofstate != null)
			getMendixObject().setValue(context, MemberNames.TypeOfState.toString(), typeofstate.toString());
		else
			getMendixObject().setValue(context, MemberNames.TypeOfState.toString(), null);
	}

	/**
	 * @return value of LevelOfState
	 */
	public final java.lang.Integer getLevelOfState()
	{
		return getLevelOfState(getContext());
	}

	/**
	 * @param context
	 * @return value of LevelOfState
	 */
	public final java.lang.Integer getLevelOfState(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.LevelOfState.toString());
	}

	/**
	 * Set value of LevelOfState
	 * @param levelofstate
	 */
	public final void setLevelOfState(java.lang.Integer levelofstate)
	{
		setLevelOfState(getContext(), levelofstate);
	}

	/**
	 * Set value of LevelOfState
	 * @param context
	 * @param levelofstate
	 */
	public final void setLevelOfState(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer levelofstate)
	{
		getMendixObject().setValue(context, MemberNames.LevelOfState.toString(), levelofstate);
	}

	/**
	 * @return value of AllowCreateTask
	 */
	public final java.lang.Boolean getAllowCreateTask()
	{
		return getAllowCreateTask(getContext());
	}

	/**
	 * @param context
	 * @return value of AllowCreateTask
	 */
	public final java.lang.Boolean getAllowCreateTask(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.AllowCreateTask.toString());
	}

	/**
	 * Set value of AllowCreateTask
	 * @param allowcreatetask
	 */
	public final void setAllowCreateTask(java.lang.Boolean allowcreatetask)
	{
		setAllowCreateTask(getContext(), allowcreatetask);
	}

	/**
	 * Set value of AllowCreateTask
	 * @param context
	 * @param allowcreatetask
	 */
	public final void setAllowCreateTask(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean allowcreatetask)
	{
		getMendixObject().setValue(context, MemberNames.AllowCreateTask.toString(), allowcreatetask);
	}

	/**
	 * @return value of LabelBGColor
	 */
	public final java.lang.String getLabelBGColor()
	{
		return getLabelBGColor(getContext());
	}

	/**
	 * @param context
	 * @return value of LabelBGColor
	 */
	public final java.lang.String getLabelBGColor(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.LabelBGColor.toString());
	}

	/**
	 * Set value of LabelBGColor
	 * @param labelbgcolor
	 */
	public final void setLabelBGColor(java.lang.String labelbgcolor)
	{
		setLabelBGColor(getContext(), labelbgcolor);
	}

	/**
	 * Set value of LabelBGColor
	 * @param context
	 * @param labelbgcolor
	 */
	public final void setLabelBGColor(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String labelbgcolor)
	{
		getMendixObject().setValue(context, MemberNames.LabelBGColor.toString(), labelbgcolor);
	}

	/**
	 * @return value of LabelTextColor
	 */
	public final java.lang.String getLabelTextColor()
	{
		return getLabelTextColor(getContext());
	}

	/**
	 * @param context
	 * @return value of LabelTextColor
	 */
	public final java.lang.String getLabelTextColor(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.LabelTextColor.toString());
	}

	/**
	 * Set value of LabelTextColor
	 * @param labeltextcolor
	 */
	public final void setLabelTextColor(java.lang.String labeltextcolor)
	{
		setLabelTextColor(getContext(), labeltextcolor);
	}

	/**
	 * Set value of LabelTextColor
	 * @param context
	 * @param labeltextcolor
	 */
	public final void setLabelTextColor(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String labeltextcolor)
	{
		getMendixObject().setValue(context, MemberNames.LabelTextColor.toString(), labeltextcolor);
	}

	/**
	 * @return value of FirstLetterOfName
	 */
	public final java.lang.String getFirstLetterOfName()
	{
		return getFirstLetterOfName(getContext());
	}

	/**
	 * @param context
	 * @return value of FirstLetterOfName
	 */
	public final java.lang.String getFirstLetterOfName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.FirstLetterOfName.toString());
	}

	/**
	 * Set value of FirstLetterOfName
	 * @param firstletterofname
	 */
	public final void setFirstLetterOfName(java.lang.String firstletterofname)
	{
		setFirstLetterOfName(getContext(), firstletterofname);
	}

	/**
	 * Set value of FirstLetterOfName
	 * @param context
	 * @param firstletterofname
	 */
	public final void setFirstLetterOfName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String firstletterofname)
	{
		getMendixObject().setValue(context, MemberNames.FirstLetterOfName.toString(), firstletterofname);
	}

	/**
	 * @return value of InterfaceGUID
	 */
	public final java.lang.String getInterfaceGUID()
	{
		return getInterfaceGUID(getContext());
	}

	/**
	 * @param context
	 * @return value of InterfaceGUID
	 */
	public final java.lang.String getInterfaceGUID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.InterfaceGUID.toString());
	}

	/**
	 * Set value of InterfaceGUID
	 * @param interfaceguid
	 */
	public final void setInterfaceGUID(java.lang.String interfaceguid)
	{
		setInterfaceGUID(getContext(), interfaceguid);
	}

	/**
	 * Set value of InterfaceGUID
	 * @param context
	 * @param interfaceguid
	 */
	public final void setInterfaceGUID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String interfaceguid)
	{
		getMendixObject().setValue(context, MemberNames.InterfaceGUID.toString(), interfaceguid);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return stateMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final statetransition.proxies.State that = (statetransition.proxies.State) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "StateTransition.State";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
