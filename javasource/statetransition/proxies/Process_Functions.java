// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package statetransition.proxies;

public enum Process_Functions
{
	All_Script_Questions_Answered(new java.lang.String[][] { new java.lang.String[] { "en_US", "All Script Questions Answered" }, new java.lang.String[] { "nl_NL", "Alle vragen in het script beantwoord" }, new java.lang.String[] { "de_DE", "Alle geantworteten Skript Fragen" } }),
	Assign_To_Person(new java.lang.String[][] { new java.lang.String[] { "en_US", "Assign To Person" }, new java.lang.String[] { "nl_NL", "Toewijzen aan persoon" }, new java.lang.String[] { "de_DE", "Zuweisung zur Person" } }),
	Assign_To_Group(new java.lang.String[][] { new java.lang.String[] { "en_US", "Assign To Group" }, new java.lang.String[] { "nl_NL", "Toewijzen aan groep" }, new java.lang.String[] { "de_DE", "Zuweisung zu Gruppe" } }),
	AutoClose(new java.lang.String[][] { new java.lang.String[] { "en_US", "Auto Close" }, new java.lang.String[] { "nl_NL", "Automatisch sluiten" }, new java.lang.String[] { "de_DE", "AutoSchließen" } }),
	Cancel_Auto_Close(new java.lang.String[][] { new java.lang.String[] { "en_US", "Cancel Auto Close" }, new java.lang.String[] { "de_DE", "Automatisches Schliessen verhindern" }, new java.lang.String[] { "nl_NL", "Auto Close annuleren" } }),
	Cancel_Notifications(new java.lang.String[][] { new java.lang.String[] { "en_US", "Cancel Notifications" }, new java.lang.String[] { "nl_NL", "Annuleer notificaties" }, new java.lang.String[] { "de_DE", "Benachrichtigungen abbrechen" } }),
	Cancel_Pause(new java.lang.String[][] { new java.lang.String[] { "en_US", "Cancel Pause" }, new java.lang.String[] { "nl_NL", "Annuleer pauze" }, new java.lang.String[] { "de_DE", "Pause abbrechen" } }),
	CheckAllCILevelsFilled(new java.lang.String[][] { new java.lang.String[] { "en_US", "Check All CI Levels Filled" } }),
	Check_Open_Tasks(new java.lang.String[][] { new java.lang.String[] { "en_US", "Check Open Tasks" }, new java.lang.String[] { "nl_NL", "Controleer open taken" }, new java.lang.String[] { "de_DE", "Überprüfen der offenen Tasks" } }),
	Check_Scheduled_Dates(new java.lang.String[][] { new java.lang.String[] { "en_US", "Check Scheduled Dates" }, new java.lang.String[] { "nl_NL", "Check geplande datums" }, new java.lang.String[] { "de_DE", "Überprüfen der geplanten Termine" } }),
	Check_Shopping_Cart(new java.lang.String[][] { new java.lang.String[] { "en_US", "Check Shopping Cart" }, new java.lang.String[] { "nl_NL", "Controleer winkelwagentje" }, new java.lang.String[] { "de_DE", "Warenkorb prüfen" } }),
	Check_Triggers(new java.lang.String[][] { new java.lang.String[] { "en_US", "Check Triggers" }, new java.lang.String[] { "nl_NL", "Controleer triggers" }, new java.lang.String[] { "de_DE", "Auslöser prüfen" } }),
	Check_Wish_Dates(new java.lang.String[][] { new java.lang.String[] { "en_US", "Check Wish Dates" }, new java.lang.String[] { "nl_NL", "Check gewenste datums" }, new java.lang.String[] { "de_DE", "Überprüfen der Wunschtermine" } }),
	CloseRelated(new java.lang.String[][] { new java.lang.String[] { "en_US", "Close Related" }, new java.lang.String[] { "nl_NL", "Sluit gerelateerde" }, new java.lang.String[] { "de_DE", "Alle dazugehörigen schließen" } }),
	Close_Ticket(new java.lang.String[][] { new java.lang.String[] { "en_US", "Close Ticket" }, new java.lang.String[] { "nl_NL", "Sluit ticket" }, new java.lang.String[] { "de_DE", "Ticket schließen" } }),
	Continue_Contract_Timer(new java.lang.String[][] { new java.lang.String[] { "en_US", "Continue Contract Timer" }, new java.lang.String[] { "nl_NL", "Hervat contract timer" } }),
	Create_Analysis(new java.lang.String[][] { new java.lang.String[] { "en_US", "Create Analysis" }, new java.lang.String[] { "nl_NL", "Analyse aanmaken" }, new java.lang.String[] { "de_DE", "Analyse erstellen" } }),
	Create_Task(new java.lang.String[][] { new java.lang.String[] { "en_US", "Create Task" }, new java.lang.String[] { "nl_NL", "Taak aanmaken" }, new java.lang.String[] { "de_DE", "Task erstellen" } }),
	Create_Task_From_Template(new java.lang.String[][] { new java.lang.String[] { "en_US", "Create Task From Template" }, new java.lang.String[] { "de_DE", "Task aus Template erstellen" }, new java.lang.String[] { "nl_NL", "Taak aanmaken vanuit template" } }),
	Create_Ticket_From_Template(new java.lang.String[][] { new java.lang.String[] { "en_US", "Create Ticket From Template" }, new java.lang.String[] { "de_DE", "Ticket aus Template erstellen" }, new java.lang.String[] { "nl_NL", "Ticket aanmaken vanuit template" } }),
	DetachChildRelation(new java.lang.String[][] { new java.lang.String[] { "en_US", "Detach Child Relation" } }),
	End_Pause(new java.lang.String[][] { new java.lang.String[] { "en_US", "End Pause" }, new java.lang.String[] { "nl_NL", "Einde pauzeren" }, new java.lang.String[] { "de_DE", "Pause beenden" } }),
	Index_Request(new java.lang.String[][] { new java.lang.String[] { "en_US", "Index Request" }, new java.lang.String[] { "nl_NL", "Indexeer verzoeken" }, new java.lang.String[] { "de_DE", "Indizierungs-Request" } }),
	Notify(new java.lang.String[][] { new java.lang.String[] { "en_US", "Notify" }, new java.lang.String[] { "nl_NL", "Notificeer" }, new java.lang.String[] { "de_DE", "Benachrichtigen" } }),
	Pause(new java.lang.String[][] { new java.lang.String[] { "en_US", "Pause" }, new java.lang.String[] { "nl_NL", "Pauzeren" }, new java.lang.String[] { "de_DE", "Pause" } }),
	Request_is_not_FTR(new java.lang.String[][] { new java.lang.String[] { "en_US", "Request is not FTR" }, new java.lang.String[] { "nl_NL", "Verzoek is niet FTR" }, new java.lang.String[] { "de_DE", "Anfrage ist nicht FTR" } }),
	Required_Analysis(new java.lang.String[][] { new java.lang.String[] { "en_US", "Required Analysis" }, new java.lang.String[] { "nl_NL", "Verplichte Analyse" }, new java.lang.String[] { "de_DE", "Erforderliche Analyse" } }),
	Restart_Contract_Timer(new java.lang.String[][] { new java.lang.String[] { "en_US", "Restart Contract Timer" } }),
	Send_Questionnaire(new java.lang.String[][] { new java.lang.String[] { "en_US", "Send Questionnaire" }, new java.lang.String[] { "nl_NL", "Verzend vragenlijst" }, new java.lang.String[] { "de_DE", "Umfrage senden" } }),
	Set_Actual_End_Time(new java.lang.String[][] { new java.lang.String[] { "en_US", "Set Actual End Time" }, new java.lang.String[] { "nl_NL", "Zet actuele eindtijd" }, new java.lang.String[] { "de_DE", "Tätsächliche Endzeit festlegen" } }),
	Signal_Workflow(new java.lang.String[][] { new java.lang.String[] { "en_US", "Signal Workflow" }, new java.lang.String[] { "de_DE", "Impuls-Workfflow" }, new java.lang.String[] { "nl_NL", "Signaal workflow" } }),
	Solve_Related(new java.lang.String[][] { new java.lang.String[] { "en_US", "Solve Related" }, new java.lang.String[] { "nl_NL", "Gerelateerde oplossen" }, new java.lang.String[] { "de_DE", "Verknüpfte lösen" } }),
	Solve_Ticket(new java.lang.String[][] { new java.lang.String[] { "en_US", "Solve Ticket" }, new java.lang.String[] { "nl_NL", "Ticket oplossen" }, new java.lang.String[] { "de_DE", "Ticket lösen" } }),
	Start_Approval(new java.lang.String[][] { new java.lang.String[] { "en_US", "Start Approval" }, new java.lang.String[] { "de_DE", "Startbestätigung" }, new java.lang.String[] { "nl_NL", "Goedkeuring starten" } }),
	Start_Workflow(new java.lang.String[][] { new java.lang.String[] { "en_US", "Start Workflow" }, new java.lang.String[] { "de_DE", "Workflow starten" }, new java.lang.String[] { "nl_NL", "Start Workflow" } }),
	Stop_Contract_Timer(new java.lang.String[][] { new java.lang.String[] { "en_US", "Stop Contract Timer" }, new java.lang.String[] { "nl_NL", "Stop Contract Timer" }, new java.lang.String[] { "de_DE", "Vertragstimer stoppen" } }),
	Stop_Response_Time(new java.lang.String[][] { new java.lang.String[] { "en_US", "Stop Response Timer" }, new java.lang.String[] { "nl_NL", "Stop Respons Timer" }, new java.lang.String[] { "de_DE", "Reaktionstimer stoppen" } }),
	Take_Over(new java.lang.String[][] { new java.lang.String[] { "en_US", "Take Over" }, new java.lang.String[] { "nl_NL", "Overnemen" }, new java.lang.String[] { "de_DE", "Übernehmen" } }),
	Workflow_Task_Result(new java.lang.String[][] { new java.lang.String[] { "en_US", "Workflow Task Result" }, new java.lang.String[] { "nl_NL", "Workflowtaak resultaat" }, new java.lang.String[] { "de_DE", "Workflow-Task-Ergebnisse" } });

	private java.util.Map<java.lang.String, java.lang.String> captions;

	private Process_Functions(java.lang.String[][] captionStrings)
	{
		this.captions = new java.util.HashMap<java.lang.String, java.lang.String>();
		for (java.lang.String[] captionString : captionStrings)
			captions.put(captionString[0], captionString[1]);
	}

	public java.lang.String getCaption(java.lang.String languageCode)
	{
		if (captions.containsKey(languageCode))
			return captions.get(languageCode);
		return captions.get("en_US");
	}

	public java.lang.String getCaption()
	{
		return captions.get("en_US");
	}
}
