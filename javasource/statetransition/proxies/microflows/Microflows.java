// This file was generated by Mendix Modeler 7.7.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package statetransition.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the StateTransition module
	public static void aC_AuditState(IContext context, statetransition.proxies.State _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "StateTransition.AC_AuditState", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean aD_AuditState(IContext context, statetransition.proxies.State _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.AD_AuditState", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void addFunction(IContext context, statetransition.proxies.Transition _transition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Transition", _transition == null ? null : _transition.getMendixObject());
			Core.execute(context, "StateTransition.AddFunction", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void addSelectedMatricesToExport(IContext context, java.util.List<statetransition.proxies.Matrix> _objectList, importexport.proxies.DataPatchSet _dataPatchSet)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_objectList = null;
			if (_objectList != null)
			{
				listparam_objectList = new java.util.ArrayList<IMendixObject>();
				for (statetransition.proxies.Matrix obj : _objectList)
					listparam_objectList.add(obj.getMendixObject());
			}
			params.put("ObjectList", listparam_objectList);
			params.put("DataPatchSet", _dataPatchSet == null ? null : _dataPatchSet.getMendixObject());
			Core.execute(context, "StateTransition.addSelectedMatricesToExport", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditFunction_AfterCommit(IContext context, statetransition.proxies.Function _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "StateTransition.AuditFunction_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditFunction_AfterDelete(IContext context, statetransition.proxies.Function _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.AuditFunction_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditFunction_GetAuditRecord(IContext context, statetransition.proxies.Function _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "StateTransition.AuditFunction_GetAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditMatrix_AfterCommit(IContext context, statetransition.proxies.Matrix _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "StateTransition.AuditMatrix_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditMatrix_AfterDelete(IContext context, statetransition.proxies.Matrix _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.AuditMatrix_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditMatrix_GetAuditRecord(IContext context, statetransition.proxies.Matrix _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "StateTransition.AuditMatrix_GetAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditPhase_AfterCommit(IContext context, statetransition.proxies.Phase _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "StateTransition.AuditPhase_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditPhase_AfterDelete(IContext context, statetransition.proxies.Phase _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.AuditPhase_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditPhase_GetAuditRecord(IContext context, statetransition.proxies.Phase _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "StateTransition.AuditPhase_GetAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditTransition_AfterCommit(IContext context, statetransition.proxies.Transition _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "StateTransition.AuditTransition_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditTransition_AfterDelete(IContext context, statetransition.proxies.Transition _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.AuditTransition_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditTransition_GetAuditRecord(IContext context, statetransition.proxies.Transition _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "StateTransition.AuditTransition_GetAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditTransitionFunction_AfterCommit(IContext context, statetransition.proxies.TransitionFunction _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "StateTransition.AuditTransitionFunction_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditTransitionFunction_AfterDelete(IContext context, statetransition.proxies.TransitionFunction _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.AuditTransitionFunction_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditTransitionMessage_AfterCommit(IContext context, statetransition.proxies.TransitionMessage _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "StateTransition.AuditTransitionMessage_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditTransitionMessage_AfterDelete(IContext context, statetransition.proxies.TransitionMessage _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.AuditTransitionMessage_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditTransitionMessage_GetAuditRecord(IContext context, statetransition.proxies.TransitionMessage _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "StateTransition.AuditTransitionMessage_GetAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bC_State(IContext context, statetransition.proxies.State _state)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("State", _state == null ? null : _state.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.BC_State", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyFunction(IContext context, statetransition.proxies.Function _function)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Function", _function == null ? null : _function.getMendixObject());
			Core.execute(context, "StateTransition.CopyFunction", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyFunctionList(IContext context, java.util.List<statetransition.proxies.Function> _functionList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_functionList = null;
			if (_functionList != null)
			{
				listparam_functionList = new java.util.ArrayList<IMendixObject>();
				for (statetransition.proxies.Function obj : _functionList)
					listparam_functionList.add(obj.getMendixObject());
			}
			params.put("FunctionList", listparam_functionList);
			Core.execute(context, "StateTransition.CopyFunctionList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyMatrix(IContext context, statetransition.proxies.Matrix _matrix)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Matrix", _matrix == null ? null : _matrix.getMendixObject());
			Core.execute(context, "StateTransition.CopyMatrix", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyMatrixList(IContext context, java.util.List<statetransition.proxies.Matrix> _matrixList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_matrixList = null;
			if (_matrixList != null)
			{
				listparam_matrixList = new java.util.ArrayList<IMendixObject>();
				for (statetransition.proxies.Matrix obj : _matrixList)
					listparam_matrixList.add(obj.getMendixObject());
			}
			params.put("MatrixList", listparam_matrixList);
			Core.execute(context, "StateTransition.CopyMatrixList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyPhase(IContext context, statetransition.proxies.Phase _phase)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Phase", _phase == null ? null : _phase.getMendixObject());
			Core.execute(context, "StateTransition.CopyPhase", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyPhaseList(IContext context, java.util.List<statetransition.proxies.Phase> _phaseList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_phaseList = null;
			if (_phaseList != null)
			{
				listparam_phaseList = new java.util.ArrayList<IMendixObject>();
				for (statetransition.proxies.Phase obj : _phaseList)
					listparam_phaseList.add(obj.getMendixObject());
			}
			params.put("PhaseList", listparam_phaseList);
			Core.execute(context, "StateTransition.CopyPhaseList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyState(IContext context, statetransition.proxies.State _state)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("State", _state == null ? null : _state.getMendixObject());
			Core.execute(context, "StateTransition.CopyState", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyStateList(IContext context, java.util.List<statetransition.proxies.State> _stateList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_stateList = null;
			if (_stateList != null)
			{
				listparam_stateList = new java.util.ArrayList<IMendixObject>();
				for (statetransition.proxies.State obj : _stateList)
					listparam_stateList.add(obj.getMendixObject());
			}
			params.put("StateList", listparam_stateList);
			Core.execute(context, "StateTransition.CopyStateList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyTransition(IContext context, statetransition.proxies.Transition _transition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Transition", _transition == null ? null : _transition.getMendixObject());
			Core.execute(context, "StateTransition.CopyTransition", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyTransitionList(IContext context, java.util.List<statetransition.proxies.Transition> _transitionList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_transitionList = null;
			if (_transitionList != null)
			{
				listparam_transitionList = new java.util.ArrayList<IMendixObject>();
				for (statetransition.proxies.Transition obj : _transitionList)
					listparam_transitionList.add(obj.getMendixObject());
			}
			params.put("TransitionList", listparam_transitionList);
			Core.execute(context, "StateTransition.CopyTransitionList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyTransitionMessage(IContext context, statetransition.proxies.TransitionMessage _transitionMessage)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TransitionMessage", _transitionMessage == null ? null : _transitionMessage.getMendixObject());
			Core.execute(context, "StateTransition.CopyTransitionMessage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyTransitionMessageList(IContext context, java.util.List<statetransition.proxies.TransitionMessage> _transitionMessageList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_transitionMessageList = null;
			if (_transitionMessageList != null)
			{
				listparam_transitionMessageList = new java.util.ArrayList<IMendixObject>();
				for (statetransition.proxies.TransitionMessage obj : _transitionMessageList)
					listparam_transitionMessageList.add(obj.getMendixObject());
			}
			params.put("TransitionMessageList", listparam_transitionMessageList);
			Core.execute(context, "StateTransition.CopyTransitionMessageList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void createNewFunction(IContext context, statetransition.proxies.TransitionFunction _transitionFunction)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TransitionFunction", _transitionFunction == null ? null : _transitionFunction.getMendixObject());
			Core.execute(context, "StateTransition.CreateNewFunction", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean cVa_IsNewMatrix(IContext context, statetransition.proxies.Matrix _inputMatrix)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputMatrix", _inputMatrix == null ? null : _inputMatrix.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.CVa_IsNewMatrix", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deleteFunction(IContext context, statetransition.proxies.TransitionFunction _transitionFunction, statetransition.proxies.Transition _transition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TransitionFunction", _transitionFunction == null ? null : _transitionFunction.getMendixObject());
			params.put("Transition", _transition == null ? null : _transition.getMendixObject());
			Core.execute(context, "StateTransition.DeleteFunction", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void exportSelectedMatrices(IContext context, java.util.List<statetransition.proxies.Matrix> _objectList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_objectList = null;
			if (_objectList != null)
			{
				listparam_objectList = new java.util.ArrayList<IMendixObject>();
				for (statetransition.proxies.Matrix obj : _objectList)
					listparam_objectList.add(obj.getMendixObject());
			}
			params.put("ObjectList", listparam_objectList);
			Core.execute(context, "StateTransition.ExportSelectedMatrices", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void exportSelectedMatrices_Advanced(IContext context, java.util.List<statetransition.proxies.Matrix> _objectList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_objectList = null;
			if (_objectList != null)
			{
				listparam_objectList = new java.util.ArrayList<IMendixObject>();
				for (statetransition.proxies.Matrix obj : _objectList)
					listparam_objectList.add(obj.getMendixObject());
			}
			params.put("ObjectList", listparam_objectList);
			Core.execute(context, "StateTransition.ExportSelectedMatrices_Advanced", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean function_Field_ShowDelayed(IContext context, statetransition.proxies.Function _function)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Function", _function == null ? null : _function.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.Function_Field_ShowDelayed", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean indexPhase_BeforeCommit(IContext context, statetransition.proxies.Phase _phase)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Phase", _phase == null ? null : _phase.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.IndexPhase_BeforeCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AuditState_GetAuditRecord(IContext context, statetransition.proxies.State _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "StateTransition.IVK_AuditState_GetAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_Open_Functions(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "StateTransition.IVK_Button_Open_Functions", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_Open_Matrix(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "StateTransition.IVK_Button_Open_Matrix", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_Open_Pause_Reasons(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "StateTransition.IVK_Button_Open_Pause_Reasons", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_Open_Phases(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "StateTransition.IVK_Button_Open_Phases", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_Open_Required_Field(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "StateTransition.IVK_Button_Open_Required_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_Open_State(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "StateTransition.IVK_Button_Open_State", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_Open_Transition_Messages(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "StateTransition.IVK_Button_Open_Transition_Messages", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_Open_Transitions(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "StateTransition.IVK_Button_Open_Transitions", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DeleteMatrix(IContext context, java.util.List<statetransition.proxies.Matrix> _inputMatrixList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_inputMatrixList = null;
			if (_inputMatrixList != null)
			{
				listparam_inputMatrixList = new java.util.ArrayList<IMendixObject>();
				for (statetransition.proxies.Matrix obj : _inputMatrixList)
					listparam_inputMatrixList.add(obj.getMendixObject());
			}
			params.put("InputMatrixList", listparam_inputMatrixList);
			Core.execute(context, "StateTransition.IVK_DeleteMatrix", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_FunctionCancel(IContext context, statetransition.proxies.Function _function)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Function", _function == null ? null : _function.getMendixObject());
			Core.execute(context, "StateTransition.IVK_FunctionCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_FunctionSave(IContext context, statetransition.proxies.Function _function)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Function", _function == null ? null : _function.getMendixObject());
			Core.execute(context, "StateTransition.IVK_FunctionSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_FunctionSaveAndClose(IContext context, statetransition.proxies.Function _function)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Function", _function == null ? null : _function.getMendixObject());
			Core.execute(context, "StateTransition.IVK_FunctionSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MatrixCancel(IContext context, statetransition.proxies.Matrix _matrix)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Matrix", _matrix == null ? null : _matrix.getMendixObject());
			Core.execute(context, "StateTransition.IVK_MatrixCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MatrixSave(IContext context, statetransition.proxies.Matrix _matrix)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Matrix", _matrix == null ? null : _matrix.getMendixObject());
			Core.execute(context, "StateTransition.IVK_MatrixSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MatrixSaveAndClose(IContext context, statetransition.proxies.Matrix _matrix)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Matrix", _matrix == null ? null : _matrix.getMendixObject());
			Core.execute(context, "StateTransition.IVK_MatrixSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_PhaseCancel(IContext context, statetransition.proxies.Phase _phase)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Phase", _phase == null ? null : _phase.getMendixObject());
			Core.execute(context, "StateTransition.IVK_PhaseCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_PhaseSave(IContext context, statetransition.proxies.Phase _phase)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Phase", _phase == null ? null : _phase.getMendixObject());
			Core.execute(context, "StateTransition.IVK_PhaseSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_PhaseSaveAndClose(IContext context, statetransition.proxies.Phase _phase)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Phase", _phase == null ? null : _phase.getMendixObject());
			Core.execute(context, "StateTransition.IVK_PhaseSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_StateCancel(IContext context, statetransition.proxies.State _state)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("State", _state == null ? null : _state.getMendixObject());
			Core.execute(context, "StateTransition.IVK_StateCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_StateEditSave(IContext context, statetransition.proxies.State _state)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("State", _state == null ? null : _state.getMendixObject());
			Core.execute(context, "StateTransition.IVK_StateEditSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_StateNewSave(IContext context, statetransition.proxies.State _state)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("State", _state == null ? null : _state.getMendixObject());
			Core.execute(context, "StateTransition.IVK_StateNewSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_StateSaveAndClose(IContext context, statetransition.proxies.State _state)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("State", _state == null ? null : _state.getMendixObject());
			Core.execute(context, "StateTransition.IVK_StateSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_TransitionCancel(IContext context, statetransition.proxies.Transition _transition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Transition", _transition == null ? null : _transition.getMendixObject());
			Core.execute(context, "StateTransition.IVK_TransitionCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_TransitionFunctionCancel(IContext context, statetransition.proxies.TransitionFunction _transitionFunction)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TransitionFunction", _transitionFunction == null ? null : _transitionFunction.getMendixObject());
			Core.execute(context, "StateTransition.IVK_TransitionFunctionCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_TransitionFunctionSave(IContext context, statetransition.proxies.TransitionFunction _transitionFunction)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TransitionFunction", _transitionFunction == null ? null : _transitionFunction.getMendixObject());
			Core.execute(context, "StateTransition.IVK_TransitionFunctionSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_TransitionMessageCancel(IContext context, statetransition.proxies.TransitionMessage _transitionMessage)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TransitionMessage", _transitionMessage == null ? null : _transitionMessage.getMendixObject());
			Core.execute(context, "StateTransition.IVK_TransitionMessageCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_TransitionMessageSave(IContext context, statetransition.proxies.TransitionMessage _transitionMessage)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TransitionMessage", _transitionMessage == null ? null : _transitionMessage.getMendixObject());
			Core.execute(context, "StateTransition.IVK_TransitionMessageSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_TransitionMessageSaveAndClose(IContext context, statetransition.proxies.TransitionMessage _transitionMessage)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TransitionMessage", _transitionMessage == null ? null : _transitionMessage.getMendixObject());
			Core.execute(context, "StateTransition.IVK_TransitionMessageSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_TransitionSave(IContext context, statetransition.proxies.Transition _transition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Transition", _transition == null ? null : _transition.getMendixObject());
			Core.execute(context, "StateTransition.IVK_TransitionSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_TransitionSaveAndClose(IContext context, statetransition.proxies.Transition _transition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Transition", _transition == null ? null : _transition.getMendixObject());
			Core.execute(context, "StateTransition.IVK_TransitionSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean matrix_CheckRules(IContext context, statetransition.proxies.Matrix _inputMatrix)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputMatrix", _inputMatrix == null ? null : _inputMatrix.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.Matrix_CheckRules", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oCh_EmptyTicketTask(IContext context, statetransition.proxies.Matrix _inputMatrix)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputMatrix", _inputMatrix == null ? null : _inputMatrix.getMendixObject());
			Core.execute(context, "StateTransition.OCh_EmptyTicketTask", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void onChange_Refresh(IContext context, statetransition.proxies.Function _function)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Function", _function == null ? null : _function.getMendixObject());
			Core.execute(context, "StateTransition.OnChange_Refresh", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void onChangeFunction_GetDefaultDelayed(IContext context, statetransition.proxies.TransitionFunction _transitionFunction)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TransitionFunction", _transitionFunction == null ? null : _transitionFunction.getMendixObject());
			Core.execute(context, "StateTransition.OnChangeFunction_GetDefaultDelayed", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void save_Function(IContext context, statetransition.proxies.Function _function)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Function", _function == null ? null : _function.getMendixObject());
			Core.execute(context, "StateTransition.Save_Function", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<scheduling.proxies.TemplateRequest> selectTemplateRequest(IContext context, statetransition.proxies.Function _function)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Function", _function == null ? null : _function.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "StateTransition.SelectTemplateRequest", params);
			java.util.List<scheduling.proxies.TemplateRequest> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<scheduling.proxies.TemplateRequest>();
				for (IMendixObject obj : objs)
					result.add(scheduling.proxies.TemplateRequest.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean transition_CheckAssigneeFields(IContext context, statetransition.proxies.Transition _transition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Transition", _transition == null ? null : _transition.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.Transition_CheckAssigneeFields", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean transition_CheckFromPhase(IContext context, statetransition.proxies.Transition _transition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Transition", _transition == null ? null : _transition.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.Transition_CheckFromPhase", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean transition_CheckFromState(IContext context, statetransition.proxies.Transition _transition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Transition", _transition == null ? null : _transition.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.Transition_CheckFromState", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean transition_CheckFunctionOrder(IContext context, statetransition.proxies.Transition _transition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Transition", _transition == null ? null : _transition.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.Transition_CheckFunctionOrder", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean transition_CheckPhaseStateType(IContext context, statetransition.proxies.Transition _transition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Transition", _transition == null ? null : _transition.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.Transition_CheckPhaseStateType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean transition_CheckRestrictionRules(IContext context, statetransition.proxies.Transition _transition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Transition", _transition == null ? null : _transition.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.Transition_CheckRestrictionRules", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean transition_CheckRules(IContext context, statetransition.proxies.Transition _transition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Transition", _transition == null ? null : _transition.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.Transition_CheckRules", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean transition_CheckToPhase(IContext context, statetransition.proxies.Transition _transition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Transition", _transition == null ? null : _transition.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.Transition_CheckToPhase", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean transition_CheckToState(IContext context, statetransition.proxies.Transition _transition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Transition", _transition == null ? null : _transition.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.Transition_CheckToState", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void transition_SetDefaultForAssignedGroup(IContext context, statetransition.proxies.Transition _transition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Transition", _transition == null ? null : _transition.getMendixObject());
			Core.execute(context, "StateTransition.Transition_SetDefaultForAssignedGroup", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean transitionFunction_Field_ShowDelayed(IContext context, statetransition.proxies.TransitionFunction _transitionFunction)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TransitionFunction", _transitionFunction == null ? null : _transitionFunction.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.TransitionFunction_Field_ShowDelayed", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validate_Fields(IContext context, statetransition.proxies.TransitionFunction _transitionFunction)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TransitionFunction", _transitionFunction == null ? null : _transitionFunction.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.Validate_Fields", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateAutomaticActions(IContext context, statetransition.proxies.Matrix _matrix)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Matrix", _matrix == null ? null : _matrix.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.ValidateAutomaticActions", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3608]
	 * Removed bug that made it impossible to create a function where a Ticket/Task from Template is created. 
	 */
	public static boolean validateFunction(IContext context, statetransition.proxies.Function _function)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Function", _function == null ? null : _function.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.ValidateFunction", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateFunctionsWithMatrix(IContext context, statetransition.proxies.Matrix _matrix)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Matrix", _matrix == null ? null : _matrix.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.ValidateFunctionsWithMatrix", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateInitialAcceptedStatePhase(IContext context, statetransition.proxies.Matrix _inputMatrix)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputMatrix", _inputMatrix == null ? null : _inputMatrix.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.ValidateInitialAcceptedStatePhase", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateInitialCancelledStatePhase(IContext context, statetransition.proxies.Matrix _inputMatrix)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputMatrix", _inputMatrix == null ? null : _inputMatrix.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.ValidateInitialCancelledStatePhase", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateInitialClosedStatePhase(IContext context, statetransition.proxies.Matrix _inputMatrix)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputMatrix", _inputMatrix == null ? null : _inputMatrix.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.ValidateInitialClosedStatePhase", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateInitialNewStatePhase(IContext context, statetransition.proxies.Matrix _inputMatrix)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputMatrix", _inputMatrix == null ? null : _inputMatrix.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.ValidateInitialNewStatePhase", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateInitialPlannedStatePhase(IContext context, statetransition.proxies.Matrix _inputMatrix)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputMatrix", _inputMatrix == null ? null : _inputMatrix.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.ValidateInitialPlannedStatePhase", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateInitialQueuedStatePhase(IContext context, statetransition.proxies.Matrix _inputMatrix)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputMatrix", _inputMatrix == null ? null : _inputMatrix.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.ValidateInitialQueuedStatePhase", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateInitialStateForCMDB(IContext context, statetransition.proxies.Matrix _matrix)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Matrix", _matrix == null ? null : _matrix.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.ValidateInitialStateForCMDB", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateInitialStatePhase(IContext context, statetransition.proxies.Matrix _inputMatrix)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputMatrix", _inputMatrix == null ? null : _inputMatrix.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.ValidateInitialStatePhase", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validatePortalActions(IContext context, statetransition.proxies.Matrix _matrix)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Matrix", _matrix == null ? null : _matrix.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.ValidatePortalActions", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validatePortalSolvedStatePhase(IContext context, statetransition.proxies.Matrix _matrix)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Matrix", _matrix == null ? null : _matrix.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.ValidatePortalSolvedStatePhase", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateTransitionMessage(IContext context, statetransition.proxies.TransitionMessage _transitionMessage)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TransitionMessage", _transitionMessage == null ? null : _transitionMessage.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.ValidateTransitionMessage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateTransitionsSelected(IContext context, statetransition.proxies.Matrix _matrix)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Matrix", _matrix == null ? null : _matrix.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "StateTransition.ValidateTransitionsSelected", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}