// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package interfacerequestupdate.proxies;

public class PausedTimeContainer
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject pausedTimeContainerMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "InterfaceRequestUpdate.PausedTimeContainer";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		OutgoingRequestUpdateExpertDesk_PausedTimeContainer("InterfaceRequestUpdate.OutgoingRequestUpdateExpertDesk_PausedTimeContainer"),
		PausedTimeContainer_PausedTime("InterfaceRequestUpdate.PausedTimeContainer_PausedTime");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public PausedTimeContainer(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "InterfaceRequestUpdate.PausedTimeContainer"));
	}

	protected PausedTimeContainer(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject pausedTimeContainerMendixObject)
	{
		if (pausedTimeContainerMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("InterfaceRequestUpdate.PausedTimeContainer", pausedTimeContainerMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a InterfaceRequestUpdate.PausedTimeContainer");

		this.pausedTimeContainerMendixObject = pausedTimeContainerMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'PausedTimeContainer.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static interfacerequestupdate.proxies.PausedTimeContainer initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return interfacerequestupdate.proxies.PausedTimeContainer.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static interfacerequestupdate.proxies.PausedTimeContainer initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new interfacerequestupdate.proxies.PausedTimeContainer(context, mendixObject);
	}

	public static interfacerequestupdate.proxies.PausedTimeContainer load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return interfacerequestupdate.proxies.PausedTimeContainer.initialize(context, mendixObject);
	}

	public static java.util.List<interfacerequestupdate.proxies.PausedTimeContainer> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<interfacerequestupdate.proxies.PausedTimeContainer> result = new java.util.ArrayList<interfacerequestupdate.proxies.PausedTimeContainer>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//InterfaceRequestUpdate.PausedTimeContainer" + xpathConstraint))
			result.add(interfacerequestupdate.proxies.PausedTimeContainer.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of OutgoingRequestUpdateExpertDesk_PausedTimeContainer
	 */
	public final interfacerequestupdate.proxies.OutgoingRequestUpdateExpertDesk getOutgoingRequestUpdateExpertDesk_PausedTimeContainer() throws com.mendix.core.CoreException
	{
		return getOutgoingRequestUpdateExpertDesk_PausedTimeContainer(getContext());
	}

	/**
	 * @param context
	 * @return value of OutgoingRequestUpdateExpertDesk_PausedTimeContainer
	 */
	public final interfacerequestupdate.proxies.OutgoingRequestUpdateExpertDesk getOutgoingRequestUpdateExpertDesk_PausedTimeContainer(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfacerequestupdate.proxies.OutgoingRequestUpdateExpertDesk result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.OutgoingRequestUpdateExpertDesk_PausedTimeContainer.toString());
		if (identifier != null)
			result = interfacerequestupdate.proxies.OutgoingRequestUpdateExpertDesk.load(context, identifier);
		return result;
	}

	/**
	 * Set value of OutgoingRequestUpdateExpertDesk_PausedTimeContainer
	 * @param outgoingrequestupdateexpertdesk_pausedtimecontainer
	 */
	public final void setOutgoingRequestUpdateExpertDesk_PausedTimeContainer(interfacerequestupdate.proxies.OutgoingRequestUpdateExpertDesk outgoingrequestupdateexpertdesk_pausedtimecontainer)
	{
		setOutgoingRequestUpdateExpertDesk_PausedTimeContainer(getContext(), outgoingrequestupdateexpertdesk_pausedtimecontainer);
	}

	/**
	 * Set value of OutgoingRequestUpdateExpertDesk_PausedTimeContainer
	 * @param context
	 * @param outgoingrequestupdateexpertdesk_pausedtimecontainer
	 */
	public final void setOutgoingRequestUpdateExpertDesk_PausedTimeContainer(com.mendix.systemwideinterfaces.core.IContext context, interfacerequestupdate.proxies.OutgoingRequestUpdateExpertDesk outgoingrequestupdateexpertdesk_pausedtimecontainer)
	{
		if (outgoingrequestupdateexpertdesk_pausedtimecontainer == null)
			getMendixObject().setValue(context, MemberNames.OutgoingRequestUpdateExpertDesk_PausedTimeContainer.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.OutgoingRequestUpdateExpertDesk_PausedTimeContainer.toString(), outgoingrequestupdateexpertdesk_pausedtimecontainer.getMendixObject().getId());
	}

	/**
	 * @return value of PausedTimeContainer_PausedTime
	 */
	public final interfacerequestupdate.proxies.PausedTime getPausedTimeContainer_PausedTime() throws com.mendix.core.CoreException
	{
		return getPausedTimeContainer_PausedTime(getContext());
	}

	/**
	 * @param context
	 * @return value of PausedTimeContainer_PausedTime
	 */
	public final interfacerequestupdate.proxies.PausedTime getPausedTimeContainer_PausedTime(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfacerequestupdate.proxies.PausedTime result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.PausedTimeContainer_PausedTime.toString());
		if (identifier != null)
			result = interfacerequestupdate.proxies.PausedTime.load(context, identifier);
		return result;
	}

	/**
	 * Set value of PausedTimeContainer_PausedTime
	 * @param pausedtimecontainer_pausedtime
	 */
	public final void setPausedTimeContainer_PausedTime(interfacerequestupdate.proxies.PausedTime pausedtimecontainer_pausedtime)
	{
		setPausedTimeContainer_PausedTime(getContext(), pausedtimecontainer_pausedtime);
	}

	/**
	 * Set value of PausedTimeContainer_PausedTime
	 * @param context
	 * @param pausedtimecontainer_pausedtime
	 */
	public final void setPausedTimeContainer_PausedTime(com.mendix.systemwideinterfaces.core.IContext context, interfacerequestupdate.proxies.PausedTime pausedtimecontainer_pausedtime)
	{
		if (pausedtimecontainer_pausedtime == null)
			getMendixObject().setValue(context, MemberNames.PausedTimeContainer_PausedTime.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.PausedTimeContainer_PausedTime.toString(), pausedtimecontainer_pausedtime.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return pausedTimeContainerMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final interfacerequestupdate.proxies.PausedTimeContainer that = (interfacerequestupdate.proxies.PausedTimeContainer) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "InterfaceRequestUpdate.PausedTimeContainer";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
