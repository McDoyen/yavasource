// This file was generated by Mendix Modeler 7.7.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package interfaceplanon.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;

public class Microflows
{
	// These are the microflows for the InterfacePlanon module
	public static void iVK_OpenConfig(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "InterfacePlanon.IVK_OpenConfig", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenResponse(IContext context, interfaceplanon.proxies.PlanonServiceRequest _serviceRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ServiceRequest", _serviceRequest == null ? null : _serviceRequest.getMendixObject());
			Core.execute(context, "InterfacePlanon.IVK_OpenResponse", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ReProcessServiceRequest(IContext context, interfaceplanon.proxies.PlanonServiceRequest _serviceRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ServiceRequest", _serviceRequest == null ? null : _serviceRequest.getMendixObject());
			Core.execute(context, "InterfacePlanon.IVK_ReProcessServiceRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 1214556 add mapping for scheduled start/end based on datebegin/dateend as received from Planon
	 */
	public static void processServiceRequest(IContext context, interfaceplanon.proxies.PlanonServiceRequest _serviceRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ServiceRequest", _serviceRequest == null ? null : _serviceRequest.getMendixObject());
			Core.execute(context, "InterfacePlanon.ProcessServiceRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sE_ImportPlanon(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "InterfacePlanon.SE_ImportPlanon", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}