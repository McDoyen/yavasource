// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package interfaceplanon.proxies;

public class TemplateTranslation
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject templateTranslationMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "InterfacePlanon.TemplateTranslation";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		FromValue("FromValue"),
		DefaultTemplate("DefaultTemplate"),
		TemplateTranslation_Config("InterfacePlanon.TemplateTranslation_Config"),
		TemplateTranslation_TemplateTicket("InterfacePlanon.TemplateTranslation_TemplateTicket");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public TemplateTranslation(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "InterfacePlanon.TemplateTranslation"));
	}

	protected TemplateTranslation(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject templateTranslationMendixObject)
	{
		if (templateTranslationMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("InterfacePlanon.TemplateTranslation", templateTranslationMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a InterfacePlanon.TemplateTranslation");

		this.templateTranslationMendixObject = templateTranslationMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'TemplateTranslation.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static interfaceplanon.proxies.TemplateTranslation initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return interfaceplanon.proxies.TemplateTranslation.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static interfaceplanon.proxies.TemplateTranslation initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new interfaceplanon.proxies.TemplateTranslation(context, mendixObject);
	}

	public static interfaceplanon.proxies.TemplateTranslation load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return interfaceplanon.proxies.TemplateTranslation.initialize(context, mendixObject);
	}

	public static java.util.List<interfaceplanon.proxies.TemplateTranslation> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<interfaceplanon.proxies.TemplateTranslation> result = new java.util.ArrayList<interfaceplanon.proxies.TemplateTranslation>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//InterfacePlanon.TemplateTranslation" + xpathConstraint))
			result.add(interfaceplanon.proxies.TemplateTranslation.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of FromValue
	 */
	public final java.lang.String getFromValue()
	{
		return getFromValue(getContext());
	}

	/**
	 * @param context
	 * @return value of FromValue
	 */
	public final java.lang.String getFromValue(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.FromValue.toString());
	}

	/**
	 * Set value of FromValue
	 * @param fromvalue
	 */
	public final void setFromValue(java.lang.String fromvalue)
	{
		setFromValue(getContext(), fromvalue);
	}

	/**
	 * Set value of FromValue
	 * @param context
	 * @param fromvalue
	 */
	public final void setFromValue(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String fromvalue)
	{
		getMendixObject().setValue(context, MemberNames.FromValue.toString(), fromvalue);
	}

	/**
	 * @return value of DefaultTemplate
	 */
	public final java.lang.Boolean getDefaultTemplate()
	{
		return getDefaultTemplate(getContext());
	}

	/**
	 * @param context
	 * @return value of DefaultTemplate
	 */
	public final java.lang.Boolean getDefaultTemplate(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.DefaultTemplate.toString());
	}

	/**
	 * Set value of DefaultTemplate
	 * @param defaulttemplate
	 */
	public final void setDefaultTemplate(java.lang.Boolean defaulttemplate)
	{
		setDefaultTemplate(getContext(), defaulttemplate);
	}

	/**
	 * Set value of DefaultTemplate
	 * @param context
	 * @param defaulttemplate
	 */
	public final void setDefaultTemplate(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean defaulttemplate)
	{
		getMendixObject().setValue(context, MemberNames.DefaultTemplate.toString(), defaulttemplate);
	}

	/**
	 * @return value of TemplateTranslation_Config
	 */
	public final interfaceplanon.proxies.Config getTemplateTranslation_Config() throws com.mendix.core.CoreException
	{
		return getTemplateTranslation_Config(getContext());
	}

	/**
	 * @param context
	 * @return value of TemplateTranslation_Config
	 */
	public final interfaceplanon.proxies.Config getTemplateTranslation_Config(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfaceplanon.proxies.Config result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.TemplateTranslation_Config.toString());
		if (identifier != null)
			result = interfaceplanon.proxies.Config.load(context, identifier);
		return result;
	}

	/**
	 * Set value of TemplateTranslation_Config
	 * @param templatetranslation_config
	 */
	public final void setTemplateTranslation_Config(interfaceplanon.proxies.Config templatetranslation_config)
	{
		setTemplateTranslation_Config(getContext(), templatetranslation_config);
	}

	/**
	 * Set value of TemplateTranslation_Config
	 * @param context
	 * @param templatetranslation_config
	 */
	public final void setTemplateTranslation_Config(com.mendix.systemwideinterfaces.core.IContext context, interfaceplanon.proxies.Config templatetranslation_config)
	{
		if (templatetranslation_config == null)
			getMendixObject().setValue(context, MemberNames.TemplateTranslation_Config.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.TemplateTranslation_Config.toString(), templatetranslation_config.getMendixObject().getId());
	}

	/**
	 * @return value of TemplateTranslation_TemplateTicket
	 */
	public final scheduling.proxies.TemplateTicket getTemplateTranslation_TemplateTicket() throws com.mendix.core.CoreException
	{
		return getTemplateTranslation_TemplateTicket(getContext());
	}

	/**
	 * @param context
	 * @return value of TemplateTranslation_TemplateTicket
	 */
	public final scheduling.proxies.TemplateTicket getTemplateTranslation_TemplateTicket(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		scheduling.proxies.TemplateTicket result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.TemplateTranslation_TemplateTicket.toString());
		if (identifier != null)
			result = scheduling.proxies.TemplateTicket.load(context, identifier);
		return result;
	}

	/**
	 * Set value of TemplateTranslation_TemplateTicket
	 * @param templatetranslation_templateticket
	 */
	public final void setTemplateTranslation_TemplateTicket(scheduling.proxies.TemplateTicket templatetranslation_templateticket)
	{
		setTemplateTranslation_TemplateTicket(getContext(), templatetranslation_templateticket);
	}

	/**
	 * Set value of TemplateTranslation_TemplateTicket
	 * @param context
	 * @param templatetranslation_templateticket
	 */
	public final void setTemplateTranslation_TemplateTicket(com.mendix.systemwideinterfaces.core.IContext context, scheduling.proxies.TemplateTicket templatetranslation_templateticket)
	{
		if (templatetranslation_templateticket == null)
			getMendixObject().setValue(context, MemberNames.TemplateTranslation_TemplateTicket.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.TemplateTranslation_TemplateTicket.toString(), templatetranslation_templateticket.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return templateTranslationMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final interfaceplanon.proxies.TemplateTranslation that = (interfaceplanon.proxies.TemplateTranslation) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "InterfacePlanon.TemplateTranslation";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
