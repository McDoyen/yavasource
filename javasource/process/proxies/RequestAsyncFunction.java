// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package process.proxies;

public class RequestAsyncFunction
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject requestAsyncFunctionMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Process.RequestAsyncFunction";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Handled("Handled"),
		HandledDateTime("HandledDateTime"),
		RequestAsyncFunction_Request("Process.RequestAsyncFunction_Request"),
		RequestAsyncFunction_Function("Process.RequestAsyncFunction_Function"),
		RequestAsyncFunction_Transition("Process.RequestAsyncFunction_Transition"),
		RequestAsyncFunction_User("Process.RequestAsyncFunction_User");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public RequestAsyncFunction(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Process.RequestAsyncFunction"));
	}

	protected RequestAsyncFunction(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject requestAsyncFunctionMendixObject)
	{
		if (requestAsyncFunctionMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Process.RequestAsyncFunction", requestAsyncFunctionMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Process.RequestAsyncFunction");

		this.requestAsyncFunctionMendixObject = requestAsyncFunctionMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'RequestAsyncFunction.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static process.proxies.RequestAsyncFunction initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return process.proxies.RequestAsyncFunction.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static process.proxies.RequestAsyncFunction initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new process.proxies.RequestAsyncFunction(context, mendixObject);
	}

	public static process.proxies.RequestAsyncFunction load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return process.proxies.RequestAsyncFunction.initialize(context, mendixObject);
	}

	public static java.util.List<process.proxies.RequestAsyncFunction> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<process.proxies.RequestAsyncFunction> result = new java.util.ArrayList<process.proxies.RequestAsyncFunction>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Process.RequestAsyncFunction" + xpathConstraint))
			result.add(process.proxies.RequestAsyncFunction.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Handled
	 */
	public final java.lang.Boolean getHandled()
	{
		return getHandled(getContext());
	}

	/**
	 * @param context
	 * @return value of Handled
	 */
	public final java.lang.Boolean getHandled(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.Handled.toString());
	}

	/**
	 * Set value of Handled
	 * @param handled
	 */
	public final void setHandled(java.lang.Boolean handled)
	{
		setHandled(getContext(), handled);
	}

	/**
	 * Set value of Handled
	 * @param context
	 * @param handled
	 */
	public final void setHandled(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean handled)
	{
		getMendixObject().setValue(context, MemberNames.Handled.toString(), handled);
	}

	/**
	 * @return value of HandledDateTime
	 */
	public final java.util.Date getHandledDateTime()
	{
		return getHandledDateTime(getContext());
	}

	/**
	 * @param context
	 * @return value of HandledDateTime
	 */
	public final java.util.Date getHandledDateTime(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.HandledDateTime.toString());
	}

	/**
	 * Set value of HandledDateTime
	 * @param handleddatetime
	 */
	public final void setHandledDateTime(java.util.Date handleddatetime)
	{
		setHandledDateTime(getContext(), handleddatetime);
	}

	/**
	 * Set value of HandledDateTime
	 * @param context
	 * @param handleddatetime
	 */
	public final void setHandledDateTime(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date handleddatetime)
	{
		getMendixObject().setValue(context, MemberNames.HandledDateTime.toString(), handleddatetime);
	}

	/**
	 * @return value of RequestAsyncFunction_Request
	 */
	public final process.proxies.Request getRequestAsyncFunction_Request() throws com.mendix.core.CoreException
	{
		return getRequestAsyncFunction_Request(getContext());
	}

	/**
	 * @param context
	 * @return value of RequestAsyncFunction_Request
	 */
	public final process.proxies.Request getRequestAsyncFunction_Request(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		process.proxies.Request result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.RequestAsyncFunction_Request.toString());
		if (identifier != null)
			result = process.proxies.Request.load(context, identifier);
		return result;
	}

	/**
	 * Set value of RequestAsyncFunction_Request
	 * @param requestasyncfunction_request
	 */
	public final void setRequestAsyncFunction_Request(process.proxies.Request requestasyncfunction_request)
	{
		setRequestAsyncFunction_Request(getContext(), requestasyncfunction_request);
	}

	/**
	 * Set value of RequestAsyncFunction_Request
	 * @param context
	 * @param requestasyncfunction_request
	 */
	public final void setRequestAsyncFunction_Request(com.mendix.systemwideinterfaces.core.IContext context, process.proxies.Request requestasyncfunction_request)
	{
		if (requestasyncfunction_request == null)
			getMendixObject().setValue(context, MemberNames.RequestAsyncFunction_Request.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.RequestAsyncFunction_Request.toString(), requestasyncfunction_request.getMendixObject().getId());
	}

	/**
	 * @return value of RequestAsyncFunction_Function
	 */
	public final statetransition.proxies.Function getRequestAsyncFunction_Function() throws com.mendix.core.CoreException
	{
		return getRequestAsyncFunction_Function(getContext());
	}

	/**
	 * @param context
	 * @return value of RequestAsyncFunction_Function
	 */
	public final statetransition.proxies.Function getRequestAsyncFunction_Function(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		statetransition.proxies.Function result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.RequestAsyncFunction_Function.toString());
		if (identifier != null)
			result = statetransition.proxies.Function.load(context, identifier);
		return result;
	}

	/**
	 * Set value of RequestAsyncFunction_Function
	 * @param requestasyncfunction_function
	 */
	public final void setRequestAsyncFunction_Function(statetransition.proxies.Function requestasyncfunction_function)
	{
		setRequestAsyncFunction_Function(getContext(), requestasyncfunction_function);
	}

	/**
	 * Set value of RequestAsyncFunction_Function
	 * @param context
	 * @param requestasyncfunction_function
	 */
	public final void setRequestAsyncFunction_Function(com.mendix.systemwideinterfaces.core.IContext context, statetransition.proxies.Function requestasyncfunction_function)
	{
		if (requestasyncfunction_function == null)
			getMendixObject().setValue(context, MemberNames.RequestAsyncFunction_Function.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.RequestAsyncFunction_Function.toString(), requestasyncfunction_function.getMendixObject().getId());
	}

	/**
	 * @return value of RequestAsyncFunction_Transition
	 */
	public final statetransition.proxies.Transition getRequestAsyncFunction_Transition() throws com.mendix.core.CoreException
	{
		return getRequestAsyncFunction_Transition(getContext());
	}

	/**
	 * @param context
	 * @return value of RequestAsyncFunction_Transition
	 */
	public final statetransition.proxies.Transition getRequestAsyncFunction_Transition(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		statetransition.proxies.Transition result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.RequestAsyncFunction_Transition.toString());
		if (identifier != null)
			result = statetransition.proxies.Transition.load(context, identifier);
		return result;
	}

	/**
	 * Set value of RequestAsyncFunction_Transition
	 * @param requestasyncfunction_transition
	 */
	public final void setRequestAsyncFunction_Transition(statetransition.proxies.Transition requestasyncfunction_transition)
	{
		setRequestAsyncFunction_Transition(getContext(), requestasyncfunction_transition);
	}

	/**
	 * Set value of RequestAsyncFunction_Transition
	 * @param context
	 * @param requestasyncfunction_transition
	 */
	public final void setRequestAsyncFunction_Transition(com.mendix.systemwideinterfaces.core.IContext context, statetransition.proxies.Transition requestasyncfunction_transition)
	{
		if (requestasyncfunction_transition == null)
			getMendixObject().setValue(context, MemberNames.RequestAsyncFunction_Transition.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.RequestAsyncFunction_Transition.toString(), requestasyncfunction_transition.getMendixObject().getId());
	}

	/**
	 * @return value of RequestAsyncFunction_User
	 */
	public final system.proxies.User getRequestAsyncFunction_User() throws com.mendix.core.CoreException
	{
		return getRequestAsyncFunction_User(getContext());
	}

	/**
	 * @param context
	 * @return value of RequestAsyncFunction_User
	 */
	public final system.proxies.User getRequestAsyncFunction_User(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		system.proxies.User result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.RequestAsyncFunction_User.toString());
		if (identifier != null)
			result = system.proxies.User.load(context, identifier);
		return result;
	}

	/**
	 * Set value of RequestAsyncFunction_User
	 * @param requestasyncfunction_user
	 */
	public final void setRequestAsyncFunction_User(system.proxies.User requestasyncfunction_user)
	{
		setRequestAsyncFunction_User(getContext(), requestasyncfunction_user);
	}

	/**
	 * Set value of RequestAsyncFunction_User
	 * @param context
	 * @param requestasyncfunction_user
	 */
	public final void setRequestAsyncFunction_User(com.mendix.systemwideinterfaces.core.IContext context, system.proxies.User requestasyncfunction_user)
	{
		if (requestasyncfunction_user == null)
			getMendixObject().setValue(context, MemberNames.RequestAsyncFunction_User.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.RequestAsyncFunction_User.toString(), requestasyncfunction_user.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return requestAsyncFunctionMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final process.proxies.RequestAsyncFunction that = (process.proxies.RequestAsyncFunction) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Process.RequestAsyncFunction";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
