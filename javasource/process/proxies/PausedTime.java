// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package process.proxies;

public class PausedTime
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject pausedTimeMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Process.PausedTime";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Pause_Start("Pause_Start"),
		Pause_End("Pause_End"),
		CurrentRecord("CurrentRecord"),
		Time_Int("Time_Int"),
		PausedReasonString("PausedReasonString"),
		PausedReasonType("PausedReasonType"),
		Revoked("Revoked"),
		PausedTime_PausedReasonDefinition("Process.PausedTime_PausedReasonDefinition"),
		ActivityStream_PausedTime("Process.ActivityStream_PausedTime");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public PausedTime(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Process.PausedTime"));
	}

	protected PausedTime(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject pausedTimeMendixObject)
	{
		if (pausedTimeMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Process.PausedTime", pausedTimeMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Process.PausedTime");

		this.pausedTimeMendixObject = pausedTimeMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'PausedTime.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static process.proxies.PausedTime initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return process.proxies.PausedTime.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static process.proxies.PausedTime initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new process.proxies.PausedTime(context, mendixObject);
	}

	public static process.proxies.PausedTime load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return process.proxies.PausedTime.initialize(context, mendixObject);
	}

	public static java.util.List<process.proxies.PausedTime> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<process.proxies.PausedTime> result = new java.util.ArrayList<process.proxies.PausedTime>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Process.PausedTime" + xpathConstraint))
			result.add(process.proxies.PausedTime.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Pause_Start
	 */
	public final java.util.Date getPause_Start()
	{
		return getPause_Start(getContext());
	}

	/**
	 * @param context
	 * @return value of Pause_Start
	 */
	public final java.util.Date getPause_Start(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.Pause_Start.toString());
	}

	/**
	 * Set value of Pause_Start
	 * @param pause_start
	 */
	public final void setPause_Start(java.util.Date pause_start)
	{
		setPause_Start(getContext(), pause_start);
	}

	/**
	 * Set value of Pause_Start
	 * @param context
	 * @param pause_start
	 */
	public final void setPause_Start(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date pause_start)
	{
		getMendixObject().setValue(context, MemberNames.Pause_Start.toString(), pause_start);
	}

	/**
	 * @return value of Pause_End
	 */
	public final java.util.Date getPause_End()
	{
		return getPause_End(getContext());
	}

	/**
	 * @param context
	 * @return value of Pause_End
	 */
	public final java.util.Date getPause_End(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.Pause_End.toString());
	}

	/**
	 * Set value of Pause_End
	 * @param pause_end
	 */
	public final void setPause_End(java.util.Date pause_end)
	{
		setPause_End(getContext(), pause_end);
	}

	/**
	 * Set value of Pause_End
	 * @param context
	 * @param pause_end
	 */
	public final void setPause_End(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date pause_end)
	{
		getMendixObject().setValue(context, MemberNames.Pause_End.toString(), pause_end);
	}

	/**
	 * @return value of CurrentRecord
	 */
	public final java.lang.Boolean getCurrentRecord()
	{
		return getCurrentRecord(getContext());
	}

	/**
	 * @param context
	 * @return value of CurrentRecord
	 */
	public final java.lang.Boolean getCurrentRecord(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.CurrentRecord.toString());
	}

	/**
	 * Set value of CurrentRecord
	 * @param currentrecord
	 */
	public final void setCurrentRecord(java.lang.Boolean currentrecord)
	{
		setCurrentRecord(getContext(), currentrecord);
	}

	/**
	 * Set value of CurrentRecord
	 * @param context
	 * @param currentrecord
	 */
	public final void setCurrentRecord(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean currentrecord)
	{
		getMendixObject().setValue(context, MemberNames.CurrentRecord.toString(), currentrecord);
	}

	/**
	 * @return value of Time_Int
	 */
	public final java.lang.Integer getTime_Int()
	{
		return getTime_Int(getContext());
	}

	/**
	 * @param context
	 * @return value of Time_Int
	 */
	public final java.lang.Integer getTime_Int(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.Time_Int.toString());
	}

	/**
	 * Set value of Time_Int
	 * @param time_int
	 */
	public final void setTime_Int(java.lang.Integer time_int)
	{
		setTime_Int(getContext(), time_int);
	}

	/**
	 * Set value of Time_Int
	 * @param context
	 * @param time_int
	 */
	public final void setTime_Int(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer time_int)
	{
		getMendixObject().setValue(context, MemberNames.Time_Int.toString(), time_int);
	}

	/**
	 * @return value of PausedReasonString
	 */
	public final java.lang.String getPausedReasonString()
	{
		return getPausedReasonString(getContext());
	}

	/**
	 * @param context
	 * @return value of PausedReasonString
	 */
	public final java.lang.String getPausedReasonString(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.PausedReasonString.toString());
	}

	/**
	 * Set value of PausedReasonString
	 * @param pausedreasonstring
	 */
	public final void setPausedReasonString(java.lang.String pausedreasonstring)
	{
		setPausedReasonString(getContext(), pausedreasonstring);
	}

	/**
	 * Set value of PausedReasonString
	 * @param context
	 * @param pausedreasonstring
	 */
	public final void setPausedReasonString(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String pausedreasonstring)
	{
		getMendixObject().setValue(context, MemberNames.PausedReasonString.toString(), pausedreasonstring);
	}

	/**
	 * Set value of PausedReasonType
	 * @param pausedreasontype
	 */
	public final process.proxies.PausedReasonType getPausedReasonType()
	{
		return getPausedReasonType(getContext());
	}

	/**
	 * @param context
	 * @return value of PausedReasonType
	 */
	public final process.proxies.PausedReasonType getPausedReasonType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.PausedReasonType.toString());
		if (obj == null)
			return null;

		return process.proxies.PausedReasonType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of PausedReasonType
	 * @param pausedreasontype
	 */
	public final void setPausedReasonType(process.proxies.PausedReasonType pausedreasontype)
	{
		setPausedReasonType(getContext(), pausedreasontype);
	}

	/**
	 * Set value of PausedReasonType
	 * @param context
	 * @param pausedreasontype
	 */
	public final void setPausedReasonType(com.mendix.systemwideinterfaces.core.IContext context, process.proxies.PausedReasonType pausedreasontype)
	{
		if (pausedreasontype != null)
			getMendixObject().setValue(context, MemberNames.PausedReasonType.toString(), pausedreasontype.toString());
		else
			getMendixObject().setValue(context, MemberNames.PausedReasonType.toString(), null);
	}

	/**
	 * @return value of Revoked
	 */
	public final java.lang.Boolean getRevoked()
	{
		return getRevoked(getContext());
	}

	/**
	 * @param context
	 * @return value of Revoked
	 */
	public final java.lang.Boolean getRevoked(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.Revoked.toString());
	}

	/**
	 * Set value of Revoked
	 * @param revoked
	 */
	public final void setRevoked(java.lang.Boolean revoked)
	{
		setRevoked(getContext(), revoked);
	}

	/**
	 * Set value of Revoked
	 * @param context
	 * @param revoked
	 */
	public final void setRevoked(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean revoked)
	{
		getMendixObject().setValue(context, MemberNames.Revoked.toString(), revoked);
	}

	/**
	 * @return value of PausedTime_PausedReasonDefinition
	 */
	public final process.proxies.PausedReasonDefinition getPausedTime_PausedReasonDefinition() throws com.mendix.core.CoreException
	{
		return getPausedTime_PausedReasonDefinition(getContext());
	}

	/**
	 * @param context
	 * @return value of PausedTime_PausedReasonDefinition
	 */
	public final process.proxies.PausedReasonDefinition getPausedTime_PausedReasonDefinition(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		process.proxies.PausedReasonDefinition result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.PausedTime_PausedReasonDefinition.toString());
		if (identifier != null)
			result = process.proxies.PausedReasonDefinition.load(context, identifier);
		return result;
	}

	/**
	 * Set value of PausedTime_PausedReasonDefinition
	 * @param pausedtime_pausedreasondefinition
	 */
	public final void setPausedTime_PausedReasonDefinition(process.proxies.PausedReasonDefinition pausedtime_pausedreasondefinition)
	{
		setPausedTime_PausedReasonDefinition(getContext(), pausedtime_pausedreasondefinition);
	}

	/**
	 * Set value of PausedTime_PausedReasonDefinition
	 * @param context
	 * @param pausedtime_pausedreasondefinition
	 */
	public final void setPausedTime_PausedReasonDefinition(com.mendix.systemwideinterfaces.core.IContext context, process.proxies.PausedReasonDefinition pausedtime_pausedreasondefinition)
	{
		if (pausedtime_pausedreasondefinition == null)
			getMendixObject().setValue(context, MemberNames.PausedTime_PausedReasonDefinition.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.PausedTime_PausedReasonDefinition.toString(), pausedtime_pausedreasondefinition.getMendixObject().getId());
	}

	/**
	 * @return value of ActivityStream_PausedTime
	 */
	public final process.proxies.ActivityStream getActivityStream_PausedTime() throws com.mendix.core.CoreException
	{
		return getActivityStream_PausedTime(getContext());
	}

	/**
	 * @param context
	 * @return value of ActivityStream_PausedTime
	 */
	public final process.proxies.ActivityStream getActivityStream_PausedTime(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		process.proxies.ActivityStream result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ActivityStream_PausedTime.toString());
		if (identifier != null)
			result = process.proxies.ActivityStream.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ActivityStream_PausedTime
	 * @param activitystream_pausedtime
	 */
	public final void setActivityStream_PausedTime(process.proxies.ActivityStream activitystream_pausedtime)
	{
		setActivityStream_PausedTime(getContext(), activitystream_pausedtime);
	}

	/**
	 * Set value of ActivityStream_PausedTime
	 * @param context
	 * @param activitystream_pausedtime
	 */
	public final void setActivityStream_PausedTime(com.mendix.systemwideinterfaces.core.IContext context, process.proxies.ActivityStream activitystream_pausedtime)
	{
		if (activitystream_pausedtime == null)
			getMendixObject().setValue(context, MemberNames.ActivityStream_PausedTime.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ActivityStream_PausedTime.toString(), activitystream_pausedtime.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return pausedTimeMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final process.proxies.PausedTime that = (process.proxies.PausedTime) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Process.PausedTime";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
