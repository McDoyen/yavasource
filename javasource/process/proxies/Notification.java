// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package process.proxies;

public class Notification
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject notificationMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Process.Notification";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		DateTime("DateTime"),
		IsSent("IsSent"),
		Suppress("Suppress"),
		WillNotBeSent("WillNotBeSent"),
		DateTimeSent("DateTimeSent"),
		RecalculateTimes("RecalculateTimes"),
		Notification_Request("Process.Notification_Request"),
		ActivityStream_Notification("Process.ActivityStream_Notification"),
		Notification_SLMEscalation("Process.Notification_SLMEscalation"),
		Notification_Person("Process.Notification_Person"),
		Notification_BusinessGroup("Process.Notification_BusinessGroup"),
		Notification_Escalation("Process.Notification_Escalation");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Notification(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Process.Notification"));
	}

	protected Notification(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject notificationMendixObject)
	{
		if (notificationMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Process.Notification", notificationMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Process.Notification");

		this.notificationMendixObject = notificationMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Notification.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static process.proxies.Notification initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return process.proxies.Notification.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static process.proxies.Notification initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new process.proxies.Notification(context, mendixObject);
	}

	public static process.proxies.Notification load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return process.proxies.Notification.initialize(context, mendixObject);
	}

	public static java.util.List<process.proxies.Notification> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<process.proxies.Notification> result = new java.util.ArrayList<process.proxies.Notification>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Process.Notification" + xpathConstraint))
			result.add(process.proxies.Notification.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of DateTime
	 */
	public final java.util.Date getDateTime()
	{
		return getDateTime(getContext());
	}

	/**
	 * @param context
	 * @return value of DateTime
	 */
	public final java.util.Date getDateTime(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.DateTime.toString());
	}

	/**
	 * Set value of DateTime
	 * @param datetime
	 */
	public final void setDateTime(java.util.Date datetime)
	{
		setDateTime(getContext(), datetime);
	}

	/**
	 * Set value of DateTime
	 * @param context
	 * @param datetime
	 */
	public final void setDateTime(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date datetime)
	{
		getMendixObject().setValue(context, MemberNames.DateTime.toString(), datetime);
	}

	/**
	 * @return value of IsSent
	 */
	public final java.lang.Boolean getIsSent()
	{
		return getIsSent(getContext());
	}

	/**
	 * @param context
	 * @return value of IsSent
	 */
	public final java.lang.Boolean getIsSent(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsSent.toString());
	}

	/**
	 * Set value of IsSent
	 * @param issent
	 */
	public final void setIsSent(java.lang.Boolean issent)
	{
		setIsSent(getContext(), issent);
	}

	/**
	 * Set value of IsSent
	 * @param context
	 * @param issent
	 */
	public final void setIsSent(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean issent)
	{
		getMendixObject().setValue(context, MemberNames.IsSent.toString(), issent);
	}

	/**
	 * @return value of Suppress
	 */
	public final java.lang.Boolean getSuppress()
	{
		return getSuppress(getContext());
	}

	/**
	 * @param context
	 * @return value of Suppress
	 */
	public final java.lang.Boolean getSuppress(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.Suppress.toString());
	}

	/**
	 * Set value of Suppress
	 * @param suppress
	 */
	public final void setSuppress(java.lang.Boolean suppress)
	{
		setSuppress(getContext(), suppress);
	}

	/**
	 * Set value of Suppress
	 * @param context
	 * @param suppress
	 */
	public final void setSuppress(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean suppress)
	{
		getMendixObject().setValue(context, MemberNames.Suppress.toString(), suppress);
	}

	/**
	 * @return value of WillNotBeSent
	 */
	public final java.lang.Boolean getWillNotBeSent()
	{
		return getWillNotBeSent(getContext());
	}

	/**
	 * @param context
	 * @return value of WillNotBeSent
	 */
	public final java.lang.Boolean getWillNotBeSent(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.WillNotBeSent.toString());
	}

	/**
	 * Set value of WillNotBeSent
	 * @param willnotbesent
	 */
	public final void setWillNotBeSent(java.lang.Boolean willnotbesent)
	{
		setWillNotBeSent(getContext(), willnotbesent);
	}

	/**
	 * Set value of WillNotBeSent
	 * @param context
	 * @param willnotbesent
	 */
	public final void setWillNotBeSent(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean willnotbesent)
	{
		getMendixObject().setValue(context, MemberNames.WillNotBeSent.toString(), willnotbesent);
	}

	/**
	 * @return value of DateTimeSent
	 */
	public final java.util.Date getDateTimeSent()
	{
		return getDateTimeSent(getContext());
	}

	/**
	 * @param context
	 * @return value of DateTimeSent
	 */
	public final java.util.Date getDateTimeSent(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.DateTimeSent.toString());
	}

	/**
	 * Set value of DateTimeSent
	 * @param datetimesent
	 */
	public final void setDateTimeSent(java.util.Date datetimesent)
	{
		setDateTimeSent(getContext(), datetimesent);
	}

	/**
	 * Set value of DateTimeSent
	 * @param context
	 * @param datetimesent
	 */
	public final void setDateTimeSent(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date datetimesent)
	{
		getMendixObject().setValue(context, MemberNames.DateTimeSent.toString(), datetimesent);
	}

	/**
	 * @return value of RecalculateTimes
	 */
	public final java.lang.Boolean getRecalculateTimes()
	{
		return getRecalculateTimes(getContext());
	}

	/**
	 * @param context
	 * @return value of RecalculateTimes
	 */
	public final java.lang.Boolean getRecalculateTimes(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.RecalculateTimes.toString());
	}

	/**
	 * Set value of RecalculateTimes
	 * @param recalculatetimes
	 */
	public final void setRecalculateTimes(java.lang.Boolean recalculatetimes)
	{
		setRecalculateTimes(getContext(), recalculatetimes);
	}

	/**
	 * Set value of RecalculateTimes
	 * @param context
	 * @param recalculatetimes
	 */
	public final void setRecalculateTimes(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean recalculatetimes)
	{
		getMendixObject().setValue(context, MemberNames.RecalculateTimes.toString(), recalculatetimes);
	}

	/**
	 * @return value of Notification_Request
	 */
	public final process.proxies.Request getNotification_Request() throws com.mendix.core.CoreException
	{
		return getNotification_Request(getContext());
	}

	/**
	 * @param context
	 * @return value of Notification_Request
	 */
	public final process.proxies.Request getNotification_Request(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		process.proxies.Request result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Notification_Request.toString());
		if (identifier != null)
			result = process.proxies.Request.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Notification_Request
	 * @param notification_request
	 */
	public final void setNotification_Request(process.proxies.Request notification_request)
	{
		setNotification_Request(getContext(), notification_request);
	}

	/**
	 * Set value of Notification_Request
	 * @param context
	 * @param notification_request
	 */
	public final void setNotification_Request(com.mendix.systemwideinterfaces.core.IContext context, process.proxies.Request notification_request)
	{
		if (notification_request == null)
			getMendixObject().setValue(context, MemberNames.Notification_Request.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Notification_Request.toString(), notification_request.getMendixObject().getId());
	}

	/**
	 * @return value of ActivityStream_Notification
	 */
	public final process.proxies.ActivityStream getActivityStream_Notification() throws com.mendix.core.CoreException
	{
		return getActivityStream_Notification(getContext());
	}

	/**
	 * @param context
	 * @return value of ActivityStream_Notification
	 */
	public final process.proxies.ActivityStream getActivityStream_Notification(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		process.proxies.ActivityStream result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ActivityStream_Notification.toString());
		if (identifier != null)
			result = process.proxies.ActivityStream.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ActivityStream_Notification
	 * @param activitystream_notification
	 */
	public final void setActivityStream_Notification(process.proxies.ActivityStream activitystream_notification)
	{
		setActivityStream_Notification(getContext(), activitystream_notification);
	}

	/**
	 * Set value of ActivityStream_Notification
	 * @param context
	 * @param activitystream_notification
	 */
	public final void setActivityStream_Notification(com.mendix.systemwideinterfaces.core.IContext context, process.proxies.ActivityStream activitystream_notification)
	{
		if (activitystream_notification == null)
			getMendixObject().setValue(context, MemberNames.ActivityStream_Notification.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ActivityStream_Notification.toString(), activitystream_notification.getMendixObject().getId());
	}

	/**
	 * @return value of Notification_SLMEscalation
	 */
	public final slm_notifications.proxies.SLMEscalation getNotification_SLMEscalation() throws com.mendix.core.CoreException
	{
		return getNotification_SLMEscalation(getContext());
	}

	/**
	 * @param context
	 * @return value of Notification_SLMEscalation
	 */
	public final slm_notifications.proxies.SLMEscalation getNotification_SLMEscalation(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		slm_notifications.proxies.SLMEscalation result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Notification_SLMEscalation.toString());
		if (identifier != null)
			result = slm_notifications.proxies.SLMEscalation.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Notification_SLMEscalation
	 * @param notification_slmescalation
	 */
	public final void setNotification_SLMEscalation(slm_notifications.proxies.SLMEscalation notification_slmescalation)
	{
		setNotification_SLMEscalation(getContext(), notification_slmescalation);
	}

	/**
	 * Set value of Notification_SLMEscalation
	 * @param context
	 * @param notification_slmescalation
	 */
	public final void setNotification_SLMEscalation(com.mendix.systemwideinterfaces.core.IContext context, slm_notifications.proxies.SLMEscalation notification_slmescalation)
	{
		if (notification_slmescalation == null)
			getMendixObject().setValue(context, MemberNames.Notification_SLMEscalation.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Notification_SLMEscalation.toString(), notification_slmescalation.getMendixObject().getId());
	}

	/**
	 * @return value of Notification_Person
	 */
	public final java.util.List<nap.proxies.Person> getNotification_Person() throws com.mendix.core.CoreException
	{
		return getNotification_Person(getContext());
	}

	/**
	 * @param context
	 * @return value of Notification_Person
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<nap.proxies.Person> getNotification_Person(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<nap.proxies.Person> result = new java.util.ArrayList<nap.proxies.Person>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.Notification_Person.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(nap.proxies.Person.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of Notification_Person
	 * @param notification_person
	 */
	public final void setNotification_Person(java.util.List<nap.proxies.Person> notification_person)
	{
		setNotification_Person(getContext(), notification_person);
	}

	/**
	 * Set value of Notification_Person
	 * @param context
	 * @param notification_person
	 */
	public final void setNotification_Person(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<nap.proxies.Person> notification_person)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (nap.proxies.Person proxyObject : notification_person)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.Notification_Person.toString(), identifiers);
	}

	/**
	 * @return value of Notification_BusinessGroup
	 */
	public final java.util.List<nap.proxies.BusinessGroup> getNotification_BusinessGroup() throws com.mendix.core.CoreException
	{
		return getNotification_BusinessGroup(getContext());
	}

	/**
	 * @param context
	 * @return value of Notification_BusinessGroup
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<nap.proxies.BusinessGroup> getNotification_BusinessGroup(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<nap.proxies.BusinessGroup> result = new java.util.ArrayList<nap.proxies.BusinessGroup>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.Notification_BusinessGroup.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(nap.proxies.BusinessGroup.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of Notification_BusinessGroup
	 * @param notification_businessgroup
	 */
	public final void setNotification_BusinessGroup(java.util.List<nap.proxies.BusinessGroup> notification_businessgroup)
	{
		setNotification_BusinessGroup(getContext(), notification_businessgroup);
	}

	/**
	 * Set value of Notification_BusinessGroup
	 * @param context
	 * @param notification_businessgroup
	 */
	public final void setNotification_BusinessGroup(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<nap.proxies.BusinessGroup> notification_businessgroup)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (nap.proxies.BusinessGroup proxyObject : notification_businessgroup)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.Notification_BusinessGroup.toString(), identifiers);
	}

	/**
	 * @return value of Notification_Escalation
	 */
	public final slm_notifications.proxies.Escalation getNotification_Escalation() throws com.mendix.core.CoreException
	{
		return getNotification_Escalation(getContext());
	}

	/**
	 * @param context
	 * @return value of Notification_Escalation
	 */
	public final slm_notifications.proxies.Escalation getNotification_Escalation(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		slm_notifications.proxies.Escalation result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Notification_Escalation.toString());
		if (identifier != null)
			result = slm_notifications.proxies.Escalation.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Notification_Escalation
	 * @param notification_escalation
	 */
	public final void setNotification_Escalation(slm_notifications.proxies.Escalation notification_escalation)
	{
		setNotification_Escalation(getContext(), notification_escalation);
	}

	/**
	 * Set value of Notification_Escalation
	 * @param context
	 * @param notification_escalation
	 */
	public final void setNotification_Escalation(com.mendix.systemwideinterfaces.core.IContext context, slm_notifications.proxies.Escalation notification_escalation)
	{
		if (notification_escalation == null)
			getMendixObject().setValue(context, MemberNames.Notification_Escalation.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Notification_Escalation.toString(), notification_escalation.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return notificationMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final process.proxies.Notification that = (process.proxies.Notification) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Process.Notification";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
