// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package process.proxies;

public class Reminder
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject reminderMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Process.Reminder";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		DateTime("DateTime"),
		Subject("Subject"),
		Message("Message"),
		IsSent("IsSent"),
		Suppress("Suppress"),
		WillNotBeSent("WillNotBeSent"),
		DateTimeSent("DateTimeSent"),
		ReadyToSent("ReadyToSent"),
		Reminder_Request("Process.Reminder_Request"),
		Reminder_Person("Process.Reminder_Person"),
		Reminder_BusinessGroup("Process.Reminder_BusinessGroup");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Reminder(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Process.Reminder"));
	}

	protected Reminder(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject reminderMendixObject)
	{
		if (reminderMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Process.Reminder", reminderMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Process.Reminder");

		this.reminderMendixObject = reminderMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Reminder.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static process.proxies.Reminder initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return process.proxies.Reminder.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static process.proxies.Reminder initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new process.proxies.Reminder(context, mendixObject);
	}

	public static process.proxies.Reminder load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return process.proxies.Reminder.initialize(context, mendixObject);
	}

	public static java.util.List<process.proxies.Reminder> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<process.proxies.Reminder> result = new java.util.ArrayList<process.proxies.Reminder>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Process.Reminder" + xpathConstraint))
			result.add(process.proxies.Reminder.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of DateTime
	 */
	public final java.util.Date getDateTime()
	{
		return getDateTime(getContext());
	}

	/**
	 * @param context
	 * @return value of DateTime
	 */
	public final java.util.Date getDateTime(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.DateTime.toString());
	}

	/**
	 * Set value of DateTime
	 * @param datetime
	 */
	public final void setDateTime(java.util.Date datetime)
	{
		setDateTime(getContext(), datetime);
	}

	/**
	 * Set value of DateTime
	 * @param context
	 * @param datetime
	 */
	public final void setDateTime(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date datetime)
	{
		getMendixObject().setValue(context, MemberNames.DateTime.toString(), datetime);
	}

	/**
	 * @return value of Subject
	 */
	public final java.lang.String getSubject()
	{
		return getSubject(getContext());
	}

	/**
	 * @param context
	 * @return value of Subject
	 */
	public final java.lang.String getSubject(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Subject.toString());
	}

	/**
	 * Set value of Subject
	 * @param subject
	 */
	public final void setSubject(java.lang.String subject)
	{
		setSubject(getContext(), subject);
	}

	/**
	 * Set value of Subject
	 * @param context
	 * @param subject
	 */
	public final void setSubject(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String subject)
	{
		getMendixObject().setValue(context, MemberNames.Subject.toString(), subject);
	}

	/**
	 * @return value of Message
	 */
	public final java.lang.String getMessage()
	{
		return getMessage(getContext());
	}

	/**
	 * @param context
	 * @return value of Message
	 */
	public final java.lang.String getMessage(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Message.toString());
	}

	/**
	 * Set value of Message
	 * @param message
	 */
	public final void setMessage(java.lang.String message)
	{
		setMessage(getContext(), message);
	}

	/**
	 * Set value of Message
	 * @param context
	 * @param message
	 */
	public final void setMessage(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String message)
	{
		getMendixObject().setValue(context, MemberNames.Message.toString(), message);
	}

	/**
	 * @return value of IsSent
	 */
	public final java.lang.Boolean getIsSent()
	{
		return getIsSent(getContext());
	}

	/**
	 * @param context
	 * @return value of IsSent
	 */
	public final java.lang.Boolean getIsSent(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsSent.toString());
	}

	/**
	 * Set value of IsSent
	 * @param issent
	 */
	public final void setIsSent(java.lang.Boolean issent)
	{
		setIsSent(getContext(), issent);
	}

	/**
	 * Set value of IsSent
	 * @param context
	 * @param issent
	 */
	public final void setIsSent(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean issent)
	{
		getMendixObject().setValue(context, MemberNames.IsSent.toString(), issent);
	}

	/**
	 * @return value of Suppress
	 */
	public final java.lang.Boolean getSuppress()
	{
		return getSuppress(getContext());
	}

	/**
	 * @param context
	 * @return value of Suppress
	 */
	public final java.lang.Boolean getSuppress(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.Suppress.toString());
	}

	/**
	 * Set value of Suppress
	 * @param suppress
	 */
	public final void setSuppress(java.lang.Boolean suppress)
	{
		setSuppress(getContext(), suppress);
	}

	/**
	 * Set value of Suppress
	 * @param context
	 * @param suppress
	 */
	public final void setSuppress(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean suppress)
	{
		getMendixObject().setValue(context, MemberNames.Suppress.toString(), suppress);
	}

	/**
	 * @return value of WillNotBeSent
	 */
	public final java.lang.Boolean getWillNotBeSent()
	{
		return getWillNotBeSent(getContext());
	}

	/**
	 * @param context
	 * @return value of WillNotBeSent
	 */
	public final java.lang.Boolean getWillNotBeSent(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.WillNotBeSent.toString());
	}

	/**
	 * Set value of WillNotBeSent
	 * @param willnotbesent
	 */
	public final void setWillNotBeSent(java.lang.Boolean willnotbesent)
	{
		setWillNotBeSent(getContext(), willnotbesent);
	}

	/**
	 * Set value of WillNotBeSent
	 * @param context
	 * @param willnotbesent
	 */
	public final void setWillNotBeSent(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean willnotbesent)
	{
		getMendixObject().setValue(context, MemberNames.WillNotBeSent.toString(), willnotbesent);
	}

	/**
	 * @return value of DateTimeSent
	 */
	public final java.util.Date getDateTimeSent()
	{
		return getDateTimeSent(getContext());
	}

	/**
	 * @param context
	 * @return value of DateTimeSent
	 */
	public final java.util.Date getDateTimeSent(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.DateTimeSent.toString());
	}

	/**
	 * Set value of DateTimeSent
	 * @param datetimesent
	 */
	public final void setDateTimeSent(java.util.Date datetimesent)
	{
		setDateTimeSent(getContext(), datetimesent);
	}

	/**
	 * Set value of DateTimeSent
	 * @param context
	 * @param datetimesent
	 */
	public final void setDateTimeSent(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date datetimesent)
	{
		getMendixObject().setValue(context, MemberNames.DateTimeSent.toString(), datetimesent);
	}

	/**
	 * @return value of ReadyToSent
	 */
	public final java.lang.Boolean getReadyToSent()
	{
		return getReadyToSent(getContext());
	}

	/**
	 * @param context
	 * @return value of ReadyToSent
	 */
	public final java.lang.Boolean getReadyToSent(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.ReadyToSent.toString());
	}

	/**
	 * Set value of ReadyToSent
	 * @param readytosent
	 */
	public final void setReadyToSent(java.lang.Boolean readytosent)
	{
		setReadyToSent(getContext(), readytosent);
	}

	/**
	 * Set value of ReadyToSent
	 * @param context
	 * @param readytosent
	 */
	public final void setReadyToSent(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean readytosent)
	{
		getMendixObject().setValue(context, MemberNames.ReadyToSent.toString(), readytosent);
	}

	/**
	 * @return value of Reminder_Request
	 */
	public final process.proxies.Request getReminder_Request() throws com.mendix.core.CoreException
	{
		return getReminder_Request(getContext());
	}

	/**
	 * @param context
	 * @return value of Reminder_Request
	 */
	public final process.proxies.Request getReminder_Request(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		process.proxies.Request result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Reminder_Request.toString());
		if (identifier != null)
			result = process.proxies.Request.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Reminder_Request
	 * @param reminder_request
	 */
	public final void setReminder_Request(process.proxies.Request reminder_request)
	{
		setReminder_Request(getContext(), reminder_request);
	}

	/**
	 * Set value of Reminder_Request
	 * @param context
	 * @param reminder_request
	 */
	public final void setReminder_Request(com.mendix.systemwideinterfaces.core.IContext context, process.proxies.Request reminder_request)
	{
		if (reminder_request == null)
			getMendixObject().setValue(context, MemberNames.Reminder_Request.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Reminder_Request.toString(), reminder_request.getMendixObject().getId());
	}

	/**
	 * @return value of Reminder_Person
	 */
	public final java.util.List<nap.proxies.Person> getReminder_Person() throws com.mendix.core.CoreException
	{
		return getReminder_Person(getContext());
	}

	/**
	 * @param context
	 * @return value of Reminder_Person
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<nap.proxies.Person> getReminder_Person(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<nap.proxies.Person> result = new java.util.ArrayList<nap.proxies.Person>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.Reminder_Person.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(nap.proxies.Person.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of Reminder_Person
	 * @param reminder_person
	 */
	public final void setReminder_Person(java.util.List<nap.proxies.Person> reminder_person)
	{
		setReminder_Person(getContext(), reminder_person);
	}

	/**
	 * Set value of Reminder_Person
	 * @param context
	 * @param reminder_person
	 */
	public final void setReminder_Person(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<nap.proxies.Person> reminder_person)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (nap.proxies.Person proxyObject : reminder_person)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.Reminder_Person.toString(), identifiers);
	}

	/**
	 * @return value of Reminder_BusinessGroup
	 */
	public final java.util.List<nap.proxies.BusinessGroup> getReminder_BusinessGroup() throws com.mendix.core.CoreException
	{
		return getReminder_BusinessGroup(getContext());
	}

	/**
	 * @param context
	 * @return value of Reminder_BusinessGroup
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<nap.proxies.BusinessGroup> getReminder_BusinessGroup(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<nap.proxies.BusinessGroup> result = new java.util.ArrayList<nap.proxies.BusinessGroup>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.Reminder_BusinessGroup.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(nap.proxies.BusinessGroup.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of Reminder_BusinessGroup
	 * @param reminder_businessgroup
	 */
	public final void setReminder_BusinessGroup(java.util.List<nap.proxies.BusinessGroup> reminder_businessgroup)
	{
		setReminder_BusinessGroup(getContext(), reminder_businessgroup);
	}

	/**
	 * Set value of Reminder_BusinessGroup
	 * @param context
	 * @param reminder_businessgroup
	 */
	public final void setReminder_BusinessGroup(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<nap.proxies.BusinessGroup> reminder_businessgroup)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (nap.proxies.BusinessGroup proxyObject : reminder_businessgroup)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.Reminder_BusinessGroup.toString(), identifiers);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return reminderMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final process.proxies.Reminder that = (process.proxies.Reminder) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Process.Reminder";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
