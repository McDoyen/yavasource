// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package process.proxies;

public enum ChangeType
{
	Correction(new java.lang.String[][] { new java.lang.String[] { "en_US", "Correction" } }),
	Expansion(new java.lang.String[][] { new java.lang.String[] { "en_US", "Expansion" } }),
	External_data_originator_AIP(new java.lang.String[][] { new java.lang.String[] { "en_US", "External data originator AIP" } }),
	Improvement(new java.lang.String[][] { new java.lang.String[] { "en_US", "Improvement" } }),
	Incident(new java.lang.String[][] { new java.lang.String[] { "en_US", "Incident" } }),
	LoA_partner(new java.lang.String[][] { new java.lang.String[] { "en_US", "LoA partner" } }),
	Maintenance(new java.lang.String[][] { new java.lang.String[] { "en_US", "Maintenance" } }),
	Move(new java.lang.String[][] { new java.lang.String[] { "en_US", "Move" } }),
	Operations(new java.lang.String[][] { new java.lang.String[] { "en_US", "Operations" } }),
	Other(new java.lang.String[][] { new java.lang.String[] { "en_US", "Other" } }),
	Problem(new java.lang.String[][] { new java.lang.String[] { "en_US", "Problem" } }),
	Program_Activity(new java.lang.String[][] { new java.lang.String[] { "en_US", "Program Activity" } }),
	Project(new java.lang.String[][] { new java.lang.String[] { "en_US", "Project" } }),
	Regulations(new java.lang.String[][] { new java.lang.String[] { "en_US", "Legislation" } }),
	Removal(new java.lang.String[][] { new java.lang.String[] { "en_US", "Removal" } }),
	Replacement(new java.lang.String[][] { new java.lang.String[] { "en_US", "Replacement" } }),
	Safety_recommendation(new java.lang.String[][] { new java.lang.String[] { "en_US", "Safety recommendation" } });

	private java.util.Map<java.lang.String, java.lang.String> captions;

	private ChangeType(java.lang.String[][] captionStrings)
	{
		this.captions = new java.util.HashMap<java.lang.String, java.lang.String>();
		for (java.lang.String[] captionString : captionStrings)
			captions.put(captionString[0], captionString[1]);
	}

	public java.lang.String getCaption(java.lang.String languageCode)
	{
		if (captions.containsKey(languageCode))
			return captions.get(languageCode);
		return captions.get("en_US");
	}

	public java.lang.String getCaption()
	{
		return captions.get("en_US");
	}
}
