// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package process.proxies;

/**
 * CC3962: Removed validation on UU95_LabelFor
 */
public class DynamicAttributeLabel
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject dynamicAttributeLabelMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Process.DynamicAttributeLabel";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Label("Label"),
		LabelType("LabelType"),
		RequiredField("RequiredField"),
		UU95_LabelFor("UU95_LabelFor");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public DynamicAttributeLabel(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Process.DynamicAttributeLabel"));
	}

	protected DynamicAttributeLabel(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject dynamicAttributeLabelMendixObject)
	{
		if (dynamicAttributeLabelMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Process.DynamicAttributeLabel", dynamicAttributeLabelMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Process.DynamicAttributeLabel");

		this.dynamicAttributeLabelMendixObject = dynamicAttributeLabelMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'DynamicAttributeLabel.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static process.proxies.DynamicAttributeLabel initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return process.proxies.DynamicAttributeLabel.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static process.proxies.DynamicAttributeLabel initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new process.proxies.DynamicAttributeLabel(context, mendixObject);
	}

	public static process.proxies.DynamicAttributeLabel load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return process.proxies.DynamicAttributeLabel.initialize(context, mendixObject);
	}

	public static java.util.List<process.proxies.DynamicAttributeLabel> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<process.proxies.DynamicAttributeLabel> result = new java.util.ArrayList<process.proxies.DynamicAttributeLabel>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Process.DynamicAttributeLabel" + xpathConstraint))
			result.add(process.proxies.DynamicAttributeLabel.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Label
	 */
	public final java.lang.String getLabel()
	{
		return getLabel(getContext());
	}

	/**
	 * @param context
	 * @return value of Label
	 */
	public final java.lang.String getLabel(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Label.toString());
	}

	/**
	 * Set value of Label
	 * @param label
	 */
	public final void setLabel(java.lang.String label)
	{
		setLabel(getContext(), label);
	}

	/**
	 * Set value of Label
	 * @param context
	 * @param label
	 */
	public final void setLabel(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String label)
	{
		getMendixObject().setValue(context, MemberNames.Label.toString(), label);
	}

	/**
	 * Set value of LabelType
	 * @param labeltype
	 */
	public final process.proxies.DynamicLabelType getLabelType()
	{
		return getLabelType(getContext());
	}

	/**
	 * @param context
	 * @return value of LabelType
	 */
	public final process.proxies.DynamicLabelType getLabelType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.LabelType.toString());
		if (obj == null)
			return null;

		return process.proxies.DynamicLabelType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of LabelType
	 * @param labeltype
	 */
	public final void setLabelType(process.proxies.DynamicLabelType labeltype)
	{
		setLabelType(getContext(), labeltype);
	}

	/**
	 * Set value of LabelType
	 * @param context
	 * @param labeltype
	 */
	public final void setLabelType(com.mendix.systemwideinterfaces.core.IContext context, process.proxies.DynamicLabelType labeltype)
	{
		if (labeltype != null)
			getMendixObject().setValue(context, MemberNames.LabelType.toString(), labeltype.toString());
		else
			getMendixObject().setValue(context, MemberNames.LabelType.toString(), null);
	}

	/**
	 * Set value of RequiredField
	 * @param requiredfield
	 */
	public final process.proxies.RequiredFieldsOn getRequiredField()
	{
		return getRequiredField(getContext());
	}

	/**
	 * @param context
	 * @return value of RequiredField
	 */
	public final process.proxies.RequiredFieldsOn getRequiredField(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.RequiredField.toString());
		if (obj == null)
			return null;

		return process.proxies.RequiredFieldsOn.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of RequiredField
	 * @param requiredfield
	 */
	public final void setRequiredField(process.proxies.RequiredFieldsOn requiredfield)
	{
		setRequiredField(getContext(), requiredfield);
	}

	/**
	 * Set value of RequiredField
	 * @param context
	 * @param requiredfield
	 */
	public final void setRequiredField(com.mendix.systemwideinterfaces.core.IContext context, process.proxies.RequiredFieldsOn requiredfield)
	{
		if (requiredfield != null)
			getMendixObject().setValue(context, MemberNames.RequiredField.toString(), requiredfield.toString());
		else
			getMendixObject().setValue(context, MemberNames.RequiredField.toString(), null);
	}

	/**
	 * Set value of UU95_LabelFor
	 * @param uu95_labelfor
	 */
	public final process.proxies.LabelFor getUU95_LabelFor()
	{
		return getUU95_LabelFor(getContext());
	}

	/**
	 * @param context
	 * @return value of UU95_LabelFor
	 */
	public final process.proxies.LabelFor getUU95_LabelFor(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.UU95_LabelFor.toString());
		if (obj == null)
			return null;

		return process.proxies.LabelFor.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of UU95_LabelFor
	 * @param uu95_labelfor
	 */
	public final void setUU95_LabelFor(process.proxies.LabelFor uu95_labelfor)
	{
		setUU95_LabelFor(getContext(), uu95_labelfor);
	}

	/**
	 * Set value of UU95_LabelFor
	 * @param context
	 * @param uu95_labelfor
	 */
	public final void setUU95_LabelFor(com.mendix.systemwideinterfaces.core.IContext context, process.proxies.LabelFor uu95_labelfor)
	{
		if (uu95_labelfor != null)
			getMendixObject().setValue(context, MemberNames.UU95_LabelFor.toString(), uu95_labelfor.toString());
		else
			getMendixObject().setValue(context, MemberNames.UU95_LabelFor.toString(), null);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return dynamicAttributeLabelMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final process.proxies.DynamicAttributeLabel that = (process.proxies.DynamicAttributeLabel) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Process.DynamicAttributeLabel";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
