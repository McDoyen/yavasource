// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package process.proxies;

public class OperationSnapShot extends process.proxies.ServiceRequestSnapShot
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Process.OperationSnapShot";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		CustomerWishdate("CustomerWishdate"),
		CustomerWishDateChanged("CustomerWishDateChanged"),
		CustomerWishDateReason("CustomerWishDateReason"),
		CustomerWishDateReasonChanged("CustomerWishDateReasonChanged"),
		ShortDescription("ShortDescription"),
		ShortDescriptionChanged("ShortDescriptionChanged"),
		DetailDescription("DetailDescription"),
		DetailDescriptionChanged("DetailDescriptionChanged"),
		DetailDescriptionNoHTML("DetailDescriptionNoHTML"),
		DetailDescriptionNoHTMLChanged("DetailDescriptionNoHTMLChanged"),
		SolutionDescription("SolutionDescription"),
		SolutionDescriptionChanged("SolutionDescriptionChanged"),
		ActualEndTime("ActualEndTime"),
		ActualEndTimeChanged("ActualEndTimeChanged"),
		CustomerSatisfaction("CustomerSatisfaction"),
		CustomerSatisfactionChanged("CustomerSatisfactionChanged"),
		ScheduledStart("ScheduledStart"),
		ScheduledStartChanged("ScheduledStartChanged"),
		ScheduledEnd("ScheduledEnd"),
		ScheduledEndChanged("ScheduledEndChanged"),
		WishDateStart("WishDateStart"),
		WishDateStartChanged("WishDateStartChanged"),
		WishDateEnd("WishDateEnd"),
		WishDateEndChanged("WishDateEndChanged"),
		OpeningCategoryChanged("OpeningCategoryChanged"),
		ClosureCategoryChanged("ClosureCategoryChanged"),
		RequestEvent_RequestSnapShot("Process.RequestEvent_RequestSnapShot"),
		RequestSnapShot_OpeningCategory("Process.RequestSnapShot_OpeningCategory"),
		RequestSnapShot_ClosureCategory("Process.RequestSnapShot_ClosureCategory");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public OperationSnapShot(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Process.OperationSnapShot"));
	}

	protected OperationSnapShot(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject operationSnapShotMendixObject)
	{
		super(context, operationSnapShotMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("Process.OperationSnapShot", operationSnapShotMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Process.OperationSnapShot");
	}

	/**
	 * @deprecated Use 'OperationSnapShot.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static process.proxies.OperationSnapShot initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return process.proxies.OperationSnapShot.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static process.proxies.OperationSnapShot initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new process.proxies.OperationSnapShot(context, mendixObject);
	}

	public static process.proxies.OperationSnapShot load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return process.proxies.OperationSnapShot.initialize(context, mendixObject);
	}

	public static java.util.List<process.proxies.OperationSnapShot> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<process.proxies.OperationSnapShot> result = new java.util.ArrayList<process.proxies.OperationSnapShot>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Process.OperationSnapShot" + xpathConstraint))
			result.add(process.proxies.OperationSnapShot.initialize(context, obj));
		return result;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final process.proxies.OperationSnapShot that = (process.proxies.OperationSnapShot) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Process.OperationSnapShot";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
