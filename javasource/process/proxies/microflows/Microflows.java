// This file was generated by Mendix Modeler 7.7.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package process.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the Process module
	public static void addAffectedCIs(IContext context, java.util.List<cmdb.proxies.ConfigurationItem> _configurationItemList, cmdb.proxies.AffectedCISelect _affectedCISelect)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_configurationItemList = null;
			if (_configurationItemList != null)
			{
				listparam_configurationItemList = new java.util.ArrayList<IMendixObject>();
				for (cmdb.proxies.ConfigurationItem obj : _configurationItemList)
					listparam_configurationItemList.add(obj.getMendixObject());
			}
			params.put("ConfigurationItemList", listparam_configurationItemList);
			params.put("AffectedCISelect", _affectedCISelect == null ? null : _affectedCISelect.getMendixObject());
			Core.execute(context, "Process.AddAffectedCIs", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean addAffectedItem_RequestEvent_BeforeCommit(IContext context, cmdb.proxies.AffectedCI _affectedCI)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AffectedCI", _affectedCI == null ? null : _affectedCI.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.AddAffectedItem_RequestEvent_BeforeCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void addNewAttachment(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			Core.execute(context, "Process.AddNewAttachment", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void addPauseReasonToActivityStream(IContext context, process.proxies.PausedTime _inputPausedTime)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputPausedTime", _inputPausedTime == null ? null : _inputPausedTime.getMendixObject());
			Core.execute(context, "Process.AddPauseReasonToActivityStream", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void addProgressNote_Ticket(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.AddProgressNote_Ticket", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void addSelectedShoppingCartProducts(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.AddSelectedShoppingCartProducts", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void addSingleAffectedCIs_Affected(IContext context, cmdb.proxies.AffectedCISelect _affectedCISelect, cmdb.proxies.ConfigurationItem _inputConfigurationItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AffectedCISelect", _affectedCISelect == null ? null : _affectedCISelect.getMendixObject());
			params.put("InputConfigurationItem", _inputConfigurationItem == null ? null : _inputConfigurationItem.getMendixObject());
			Core.execute(context, "Process.AddSingleAffectedCIs_Affected", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void addSingleAffectedCIs_NotAffected(IContext context, cmdb.proxies.ConfigurationItem _inputConfigurationItem, cmdb.proxies.AffectedCI _affectedCI)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputConfigurationItem", _inputConfigurationItem == null ? null : _inputConfigurationItem.getMendixObject());
			params.put("AffectedCI", _affectedCI == null ? null : _affectedCI.getMendixObject());
			Core.execute(context, "Process.AddSingleAffectedCIs_NotAffected", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void addSingleAffectedCIs_PossiblyAffected(IContext context, cmdb.proxies.ConfigurationItem _inputConfigurationItem, cmdb.proxies.AffectedCI _affectedCI)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputConfigurationItem", _inputConfigurationItem == null ? null : _inputConfigurationItem.getMendixObject());
			params.put("AffectedCI", _affectedCI == null ? null : _affectedCI.getMendixObject());
			Core.execute(context, "Process.AddSingleAffectedCIs_PossiblyAffected", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void addSingleAffectedCIs_Related(IContext context, cmdb.proxies.ConfigurationItem _inputConfigurationItem, cmdb.proxies.AffectedCI _affectedCI)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputConfigurationItem", _inputConfigurationItem == null ? null : _inputConfigurationItem.getMendixObject());
			params.put("AffectedCI", _affectedCI == null ? null : _affectedCI.getMendixObject());
			Core.execute(context, "Process.AddSingleAffectedCIs_Related", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean allowCreateTask(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.AllowCreateTask", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean apply_Request(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Apply_Request", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean apply_Request_AfterLockWarning(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Apply_Request_AfterLockWarning", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean apply_Request_CloseWindow(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Apply_Request_CloseWindow", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void apply_Request_LabelChange(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Apply_Request_LabelChange", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String assignedToPersonOrOrg(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.AssignedToPersonOrOrg", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditDynamicAttribute_AfterCommit(IContext context, process.proxies.DynamicAtrribute _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Process.AuditDynamicAttribute_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditDynamicAttribute_AfterDelete(IContext context, process.proxies.DynamicAtrribute _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.AuditDynamicAttribute_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditDynamicAttributeGroup_AfterCommit(IContext context, process.proxies.DynamicAttributeGroup _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Process.AuditDynamicAttributeGroup_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditDynamicAttributeGroup_AfterDelete(IContext context, process.proxies.DynamicAttributeGroup _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.AuditDynamicAttributeGroup_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditDynamicAttributeLabel_AfterCommit(IContext context, process.proxies.DynamicAttributeLabel _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Process.AuditDynamicAttributeLabel_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditDynamicAttributeLabel_AfterDelete(IContext context, process.proxies.DynamicAttributeLabel _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.AuditDynamicAttributeLabel_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditExternalReferences_AfterCommit(IContext context, process.proxies.ExternalReference _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Process.AuditExternalReferences_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditExternalReferences_AfterDelete(IContext context, process.proxies.ExternalReference _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.AuditExternalReferences_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditKPIConfiguration_AfterCommit(IContext context, process.proxies.KPIConfiguration _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Process.AuditKPIConfiguration_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditKPIConfiguration_AfterDelete(IContext context, process.proxies.KPIConfiguration _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.AuditKPIConfiguration_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditKPIConfiguration_GetAuditRecord(IContext context, process.proxies.KPIConfiguration _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Process.AuditKPIConfiguration_GetAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditPausedReasonDefinition_AfterCommit(IContext context, process.proxies.PausedReasonDefinition _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Process.AuditPausedReasonDefinition_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditPausedReasonDefinition_AfterDelete(IContext context, process.proxies.PausedReasonDefinition _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.AuditPausedReasonDefinition_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditPausedReasonDefinition_GetAuditRecord(IContext context, process.proxies.PausedReasonDefinition _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Process.AuditPausedReasonDefinition_GetAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditRequest_AfterCommit_Special(IContext context, process.proxies.Request _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Process.AuditRequest_AfterCommit_Special", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditRequest_GetAuditRecord(IContext context, process.proxies.Request _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Process.AuditRequest_GetAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditRequestAttachment_AfterCommit(IContext context, process.proxies.RequestAttachment _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Process.AuditRequestAttachment_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditRequestAttachment_AfterDelete(IContext context, process.proxies.RequestAttachment _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.AuditRequestAttachment_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditRequiredFields_AfterCommit(IContext context, process.proxies.RequiredFields _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Process.AuditRequiredFields_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditRequiredFields_AfterDelete(IContext context, process.proxies.RequiredFields _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.AuditRequiredFields_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditRequiredFieldsSetting_AfterCommit(IContext context, process.proxies.RequiredFieldsSetting _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Process.AuditRequiredFieldsSetting_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditRequiredFieldsSetting_AfterDelete(IContext context, process.proxies.RequiredFieldsSetting _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.AuditRequiredFieldsSetting_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditRequiredFieldsSetting_GetAuditRecord(IContext context, process.proxies.RequiredFieldsSetting _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Process.AuditRequiredFieldsSetting_GetAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditTicketRelations_AfterDelete(IContext context, process.proxies.TicketRelations _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.AuditTicketRelations_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bC_CreateNewDynamicAttributeRequestEvent(IContext context, process.proxies.DynamicAtrribute _dynamicAtrribute)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicAtrribute", _dynamicAtrribute == null ? null : _dynamicAtrribute.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.BC_CreateNewDynamicAttributeRequestEvent", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bC_CreateNewTicketRelationsRequestEvent(IContext context, process.proxies.TicketRelations _ticketRelations)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TicketRelations", _ticketRelations == null ? null : _ticketRelations.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.BC_CreateNewTicketRelationsRequestEvent", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bC_PausedTime(IContext context, process.proxies.PausedTime _pausedTime)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PausedTime", _pausedTime == null ? null : _pausedTime.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.BC_PausedTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bC_TaskCounter(IContext context, process.proxies.TaskCounter _taskCounter)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TaskCounter", _taskCounter == null ? null : _taskCounter.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.BC_TaskCounter", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean buildMessageRecipientList(IContext context, java.util.List<nap.proxies.Person> _personList, emailplus.proxies.Message _message, emailplus.proxies.MessageSource _messageSource, nap.proxies.NotificationSubscription _notificationSubscription)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_personList = null;
			if (_personList != null)
			{
				listparam_personList = new java.util.ArrayList<IMendixObject>();
				for (nap.proxies.Person obj : _personList)
					listparam_personList.add(obj.getMendixObject());
			}
			params.put("PersonList", listparam_personList);
			params.put("Message", _message == null ? null : _message.getMendixObject());
			params.put("MessageSource", _messageSource == null ? null : _messageSource.name());
			params.put("NotificationSubscription", _notificationSubscription == null ? null : _notificationSubscription.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.BuildMessageRecipientList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean cal_ShowMoreInfoProgress(IContext context, process.proxies.ActivityStream _activityStream)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ActivityStream", _activityStream == null ? null : _activityStream.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Cal_ShowMoreInfoProgress", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean calc_AuditTransitionHasPausedTime(IContext context, process.proxies.RequestTransitionAudit _requestTransitionAudit)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RequestTransitionAudit", _requestTransitionAudit == null ? null : _requestTransitionAudit.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Calc_AuditTransitionHasPausedTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean calc_FoundScreenBlocks(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Calc_FoundScreenBlocks", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long calcNrOfRequestForAffectedCI(IContext context, cmdb.proxies.AffectedCIHelper _affectedCIHelper)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AffectedCIHelper", _affectedCIHelper == null ? null : _affectedCIHelper.getMendixObject());
			return (java.lang.Long)Core.execute(context, "Process.CalcNrOfRequestForAffectedCI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean calcSearchByLucene(IContext context, process.proxies.TicketRelations _ticketRelations)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TicketRelations", _ticketRelations == null ? null : _ticketRelations.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.calcSearchByLucene", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static fusionchartsplus.proxies.ChartXML calculate_ClosedRequestKPI(IContext context, fusionchartsplus.proxies.ChartXML _newChartXML)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("NewChartXML", _newChartXML == null ? null : _newChartXML.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.Calculate_ClosedRequestKPI", params);
			return result == null ? null : fusionchartsplus.proxies.ChartXML.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static fusionchartsplus.proxies.ChartXML calculate_CustomerSatisfactionClosedRequestKPI(IContext context, fusionchartsplus.proxies.ChartXML _newChartXML)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("NewChartXML", _newChartXML == null ? null : _newChartXML.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.Calculate_CustomerSatisfactionClosedRequestKPI", params);
			return result == null ? null : fusionchartsplus.proxies.ChartXML.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static fusionchartsplus.proxies.ChartXML calculate_FTRClosedRequestKPI(IContext context, fusionchartsplus.proxies.ChartXML _newChartXML)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("NewChartXML", _newChartXML == null ? null : _newChartXML.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.Calculate_FTRClosedRequestKPI", params);
			return result == null ? null : fusionchartsplus.proxies.ChartXML.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static fusionchartsplus.proxies.ChartXML calculate_InsideSLAClosedRequestKPI(IContext context, fusionchartsplus.proxies.ChartXML _newChartXML)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("NewChartXML", _newChartXML == null ? null : _newChartXML.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.Calculate_InsideSLAClosedRequestKPI", params);
			return result == null ? null : fusionchartsplus.proxies.ChartXML.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static fusionchartsplus.proxies.ChartXML calculate_InsideSLAClosedRequestServiceKPI(IContext context, fusionchartsplus.proxies.ChartXML _chartXML)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ChartXML", _chartXML == null ? null : _chartXML.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.Calculate_InsideSLAClosedRequestServiceKPI", params);
			return result == null ? null : fusionchartsplus.proxies.ChartXML.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean calculateAnalysis(IContext context, process.proxies.CalculatedAdditionalInfo _calculatedAdditionalInfo)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CalculatedAdditionalInfo", _calculatedAdditionalInfo == null ? null : _calculatedAdditionalInfo.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.CalculateAnalysis", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void calculateBusinessHoursOnPreviousAuditRecord(IContext context, process.proxies.RequestTransitionAudit _currentTransitionAudit)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CurrentTransitionAudit", _currentTransitionAudit == null ? null : _currentTransitionAudit.getMendixObject());
			Core.execute(context, "Process.CalculateBusinessHoursOnPreviousAuditRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long calculateNrOfRequestForAffectedCI(IContext context, cmdb.proxies.AffectedCI _affectedCI)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AffectedCI", _affectedCI == null ? null : _affectedCI.getMendixObject());
			return (java.lang.Long)Core.execute(context, "Process.CalculateNrOfRequestForAffectedCI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void calculateSLAEndTime(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.CalculateSLAEndTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void calculateSLAResponseTime(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.CalculateSLAResponseTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean calculateSLMAspectsDuration(IContext context, process.proxies.RequestSLMAspectAudit _requestSLMAspectAudit)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RequestSLMAspectAudit", _requestSLMAspectAudit == null ? null : _requestSLMAspectAudit.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.CalculateSLMAspectsDuration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean calculateTaskCounters(IContext context, process.proxies.TaskCounter _taskCounter, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TaskCounter", _taskCounter == null ? null : _taskCounter.getMendixObject());
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.CalculateTaskCounters", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean calculateWorkflow(IContext context, process.proxies.CalculatedAdditionalInfo _calculatedAdditionalInfo)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CalculatedAdditionalInfo", _calculatedAdditionalInfo == null ? null : _calculatedAdditionalInfo.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.CalculateWorkflow", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void cancel_AssignTo(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Cancel_AssignTo", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void cancel_AssignTo_Change(IContext context, process.proxies.Change _change)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Change", _change == null ? null : _change.getMendixObject());
			Core.execute(context, "Process.Cancel_AssignTo_Change", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void cancel_AssignTo_Delivery(IContext context, process.proxies.Delivery _delivery)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Delivery", _delivery == null ? null : _delivery.getMendixObject());
			Core.execute(context, "Process.Cancel_AssignTo_Delivery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void cancel_AssignTo_Incident(IContext context, process.proxies.Incident _incident)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Incident", _incident == null ? null : _incident.getMendixObject());
			Core.execute(context, "Process.Cancel_AssignTo_Incident", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void cancel_AssignTo_Operation(IContext context, process.proxies.Operation _operation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Operation", _operation == null ? null : _operation.getMendixObject());
			Core.execute(context, "Process.Cancel_AssignTo_Operation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void cancel_AssignTo_Problem(IContext context, process.proxies.Problem _problem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Problem", _problem == null ? null : _problem.getMendixObject());
			Core.execute(context, "Process.Cancel_AssignTo_Problem", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void cancel_AssignTo_ServiceRequest(IContext context, process.proxies.ServiceRequest _serviceRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ServiceRequest", _serviceRequest == null ? null : _serviceRequest.getMendixObject());
			Core.execute(context, "Process.Cancel_AssignTo_ServiceRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void cancel_AssignTo_Task(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			Core.execute(context, "Process.Cancel_AssignTo_Task", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void cancelEditRequest(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.CancelEditRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void cancelNewRelation(IContext context, process.proxies.TicketRelations _ticketRelations)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TicketRelations", _ticketRelations == null ? null : _ticketRelations.getMendixObject());
			Core.execute(context, "Process.CancelNewRelation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void cancelProcessFreeMessage_NEW(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			Core.execute(context, "Process.CancelProcessFreeMessage_NEW", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void cancelRequest_RestockReservedCIs(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.CancelRequest_RestockReservedCIs", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void cancelRequestPause(IContext context, process.proxies.PausedTime _pausedTime)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PausedTime", _pausedTime == null ? null : _pausedTime.getMendixObject());
			Core.execute(context, "Process.cancelRequestPause", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void cancelSelectCIPerson(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.cancelSelectCIPerson", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void cancelTask(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			Core.execute(context, "Process.CancelTask", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void changeAssignedPerson(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.ChangeAssignedPerson", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void changedAssigneeOrGroup(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.ChangedAssigneeOrGroup", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void changeDeliveringOrganization(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.ChangeDeliveringOrganization", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void changeMatrix(IContext context, process.proxies.Request _request, process.proxies.Request _request_DB)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Request_DB", _request_DB == null ? null : _request_DB.getMendixObject());
			Core.execute(context, "Process.ChangeMatrix", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean changeRequestWithCustomError(IContext context, process.proxies.Request _requestChildOrParent, statetransition.proxies.TransitionMessage _transitionMessage, statetransition.proxies.Transition _transition, java.lang.String _extraText, process.proxies.Request _originatingRequest, process.proxies.Solve_Close _solveOrClose)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RequestChildOrParent", _requestChildOrParent == null ? null : _requestChildOrParent.getMendixObject());
			params.put("TransitionMessage", _transitionMessage == null ? null : _transitionMessage.getMendixObject());
			params.put("Transition", _transition == null ? null : _transition.getMendixObject());
			params.put("ExtraText", _extraText);
			params.put("OriginatingRequest", _originatingRequest == null ? null : _originatingRequest.getMendixObject());
			params.put("SolveOrClose", _solveOrClose == null ? null : _solveOrClose.name());
			return (java.lang.Boolean)Core.execute(context, "Process.ChangeRequestWithCustomError", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean check_Actual_End_Time(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Check_Actual_End_Time", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean check_AssigneeIsEmpty(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Check_AssigneeIsEmpty", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean check_CallerIsEmpty(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Check_CallerIsEmpty", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean check_CreateAcceptedOrClosedRequest(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Check_CreateAcceptedOrClosedRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean check_CreateTime(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Check_CreateTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean check_PersonIsEmpty(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Check_PersonIsEmpty", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean checkChangeFieldsChanged(IContext context, process.proxies.Change _change, process.proxies.ChangeSnapShot _changeSnapShot, process.proxies.Request _request_DB)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Change", _change == null ? null : _change.getMendixObject());
			params.put("ChangeSnapShot", _changeSnapShot == null ? null : _changeSnapShot.getMendixObject());
			params.put("Request_DB", _request_DB == null ? null : _request_DB.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.CheckChangeFieldsChanged", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 3417
	 * Added Request_DB used for SLM Aspect Audit historic fields.
	 */
	public static boolean checkChangesSLMAspectsAudit(IContext context, process.proxies.Request _request, process.proxies.Request _request_DB)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Request_DB", _request_DB == null ? null : _request_DB.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.CheckChangesSLMAspectsAudit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [879875] Assign to group and person directly
	 */
	public static void checkContractMultipleSelectCounts(IContext context, process.proxies.Request _request, slm.proxies.Contract_Type _contractType, java.lang.Long _maxDropDownResultSize)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("MaxDropDownResultSize", _maxDropDownResultSize);
			Core.execute(context, "Process.CheckContractMultipleSelectCounts", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void checkCopiedAspects(IContext context, process.proxies.Request _request, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			Core.execute(context, "Process.CheckCopiedAspects", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean checkDefaultMatrix(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.CheckDefaultMatrix", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void checkDelayedSynchronousFunctions(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.CheckDelayedSynchronousFunctions", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean checkDeliveryFieldsChanged(IContext context, process.proxies.Delivery _delivery, process.proxies.DeliverySnapShot _deliverySnapShot, process.proxies.Request _request_DB)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Delivery", _delivery == null ? null : _delivery.getMendixObject());
			params.put("DeliverySnapShot", _deliverySnapShot == null ? null : _deliverySnapShot.getMendixObject());
			params.put("Request_DB", _request_DB == null ? null : _request_DB.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.CheckDeliveryFieldsChanged", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean checkDynamicProcessAttribute_Value(IContext context, boolean _uIValidation, slm.proxies.SPAttribute _sPAttribute)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("UIValidation", _uIValidation);
			params.put("SPAttribute", _sPAttribute == null ? null : _sPAttribute.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.CheckDynamicProcessAttribute_Value", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean checkDynamicProcessAttributes(IContext context, process.proxies.Request _request, slm.proxies.RequireOn _requireOn, boolean _uIValidation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("RequireOn", _requireOn == null ? null : _requireOn.name());
			params.put("UIValidation", _uIValidation);
			return (java.lang.Boolean)Core.execute(context, "Process.CheckDynamicProcessAttributes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean checkFieldsDynamicAttributesGroup(IContext context, process.proxies.DynamicAttributeGroup _dynamicAttributesGroup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicAttributesGroup", _dynamicAttributesGroup == null ? null : _dynamicAttributesGroup.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.CheckFieldsDynamicAttributesGroup", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 920858
	 * Parameter changed om CheckTemplateTriggerCondition
	 */
	public static boolean checkForValidInitialInterfaceTriggers(IContext context, process.proxies.RequestEvent _requestEvent)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RequestEvent", _requestEvent == null ? null : _requestEvent.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.CheckForValidInitialInterfaceTriggers", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean checkIfContractsExist(IContext context, process.proxies.Request _request, slm.proxies.Contract_Type _contractType, boolean _useIUP, boolean _useService, boolean _useServiceProcess, boolean _useCI, scheduling.proxies.TemplateRequest _preservedValues)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("UseIUP", _useIUP);
			params.put("UseService", _useService);
			params.put("UseServiceProcess", _useServiceProcess);
			params.put("UseCI", _useCI);
			params.put("PreservedValues", _preservedValues == null ? null : _preservedValues.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.CheckIfContractsExist", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean checkIncidentFieldsChanged(IContext context, process.proxies.Incident _incident, process.proxies.IncidentSnapShot _incidentSnapShot, process.proxies.Request _request_DB)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Incident", _incident == null ? null : _incident.getMendixObject());
			params.put("IncidentSnapShot", _incidentSnapShot == null ? null : _incidentSnapShot.getMendixObject());
			params.put("Request_DB", _request_DB == null ? null : _request_DB.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.CheckIncidentFieldsChanged", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean checkNextQuestion(IContext context, scripting.proxies.Question_Instance _question_Instance)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Question_Instance", _question_Instance == null ? null : _question_Instance.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.CheckNextQuestion", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean checkOperationFieldsChanged(IContext context, process.proxies.Operation _operation, process.proxies.OperationSnapShot _operationSnapShot, process.proxies.Request _request_DB)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Operation", _operation == null ? null : _operation.getMendixObject());
			params.put("OperationSnapShot", _operationSnapShot == null ? null : _operationSnapShot.getMendixObject());
			params.put("Request_DB", _request_DB == null ? null : _request_DB.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.CheckOperationFieldsChanged", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void checkOptions(IContext context, process.proxies.TicketRelations _ticketRelations)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TicketRelations", _ticketRelations == null ? null : _ticketRelations.getMendixObject());
			Core.execute(context, "Process.CheckOptions", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean checkProblemFieldsChanged(IContext context, process.proxies.Problem _problem, process.proxies.ProblemSnapShot _problemSnapShot, process.proxies.Request _request_DB)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Problem", _problem == null ? null : _problem.getMendixObject());
			params.put("ProblemSnapShot", _problemSnapShot == null ? null : _problemSnapShot.getMendixObject());
			params.put("Request_DB", _request_DB == null ? null : _request_DB.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.CheckProblemFieldsChanged", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static process.proxies.RelationsSolvedClosedMessage checkRelationsForMessage(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.lang.String result = (java.lang.String)Core.execute(context, "Process.CheckRelationsForMessage", params);
			if (result == null)
				return null;
			return process.proxies.RelationsSolvedClosedMessage.valueOf(result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean checkRequestFieldsChanged(IContext context, process.proxies.Request _request, process.proxies.RequestSnapShot _requestSnapShot, process.proxies.Request _request_DB)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("RequestSnapShot", _requestSnapShot == null ? null : _requestSnapShot.getMendixObject());
			params.put("Request_DB", _request_DB == null ? null : _request_DB.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.CheckRequestFieldsChanged", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * Returns true if empty required Attributes are found for Request
	 */
	public static boolean checkRequiredEmptyDynamicFields(IContext context, process.proxies.RequiredFieldsOn _requirtedFieldsOn_Main, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RequirtedFieldsOn_Main", _requirtedFieldsOn_Main == null ? null : _requirtedFieldsOn_Main.name());
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.CheckRequiredEmptyDynamicFields", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean checkRequiredFieldsSettingRecord(IContext context, process.proxies.RequiredFieldsSetting _requiredFieldsSetting)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RequiredFieldsSetting", _requiredFieldsSetting == null ? null : _requiredFieldsSetting.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.CheckRequiredFieldsSettingRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean checkScriptsFinished(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.CheckScriptsFinished", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean checkServiceRequestFieldsChanged(IContext context, process.proxies.ServiceRequest _serviceRequest, process.proxies.ServiceRequestSnapShot _serviceRequestSnapShot, process.proxies.Request _request_DB)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ServiceRequest", _serviceRequest == null ? null : _serviceRequest.getMendixObject());
			params.put("ServiceRequestSnapShot", _serviceRequestSnapShot == null ? null : _serviceRequestSnapShot.getMendixObject());
			params.put("Request_DB", _request_DB == null ? null : _request_DB.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.CheckServiceRequestFieldsChanged", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void checkSpecialTransitions(IContext context, process.proxies.Request _request, statetransition.proxies.Transition _transition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Transition", _transition == null ? null : _transition.getMendixObject());
			Core.execute(context, "Process.CheckSpecialTransitions", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void checkTaskCounters(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Process.CheckTaskCounters", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean checkTaskFieldsChanged(IContext context, process.proxies.Task _task, process.proxies.TaskSnapShot _taskSnapShot, process.proxies.Request _request_DB)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			params.put("TaskSnapShot", _taskSnapShot == null ? null : _taskSnapShot.getMendixObject());
			params.put("Request_DB", _request_DB == null ? null : _request_DB.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.CheckTaskFieldsChanged", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void cI_SetAspect(IContext context, process.proxies.Request _request, boolean _useParent, java.lang.Long _contractCount, slm.proxies.Contract_Type _contractType, process.proxies.Request _parent, java.lang.Long _maxDropDownResultSize)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("UseParent", _useParent);
			params.put("ContractCount", _contractCount);
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("Parent", _parent == null ? null : _parent.getMendixObject());
			params.put("MaxDropDownResultSize", _maxDropDownResultSize);
			Core.execute(context, "Process.CI_SetAspect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<cmdb.proxies.ConfigurationItem> cIList_All_EntityAccess(IContext context, process.proxies.Request _request, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.CIList_All_EntityAccess", params);
			java.util.List<cmdb.proxies.ConfigurationItem> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<cmdb.proxies.ConfigurationItem>();
				for (IMendixObject obj : objs)
					result.add(cmdb.proxies.ConfigurationItem.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long cIList_Count(IContext context, process.proxies.Request _request, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			return (java.lang.Long)Core.execute(context, "Process.CIList_Count", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<cmdb.proxies.ConfigurationItem> cIList_Determined_All_EntityAccess(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.CIList_Determined_All_EntityAccess", params);
			java.util.List<cmdb.proxies.ConfigurationItem> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<cmdb.proxies.ConfigurationItem>();
				for (IMendixObject obj : objs)
					result.add(cmdb.proxies.ConfigurationItem.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static cmdb.proxies.ConfigurationItem cIList_First(IContext context, process.proxies.Request _request, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.CIList_First", params);
			return result == null ? null : cmdb.proxies.ConfigurationItem.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<cmdb.proxies.ConfigurationItem> cIList_OLA_All_EntityAccess(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.CIList_OLA_All_EntityAccess", params);
			java.util.List<cmdb.proxies.ConfigurationItem> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<cmdb.proxies.ConfigurationItem>();
				for (IMendixObject obj : objs)
					result.add(cmdb.proxies.ConfigurationItem.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<cmdb.proxies.ConfigurationItem> cIList_OLA_All_PopUp(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.CIList_OLA_All_PopUp", params);
			java.util.List<cmdb.proxies.ConfigurationItem> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<cmdb.proxies.ConfigurationItem>();
				for (IMendixObject obj : objs)
					result.add(cmdb.proxies.ConfigurationItem.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean cIList_ParentValid(IContext context, process.proxies.Request _request, process.proxies.Request _parentRequest, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ParentRequest", _parentRequest == null ? null : _parentRequest.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			return (java.lang.Boolean)Core.execute(context, "Process.CIList_ParentValid", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<cmdb.proxies.ConfigurationItem> cIList_SLA_All_EntityAccess(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.CIList_SLA_All_EntityAccess", params);
			java.util.List<cmdb.proxies.ConfigurationItem> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<cmdb.proxies.ConfigurationItem>();
				for (IMendixObject obj : objs)
					result.add(cmdb.proxies.ConfigurationItem.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<cmdb.proxies.ConfigurationItem> cIList_SLA_All_PopUp(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.CIList_SLA_All_PopUp", params);
			java.util.List<cmdb.proxies.ConfigurationItem> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<cmdb.proxies.ConfigurationItem>();
				for (IMendixObject obj : objs)
					result.add(cmdb.proxies.ConfigurationItem.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void cleanup_Request_Async_Functions(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Process.Cleanup_Request_Async_Functions", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void cleanup_Request_Events(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Process.Cleanup_Request_Events", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void clear_KnowledgeSearch(IContext context, mendix.proxies.KnowledgeSearch _knowledgeSearch)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("KnowledgeSearch", _knowledgeSearch == null ? null : _knowledgeSearch.getMendixObject());
			Core.execute(context, "Process.Clear_KnowledgeSearch", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void clearAspectFields_OLA(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.ClearAspectFields_OLA", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void clearEmptyRequests(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Process.ClearEmptyRequests", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void clearIUP(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.ClearIUP", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void clearIUPOla(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.ClearIUPOla", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void clearSearchField(IContext context, process.proxies.TicketRelations _ticketRelations)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TicketRelations", _ticketRelations == null ? null : _ticketRelations.getMendixObject());
			Core.execute(context, "Process.clearSearchField", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 912253/216117: ICT Service Request >> Create as Closed Request
	 */
	public static boolean closed_Ticket_Check_Closure_Required_Fields(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Closed_Ticket_Check_Closure_Required_Fields", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 3417
	 * Retrieve Request_DB used for SLM Aspect Audit historic fields.
	 * 
	 * #5843
	 * SLMAspectAudit was created 2 times on reject.
	 */
	public static void closeOrReOpenSLMAudit(IContext context, statetransition.proxies.Phase _fromPhase, statetransition.proxies.Phase _toPhase, process.proxies.Request _request, statetransition.proxies.Transition _transition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FromPhase", _fromPhase == null ? null : _fromPhase.getMendixObject());
			params.put("ToPhase", _toPhase == null ? null : _toPhase.getMendixObject());
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Transition", _transition == null ? null : _transition.getMendixObject());
			Core.execute(context, "Process.CloseOrReOpenSLMAudit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void closeRequestAttachmentDialog(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.CloseRequestAttachmentDialog", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 1125476 - Fix commit sequence in order to set release date on request
	 */
	public static void commit_ScreenBlock(IContext context, process.proxies.Request _request, process.proxies.Request _destination)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Destination", _destination == null ? null : _destination.getMendixObject());
			Core.execute(context, "Process.Commit_ScreenBlock", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void commit_ScreenBlock_Task(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Commit_ScreenBlock_Task", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void commitRequestScreenBlocks(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.commitRequestScreenBlocks", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void contract_SetAspect(IContext context, process.proxies.Request _request, slm.proxies.Contract_Type _contractType, java.lang.Long _maxDropDownResultSize)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("MaxDropDownResultSize", _maxDropDownResultSize);
			Core.execute(context, "Process.Contract_SetAspect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Contract> contractList_All_EntityAccess(IContext context, process.proxies.Request _request, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.ContractList_All_EntityAccess", params);
			java.util.List<slm.proxies.Contract> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Contract>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Contract.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long contractList_Count(IContext context, process.proxies.Request _request, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			return (java.lang.Long)Core.execute(context, "Process.ContractList_Count", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static slm.proxies.Contract contractList_First(IContext context, process.proxies.Request _request, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.ContractList_First", params);
			return result == null ? null : slm.proxies.Contract.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Contract> contractList_OLA_All_EntityAccess(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.ContractList_OLA_All_EntityAccess", params);
			java.util.List<slm.proxies.Contract> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Contract>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Contract.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Contract> contractList_OLA_All_PopUp(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.ContractList_OLA_All_PopUp", params);
			java.util.List<slm.proxies.Contract> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Contract>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Contract.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Contract> contractList_SLA_All_EntityAccess(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.ContractList_SLA_All_EntityAccess", params);
			java.util.List<slm.proxies.Contract> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Contract>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Contract.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Contract> contractList_SLA_All_PopUp(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.ContractList_SLA_All_PopUp", params);
			java.util.List<slm.proxies.Contract> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Contract>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Contract.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyAllAttachments(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			Core.execute(context, "Process.CopyAllAttachments", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyClosureInformationFromTask(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			Core.execute(context, "Process.CopyClosureInformationFromTask", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyDynamicAttributesGroup(IContext context, process.proxies.DynamicAttributeGroup _dynamicAttributesGroup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicAttributesGroup", _dynamicAttributesGroup == null ? null : _dynamicAttributesGroup.getMendixObject());
			Core.execute(context, "Process.CopyDynamicAttributesGroup", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyEmailAttachmentsToRequest(IContext context, java.util.List<emailplus.proxies.MessageAttachment> _messageAttachmentList, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_messageAttachmentList = null;
			if (_messageAttachmentList != null)
			{
				listparam_messageAttachmentList = new java.util.ArrayList<IMendixObject>();
				for (emailplus.proxies.MessageAttachment obj : _messageAttachmentList)
					listparam_messageAttachmentList.add(obj.getMendixObject());
			}
			params.put("MessageAttachmentList", listparam_messageAttachmentList);
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.CopyEmailAttachmentsToRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyParentDescription(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			Core.execute(context, "Process.CopyParentDescription", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyPausedReason(IContext context, process.proxies.PausedReasonDefinition _pausedReason)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PausedReason", _pausedReason == null ? null : _pausedReason.getMendixObject());
			Core.execute(context, "Process.CopyPausedReason", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyPausedReasonList(IContext context, java.util.List<process.proxies.PausedReasonDefinition> _pausedReasonList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_pausedReasonList = null;
			if (_pausedReasonList != null)
			{
				listparam_pausedReasonList = new java.util.ArrayList<IMendixObject>();
				for (process.proxies.PausedReasonDefinition obj : _pausedReasonList)
					listparam_pausedReasonList.add(obj.getMendixObject());
			}
			params.put("PausedReasonList", listparam_pausedReasonList);
			Core.execute(context, "Process.CopyPausedReasonList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyRequestAndMoveRelated(IContext context, process.proxies.Request _request, process.proxies.Request _destinationRequest, slm.proxies.ProcessType _processType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("DestinationRequest", _destinationRequest == null ? null : _destinationRequest.getMendixObject());
			params.put("ProcessType", _processType == null ? null : _processType.name());
			Core.execute(context, "Process.CopyRequestAndMoveRelated", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyRequestFromOverviewRequest(IContext context, process.proxies.OverviewRequest _overviewRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OverviewRequest", _overviewRequest == null ? null : _overviewRequest.getMendixObject());
			Core.execute(context, "Process.CopyRequestFromOverviewRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyRequestFromRequest(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.CopyRequestFromRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyRequiredFieldsSetting(IContext context, process.proxies.RequiredFieldsSetting _requiredFieldsSetting)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RequiredFieldsSetting", _requiredFieldsSetting == null ? null : _requiredFieldsSetting.getMendixObject());
			Core.execute(context, "Process.CopyRequiredFieldsSetting", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyRequiredFieldsSettingList(IContext context, java.util.List<process.proxies.RequiredFieldsSetting> _requiredFieldSettingList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_requiredFieldSettingList = null;
			if (_requiredFieldSettingList != null)
			{
				listparam_requiredFieldSettingList = new java.util.ArrayList<IMendixObject>();
				for (process.proxies.RequiredFieldsSetting obj : _requiredFieldSettingList)
					listparam_requiredFieldSettingList.add(obj.getMendixObject());
			}
			params.put("RequiredFieldSettingList", listparam_requiredFieldSettingList);
			Core.execute(context, "Process.CopyRequiredFieldsSettingList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long countNumberOfOpenTasks(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Long)Core.execute(context, "Process.CountNumberOfOpenTasks", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long countNumberOfTasks(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Long)Core.execute(context, "Process.CountNumberOfTasks", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<nap.proxies.BusinessGroup> create_BusinessgroupListForNotify(IContext context, process.proxies.Request _request, java.util.List<nap.proxies.BusinessGroup> _customBusinessGroupList, boolean _sendToAssignedGroup, boolean _sendToTicketAssignedGroup, boolean _sendToParentAssignedGroup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_customBusinessGroupList = null;
			if (_customBusinessGroupList != null)
			{
				listparam_customBusinessGroupList = new java.util.ArrayList<IMendixObject>();
				for (nap.proxies.BusinessGroup obj : _customBusinessGroupList)
					listparam_customBusinessGroupList.add(obj.getMendixObject());
			}
			params.put("CustomBusinessGroupList", listparam_customBusinessGroupList);
			params.put("SendToAssignedGroup", _sendToAssignedGroup);
			params.put("SendToTicketAssignedGroup", _sendToTicketAssignedGroup);
			params.put("SendToParentAssignedGroup", _sendToParentAssignedGroup);
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.Create_BusinessgroupListForNotify", params);
			java.util.List<nap.proxies.BusinessGroup> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<nap.proxies.BusinessGroup>();
				for (IMendixObject obj : objs)
					result.add(nap.proxies.BusinessGroup.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 3547
	 * ExecutedByUser. This is the user that executed this function.
	 * 
	 * 3547
	 * Changed from:
	 * ($SendToTicketAssignee or $SendToAssignee) and $Request/Process.Request_AssignedPerson != empty
	 * 
	 * To:
	 * (($SendToTicketAssignee and $Request/RequestType_Enum = Process.Task_Ticket_Request.Ticket) or $SendToAssignee) and $Request/Process.Request_AssignedPerson != empty
	 * 
	 * We dont want to add the task assignee.
	 */
	public static java.util.List<nap.proxies.Person> create_PersonListForNotify(IContext context, boolean _sendToAssignee, boolean _sendToParentAssignee, boolean _sendToTicketAssignee, boolean _sendToPerson, boolean _sendToPersonCaller, process.proxies.Request _request, java.util.List<nap.proxies.Person> _customPersonList, boolean _doNotSendToSelf, system.proxies.User _executedByUser)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SendToAssignee", _sendToAssignee);
			params.put("SendToParentAssignee", _sendToParentAssignee);
			params.put("SendToTicketAssignee", _sendToTicketAssignee);
			params.put("SendToPerson", _sendToPerson);
			params.put("SendToPersonCaller", _sendToPersonCaller);
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_customPersonList = null;
			if (_customPersonList != null)
			{
				listparam_customPersonList = new java.util.ArrayList<IMendixObject>();
				for (nap.proxies.Person obj : _customPersonList)
					listparam_customPersonList.add(obj.getMendixObject());
			}
			params.put("CustomPersonList", listparam_customPersonList);
			params.put("DoNotSendToSelf", _doNotSendToSelf);
			params.put("ExecutedByUser", _executedByUser == null ? null : _executedByUser.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.Create_PersonListForNotify", params);
			java.util.List<nap.proxies.Person> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<nap.proxies.Person>();
				for (IMendixObject obj : objs)
					result.add(nap.proxies.Person.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void createActivityStreamRecord(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.CreateActivityStreamRecord", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean createAndOpenQueuedRequest(IContext context, boolean _open_Portal, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Open_Portal", _open_Portal);
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.CreateAndOpenQueuedRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean createAndOpenTicket(IContext context, boolean _open_Portal, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Open_Portal", _open_Portal);
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.CreateAndOpenTicket", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * #5882 - Check for existance of related object before committing changes
	 */
	public static process.proxies.Request createAndReturnSpecializedTicket(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.CreateAndReturnSpecializedTicket", params);
			return result == null ? null : process.proxies.Request.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean createBillingSheetAndTotalCost(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.CreateBillingSheetAndTotalCost", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void createDelivery(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.CreateDelivery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String createInfoTextReminder(IContext context, process.proxies.Reminder _reminder)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Reminder", _reminder == null ? null : _reminder.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.CreateInfoTextReminder", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void createNewAttribute(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.CreateNewAttribute", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean createNewExternalReferenceRequestEvent(IContext context, process.proxies.ExternalReference _externalReference)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ExternalReference", _externalReference == null ? null : _externalReference.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.CreateNewExternalReferenceRequestEvent", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void createNewScriptForRequest(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.CreateNewScriptForRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void createNewScriptForRequestFromTrigger(IContext context, process.proxies.Request _request, scripting.proxies.Script _script)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Script", _script == null ? null : _script.getMendixObject());
			Core.execute(context, "Process.CreateNewScriptForRequestFromTrigger", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 4018
	 * Suppress notifcations when request is paused
	 */
	public static void createProcessNotifications_ForRequest(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.CreateProcessNotifications_ForRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void createProcessNotifications_ScheduledEvent(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Process.CreateProcessNotifications_ScheduledEvent", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean createQueuedRequest(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.CreateQueuedRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void createRelatedRequest(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.CreateRelatedRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void createRequestFromIncomingMessage(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			Core.execute(context, "Process.CreateRequestFromIncomingMessage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 3417
	 * Added Request_DB used for SLM Aspect Audit historic fields.
	 * 
	 * CC3863: Added fields NewSLAEndTime and NewSLAResponseTime
	 * 
	 * [1172365] - Enable changing the Start time/create time after ticket creation
	 */
	public static process.proxies.RequestSLMAspectAudit createSLMAuditRecord(IContext context, boolean _skipSplit, process.proxies.Request _request, process.proxies.Request _request_DB)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SkipSplit", _skipSplit);
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Request_DB", _request_DB == null ? null : _request_DB.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.CreateSLMAuditRecord", params);
			return result == null ? null : process.proxies.RequestSLMAspectAudit.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 3594
	 * Request_Person and Request_Person_Caller is set to make it visible on StartPanel.
	 */
	public static void createTask(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.CreateTask", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 3594
	 * Request_Person and Request_Person_Caller is set to make it visible on StartPanel.
	 */
	public static void createTaskFromTask(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			Core.execute(context, "Process.CreateTaskFromTask", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * #5882 - Check for existance of related object before committing changes
	 */
	public static boolean createTicket(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.CreateTicket", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * Ticket 3638:
	 * Op verzoek R&D dit aangepast naar true voor Standaard.
	 * Voor achtergrond zie ticket 3638
	 */
	public static process.proxies.Request createTicketFromExternal(IContext context, process.proxies.Request _request, boolean _allowEmptyPerson, boolean _allowEmptyLocation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("AllowEmptyPerson", _allowEmptyPerson);
			params.put("AllowEmptyLocation", _allowEmptyLocation);
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.CreateTicketFromExternal", params);
			return result == null ? null : process.proxies.Request.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String createWorkflowName(IContext context, workflowexecution.proxies.RequestWorkflowInstance _requestWorkflowInstance)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RequestWorkflowInstance", _requestWorkflowInstance == null ? null : _requestWorkflowInstance.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.CreateWorkflowName", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deleteAffectedCI(IContext context, java.util.List<cmdb.proxies.AffectedCI> _affectedCI, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_affectedCI = null;
			if (_affectedCI != null)
			{
				listparam_affectedCI = new java.util.ArrayList<IMendixObject>();
				for (cmdb.proxies.AffectedCI obj : _affectedCI)
					listparam_affectedCI.add(obj.getMendixObject());
			}
			params.put("AffectedCI", listparam_affectedCI);
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.DeleteAffectedCI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deleteAllNotifications_DEBUG(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Process.DeleteAllNotifications_DEBUG", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deleteDelivery(IContext context, servicecatalogue.proxies.Delivery _delivery)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Delivery", _delivery == null ? null : _delivery.getMendixObject());
			Core.execute(context, "Process.DeleteDelivery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deleteDummyViewRecords(IContext context, java.util.List<process.proxies.Dummy_Matching_View> _dummy_View)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_dummy_View = null;
			if (_dummy_View != null)
			{
				listparam_dummy_View = new java.util.ArrayList<IMendixObject>();
				for (process.proxies.Dummy_Matching_View obj : _dummy_View)
					listparam_dummy_View.add(obj.getMendixObject());
			}
			params.put("Dummy_View", listparam_dummy_View);
			Core.execute(context, "Process.DeleteDummyViewRecords", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deleteDynamicAttribute(IContext context, process.proxies.DynamicAtrribute _dynamicAtrribute)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicAtrribute", _dynamicAtrribute == null ? null : _dynamicAtrribute.getMendixObject());
			Core.execute(context, "Process.DeleteDynamicAttribute", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deleteExternalReference(IContext context, process.proxies.ExternalReference _externalReference, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ExternalReference", _externalReference == null ? null : _externalReference.getMendixObject());
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.DeleteExternalReference", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deleteRequest(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.deleteRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deleteRequestDelayed(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.deleteRequestDelayed", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deleteRequestExternalReferences(IContext context, process.proxies.Request _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Process.DeleteRequestExternalReferences", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [Story 825317] Removed refresh of overview object; Added retrieves to fetch the other Request of the relation, and refresh these;
	 * 1020244: configure whether manual deletion of ticket relations is allowed
	 */
	public static void deleteRequestRelation_OverviewRequest(IContext context, process.proxies.TicketRelations _ticketRelations, process.proxies.OverviewRequest _overviewRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TicketRelations", _ticketRelations == null ? null : _ticketRelations.getMendixObject());
			params.put("OverviewRequest", _overviewRequest == null ? null : _overviewRequest.getMendixObject());
			Core.execute(context, "Process.DeleteRequestRelation_OverviewRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deleteRequestReminders(IContext context, process.proxies.Reminder _reminder)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Reminder", _reminder == null ? null : _reminder.getMendixObject());
			Core.execute(context, "Process.DeleteRequestReminders", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deleteSingleAffectedCI(IContext context, cmdb.proxies.AffectedCI _affectedCI, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AffectedCI", _affectedCI == null ? null : _affectedCI.getMendixObject());
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.DeleteSingleAffectedCI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deliveringOrganisation_SetAspect(IContext context, process.proxies.Request _request, java.lang.Long _contractCount, slm.proxies.Contract_Type _contractType, java.lang.Long _maxDropDownResultSize)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractCount", _contractCount);
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("MaxDropDownResultSize", _maxDropDownResultSize);
			Core.execute(context, "Process.DeliveringOrganisation_SetAspect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 5907 - Filtering op basis van Active / Inactive werkt niet
	 */
	public static java.util.List<nap.proxies.Organisation> deliveringOrganisationList_All_EntityAccess(IContext context, process.proxies.Request _request, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.DeliveringOrganisationList_All_EntityAccess", params);
			java.util.List<nap.proxies.Organisation> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<nap.proxies.Organisation>();
				for (IMendixObject obj : objs)
					result.add(nap.proxies.Organisation.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long deliveringOrganisationList_Count(IContext context, process.proxies.Request _request, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			return (java.lang.Long)Core.execute(context, "Process.DeliveringOrganisationList_Count", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static nap.proxies.Organisation deliveringOrganisationList_First(IContext context, process.proxies.Request _request, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.DeliveringOrganisationList_First", params);
			return result == null ? null : nap.proxies.Organisation.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<nap.proxies.Organisation> deliveringOrganisationList_OLA_All_EntityAccess(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.DeliveringOrganisationList_OLA_All_EntityAccess", params);
			java.util.List<nap.proxies.Organisation> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<nap.proxies.Organisation>();
				for (IMendixObject obj : objs)
					result.add(nap.proxies.Organisation.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<nap.proxies.Organisation> deliveringOrganisationList_OLA_All_PopUp(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.DeliveringOrganisationList_OLA_All_PopUp", params);
			java.util.List<nap.proxies.Organisation> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<nap.proxies.Organisation>();
				for (IMendixObject obj : objs)
					result.add(nap.proxies.Organisation.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<nap.proxies.Organisation> deliveringOrganisationList_SLA_All_EntityAccess(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.DeliveringOrganisationList_SLA_All_EntityAccess", params);
			java.util.List<nap.proxies.Organisation> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<nap.proxies.Organisation>();
				for (IMendixObject obj : objs)
					result.add(nap.proxies.Organisation.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<nap.proxies.Organisation> deliveringOrganisationList_SLA_All_PopUp(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.DeliveringOrganisationList_SLA_All_PopUp", params);
			java.util.List<nap.proxies.Organisation> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<nap.proxies.Organisation>();
				for (IMendixObject obj : objs)
					result.add(nap.proxies.Organisation.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean determineTaskTicketEnum(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.DetermineTaskTicketEnum", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean disallowModifationsForInterfaceReferences(IContext context, process.proxies.ExternalReference _externalReference)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ExternalReference", _externalReference == null ? null : _externalReference.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.DisallowModifationsForInterfaceReferences", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void downloadAttachment(IContext context, process.proxies.RequestAttachment _requestAttachment)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RequestAttachment", _requestAttachment == null ? null : _requestAttachment.getMendixObject());
			Core.execute(context, "Process.DownloadAttachment", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void downloadAttachment_Message(IContext context, emailplus.proxies.MessageAttachment _messageAttachment)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MessageAttachment", _messageAttachment == null ? null : _messageAttachment.getMendixObject());
			Core.execute(context, "Process.DownloadAttachment_Message", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void downloadWorkInstruction(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.DownloadWorkInstruction", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * #3423
	 * Changed Retrieve of organisations. Must be active and type is SLA.
	 */
	public static java.util.List<nap.proxies.Organisation> dS_CallerOrganisation(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.DS_CallerOrganisation", params);
			java.util.List<nap.proxies.Organisation> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<nap.proxies.Organisation>();
				for (IMendixObject obj : objs)
					result.add(nap.proxies.Organisation.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<categories.proxies.Category> dS_GetCategoryListClosure_Childs(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.DS_GetCategoryListClosure_Childs", params);
			java.util.List<categories.proxies.Category> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<categories.proxies.Category>();
				for (IMendixObject obj : objs)
					result.add(categories.proxies.Category.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<categories.proxies.Category> dS_GetCategoryListClosure_Root(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.DS_GetCategoryListClosure_Root", params);
			java.util.List<categories.proxies.Category> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<categories.proxies.Category>();
				for (IMendixObject obj : objs)
					result.add(categories.proxies.Category.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<categories.proxies.Category> dS_GetCategoryListOpening_Childs(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.DS_GetCategoryListOpening_Childs", params);
			java.util.List<categories.proxies.Category> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<categories.proxies.Category>();
				for (IMendixObject obj : objs)
					result.add(categories.proxies.Category.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<categories.proxies.Category> dS_GetCategoryListOpening_Root(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.DS_GetCategoryListOpening_Root", params);
			java.util.List<categories.proxies.Category> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<categories.proxies.Category>();
				for (IMendixObject obj : objs)
					result.add(categories.proxies.Category.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<nap.proxies.Organisation> dS_ReceivingOrganisation(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.DS_ReceivingOrganisation", params);
			java.util.List<nap.proxies.Organisation> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<nap.proxies.Organisation>();
				for (IMendixObject obj : objs)
					result.add(nap.proxies.Organisation.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<questionnairev2.proxies.DefaultAnswerSet> dS_RequestQuestionnaireTemplateDefaultAnswerSets(IContext context, questionnairev2.proxies.TemplateSelectHelper _templateSelectHelper)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TemplateSelectHelper", _templateSelectHelper == null ? null : _templateSelectHelper.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.DS_RequestQuestionnaireTemplateDefaultAnswerSets", params);
			java.util.List<questionnairev2.proxies.DefaultAnswerSet> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<questionnairev2.proxies.DefaultAnswerSet>();
				for (IMendixObject obj : objs)
					result.add(questionnairev2.proxies.DefaultAnswerSet.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 914963
	 * This microflow is used to display the CI selected in the popup SLACI_Select. Because of a bug the reference selector can retrieve all created ConfigurationItem objects. This microflow will prevent this behavior. 
	 */
	public static java.util.List<cmdb.proxies.ConfigurationItem> dS_ShowCI3(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.DS_ShowCI3", params);
			java.util.List<cmdb.proxies.ConfigurationItem> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<cmdb.proxies.ConfigurationItem>();
				for (IMendixObject obj : objs)
					result.add(cmdb.proxies.ConfigurationItem.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 914963
	 * This microflow is used to display the CI selected in the popup SLACI_Select. Because of a bug the reference selector can retrieve all created ConfigurationItem objects. This microflow will prevent this behavior. 
	 */
	public static java.util.List<cmdb.proxies.ConfigurationItem> dS_ShowCI3_TemplateRequest(IContext context, scheduling.proxies.TemplateRequest _templateRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TemplateRequest", _templateRequest == null ? null : _templateRequest.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.DS_ShowCI3_TemplateRequest", params);
			java.util.List<cmdb.proxies.ConfigurationItem> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<cmdb.proxies.ConfigurationItem>();
				for (IMendixObject obj : objs)
					result.add(cmdb.proxies.ConfigurationItem.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 906074/214619: Relation description starts with the ticket the relation is opened from.  
	 */
	public static process.proxies.TicketRelationDescription dS_TicketRelationDescription(IContext context, process.proxies.TicketRelations _ticketRelations, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TicketRelations", _ticketRelations == null ? null : _ticketRelations.getMendixObject());
			params.put("Request", _request == null ? null : _request.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.DS_TicketRelationDescription", params);
			return result == null ? null : process.proxies.TicketRelationDescription.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static process.proxies.ProgressViewPreferences dSo_GetCreateProgressViewPreferences(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.DSo_GetCreateProgressViewPreferences", params);
			return result == null ? null : process.proxies.ProgressViewPreferences.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static process.proxies.ProgressViewPreferences dSo_GetProgressViewPreferences(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.DSo_GetProgressViewPreferences", params);
			return result == null ? null : process.proxies.ProgressViewPreferences.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.SPAttributeValue> dSo_SPAttributeValues(IContext context, slm.proxies.SPAttribute _sPAttribute)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SPAttribute", _sPAttribute == null ? null : _sPAttribute.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.DSo_SPAttributeValues", params);
			java.util.List<slm.proxies.SPAttributeValue> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.SPAttributeValue>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.SPAttributeValue.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean dummyMatchingView_Field_Check_ReadWrite_Permissions(IContext context, process.proxies.Dummy_Matching_View _dummyMatchingView)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DummyMatchingView", _dummyMatchingView == null ? null : _dummyMatchingView.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.DummyMatchingView_Field_Check_ReadWrite_Permissions", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean edit_Aspects(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Edit_Aspects", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void editAffectCI(IContext context, java.util.List<cmdb.proxies.AffectedCI> _affectedCIList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_affectedCIList = null;
			if (_affectedCIList != null)
			{
				listparam_affectedCIList = new java.util.ArrayList<IMendixObject>();
				for (cmdb.proxies.AffectedCI obj : _affectedCIList)
					listparam_affectedCIList.add(obj.getMendixObject());
			}
			params.put("AffectedCIList", listparam_affectedCIList);
			Core.execute(context, "Process.EditAffectCI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void editBillingInfo(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.EditBillingInfo", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void editDynamicAttribute(IContext context, process.proxies.DynamicAtrribute _dynamicAtrribute)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicAtrribute", _dynamicAtrribute == null ? null : _dynamicAtrribute.getMendixObject());
			Core.execute(context, "Process.EditDynamicAttribute", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void editSingleAffectCI(IContext context, cmdb.proxies.AffectedCI _affectedCI)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AffectedCI", _affectedCI == null ? null : _affectedCI.getMendixObject());
			Core.execute(context, "Process.EditSingleAffectCI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void editSingleReservedCI(IContext context, cmdb.proxies.ConfigurationItem _configurationItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ConfigurationItem", _configurationItem == null ? null : _configurationItem.getMendixObject());
			Core.execute(context, "Process.EditSingleReservedCI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean editSlaEndTime(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.EditSlaEndTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void editTicketRelations(IContext context, process.proxies.Request _request, process.proxies.TicketRelations _ticketRelations)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("TicketRelations", _ticketRelations == null ? null : _ticketRelations.getMendixObject());
			Core.execute(context, "Process.EditTicketRelations", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean emptyImpactPossible(IContext context, process.proxies.Request _request, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			return (java.lang.Boolean)Core.execute(context, "Process.EmptyImpactPossible", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean emptyPriorityPossible(IContext context, process.proxies.Request _request, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			return (java.lang.Boolean)Core.execute(context, "Process.EmptyPriorityPossible", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean emptyUrgencyPossible(IContext context, process.proxies.Request _request, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			return (java.lang.Boolean)Core.execute(context, "Process.EmptyUrgencyPossible", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void enableProcessNotifications(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.EnableProcessNotifications", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void executeLuceneSearch(IContext context, advancedsearch.proxies.SearchParams _searchParams)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SearchParams", _searchParams == null ? null : _searchParams.getMendixObject());
			Core.execute(context, "Process.ExecuteLuceneSearch", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String field_ChangedByMF(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.Field_ChangedByMF", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String field_CreatedByMF(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.Field_CreatedByMF", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static process.proxies.PausedReasonType field_GetPausedReasonType(IContext context, process.proxies.PausedTime _pausedTime)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PausedTime", _pausedTime == null ? null : _pausedTime.getMendixObject());
			java.lang.String result = (java.lang.String)Core.execute(context, "Process.Field_GetPausedReasonType", params);
			if (result == null)
				return null;
			return process.proxies.PausedReasonType.valueOf(result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean fieldUseDynamicAttributes(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.FieldUseDynamicAttributes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean fill_AttachmentName_RequestEvent(IContext context, process.proxies.RequestAttachment _requestAttachment)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RequestAttachment", _requestAttachment == null ? null : _requestAttachment.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Fill_AttachmentName_RequestEvent", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void fill_IUP_combination_by_Impact_Urgency_Priority(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Fill_IUP_combination_by_Impact_Urgency_Priority", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String fillNotificationText(IContext context, process.proxies.Notification _notification)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Notification", _notification == null ? null : _notification.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.FillNotificationText", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<process.proxies.OverviewRequest> fillTableSearchResult(IContext context, queryrequests.proxies.SearchResults _searchResults, process.proxies.TicketRelations _ticketRelations)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SearchResults", _searchResults == null ? null : _searchResults.getMendixObject());
			params.put("TicketRelations", _ticketRelations == null ? null : _ticketRelations.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.FillTableSearchResult", params);
			java.util.List<process.proxies.OverviewRequest> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<process.proxies.OverviewRequest>();
				for (IMendixObject obj : objs)
					result.add(process.proxies.OverviewRequest.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void find_Contract_Organisation_Change_SLA(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Find_Contract_Organisation_Change_SLA", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void find_Contract_Organisation_Change_SLA_New(IContext context, process.proxies.Request _inputRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputRequest", _inputRequest == null ? null : _inputRequest.getMendixObject());
			Core.execute(context, "Process.Find_Contract_Organisation_Change_SLA_New", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [4070]
	 * Sprintr: 623790 (Copy original message)
	 */
	public static void forwardMessage(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			Core.execute(context, "Process.ForwardMessage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean foundContract(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.FoundContract", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void generate_All_Notes_ForEmail(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Generate_All_Notes_ForEmail", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void generate_Notes_Request_ForPDF(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Generate_Notes_Request_ForPDF", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void generate_Notes_Request_ForPDF_Portal(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Generate_Notes_Request_ForPDF_Portal", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void generate_PDF_Request(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Generate_PDF_Request", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * #214726 
	 * Changed input from Process.OverviewRequest to Process.Request and removed retrieve action of Process.Request over association with OverviewRequest
	 */
	public static void generate_PDF_Request_Overview(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Generate_PDF_Request_Overview", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * #214726 
	 * Changed input from Process.OverviewRequest to Process.Request and removed retrieve action of Process.Request over association with OverviewRequest
	 */
	public static void generate_PDF_Request_Overview_Portal(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Generate_PDF_Request_Overview_Portal", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * LVNL: changed in order to connect to new module 'QuestionnaireV2' (SprintR 573371)
	 */
	public static void generateAnalysis(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.GenerateAnalysis", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void generateAnalysisFromTrigger(IContext context, process.proxies.Request _request, requestanalysis.proxies.RequestAnalysis _analysis)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Analysis", _analysis == null ? null : _analysis.getMendixObject());
			Core.execute(context, "Process.GenerateAnalysisFromTrigger", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean generateTaskID(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.GenerateTaskID", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean generateTicketID(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.GenerateTicketID", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<statetransition.proxies.Transition> generic_ActionMenu_Process(IContext context, statetransition.proxies.State _fromStatus, statetransition.proxies.Phase _fromPhase, nap.proxies.BusinessGroup _assignedGroup, boolean _showHiddenTransitions, process.proxies.Request _request, java.util.List<statetransition.proxies.Transition> _transitionList_Subset)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FromStatus", _fromStatus == null ? null : _fromStatus.getMendixObject());
			params.put("FromPhase", _fromPhase == null ? null : _fromPhase.getMendixObject());
			params.put("AssignedGroup", _assignedGroup == null ? null : _assignedGroup.getMendixObject());
			params.put("ShowHiddenTransitions", _showHiddenTransitions);
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_transitionList_Subset = null;
			if (_transitionList_Subset != null)
			{
				listparam_transitionList_Subset = new java.util.ArrayList<IMendixObject>();
				for (statetransition.proxies.Transition obj : _transitionList_Subset)
					listparam_transitionList_Subset.add(obj.getMendixObject());
			}
			params.put("TransitionList_Subset", listparam_transitionList_Subset);
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.Generic_ActionMenu_Process", params);
			java.util.List<statetransition.proxies.Transition> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<statetransition.proxies.Transition>();
				for (IMendixObject obj : objs)
					result.add(statetransition.proxies.Transition.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String get_All_Notes_CurrentRequest(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.Get_All_Notes_CurrentRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.SPAllowedRelation> get_AllowedRelations(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.Get_AllowedRelations", params);
			java.util.List<slm.proxies.SPAllowedRelation> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.SPAllowedRelation>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.SPAllowedRelation.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void get_Commitment(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Get_Commitment", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void get_Commitment_WithContract(IContext context, process.proxies.Request _request, slm.proxies.Contract _contract)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Contract", _contract == null ? null : _contract.getMendixObject());
			Core.execute(context, "Process.Get_Commitment_WithContract", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static interfacerequestupdate.proxies.IncomingRequestUpdate getActualRequestMessage(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.GetActualRequestMessage", params);
			return result == null ? null : interfacerequestupdate.proxies.IncomingRequestUpdate.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static cmdb.proxies.AffectedCIState getAffectedCIStateFromConstant(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.lang.String result = (java.lang.String)Core.execute(context, "Process.GetAffectedCIStateFromConstant", params);
			if (result == null)
				return null;
			return cmdb.proxies.AffectedCIState.valueOf(result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getAnalyseLink(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.GetAnalyseLink", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getApprovalLink(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.GetApprovalLink", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static nap.proxies.Person getAssignedPersonFromActualRequestMessage(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.GetAssignedPersonFromActualRequestMessage", params);
			return result == null ? null : nap.proxies.Person.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<nap.proxies.Person> getAssignedPersonList(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.GetAssignedPersonList", params);
			java.util.List<nap.proxies.Person> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<nap.proxies.Person>();
				for (IMendixObject obj : objs)
					result.add(nap.proxies.Person.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getAttachmentLink(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.GetAttachmentLink", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<process.proxies.RequestAttachment> getAttachmentsOfRequestRecursive(IContext context, process.proxies.Request _request, java.util.List<process.proxies.RequestAttachment> _incomingRequestAttachmentList, java.lang.Long _maxDepth)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_incomingRequestAttachmentList = null;
			if (_incomingRequestAttachmentList != null)
			{
				listparam_incomingRequestAttachmentList = new java.util.ArrayList<IMendixObject>();
				for (process.proxies.RequestAttachment obj : _incomingRequestAttachmentList)
					listparam_incomingRequestAttachmentList.add(obj.getMendixObject());
			}
			params.put("IncomingRequestAttachmentList", listparam_incomingRequestAttachmentList);
			params.put("MaxDepth", _maxDepth);
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.GetAttachmentsOfRequestRecursive", params);
			java.util.List<process.proxies.RequestAttachment> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<process.proxies.RequestAttachment>();
				for (IMendixObject obj : objs)
					result.add(process.proxies.RequestAttachment.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getAttributesLink(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.GetAttributesLink", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getAuditLink(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.GetAuditLink", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getButtonBadgeStyle(IContext context, java.lang.String _count)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Count", _count);
			return (java.lang.String)Core.execute(context, "Process.GetButtonBadgeStyle", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static cmdb.proxies.ConfigurationItem getCIByAffectedCI(IContext context, cmdb.proxies.AffectedCI _affectedCI)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AffectedCI", _affectedCI == null ? null : _affectedCI.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.GetCIByAffectedCI", params);
			return result == null ? null : cmdb.proxies.ConfigurationItem.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getCILink(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.GetCILink", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static slm_notifications.proxies.ResolveTimeBy getCommitmentResolveTimeBy(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.lang.String result = (java.lang.String)Core.execute(context, "Process.GetCommitmentResolveTimeBy", params);
			if (result == null)
				return null;
			return slm_notifications.proxies.ResolveTimeBy.valueOf(result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void getCorrelatedCI_SelectedCIs(IContext context, process.proxies.Request _request, java.util.List<cmdb.proxies.AffectedCI> _affectedCI_InputList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_affectedCI_InputList = null;
			if (_affectedCI_InputList != null)
			{
				listparam_affectedCI_InputList = new java.util.ArrayList<IMendixObject>();
				for (cmdb.proxies.AffectedCI obj : _affectedCI_InputList)
					listparam_affectedCI_InputList.add(obj.getMendixObject());
			}
			params.put("AffectedCI_InputList", listparam_affectedCI_InputList);
			Core.execute(context, "Process.GetCorrelatedCI_SelectedCIs", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void getCorrelatedCI_SingleCI(IContext context, process.proxies.Request _request, cmdb.proxies.AffectedCI _affectedCI_InputList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("AffectedCI_InputList", _affectedCI_InputList == null ? null : _affectedCI_InputList.getMendixObject());
			Core.execute(context, "Process.GetCorrelatedCI_SingleCI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static statetransition.proxies.Matrix getDefaultMatrix(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.GetDefaultMatrix", params);
			return result == null ? null : statetransition.proxies.Matrix.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static nap.proxies.BusinessGroup getDeliveringOrganisationFromActualRequestMessage(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.GetDeliveringOrganisationFromActualRequestMessage", params);
			return result == null ? null : nap.proxies.BusinessGroup.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void getDynamicAttributes(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.GetDynamicAttributes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<nap.proxies.LocationLabel> getLocationLabel(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.GetLocationLabel", params);
			java.util.List<nap.proxies.LocationLabel> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<nap.proxies.LocationLabel>();
				for (IMendixObject obj : objs)
					result.add(nap.proxies.LocationLabel.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 3417
	 * Retrieve Request_DB used for SLM Aspect Audit historic fields.
	 */
	public static boolean getMatrix_GetInitialPhase(IContext context, process.proxies.Request _request, interfaceshared.proxies.ProcessingAttempt _eventInitiatingProcessingAttempt, interfaceshared.proxies.ProcessingPart _processingPart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("EventInitiatingProcessingAttempt", _eventInitiatingProcessingAttempt == null ? null : _eventInitiatingProcessingAttempt.getMendixObject());
			params.put("ProcessingPart", _processingPart == null ? null : _processingPart.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.GetMatrix_GetInitialPhase", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<nap.proxies.NotificationSubscription> getNotificationSubscriptionListForRequestEvent(IContext context, process.proxies.RequestEvent _requestEvent, process.proxies.Request _request, emailplus.proxies.MessageSource _messageSource, system.proxies.User _eventUser, boolean _requestAssignedToMe, boolean _directSubTaskRequestAssignedToMe, boolean _anySubtaskRequestAssignedToMe, boolean _requestAssignedToMyGroup, boolean _directSubTaskRequestAssignedToMyGroup, boolean _anySubtaskRequestAssignedToMyGroup, nap.proxies.Person _assignedPerson, nap.proxies.Organisation _assignedGroup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RequestEvent", _requestEvent == null ? null : _requestEvent.getMendixObject());
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("MessageSource", _messageSource == null ? null : _messageSource.name());
			params.put("EventUser", _eventUser == null ? null : _eventUser.getMendixObject());
			params.put("RequestAssignedToMe", _requestAssignedToMe);
			params.put("DirectSubTaskRequestAssignedToMe", _directSubTaskRequestAssignedToMe);
			params.put("AnySubtaskRequestAssignedToMe", _anySubtaskRequestAssignedToMe);
			params.put("RequestAssignedToMyGroup", _requestAssignedToMyGroup);
			params.put("DirectSubTaskRequestAssignedToMyGroup", _directSubTaskRequestAssignedToMyGroup);
			params.put("AnySubtaskRequestAssignedToMyGroup", _anySubtaskRequestAssignedToMyGroup);
			params.put("AssignedPerson", _assignedPerson == null ? null : _assignedPerson.getMendixObject());
			params.put("AssignedGroup", _assignedGroup == null ? null : _assignedGroup.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.GetNotificationSubscriptionListForRequestEvent", params);
			java.util.List<nap.proxies.NotificationSubscription> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<nap.proxies.NotificationSubscription>();
				for (IMendixObject obj : objs)
					result.add(nap.proxies.NotificationSubscription.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static process.proxies.Request getOtherRequest(IContext context, process.proxies.TicketRelations _ticketRelations, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TicketRelations", _ticketRelations == null ? null : _ticketRelations.getMendixObject());
			params.put("Request", _request == null ? null : _request.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.GetOtherRequest", params);
			return result == null ? null : process.proxies.Request.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static process.proxies.OverviewRequest getOverviewRequestForTicketRelation(IContext context, process.proxies.TicketRelations _ticketRelations, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TicketRelations", _ticketRelations == null ? null : _ticketRelations.getMendixObject());
			params.put("Request", _request == null ? null : _request.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.GetOverviewRequestForTicketRelation", params);
			return result == null ? null : process.proxies.OverviewRequest.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * #214726 - Create and relate Snippet to Wrapper
	 */
	public static process.proxies.OverviewRequestSnippet getOverviewRequestSnippet(IContext context, process.proxies.OverviewRequest _overviewRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OverviewRequest", _overviewRequest == null ? null : _overviewRequest.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.GetOverviewRequestSnippet", params);
			return result == null ? null : process.proxies.OverviewRequestSnippet.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [801176] Update for input parameters for calling microflow 'GetDateTimeStringForLanguage':
	 * Additional input 'AsUTC' set to false for all
	 */
	public static java.lang.String getOverviewRequestSnippetString(IContext context, process.proxies.OverviewRequestSnippet _overviewRequestSnippet)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OverviewRequestSnippet", _overviewRequestSnippet == null ? null : _overviewRequestSnippet.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.GetOverviewRequestSnippetString", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<nap.proxies.Person> getPersonListForRequestEvent(IContext context, process.proxies.RequestEvent _requestEvent, process.proxies.Request _request, emailplus.proxies.MessageSource _messageSource, system.proxies.User _eventUser, boolean _requestAssignedToMe, boolean _directSubTaskRequestAssignedToMe, boolean _anySubtaskRequestAssignedToMe, boolean _requestAssignedToMyGroup, boolean _directSubTaskRequestAssignedToMyGroup, boolean _anySubtaskRequestAssignedToMyGroup, nap.proxies.Person _assignedPerson, nap.proxies.Organisation _assignedGroup, nap.proxies.NotificationSubscription _notificationSubscription)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RequestEvent", _requestEvent == null ? null : _requestEvent.getMendixObject());
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("MessageSource", _messageSource == null ? null : _messageSource.name());
			params.put("EventUser", _eventUser == null ? null : _eventUser.getMendixObject());
			params.put("RequestAssignedToMe", _requestAssignedToMe);
			params.put("DirectSubTaskRequestAssignedToMe", _directSubTaskRequestAssignedToMe);
			params.put("AnySubtaskRequestAssignedToMe", _anySubtaskRequestAssignedToMe);
			params.put("RequestAssignedToMyGroup", _requestAssignedToMyGroup);
			params.put("DirectSubTaskRequestAssignedToMyGroup", _directSubTaskRequestAssignedToMyGroup);
			params.put("AnySubtaskRequestAssignedToMyGroup", _anySubtaskRequestAssignedToMyGroup);
			params.put("AssignedPerson", _assignedPerson == null ? null : _assignedPerson.getMendixObject());
			params.put("AssignedGroup", _assignedGroup == null ? null : _assignedGroup.getMendixObject());
			params.put("NotificationSubscription", _notificationSubscription == null ? null : _notificationSubscription.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.GetPersonListForRequestEvent", params);
			java.util.List<nap.proxies.Person> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<nap.proxies.Person>();
				for (IMendixObject obj : objs)
					result.add(nap.proxies.Person.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static process.proxies.ProcessRelationHelper getProcessRelationsHelper(IContext context, process.proxies.TicketRelations _ticketRelations)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TicketRelations", _ticketRelations == null ? null : _ticketRelations.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.getProcessRelationsHelper", params);
			return result == null ? null : process.proxies.ProcessRelationHelper.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getProductsLink(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.GetProductsLink", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getReferenceLink(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.GetReferenceLink", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<process.proxies.Request> getRelatedTickets_FromRequest(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.GetRelatedTickets_FromRequest", params);
			java.util.List<process.proxies.Request> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<process.proxies.Request>();
				for (IMendixObject obj : objs)
					result.add(process.proxies.Request.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getRelationsLink(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.GetRelationsLink", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getReminderLink(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.GetReminderLink", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getRequestAndCalculateRemainingTime(IContext context, process.proxies.RequestRemainingTime _requestRemainingTime)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RequestRemainingTime", _requestRemainingTime == null ? null : _requestRemainingTime.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.GetRequestAndCalculateRemainingTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static process.proxies.TimeLeft getRequestAndSetRemainingTimeLeft(IContext context, process.proxies.RequestRemainingTime _requestRemainingTime)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RequestRemainingTime", _requestRemainingTime == null ? null : _requestRemainingTime.getMendixObject());
			java.lang.String result = (java.lang.String)Core.execute(context, "Process.GetRequestAndSetRemainingTimeLeft", params);
			if (result == null)
				return null;
			return process.proxies.TimeLeft.valueOf(result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<process.proxies.Task> getRequestTasks(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.GetRequestTasks", params);
			java.util.List<process.proxies.Task> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<process.proxies.Task>();
				for (IMendixObject obj : objs)
					result.add(process.proxies.Task.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean getRequestType(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.GetRequestType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean getShowProgressPreference(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.Boolean)Core.execute(context, "Process.GetShowProgressPreference", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static process.proxies.SetShowTasksFunction getShowTasksPreference(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.lang.String result = (java.lang.String)Core.execute(context, "Process.GetShowTasksPreference", params);
			if (result == null)
				return null;
			return process.proxies.SetShowTasksFunction.valueOf(result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean getSPAllowedRelationSelected(IContext context, process.proxies.TicketRelations _ticketRelations)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TicketRelations", _ticketRelations == null ? null : _ticketRelations.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.getSPAllowedRelationSelected", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.SPAttribute> getSPAttribute(IContext context, slm.proxies.SPScreenBlock _sPScreenBlock)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SPScreenBlock", _sPScreenBlock == null ? null : _sPScreenBlock.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.GetSPAttribute", params);
			java.util.List<slm.proxies.SPAttribute> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.SPAttribute>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.SPAttribute.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.SPAttribute> getSPAttribute_FromInterface(IContext context, slm.proxies.SPScreenBlock _sPScreenBlock)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SPScreenBlock", _sPScreenBlock == null ? null : _sPScreenBlock.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.GetSPAttribute_FromInterface", params);
			java.util.List<slm.proxies.SPAttribute> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.SPAttribute>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.SPAttribute.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.SPAttributeValue> getSPAttributeValuesDD(IContext context, slm.proxies.SPAttribute _sPAttribute)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SPAttribute", _sPAttribute == null ? null : _sPAttribute.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.GetSPAttributeValuesDD", params);
			java.util.List<slm.proxies.SPAttributeValue> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.SPAttributeValue>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.SPAttributeValue.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.SPAttributeValue> getSPAttributeValuesR(IContext context, slm.proxies.SPAttribute _sPAttribute)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SPAttribute", _sPAttribute == null ? null : _sPAttribute.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.GetSPAttributeValuesR", params);
			java.util.List<slm.proxies.SPAttributeValue> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.SPAttributeValue>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.SPAttributeValue.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.SPScreenBlock> getSPScreenBlock(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.GetSPScreenBlock", params);
			java.util.List<slm.proxies.SPScreenBlock> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.SPScreenBlock>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.SPScreenBlock.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.SPScreenBlock> getSPScreenBlock_FromInterface(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.GetSPScreenBlock_FromInterface", params);
			java.util.List<slm.proxies.SPScreenBlock> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.SPScreenBlock>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.SPScreenBlock.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.SPScreenBlock> getSPScreenBlocks(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.GetSPScreenBlocks", params);
			java.util.List<slm.proxies.SPScreenBlock> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.SPScreenBlock>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.SPScreenBlock.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static process.proxies.Request getTaskDirectParent(IContext context, process.proxies.Request _taskRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TaskRequest", _taskRequest == null ? null : _taskRequest.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.GetTaskDirectParent", params);
			return result == null ? null : process.proxies.Request.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getTaskLink(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.GetTaskLink", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<process.proxies.Task> getTaskTasks(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.GetTaskTasks", params);
			java.util.List<process.proxies.Task> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<process.proxies.Task>();
				for (IMendixObject obj : objs)
					result.add(process.proxies.Task.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<scheduling.proxies.TemplateTask> getTemplateTasks(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.GetTemplateTasks", params);
			java.util.List<scheduling.proxies.TemplateTask> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<scheduling.proxies.TemplateTask>();
				for (IMendixObject obj : objs)
					result.add(scheduling.proxies.TemplateTask.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static process.proxies.Request getTicketRequest(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.GetTicketRequest", params);
			return result == null ? null : process.proxies.Request.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getTimeMaterialLink(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.GetTimeMaterialLink", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getWorkflowLink(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.GetWorkflowLink", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void gotoStartPanel(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Process.GotoStartPanel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 3417
	 * Added DB_Request used for SLM Aspect Audit historic fields.
	 */
	public static boolean handle_Changed_Aspects(IContext context, process.proxies.Request _request, process.proxies.Request _request_DB)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Request_DB", _request_DB == null ? null : _request_DB.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Handle_Changed_Aspects", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 3547
	 * Retrieved the ExecutedByUser. This is the user that executed this function.
	 * 
	 * 
	 */
	public static void handle_Request_Async_Function(IContext context, process.proxies.RequestAsyncFunction _requestAsyncFunction)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RequestAsyncFunction", _requestAsyncFunction == null ? null : _requestAsyncFunction.getMendixObject());
			Core.execute(context, "Process.Handle_Request_Async_Function", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void handle_Request_Async_Functions(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Process.Handle_Request_Async_Functions", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void handle_Request_Events(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Process.Handle_Request_Events", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void handle_Request_Events_manually(IContext context, java.util.List<process.proxies.RequestEvent> _requestEventList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_requestEventList = null;
			if (_requestEventList != null)
			{
				listparam_requestEventList = new java.util.ArrayList<IMendixObject>();
				for (process.proxies.RequestEvent obj : _requestEventList)
					listparam_requestEventList.add(obj.getMendixObject());
			}
			params.put("RequestEventList", listparam_requestEventList);
			Core.execute(context, "Process.Handle_Request_Events_manually", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void handleCategories(IContext context, process.proxies.Request _request, slm.proxies.Contract _contract)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Contract", _contract == null ? null : _contract.getMendixObject());
			Core.execute(context, "Process.HandleCategories", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean hasParentTask(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.HasParentTask", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean hasParentTask_2(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.HasParentTask_2", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean hasPersonCaller(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.hasPersonCaller", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean hasTemplates(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.HasTemplates", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String iDOfAssociatedRequest(IContext context, process.proxies.RequestAttachment _requestAttachment)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RequestAttachment", _requestAttachment == null ? null : _requestAttachment.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.IDOfAssociatedRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void impact_SetAspect(IContext context, process.proxies.Request _request, boolean _useParent, java.lang.Long _contractCount, slm.proxies.Contract_Type _contractType, process.proxies.Request _parent, java.lang.Long _maxDropDownResultSize)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("UseParent", _useParent);
			params.put("ContractCount", _contractCount);
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("Parent", _parent == null ? null : _parent.getMendixObject());
			params.put("MaxDropDownResultSize", _maxDropDownResultSize);
			Core.execute(context, "Process.Impact_SetAspect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Impact> impactList_All_EntityAccess(IContext context, process.proxies.Request _request, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.ImpactList_All_EntityAccess", params);
			java.util.List<slm.proxies.Impact> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Impact>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Impact.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long impactList_Count(IContext context, process.proxies.Request _request, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			return (java.lang.Long)Core.execute(context, "Process.ImpactList_Count", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Impact> impactList_Determined_All_EntityAccess(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.ImpactList_Determined_All_EntityAccess", params);
			java.util.List<slm.proxies.Impact> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Impact>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Impact.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static slm.proxies.Impact impactList_First(IContext context, process.proxies.Request _request, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.ImpactList_First", params);
			return result == null ? null : slm.proxies.Impact.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Impact> impactList_OLA_All_EntityAccess(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.ImpactList_OLA_All_EntityAccess", params);
			java.util.List<slm.proxies.Impact> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Impact>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Impact.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Impact> impactList_OLA_All_PopUp(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.ImpactList_OLA_All_PopUp", params);
			java.util.List<slm.proxies.Impact> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Impact>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Impact.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean impactList_ParentValid(IContext context, process.proxies.Request _request, slm.proxies.Contract_Type _contractType, process.proxies.Request _parentRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("ParentRequest", _parentRequest == null ? null : _parentRequest.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.ImpactList_ParentValid", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Impact> impactList_SLA_All_EntityAccess(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.ImpactList_SLA_All_EntityAccess", params);
			java.util.List<slm.proxies.Impact> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Impact>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Impact.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Impact> impactList_SLA_All_PopUp(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.ImpactList_SLA_All_PopUp", params);
			java.util.List<slm.proxies.Impact> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Impact>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Impact.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean indexRequestOpeningCategory_BeforeCommit(IContext context, process.proxies.RequestOpeningCategory _requestOpeningCategory)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RequestOpeningCategory", _requestOpeningCategory == null ? null : _requestOpeningCategory.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.IndexRequestOpeningCategory_BeforeCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String integerToHoursMinutesString(IContext context, java.lang.Long _inputInteger)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputInteger", _inputInteger);
			return (java.lang.String)Core.execute(context, "Process.IntegerToHoursMinutesString", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<statetransition.proxies.Transition> interface_ActionMenu_Process(IContext context, statetransition.proxies.Matrix _matrix, statetransition.proxies.State _fromStatus, statetransition.proxies.Phase _fromPhase, boolean _showHiddenTransitions, process.proxies.Request _request, java.util.List<statetransition.proxies.Transition> _transitionList_Subset, interfaceconfiguration.proxies.InterfaceConfiguration _interfaceConfiguration, interfaceshared.proxies.ProcessingPart _parentProcessingPart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Matrix", _matrix == null ? null : _matrix.getMendixObject());
			params.put("FromStatus", _fromStatus == null ? null : _fromStatus.getMendixObject());
			params.put("FromPhase", _fromPhase == null ? null : _fromPhase.getMendixObject());
			params.put("ShowHiddenTransitions", _showHiddenTransitions);
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_transitionList_Subset = null;
			if (_transitionList_Subset != null)
			{
				listparam_transitionList_Subset = new java.util.ArrayList<IMendixObject>();
				for (statetransition.proxies.Transition obj : _transitionList_Subset)
					listparam_transitionList_Subset.add(obj.getMendixObject());
			}
			params.put("TransitionList_Subset", listparam_transitionList_Subset);
			params.put("InterfaceConfiguration", _interfaceConfiguration == null ? null : _interfaceConfiguration.getMendixObject());
			params.put("ParentProcessingPart", _parentProcessingPart == null ? null : _parentProcessingPart.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.Interface_ActionMenu_Process", params);
			java.util.List<statetransition.proxies.Transition> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<statetransition.proxies.Transition>();
				for (IMendixObject obj : objs)
					result.add(statetransition.proxies.Transition.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long iUPCombinationList_Count(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Long)Core.execute(context, "Process.IUPCombinationList_Count", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static slm.proxies.IUP_Combination iUPCombinationList_First(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.IUPCombinationList_First", params);
			return result == null ? null : slm.proxies.IUP_Combination.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ActivityStreamClose(IContext context, process.proxies.ActivityStream _activityStream)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ActivityStream", _activityStream == null ? null : _activityStream.getMendixObject());
			Core.execute(context, "Process.IVK_ActivityStreamClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Add_AffectedCI(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_Add_AffectedCI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * LVNL: changed in order to connect to new module 'QuestionnaireV2' (SprintR 573371)
	 */
	public static void iVK_Add_Analysis(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_Add_Analysis", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [#812607] Removed Retrieve Objects of parent request over Task_Request;
	 */
	public static void iVK_Add_Attachment(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_Add_Attachment", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Add_DynamicAttributes(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_Add_DynamicAttributes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Add_External_Reference(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_Add_External_Reference", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Add_Relation(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_Add_Relation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Add_RelationFromMain(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_Add_RelationFromMain", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Add_RelationFromRelations(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_Add_RelationFromRelations", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Add_Reminder(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_Add_Reminder", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AddAnalysis(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_AddAnalysis", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AddLocation(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_AddLocation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AddMaterial(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_AddMaterial", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AddReminder(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_AddReminder", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AddTime(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_AddTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3081] Added to Exclusive Split expression:
	 * 	and $Request/Billing.Billingsheet_Request != empty:
	 * 
	 * On true: Instead of displaying warning "Time and material sheets are not set for the related Ticket. Therefore, those sheets are not available for this Task.", show form Request_Time_and_Material_Dialog
	 */
	public static void iVK_AddTimeAndMaterial(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_AddTimeAndMaterial", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AffectedCICancel(IContext context, cmdb.proxies.AffectedCI _affectedCI)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AffectedCI", _affectedCI == null ? null : _affectedCI.getMendixObject());
			Core.execute(context, "Process.IVK_AffectedCICancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AffectedCISaveAndClose(IContext context, cmdb.proxies.AffectedCI _affectedCI)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AffectedCI", _affectedCI == null ? null : _affectedCI.getMendixObject());
			Core.execute(context, "Process.IVK_AffectedCISaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AutomCompleteSingleRelate(IContext context, process.proxies.OverviewRequest _overviewRequest, process.proxies.TicketRelations _ticketRelations)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OverviewRequest", _overviewRequest == null ? null : _overviewRequest.getMendixObject());
			params.put("TicketRelations", _ticketRelations == null ? null : _ticketRelations.getMendixObject());
			Core.execute(context, "Process.IVK_AutomCompleteSingleRelate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_Open_Analysis_Setup(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Process.IVK_Button_Open_Analysis_Setup", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_Open_Categories(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Process.IVK_Button_Open_Categories", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_Open_DynAttGroups(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Process.IVK_Button_Open_DynAttGroups", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_Open_DynAttLabels(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Process.IVK_Button_Open_DynAttLabels", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_Open_Questionnaires(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Process.IVK_Button_Open_Questionnaires", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_Open_ScheduledRequest(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Process.IVK_Button_Open_ScheduledRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Button_Open_Scripting_Setup(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Process.IVK_Button_Open_Scripting_Setup", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CallingOnBehalfOfCallingOnBehalfOfActive(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_CallingOnBehalfOfCallingOnBehalfOfActive", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CallingOnBehalfOfCallingOnBehalfOfInActive(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_CallingOnBehalfOfCallingOnBehalfOfInActive", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CallingOnBehalfOfRequesterActive(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_CallingOnBehalfOfRequesterActive", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CallingOnBehalfOfRequesterInActive(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_CallingOnBehalfOfRequesterInActive", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CancelAndCloseScreenBlocks(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_CancelAndCloseScreenBlocks", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CancelAspectChange(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_CancelAspectChange", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CancelAspectChange_SRM(IContext context, process.proxies.ServiceRequest _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_CancelAspectChange_SRM", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CancelAttachment(IContext context, process.proxies.RequestAttachment _requestAttachment)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RequestAttachment", _requestAttachment == null ? null : _requestAttachment.getMendixObject());
			Core.execute(context, "Process.IVK_CancelAttachment", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CancelRequest(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_CancelRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CancelRequest_Deeplink(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_CancelRequest_Deeplink", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CancelRequestDeeplink(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_CancelRequestDeeplink", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CancelSelectChild(IContext context, process.proxies.TicketRelations _ticketRelations)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TicketRelations", _ticketRelations == null ? null : _ticketRelations.getMendixObject());
			Core.execute(context, "Process.IVK_CancelSelectChild", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CheckSelectedTrigggerAgainstRequestEvent(IContext context, process.proxies.RequestEvent _requestEvent, trigger.proxies.TriggerSetup _triggerSetup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RequestEvent", _requestEvent == null ? null : _requestEvent.getMendixObject());
			params.put("TriggerSetup", _triggerSetup == null ? null : _triggerSetup.getMendixObject());
			Core.execute(context, "Process.IVK_CheckSelectedTrigggerAgainstRequestEvent", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CheckTriggerAgainstRequestEvent(IContext context, process.proxies.RequestEvent _requestEvent)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RequestEvent", _requestEvent == null ? null : _requestEvent.getMendixObject());
			Core.execute(context, "Process.IVK_CheckTriggerAgainstRequestEvent", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [879875] Assign to group and person directly
	 */
	public static void iVK_ClearAspectFields_SLA(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_ClearAspectFields_SLA", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearAspectFields_SLA_NewRelated(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_ClearAspectFields_SLA_NewRelated", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearCI(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_ClearCI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearCILevel3(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_ClearCILevel3", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearCILevel3_TemplateRequest(IContext context, scheduling.proxies.TemplateRequest _templateRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TemplateRequest", _templateRequest == null ? null : _templateRequest.getMendixObject());
			Core.execute(context, "Process.IVK_ClearCILevel3_TemplateRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearDescriptionDetailsFields(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			Core.execute(context, "Process.IVK_ClearDescriptionDetailsFields", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearDescriptionFields(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			Core.execute(context, "Process.IVK_ClearDescriptionFields", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearImpact(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_ClearImpact", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearLegislation_Request(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_ClearLegislation_Request", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearOLAServiceProcess(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			Core.execute(context, "Process.IVK_ClearOLAServiceProcess", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearPriority(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_ClearPriority", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearRequestCaller(IContext context, process.proxies.Request _inputRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputRequest", _inputRequest == null ? null : _inputRequest.getMendixObject());
			Core.execute(context, "Process.IVK_ClearRequestCaller", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearRequestPerson(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_ClearRequestPerson", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearService(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_ClearService", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearServiceProcess(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_ClearServiceProcess", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ClearUrgency(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_ClearUrgency", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean iVK_CreateAndOpen_Request(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.IVK_CreateAndOpen_Request", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * #3577
	 * Canceled Request not working as expected.
	 */
	public static boolean iVK_CreateRequest(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.IVK_CreateRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * #3577
	 * Canceled Request not working as expected.
	 */
	public static boolean iVK_CreateRequestAndClose(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.IVK_CreateRequestAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean iVK_CreateRequestDeeplinkAndClose(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.IVK_CreateRequestDeeplinkAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 914963 (performance improvement)
	 * SLACI_Select records are created to display in the SLACI_Select popup. 
	 */
	public static java.util.List<process.proxies.SLACI_Select> iVK_CreateSLACI_Select(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.IVK_CreateSLACI_Select", params);
			java.util.List<process.proxies.SLACI_Select> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<process.proxies.SLACI_Select>();
				for (IMendixObject obj : objs)
					result.add(process.proxies.SLACI_Select.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DeleteAnalysis(IContext context, process.proxies.Request _request, questionnairev2.proxies.Questionnaire _analysis)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Analysis", _analysis == null ? null : _analysis.getMendixObject());
			Core.execute(context, "Process.IVK_DeleteAnalysis", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DeleteAttachment(IContext context, process.proxies.Request _request, process.proxies.RequestAttachment _requestAttachment)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("RequestAttachment", _requestAttachment == null ? null : _requestAttachment.getMendixObject());
			Core.execute(context, "Process.IVK_DeleteAttachment", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DeleteKnowledgeFavourite(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			Core.execute(context, "Process.IVK_DeleteKnowledgeFavourite", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DeleteMaterial(IContext context, billing.proxies.MaterialSheet _materialSheet, billing.proxies.Billingsheet _billingsheet)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MaterialSheet", _materialSheet == null ? null : _materialSheet.getMendixObject());
			params.put("Billingsheet", _billingsheet == null ? null : _billingsheet.getMendixObject());
			Core.execute(context, "Process.IVK_DeleteMaterial", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DeleteTimeSheet(IContext context, billing.proxies.Timesheet _timesheet, billing.proxies.Billingsheet _billingsheet)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Timesheet", _timesheet == null ? null : _timesheet.getMendixObject());
			params.put("Billingsheet", _billingsheet == null ? null : _billingsheet.getMendixObject());
			Core.execute(context, "Process.IVK_DeleteTimeSheet", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DynamicAttributeGroupCancel(IContext context, process.proxies.DynamicAttributeGroup _dynamicAttributeGroup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicAttributeGroup", _dynamicAttributeGroup == null ? null : _dynamicAttributeGroup.getMendixObject());
			Core.execute(context, "Process.IVK_DynamicAttributeGroupCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DynamicAttributeGroupSave(IContext context, process.proxies.DynamicAttributeGroup _dynamicAttributeGroup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicAttributeGroup", _dynamicAttributeGroup == null ? null : _dynamicAttributeGroup.getMendixObject());
			Core.execute(context, "Process.IVK_DynamicAttributeGroupSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DynamicAttributeGroupSaveAndClose(IContext context, process.proxies.DynamicAttributeGroup _dynamicAttributeGroup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicAttributeGroup", _dynamicAttributeGroup == null ? null : _dynamicAttributeGroup.getMendixObject());
			Core.execute(context, "Process.IVK_DynamicAttributeGroupSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DynamicAttributeLabelCancel(IContext context, process.proxies.DynamicAttributeLabel _dynamicAttributeLabel)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicAttributeLabel", _dynamicAttributeLabel == null ? null : _dynamicAttributeLabel.getMendixObject());
			Core.execute(context, "Process.IVK_DynamicAttributeLabelCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DynamicAttributeLabelSave(IContext context, process.proxies.DynamicAttributeLabel _dynamicAttributeLabel)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicAttributeLabel", _dynamicAttributeLabel == null ? null : _dynamicAttributeLabel.getMendixObject());
			Core.execute(context, "Process.IVK_DynamicAttributeLabelSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DynamicAttributeLabelSaveAndClose(IContext context, process.proxies.DynamicAttributeLabel _dynamicAttributeLabel)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicAttributeLabel", _dynamicAttributeLabel == null ? null : _dynamicAttributeLabel.getMendixObject());
			Core.execute(context, "Process.IVK_DynamicAttributeLabelSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * LVNL: changed in order to connect to new module 'QuestionnaireV2' (SprintR 573371)
	 */
	public static void iVK_Edit_Analysis(IContext context, process.proxies.Request _request, questionnairev2.proxies.Questionnaire _questionnaire)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Questionnaire", _questionnaire == null ? null : _questionnaire.getMendixObject());
			Core.execute(context, "Process.IVK_Edit_Analysis", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_EditMaterial(IContext context, billing.proxies.MaterialSheet _materialSheet)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MaterialSheet", _materialSheet == null ? null : _materialSheet.getMendixObject());
			Core.execute(context, "Process.IVK_EditMaterial", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_EditSolution(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_EditSolution", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_EditTimeSheet(IContext context, billing.proxies.Timesheet _timesheet)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Timesheet", _timesheet == null ? null : _timesheet.getMendixObject());
			Core.execute(context, "Process.IVK_EditTimeSheet", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_KPIConfigurationCancel(IContext context, process.proxies.KPIConfiguration _kPIConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("KPIConfiguration", _kPIConfiguration == null ? null : _kPIConfiguration.getMendixObject());
			Core.execute(context, "Process.IVK_KPIConfigurationCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_KPIConfigurationSave(IContext context, process.proxies.KPIConfiguration _kPIConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("KPIConfiguration", _kPIConfiguration == null ? null : _kPIConfiguration.getMendixObject());
			Core.execute(context, "Process.IVK_KPIConfigurationSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_KPIConfigurationSaveAndClose(IContext context, process.proxies.KPIConfiguration _kPIConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("KPIConfiguration", _kPIConfiguration == null ? null : _kPIConfiguration.getMendixObject());
			Core.execute(context, "Process.IVK_KPIConfigurationSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 924101/219115: Bij melding: Request locked geen mogelijkheid tot cancel
	 */
	public static void iVK_LockWarningDialog_ClosePage(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_LockWarningDialog_ClosePage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MessageCancel(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			Core.execute(context, "Process.IVK_MessageCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_MobileSelectRequestSLACI(IContext context, cmdb.proxies.ConfigurationItem _configurationItem, mobile.proxies.SLMHelper _sLMHelper)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ConfigurationItem", _configurationItem == null ? null : _configurationItem.getMendixObject());
			params.put("SLMHelper", _sLMHelper == null ? null : _sLMHelper.getMendixObject());
			Core.execute(context, "Process.IVK_MobileSelectRequestSLACI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [1174530] - For repair WOs related to incidents, only the "CI" (Request_ConfigurationItem_3) is relevant and should be copied from the source request
	 */
	public static void iVK_NewRelatedRequest(IContext context, process.proxies.TicketRelations _ticketRelations)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TicketRelations", _ticketRelations == null ? null : _ticketRelations.getMendixObject());
			Core.execute(context, "Process.IVK_NewRelatedRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenActivity(IContext context, process.proxies.ActivityStream _activityStream)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ActivityStream", _activityStream == null ? null : _activityStream.getMendixObject());
			Core.execute(context, "Process.IVK_OpenActivity", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenAffectedCICI(IContext context, cmdb.proxies.AffectedCI _affectedCI)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AffectedCI", _affectedCI == null ? null : _affectedCI.getMendixObject());
			Core.execute(context, "Process.IVK_OpenAffectedCICI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenEmailAttachments(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			Core.execute(context, "Process.IVK_OpenEmailAttachments", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenTask(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			Core.execute(context, "Process.IVK_OpenTask", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenTicket(IContext context, process.proxies.OverviewRequest _overviewRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OverviewRequest", _overviewRequest == null ? null : _overviewRequest.getMendixObject());
			Core.execute(context, "Process.IVK_OpenTicket", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenTicket_PopUp(IContext context, process.proxies.OverviewRequest _overviewRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OverviewRequest", _overviewRequest == null ? null : _overviewRequest.getMendixObject());
			Core.execute(context, "Process.IVK_OpenTicket_PopUp", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenTrigger(IContext context, trigger.proxies.TriggerSetup _triggerSetup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TriggerSetup", _triggerSetup == null ? null : _triggerSetup.getMendixObject());
			Core.execute(context, "Process.IVK_OpenTrigger", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_PausedReasonCancel(IContext context, process.proxies.PausedReasonDefinition _pausedReasonDefinition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PausedReasonDefinition", _pausedReasonDefinition == null ? null : _pausedReasonDefinition.getMendixObject());
			Core.execute(context, "Process.IVK_PausedReasonCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_PausedReasonSave(IContext context, process.proxies.PausedReasonDefinition _pausedReasonDefinition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PausedReasonDefinition", _pausedReasonDefinition == null ? null : _pausedReasonDefinition.getMendixObject());
			Core.execute(context, "Process.IVK_PausedReasonSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_PausedReasonSaveAndClose(IContext context, process.proxies.PausedReasonDefinition _pausedReasonDefinition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PausedReasonDefinition", _pausedReasonDefinition == null ? null : _pausedReasonDefinition.getMendixObject());
			Core.execute(context, "Process.IVK_PausedReasonSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Publish_ED95(IContext context, notes.proxies.Note _note)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Note", _note == null ? null : _note.getMendixObject());
			Core.execute(context, "Process.IVK_Publish_ED95", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RefreshRequestEventOverview(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Process.IVK_RefreshRequestEventOverview", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RefreshSearch(IContext context, process.proxies.TicketRelations _ticketRelations)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TicketRelations", _ticketRelations == null ? null : _ticketRelations.getMendixObject());
			Core.execute(context, "Process.IVK_RefreshSearch", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RemoveLocationForNewCaller(IContext context, nap.proxies.Location _location, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Location", _location == null ? null : _location.getMendixObject());
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "Process.IVK_RemoveLocationForNewCaller", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 921235: Enable search/filter options for SLA/OLA CI selection popup
	 */
	public static void iVK_Request_SelectOLACI(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			Core.execute(context, "Process.IVK_Request_SelectOLACI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Request_SelectOLAContract(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			Core.execute(context, "Process.IVK_Request_SelectOLAContract", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Request_SelectOLADeliveringOrganisation(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			Core.execute(context, "Process.IVK_Request_SelectOLADeliveringOrganisation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Request_SelectOLAImpact(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			Core.execute(context, "Process.IVK_Request_SelectOLAImpact", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Request_SelectOLAPriority(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			Core.execute(context, "Process.IVK_Request_SelectOLAPriority", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Request_SelectOLAService(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			Core.execute(context, "Process.IVK_Request_SelectOLAService", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Request_SelectOLAServiceProcess(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			Core.execute(context, "Process.IVK_Request_SelectOLAServiceProcess", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Request_SelectOLAUrgency(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			Core.execute(context, "Process.IVK_Request_SelectOLAUrgency", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 921235: Enable search/filter options for SLA/OLA CI selection popup
	 */
	public static void iVK_Request_SelectSLACI(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_Request_SelectSLACI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Request_SelectSLAContract(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_Request_SelectSLAContract", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Request_SelectSLADeliveringOrganisation(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_Request_SelectSLADeliveringOrganisation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Request_SelectSLAImpact(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_Request_SelectSLAImpact", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Request_SelectSLAPriority(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_Request_SelectSLAPriority", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Request_SelectSLAService(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_Request_SelectSLAService", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Request_SelectSLAServiceProcess(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_Request_SelectSLAServiceProcess", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Request_SelectSLAUrgency(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_Request_SelectSLAUrgency", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RequestEventOpenMessage(IContext context, process.proxies.RequestEvent _requestEvent)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RequestEvent", _requestEvent == null ? null : _requestEvent.getMendixObject());
			Core.execute(context, "Process.IVK_RequestEventOpenMessage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RequiredFieldsSettingCancel(IContext context, process.proxies.RequiredFieldsSetting _requiredFieldsSetting)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RequiredFieldsSetting", _requiredFieldsSetting == null ? null : _requiredFieldsSetting.getMendixObject());
			Core.execute(context, "Process.IVK_RequiredFieldsSettingCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RequiredFieldsSettingSave(IContext context, process.proxies.RequiredFieldsSetting _requiredFieldsSetting)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RequiredFieldsSetting", _requiredFieldsSetting == null ? null : _requiredFieldsSetting.getMendixObject());
			Core.execute(context, "Process.IVK_RequiredFieldsSettingSave", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RequiredFieldsSettingSaveAndClose(IContext context, process.proxies.RequiredFieldsSetting _requiredFieldsSetting)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RequiredFieldsSetting", _requiredFieldsSetting == null ? null : _requiredFieldsSetting.getMendixObject());
			Core.execute(context, "Process.IVK_RequiredFieldsSettingSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RetreiveReceivingOrganisationsFromCaller(IContext context, process.proxies.Request _inputRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputRequest", _inputRequest == null ? null : _inputRequest.getMendixObject());
			Core.execute(context, "Process.IVK_RetreiveReceivingOrganisationsFromCaller", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SaveAndCloseScreenBlocks(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_SaveAndCloseScreenBlocks", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [1172365] Option to edit the create time after ticket creation
	 */
	public static void iVK_SaveAspects(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_SaveAspects", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SaveAttachment(IContext context, process.proxies.RequestAttachment _requestAttachment)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RequestAttachment", _requestAttachment == null ? null : _requestAttachment.getMendixObject());
			Core.execute(context, "Process.IVK_SaveAttachment", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectDefaultAnswerSet(IContext context, questionnairev2.proxies.DefaultAnswerSet _defaultAnswerSet, questionnairev2.proxies.TemplateSelectHelper _templateSelectHelper)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DefaultAnswerSet", _defaultAnswerSet == null ? null : _defaultAnswerSet.getMendixObject());
			params.put("TemplateSelectHelper", _templateSelectHelper == null ? null : _templateSelectHelper.getMendixObject());
			Core.execute(context, "Process.IVK_SelectDefaultAnswerSet", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectLegislation(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_SelectLegislation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectLegislationMain(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_SelectLegislationMain", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectLocationOnNewCaller(IContext context, nap.proxies.Location _location, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Location", _location == null ? null : _location.getMendixObject());
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "Process.IVK_SelectLocationOnNewCaller", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectPersonForReminder(IContext context, java.util.List<nap.proxies.Person> _personList, process.proxies.Reminder _reminder)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_personList = null;
			if (_personList != null)
			{
				listparam_personList = new java.util.ArrayList<IMendixObject>();
				for (nap.proxies.Person obj : _personList)
					listparam_personList.add(obj.getMendixObject());
			}
			params.put("PersonList", listparam_personList);
			params.put("Reminder", _reminder == null ? null : _reminder.getMendixObject());
			Core.execute(context, "Process.IVK_SelectPersonForReminder", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 921235: Enable search/filter options for SLA/OLA CI selection popup
	 */
	public static void iVK_SelectRequestOLACI(IContext context, cmdb.proxies.ConfigurationItem _configurationItem, process.proxies.SLACI_Select _sLACI_Select)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ConfigurationItem", _configurationItem == null ? null : _configurationItem.getMendixObject());
			params.put("SLACI_Select", _sLACI_Select == null ? null : _sLACI_Select.getMendixObject());
			Core.execute(context, "Process.IVK_SelectRequestOLACI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectRequestOLAContract(IContext context, slm.proxies.Contract _contract, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Contract", _contract == null ? null : _contract.getMendixObject());
			params.put("Task", _task == null ? null : _task.getMendixObject());
			Core.execute(context, "Process.IVK_SelectRequestOLAContract", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectRequestOLADeliveringOrganisation(IContext context, nap.proxies.Organisation _deliveringOrganisation, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DeliveringOrganisation", _deliveringOrganisation == null ? null : _deliveringOrganisation.getMendixObject());
			params.put("Task", _task == null ? null : _task.getMendixObject());
			Core.execute(context, "Process.IVK_SelectRequestOLADeliveringOrganisation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectRequestOLAImpact(IContext context, slm.proxies.Impact _impact, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Impact", _impact == null ? null : _impact.getMendixObject());
			params.put("Task", _task == null ? null : _task.getMendixObject());
			Core.execute(context, "Process.IVK_SelectRequestOLAImpact", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectRequestOLAPriority(IContext context, slm.proxies.Priority _priority, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Priority", _priority == null ? null : _priority.getMendixObject());
			params.put("Task", _task == null ? null : _task.getMendixObject());
			Core.execute(context, "Process.IVK_SelectRequestOLAPriority", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectRequestOLAService(IContext context, slm.proxies.Service _service, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Service", _service == null ? null : _service.getMendixObject());
			params.put("Task", _task == null ? null : _task.getMendixObject());
			Core.execute(context, "Process.IVK_SelectRequestOLAService", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectRequestOLAServiceProcess(IContext context, slm.proxies.Service_Process _service_Process, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Service_Process", _service_Process == null ? null : _service_Process.getMendixObject());
			params.put("Task", _task == null ? null : _task.getMendixObject());
			Core.execute(context, "Process.IVK_SelectRequestOLAServiceProcess", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectRequestOLAUrgency(IContext context, slm.proxies.Urgency _urgency, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Urgency", _urgency == null ? null : _urgency.getMendixObject());
			params.put("Task", _task == null ? null : _task.getMendixObject());
			Core.execute(context, "Process.IVK_SelectRequestOLAUrgency", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 914963 (performance improvement)
	 * Input Parameter is changed from ConfigurationItem to SLACI_Select
	 * ConfigurationItem is retrieved by the associated SLACI_Select
	 * 
	 * 921235: Enable search/filter options for SLA/OLA CI selection popup
	 */
	public static void iVK_SelectRequestSLACI(IContext context, process.proxies.SLACI_Select _sLACI_Select, cmdb.proxies.ConfigurationItem _configurationItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SLACI_Select", _sLACI_Select == null ? null : _sLACI_Select.getMendixObject());
			params.put("ConfigurationItem", _configurationItem == null ? null : _configurationItem.getMendixObject());
			Core.execute(context, "Process.IVK_SelectRequestSLACI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectRequestSLAContract(IContext context, slm.proxies.Contract _contract, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Contract", _contract == null ? null : _contract.getMendixObject());
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_SelectRequestSLAContract", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectRequestSLADeliveringOrganisation(IContext context, nap.proxies.Organisation _deliveringOrganisation, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DeliveringOrganisation", _deliveringOrganisation == null ? null : _deliveringOrganisation.getMendixObject());
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_SelectRequestSLADeliveringOrganisation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectRequestSLAImpact(IContext context, slm.proxies.Impact _impact, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Impact", _impact == null ? null : _impact.getMendixObject());
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_SelectRequestSLAImpact", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectRequestSLAPriority(IContext context, slm.proxies.Priority _priority, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Priority", _priority == null ? null : _priority.getMendixObject());
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_SelectRequestSLAPriority", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectRequestSLAService(IContext context, slm.proxies.Service _service, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Service", _service == null ? null : _service.getMendixObject());
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_SelectRequestSLAService", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectRequestSLAServiceProcess(IContext context, slm.proxies.Service_Process _service_Process, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Service_Process", _service_Process == null ? null : _service_Process.getMendixObject());
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_SelectRequestSLAServiceProcess", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectRequestSLAUrgency(IContext context, slm.proxies.Urgency _urgency, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Urgency", _urgency == null ? null : _urgency.getMendixObject());
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_SelectRequestSLAUrgency", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [Story 825317] Clear the SPAllowedRelation association from the parent Request and refresh it
	 * [824882] When relating a Problem with an incident, the value of Workaround should be pushed from the Problem ticket to the related Incident tickets
	 */
	public static void iVK_SelectToRelate(IContext context, process.proxies.OverviewRequest _overviewRequest, process.proxies.ProcessRelationHelper _processRelationHelper)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OverviewRequest", _overviewRequest == null ? null : _overviewRequest.getMendixObject());
			params.put("ProcessRelationHelper", _processRelationHelper == null ? null : _processRelationHelper.getMendixObject());
			Core.execute(context, "Process.IVK_SelectToRelate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [Story 825317] Clear the SPAllowedRelation association from the parent Request and refresh it;
	 * [824882] When relating a Problem with an incident, the value of Workaround should be pushed from the Problem ticket to the related Incident tickets;
	 */
	public static void iVK_SelectToRelate_Lucene(IContext context, process.proxies.OverviewRequest _overviewRequest, queryrequests.proxies.SearchResults _searchResults)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OverviewRequest", _overviewRequest == null ? null : _overviewRequest.getMendixObject());
			params.put("SearchResults", _searchResults == null ? null : _searchResults.getMendixObject());
			Core.execute(context, "Process.IVK_SelectToRelate_Lucene", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SetKnowledgeFavourite(IContext context, knowledgemanagement.proxies.Knowledge _knowledge)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge", _knowledge == null ? null : _knowledge.getMendixObject());
			Core.execute(context, "Process.IVK_SetKnowledgeFavourite", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SetUserAsCaller(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_SetUserAsCaller", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_StartNewWorkflow(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_StartNewWorkflow", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 944754/222542: UAT>>-ICT Planning WO. Klokje opnemen achter "Start Time (
	 */
	public static void iVK_StartTime_SetToCurrentTime(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_StartTime_SetToCurrentTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Unlock_Ticket(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_Unlock_Ticket", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Unpublish_ED95(IContext context, notes.proxies.Note _note)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("note", _note == null ? null : _note.getMendixObject());
			Core.execute(context, "Process.IVK_Unpublish_ED95", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_UseDefaultTemplate(IContext context, questionnairev2.proxies.TemplateSelectHelper _templateSelectHelper)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TemplateSelectHelper", _templateSelectHelper == null ? null : _templateSelectHelper.getMendixObject());
			Core.execute(context, "Process.IVK_UseDefaultTemplate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * LVNL: changed in order to connect to new module 'QuestionnaireV2' (SprintR 573371)
	 */
	public static void iVK_View_Analysis(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_View_Analysis", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * LVNL: changed in order to connect to new module 'QuestionnaireV2' (SprintR 573371)
	 */
	public static void iVK_View_AnalysisFromTicket(IContext context, process.proxies.Request _request, questionnairev2.proxies.Questionnaire _questionnaire)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Questionnaire", _questionnaire == null ? null : _questionnaire.getMendixObject());
			Core.execute(context, "Process.IVK_View_AnalysisFromTicket", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_View_Aspects(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_View_Aspects", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_View_Aspects_SRM(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_View_Aspects_SRM", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_View_Audit(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_View_Audit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_View_Audit_CMDB(IContext context, cmdb.proxies.ConfigurationItem _configurationItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ConfigurationItem", _configurationItem == null ? null : _configurationItem.getMendixObject());
			Core.execute(context, "Process.IVK_View_Audit_CMDB", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_View_Audit_CMDBType(IContext context, cmdb.proxies.CMDBType _cMDBType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CMDBType", _cMDBType == null ? null : _cMDBType.getMendixObject());
			Core.execute(context, "Process.IVK_View_Audit_CMDBType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_View_Workflows(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_View_Workflows", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ViewProject(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_ViewProject", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ViewRequestPerson(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.IVK_ViewRequestPerson", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ViewRequestSnapShot(IContext context, process.proxies.RequestEvent _requestEvent)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RequestEvent", _requestEvent == null ? null : _requestEvent.getMendixObject());
			Core.execute(context, "Process.IVK_ViewRequestSnapShot", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 914963
	 * The microflow is used the delete the SLACI_Select when closing the SLACI_Select dialog.
	 * 921235: Enable search/filter options for SLA/OLA CI selection popup
	 */
	public static void iVKCancelSLACI_Select(IContext context, process.proxies.SLACI_Select _sLACI_Select)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SLACI_Select", _sLACI_Select == null ? null : _sLACI_Select.getMendixObject());
			Core.execute(context, "Process.IVKCancelSLACI_Select", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean iVKl_CreateRequestAndOpenNew(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.IVKl_CreateRequestAndOpenNew", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void knowledge_Select_Request(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Knowledge_Select_Request", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void linkRequestToIncomingMessage(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			Core.execute(context, "Process.LinkRequestToIncomingMessage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<process.proxies.Request> listRelated(IContext context, process.proxies.TicketRelations _ticketRelations)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TicketRelations", _ticketRelations == null ? null : _ticketRelations.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.ListRelated", params);
			java.util.List<process.proxies.Request> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<process.proxies.Request>();
				for (IMendixObject obj : objs)
					result.add(process.proxies.Request.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void luceneSearchPerson(IContext context, advancedsearch.proxies.SearchParams _searchParams)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SearchParams", _searchParams == null ? null : _searchParams.getMendixObject());
			Core.execute(context, "Process.LuceneSearchPerson", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void lVNL_ICTServiceRequestIUPSelection(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.LVNL_ICTServiceRequestIUPSelection", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean mCa_CancelQueuedRequest(IContext context, process.proxies.Request _inputRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputRequest", _inputRequest == null ? null : _inputRequest.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.MCa_CancelQueuedRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mCa_CommitScreenblocks(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.MCa_CommitScreenblocks", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean mCa_GenerateTicketIDForQueuedRequest(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.MCa_GenerateTicketIDForQueuedRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [824882]  Added microflow to sync the workaround value between a Problem and Incident, in case of relating the two
	 */
	public static void mCa_SyncWorkaroundIncidentProblem(IContext context, process.proxies.Request _request, process.proxies.Request _request_Parent)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Request_Parent", _request_Parent == null ? null : _request_Parent.getMendixObject());
			Core.execute(context, "Process.MCa_SyncWorkaroundIncidentProblem", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void newEmail_InProcess(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.NewEmail_InProcess", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean newRequestSetRelated(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.NewRequestSetRelated", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 3547
	 * ExecutedByUser. This is the user that executed this function.
	 */
	public static void notify_Request(IContext context, process.proxies.Request _request, java.lang.String _extraText, statetransition.proxies.TransitionMessage _transitionMessage, system.proxies.User _executedByUser)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ExtraText", _extraText);
			params.put("TransitionMessage", _transitionMessage == null ? null : _transitionMessage.getMendixObject());
			params.put("ExecutedByUser", _executedByUser == null ? null : _executedByUser.getMendixObject());
			Core.execute(context, "Process.Notify_Request", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String numberOfAffectedCIs_Button(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.NumberOfAffectedCIs_Button", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String numberOfAffectedCIs_Count(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.NumberOfAffectedCIs_Count", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String numberOfAnalysis_Button(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.NumberOfAnalysis_Button", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String numberOfApprovals_Button(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.NumberOfApprovals_Button", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String numberOfAttachments_Button(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.NumberOfAttachments_Button", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String numberOfAttachments_Count(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.NumberOfAttachments_Count", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String numberOfDynamicAttributes_Button(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.NumberOfDynamicAttributes_Button", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String numberOfDynamicAttributes_Count(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.NumberOfDynamicAttributes_Count", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String numberOfExternalRefs_Button(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.NumberOfExternalRefs_Button", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String numberOfExternalRefs_Count(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.NumberOfExternalRefs_Count", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String numberOfNotes_Button(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.NumberOfNotes_Button", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String numberOfOpenTasksVSNumberOfTasks_Button(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.NumberOfOpenTasksVSNumberOfTasks_Button", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String numberOfRelations_Button(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.NumberOfRelations_Button", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String numberOfRelations_Count(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.NumberOfRelations_Count", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String numberOfReminders_Button(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.NumberOfReminders_Button", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String numberOfReminders_Count(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.NumberOfReminders_Count", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String numberOfShoppingCarts_Button(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.NumberOfShoppingCarts_Button", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String numberOfShoppingCarts_Count(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.NumberOfShoppingCarts_Count", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String numberOfTasks(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.NumberOfTasks", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_ConfigurationItem(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OC_ConfigurationItem", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_ConfigurationItem_FromImport(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OC_ConfigurationItem_FromImport", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_Contract(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OC_Contract", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_DeliveringOrganisation(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OC_DeliveringOrganisation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_Impact(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OC_Impact", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_Priority(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OC_Priority", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_Service(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OC_Service", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_ServiceProcess(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OC_ServiceProcess", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_Urgency(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OC_Urgency", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [801176] Added microflow to set ActualEndTimeUTC when the user changes the ActualEndTime
	 */
	public static void oCh_ActualEndTimeToActualEndTimeUTC(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OCh_ActualEndTimeToActualEndTimeUTC", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [801176] Added microflow to set ActualEndTime when the user changes the ActualEndTimeUTC
	 */
	public static void oCh_ActualEndTimeUTCToActualEndTime(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OCh_ActualEndTimeUTCToActualEndTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [1172365] Option to edit the create time after ticket creation
	 */
	public static void oCh_ChangeAspects_CreateTime(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OCh_ChangeAspects_CreateTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [1172365] Option to edit the create time after ticket creation
	 */
	public static void oCh_ChangeAspects_CreateTimeUTC(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OCh_ChangeAspects_CreateTimeUTC", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oCh_ContractEndTimeToContractEndTimeUTC(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OCh_ContractEndTimeToContractEndTimeUTC", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oCh_ContractEndTimeUTCToContractEndTime(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OCh_ContractEndTimeUTCToContractEndTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [801176] Added microflow to set CreateTimeUTC when the user changes the CreateTime
	 */
	public static void oCh_CreateTimeToCreateTimeUTC(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OCh_CreateTimeToCreateTimeUTC", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [801176] Added microflow to set CreateTime when the user changes the CreateTimeUTC
	 */
	public static void oCh_CreateTimeUTCToCreateTime(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OCh_CreateTimeUTCToCreateTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oCh_HandleLocationChange(IContext context, process.proxies.Request _inputRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputRequest", _inputRequest == null ? null : _inputRequest.getMendixObject());
			Core.execute(context, "Process.OCh_HandleLocationChange", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oCh_HandleRoomChange(IContext context, process.proxies.Request _inputRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputRequest", _inputRequest == null ? null : _inputRequest.getMendixObject());
			Core.execute(context, "Process.OCh_HandleRoomChange", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oCh_MultiComplete_Caller(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OCh_MultiComplete_Caller", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 5858 - Detailed Description is cleared when selecting an date through the datepicker.
	 */
	public static void och_RefreshDetailedDescription(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Och_RefreshDetailedDescription", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 677907: Fill department for person
	 */
	public static void oCh_RequestCaller(IContext context, process.proxies.Request _inputRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputRequest", _inputRequest == null ? null : _inputRequest.getMendixObject());
			Core.execute(context, "Process.OCh_RequestCaller", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oCh_RequestCallerOrganisation(IContext context, process.proxies.Request _inputRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputRequest", _inputRequest == null ? null : _inputRequest.getMendixObject());
			Core.execute(context, "Process.OCh_RequestCallerOrganisation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oCh_RequestPerson(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OCh_RequestPerson", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [801176] Added microflow to set ScheduledEndTimeUTC when the user changes the ScheduledEnd
	 */
	public static void oCh_ScheduledEndTimeToScheduledEndTimeUTC(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OCh_ScheduledEndTimeToScheduledEndTimeUTC", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [801176] Added microflow to set ScheduledEndTime when the user changes the ScheduledEndUTC
	 */
	public static void oCh_ScheduledEndTimeUTCToScheduledEndTime(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OCh_ScheduledEndTimeUTCToScheduledEndTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [801176] Added microflow to set ScheduledStartUTC when the user changes the ScheduledStart
	 */
	public static void oCh_ScheduledStartTimeToScheduledStartTimeUTC(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OCh_ScheduledStartTimeToScheduledStartTimeUTC", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [801176] Added microflow to set ScheduledStart when the user changes the ScheduledStartUTC
	 */
	public static void oCh_ScheduledStartTimeUTCToScheduledStartTime(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OCh_ScheduledStartTimeUTCToScheduledStartTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oCh_SetPersonIsCaller(IContext context, process.proxies.Request _inputRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputRequest", _inputRequest == null ? null : _inputRequest.getMendixObject());
			Core.execute(context, "Process.OCh_SetPersonIsCaller", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oCh_SetReceivingOrganisationIsCallerOrganisation(IContext context, process.proxies.Request _inputRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputRequest", _inputRequest == null ? null : _inputRequest.getMendixObject());
			Core.execute(context, "Process.OCh_SetReceivingOrganisationIsCallerOrganisation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void onChangeRequestReceivingOrganisationPortalRequest(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OnChangeRequestReceivingOrganisationPortalRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void open_Dashboard(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Process.Open_Dashboard", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void open_OpenRequestMonitoring(IContext context, fusionchartsplus.proxies.ChartXML _chartXML)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ChartXML", _chartXML == null ? null : _chartXML.getMendixObject());
			Core.execute(context, "Process.Open_OpenRequestMonitoring", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void open_ParentTask(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Open_ParentTask", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void open_ParentTicket(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Open_ParentTicket", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * This microflow is being used in Deeplink and configured in the data.
	 */
	public static void open_Request(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Open_Request", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * This microflow is being used in Deeplink and configured in the data.
	 * 
	 * Ticket #3835:
	 * Added a sort on RequestID, so the ticket will always be retrieved first in case of a CC-number.
	 */
	public static void open_RequestDeepLink(IContext context, java.lang.String _iD)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ID", _iD);
			Core.execute(context, "Process.Open_RequestDeepLink", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void open_RequestOverview_OpenRequestsInsideContractEndTime(IContext context, fusionchartsplus.proxies.ChartXML _chartXML)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ChartXML", _chartXML == null ? null : _chartXML.getMendixObject());
			Core.execute(context, "Process.Open_RequestOverview_OpenRequestsInsideContractEndTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void open_RequestOverview_OpenRequestsInsideContractResponseTime(IContext context, fusionchartsplus.proxies.ChartXML _chartXML)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ChartXML", _chartXML == null ? null : _chartXML.getMendixObject());
			Core.execute(context, "Process.Open_RequestOverview_OpenRequestsInsideContractResponseTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void open_RequestOverviewBusinessGroup(IContext context, fusionchartsplus.proxies.ChartXML _chartXML)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ChartXML", _chartXML == null ? null : _chartXML.getMendixObject());
			Core.execute(context, "Process.Open_RequestOverviewBusinessGroup", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void open_RequestOverviewPriority(IContext context, fusionchartsplus.proxies.ChartXML _chartXML)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ChartXML", _chartXML == null ? null : _chartXML.getMendixObject());
			Core.execute(context, "Process.Open_RequestOverviewPriority", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void open_RequestOverviewServiceProcess(IContext context, fusionchartsplus.proxies.ChartXML _chartXML)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ChartXML", _chartXML == null ? null : _chartXML.getMendixObject());
			Core.execute(context, "Process.Open_RequestOverviewServiceProcess", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void open_RequestProcessForm(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Open_RequestProcessForm", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void open_Shopping_Cart_Dialog(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Open_Shopping_Cart_Dialog", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * This microflow is being used in Deeplink and configured in the data.
	 */
	public static void open_TaskByDeepLink(IContext context, process.proxies.Task _task, boolean _isPortalUser, boolean _isProcessUser, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			params.put("isPortalUser", _isPortalUser);
			params.put("isProcessUser", _isProcessUser);
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "Process.Open_TaskByDeepLink", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * This microflow is being used in Deeplink and configured in the data.
	 */
	public static void open_TaskDeepLink(IContext context, java.lang.String _iD)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ID", _iD);
			Core.execute(context, "Process.Open_TaskDeepLink", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * This microflow is being used in Deeplink and configured in the data.
	 */
	public static void open_TicketByDeepLink(IContext context, process.proxies.Request _request, boolean _isPortalUser, boolean _isProcessUser, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("isPortalUser", _isPortalUser);
			params.put("isProcessUser", _isProcessUser);
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "Process.Open_TicketByDeepLink", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openAddAffectedCIsDialog(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OpenAddAffectedCIsDialog", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openAffectedCIs_Dialog(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OpenAffectedCIs_Dialog", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openApprovals_Dialog(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OpenApprovals_Dialog", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openAssignToGroupByCast(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OpenAssignToGroupByCast", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 879875: changes to assign to person function
	 * 879875: Configurable option to either show only the members of the assigned group, or all members of all groups allowed by the contract
	 */
	public static void openAssignToPersonByCast(IContext context, process.proxies.Request _request, customlvnl.proxies.AssignToPersonScope _assignToPersonScope)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("AssignToPersonScope", _assignToPersonScope == null ? null : _assignToPersonScope.name());
			Core.execute(context, "Process.OpenAssignToPersonByCast", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openAttachments_Dialog(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OpenAttachments_Dialog", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openAttributes_Dialog(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OpenAttributes_Dialog", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openDialog_Request_AssignedPerson(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OpenDialog_Request_AssignedPerson", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openDialog_Request_CallerPerson(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OpenDialog_Request_CallerPerson", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openDialog_Request_CustomerPerson(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OpenDialog_Request_CustomerPerson", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openDialog_Request_DeliveringOrganisation(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OpenDialog_Request_DeliveringOrganisation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openDialog_Request_Location(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OpenDialog_Request_Location", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openDialog_Request_ReceivingOrganisation(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OpenDialog_Request_ReceivingOrganisation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openEditAttachment(IContext context, process.proxies.RequestAttachment _requestAttachment)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RequestAttachment", _requestAttachment == null ? null : _requestAttachment.getMendixObject());
			Core.execute(context, "Process.OpenEditAttachment", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openEmailInbox(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Process.OpenEmailInbox", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openIncomingMessageOrReply(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			Core.execute(context, "Process.OpenIncomingMessageOrReply", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openNewRequest(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Process.OpenNewRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3544] Workaround fix due to bug when using the BootstrapRTE widget on the initial page the user lands on. When this widget is used, and the CKEditor widget is used in the application, the CKEditor toolbar is attached to the BootstrapRTE widget.
	 * 	As workaround, we first open another page first, which in turn calls to microflow (using the microflow timer widget) to redirect the user to the correct page. 
	 * As this microflow is also used in existing configuration, and microflows (for example Upgrade.IUVK_UpdateDeeplinkConfiguration), it requires less changes when this microflow is still used as the callable microflow for the Deeplink component.
	 * 	Microflow Timer widget requires to be placed in an entity context.Prefer not to create dummy objects. Instead System.User is used, as $currentUser already is containing this object.
	 * 	Added permissions for the portal user roles to use this microflow
	 * 
	 */
	public static void openNewRequest_DeepLink(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Process.OpenNewRequest_DeepLink", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3544] Exact duplicate of the original 'Process.OpenNewRequest_DeepLink'.
	 */
	public static boolean openNewRequest_DeepLinkFromCI(IContext context, cmdb.proxies.ConfigurationItem _configurationItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ConfigurationItem", _configurationItem == null ? null : _configurationItem.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.OpenNewRequest_DeepLinkFromCI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3544] Exact duplicate of the original 'Process.OpenNewRequest_DeepLink'.
	 */
	public static boolean openNewRequest_DeepLinkRedirect(IContext context, system.proxies.User _user)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("User", _user == null ? null : _user.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.OpenNewRequest_DeepLinkRedirect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openProjectSelection(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OpenProjectSelection", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean openQueuedTicket_FromPortal(IContext context, boolean _open_Portal, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Open_Portal", _open_Portal);
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.OpenQueuedTicket_FromPortal", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openReferences_Dialog(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OpenReferences_Dialog", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * Ticket #3688:
	 * Force inheritance for Process type, so switching between related tickets won't fail anymore.
	 */
	public static void openRelatedChange_StartPanel(IContext context, process.proxies.TicketRelations _ticketRelations, process.proxies.Change _change)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TicketRelations", _ticketRelations == null ? null : _ticketRelations.getMendixObject());
			params.put("Change", _change == null ? null : _change.getMendixObject());
			Core.execute(context, "Process.OpenRelatedChange_StartPanel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * Ticket #3688:
	 * Force inheritance for Process type, so switching between related tickets won't fail anymore.
	 */
	public static void openRelatedDelivery_StartPanel(IContext context, process.proxies.TicketRelations _ticketRelations, process.proxies.Delivery _delivery)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TicketRelations", _ticketRelations == null ? null : _ticketRelations.getMendixObject());
			params.put("Delivery", _delivery == null ? null : _delivery.getMendixObject());
			Core.execute(context, "Process.OpenRelatedDelivery_StartPanel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * Ticket #3688:
	 * Force inheritance for Process type, so switching between related tickets won't fail anymore.
	 */
	public static void openRelatedIncident_StartPanel(IContext context, process.proxies.TicketRelations _ticketRelations, process.proxies.Incident _incident)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TicketRelations", _ticketRelations == null ? null : _ticketRelations.getMendixObject());
			params.put("Incident", _incident == null ? null : _incident.getMendixObject());
			Core.execute(context, "Process.OpenRelatedIncident_StartPanel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * Ticket #3688:
	 * Force inheritance for Process type, so switching between related tickets won't fail anymore.
	 */
	public static void openRelatedOperation_StartPanel(IContext context, process.proxies.TicketRelations _ticketRelations, process.proxies.Operation _operation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TicketRelations", _ticketRelations == null ? null : _ticketRelations.getMendixObject());
			params.put("Operation", _operation == null ? null : _operation.getMendixObject());
			Core.execute(context, "Process.OpenRelatedOperation_StartPanel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * Ticket #3688:
	 * Force inheritance for Process type, so switching between related tickets won't fail anymore.
	 */
	public static void openRelatedProblem_StartPanel(IContext context, process.proxies.TicketRelations _ticketRelations, process.proxies.Problem _problem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TicketRelations", _ticketRelations == null ? null : _ticketRelations.getMendixObject());
			params.put("Problem", _problem == null ? null : _problem.getMendixObject());
			Core.execute(context, "Process.OpenRelatedProblem_StartPanel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openRelatedRequest_FromNewRelation(IContext context, process.proxies.OverviewRequest _overviewRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OverviewRequest", _overviewRequest == null ? null : _overviewRequest.getMendixObject());
			Core.execute(context, "Process.OpenRelatedRequest_FromNewRelation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openRelatedRequest_StartPanel(IContext context, process.proxies.TicketRelations _ticketRelations, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TicketRelations", _ticketRelations == null ? null : _ticketRelations.getMendixObject());
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OpenRelatedRequest_StartPanel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * Ticket #3688:
	 * Force inheritance for Process type, so switching between related tickets won't fail anymore.
	 */
	public static void openRelatedServiceRequest_StartPanel(IContext context, process.proxies.TicketRelations _ticketRelations, process.proxies.ServiceRequest _serviceRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TicketRelations", _ticketRelations == null ? null : _ticketRelations.getMendixObject());
			params.put("ServiceRequest", _serviceRequest == null ? null : _serviceRequest.getMendixObject());
			Core.execute(context, "Process.OpenRelatedServiceRequest_StartPanel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * Ticket #3688:
	 * Force inheritance for Process type, so switching between related tickets won't fail anymore.
	 */
	public static void openRelatedTask_StartPanel(IContext context, process.proxies.TicketRelations _ticketRelations, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TicketRelations", _ticketRelations == null ? null : _ticketRelations.getMendixObject());
			params.put("Task", _task == null ? null : _task.getMendixObject());
			Core.execute(context, "Process.OpenRelatedTask_StartPanel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * Ticket #3688:
	 * Force inheritance for Process type, so switching between related tickets won't fail anymore.
	 */
	public static void openRelations_Dialog(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OpenRelations_Dialog", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openReminders_Dialog_ByCast(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OpenReminders_Dialog_ByCast", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openShoppingCart_Dialog(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OpenShoppingCart_Dialog", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openTask_SingleRequest(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			Core.execute(context, "Process.OpenTask_SingleRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openTasks_Dialog(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.OpenTasks_Dialog", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean parentHasCart(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.ParentHasCart", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * ED95 PERFORMANCE ISSUE (Ticket #4048)
	 * 
	 * > Oude retrieve van personen:
	 * [NAP.Person_Organisation/NAP.Organisation/Process.Receiving_Organisation = $Request]
	 * 
	 * > Nieuwe retrieve van personen:
	 * [NAP.Person_Organisation/NAP.Organisation/Process.Receiving_Organisation = $Request]
	 * [$Person = id]
	 */
	public static boolean portal_Field_CheckReadWritePermissions(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Portal_Field_CheckReadWritePermissions", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean portalUserHasCI(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.PortalUserHasCI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void priority_SetAspect(IContext context, process.proxies.Request _request, boolean _useParent, java.lang.Long _contractCount, slm.proxies.Contract_Type _contractType, process.proxies.Request _parent, java.lang.Long _maxDropDownResultSize)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("UseParent", _useParent);
			params.put("ContractCount", _contractCount);
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("Parent", _parent == null ? null : _parent.getMendixObject());
			params.put("MaxDropDownResultSize", _maxDropDownResultSize);
			Core.execute(context, "Process.Priority_SetAspect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Priority> priorityList_All_EntityAccess(IContext context, process.proxies.Request _request, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.PriorityList_All_EntityAccess", params);
			java.util.List<slm.proxies.Priority> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Priority>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Priority.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long priorityList_Count(IContext context, process.proxies.Request _request, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			return (java.lang.Long)Core.execute(context, "Process.PriorityList_Count", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Priority> priorityList_Determined_All_EntityAccess(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.PriorityList_Determined_All_EntityAccess", params);
			java.util.List<slm.proxies.Priority> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Priority>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Priority.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static slm.proxies.Priority priorityList_First(IContext context, process.proxies.Request _request, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.PriorityList_First", params);
			return result == null ? null : slm.proxies.Priority.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Priority> priorityList_OLA_All_EntityAccess(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.PriorityList_OLA_All_EntityAccess", params);
			java.util.List<slm.proxies.Priority> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Priority>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Priority.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Priority> priorityList_OLA_All_PopUp(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.PriorityList_OLA_All_PopUp", params);
			java.util.List<slm.proxies.Priority> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Priority>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Priority.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean priorityList_ParentValid(IContext context, process.proxies.Request _request, slm.proxies.Contract_Type _contractType, process.proxies.Request _parentRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("ParentRequest", _parentRequest == null ? null : _parentRequest.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.PriorityList_ParentValid", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Priority> priorityList_SLA_All_EntityAccess(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.PriorityList_SLA_All_EntityAccess", params);
			java.util.List<slm.proxies.Priority> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Priority>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Priority.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Priority> priorityList_SLA_All_PopUp(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.PriorityList_SLA_All_PopUp", params);
			java.util.List<slm.proxies.Priority> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Priority>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Priority.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processAutoComplete_TicketRelation(IContext context, process.proxies.TicketRelations _ticketRelations)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TicketRelations", _ticketRelations == null ? null : _ticketRelations.getMendixObject());
			Core.execute(context, "Process.ProcessAutoComplete_TicketRelation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void recalculateReceiverEscalation(IContext context, process.proxies.Request _request, process.proxies.Notification _notification)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Notification", _notification == null ? null : _notification.getMendixObject());
			Core.execute(context, "Process.RecalculateReceiverEscalation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void recalculateReceivers(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.RecalculateReceivers", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void recalculateTimes(IContext context, process.proxies.Notification _notification)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Notification", _notification == null ? null : _notification.getMendixObject());
			Core.execute(context, "Process.RecalculateTimes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void refresh_ClosedRequestKPI(IContext context, fusionchartsplus.proxies.ChartXML _chartXML)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ChartXML", _chartXML == null ? null : _chartXML.getMendixObject());
			Core.execute(context, "Process.Refresh_ClosedRequestKPI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void refresh_CustomerSatisfactionClosedRequestKPI(IContext context, fusionchartsplus.proxies.ChartXML _chartXML)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ChartXML", _chartXML == null ? null : _chartXML.getMendixObject());
			Core.execute(context, "Process.Refresh_CustomerSatisfactionClosedRequestKPI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void refresh_FTRClosedRequestKPI(IContext context, fusionchartsplus.proxies.ChartXML _chartXML)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ChartXML", _chartXML == null ? null : _chartXML.getMendixObject());
			Core.execute(context, "Process.Refresh_FTRClosedRequestKPI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void refresh_InsideSLAClosedRequestKPI(IContext context, fusionchartsplus.proxies.ChartXML _chartXML)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ChartXML", _chartXML == null ? null : _chartXML.getMendixObject());
			Core.execute(context, "Process.Refresh_InsideSLAClosedRequestKPI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void refresh_InsideSLAClosedRequestServiceKPI(IContext context, fusionchartsplus.proxies.ChartXML _chartXML)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ChartXML", _chartXML == null ? null : _chartXML.getMendixObject());
			Core.execute(context, "Process.Refresh_InsideSLAClosedRequestServiceKPI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void refreshPausedReason(IContext context, process.proxies.PausedTime _pausedTime)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PausedTime", _pausedTime == null ? null : _pausedTime.getMendixObject());
			Core.execute(context, "Process.RefreshPausedReason", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void refreshRequestSpecialization(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.RefreshRequestSpecialization", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 1020244: configure whether manual deletion of ticket relations is allowed
	 */
	public static void refreshSearchParams(IContext context, process.proxies.Request _request, process.proxies.TicketRelations _ticketRelations)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("TicketRelations", _ticketRelations == null ? null : _ticketRelations.getMendixObject());
			Core.execute(context, "Process.RefreshSearchParams", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * LVNL: changed in order to connect to new module 'QuestionnaireV2' (SprintR 573371)
	 */
	public static void reGenerateAnalysis(IContext context, process.proxies.Request _request, questionnairev2.proxies.QuestionnaireTemplate _questionnaireTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("QuestionnaireTemplate", _questionnaireTemplate == null ? null : _questionnaireTemplate.getMendixObject());
			Core.execute(context, "Process.ReGenerateAnalysis", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void relateChildRequests(IContext context, java.util.List<process.proxies.Request> _requestList, process.proxies.Dummy_Matching_View _dummy_Matching_View)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_requestList = null;
			if (_requestList != null)
			{
				listparam_requestList = new java.util.ArrayList<IMendixObject>();
				for (process.proxies.Request obj : _requestList)
					listparam_requestList.add(obj.getMendixObject());
			}
			params.put("RequestList", listparam_requestList);
			params.put("Dummy_Matching_View", _dummy_Matching_View == null ? null : _dummy_Matching_View.getMendixObject());
			Core.execute(context, "Process.RelateChildRequests", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void relateChildRequests_Single(IContext context, process.proxies.Request _request, process.proxies.Dummy_Matching_View _dummy_Matching_View)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Dummy_Matching_View", _dummy_Matching_View == null ? null : _dummy_Matching_View.getMendixObject());
			Core.execute(context, "Process.RelateChildRequests_Single", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String relatedTaskSnippet(IContext context, process.proxies.OverviewRequest _overviewRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OverviewRequest", _overviewRequest == null ? null : _overviewRequest.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.RelatedTaskSnippet", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String relatedTicketSnippet(IContext context, process.proxies.OverviewRequest _overviewRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OverviewRequest", _overviewRequest == null ? null : _overviewRequest.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.RelatedTicketSnippet", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String relatedTicketSnippet_Body(IContext context, process.proxies.OverviewRequest _overviewRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OverviewRequest", _overviewRequest == null ? null : _overviewRequest.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.RelatedTicketSnippet_Body", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void relateParentRequests(IContext context, java.util.List<process.proxies.Request> _requestList, process.proxies.Dummy_Matching_View _dummy_Matching_View)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_requestList = null;
			if (_requestList != null)
			{
				listparam_requestList = new java.util.ArrayList<IMendixObject>();
				for (process.proxies.Request obj : _requestList)
					listparam_requestList.add(obj.getMendixObject());
			}
			params.put("RequestList", listparam_requestList);
			params.put("Dummy_Matching_View", _dummy_Matching_View == null ? null : _dummy_Matching_View.getMendixObject());
			Core.execute(context, "Process.RelateParentRequests", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void relateParentRequests_Single(IContext context, process.proxies.Request _request, process.proxies.Dummy_Matching_View _dummy_Matching_View)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Dummy_Matching_View", _dummy_Matching_View == null ? null : _dummy_Matching_View.getMendixObject());
			Core.execute(context, "Process.RelateParentRequests_Single", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void relateRequest(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.RelateRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void reminder_Edit(IContext context, process.proxies.Reminder _reminder)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Reminder", _reminder == null ? null : _reminder.getMendixObject());
			Core.execute(context, "Process.Reminder_Edit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void removeAttachment(IContext context, emailplus.proxies.MessageAttachment _messageAttachment, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MessageAttachment", _messageAttachment == null ? null : _messageAttachment.getMendixObject());
			params.put("Message", _message == null ? null : _message.getMendixObject());
			Core.execute(context, "Process.RemoveAttachment", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void replyToAllIncomingMessage(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			Core.execute(context, "Process.ReplyToAllIncomingMessage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void replyToIncomingMessage(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			Core.execute(context, "Process.ReplyToIncomingMessage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 3417
	 * Added Request_DB used for SLM Aspect Audit historic fields.
	 */
	public static boolean request_ActionExecute(IContext context, process.proxies.Request _request, interfaceshared.proxies.ProcessingPart _processingPart, interfaceconfiguration.proxies.InterfaceConfiguration _interfaceConfiguration, process.proxies.Request _request_DB)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ProcessingPart", _processingPart == null ? null : _processingPart.getMendixObject());
			params.put("InterfaceConfiguration", _interfaceConfiguration == null ? null : _interfaceConfiguration.getMendixObject());
			params.put("Request_DB", _request_DB == null ? null : _request_DB.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Request_ActionExecute", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<statetransition.proxies.Transition> request_ActionMenu(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.Request_ActionMenu", params);
			java.util.List<statetransition.proxies.Transition> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<statetransition.proxies.Transition>();
				for (IMendixObject obj : objs)
					result.add(statetransition.proxies.Transition.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<statetransition.proxies.Transition> request_ActionMenu_Filtered(IContext context, process.proxies.Request _request, java.util.List<statetransition.proxies.Transition> _transitionList_Subset)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_transitionList_Subset = null;
			if (_transitionList_Subset != null)
			{
				listparam_transitionList_Subset = new java.util.ArrayList<IMendixObject>();
				for (statetransition.proxies.Transition obj : _transitionList_Subset)
					listparam_transitionList_Subset.add(obj.getMendixObject());
			}
			params.put("TransitionList_Subset", listparam_transitionList_Subset);
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.Request_ActionMenu_Filtered", params);
			java.util.List<statetransition.proxies.Transition> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<statetransition.proxies.Transition>();
				for (IMendixObject obj : objs)
					result.add(statetransition.proxies.Transition.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * #3635
	 * Changed AdvancedSearch.Index.CMDB to AdvancedSearch.Index.Request
	 * 
	 */
	public static boolean request_AfterDelete(IContext context, process.proxies.Request _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Request_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void request_Caller_OnChange(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Request_Caller_OnChange", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean request_CheckAnalysisRequired(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Request_CheckAnalysisRequired", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void request_CheckDynamicProcessFieldsOnClose(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Request_CheckDynamicProcessFieldsOnClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void request_CheckDynamicProcessFieldsOnSolve(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Request_CheckDynamicProcessFieldsOnSolve", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean request_CheckReadWritePermissions_WithErrors(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Request_CheckReadWritePermissions_WithErrors", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<process.proxies.Request> request_CheckRelatedChildClose(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.Request_CheckRelatedChildClose", params);
			java.util.List<process.proxies.Request> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<process.proxies.Request>();
				for (IMendixObject obj : objs)
					result.add(process.proxies.Request.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<process.proxies.Request> request_CheckRelatedParentClose(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.Request_CheckRelatedParentClose", params);
			java.util.List<process.proxies.Request> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<process.proxies.Request>();
				for (IMendixObject obj : objs)
					result.add(process.proxies.Request.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean request_CheckRequiredFields(IContext context, process.proxies.Request _request, process.proxies.RequiredFieldsOn _requirtedFieldsOn_Main, boolean _fieldValidation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("RequirtedFieldsOn_Main", _requirtedFieldsOn_Main == null ? null : _requirtedFieldsOn_Main.name());
			params.put("FieldValidation", _fieldValidation);
			return (java.lang.Boolean)Core.execute(context, "Process.Request_CheckRequiredFields", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 912253/216117: ICT Service Request >> Create as Closed Request
	 */
	public static boolean request_CheckRequiredFields_OnNewClosedRequest(IContext context, process.proxies.Request _request, process.proxies.RequiredFieldsOn _requirtedFieldsOn_Main, boolean _fieldValidation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("RequirtedFieldsOn_Main", _requirtedFieldsOn_Main == null ? null : _requirtedFieldsOn_Main.name());
			params.put("FieldValidation", _fieldValidation);
			return (java.lang.Boolean)Core.execute(context, "Process.Request_CheckRequiredFields_OnNewClosedRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean request_CheckRequiredFieldsOnClose_Dialog(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Request_CheckRequiredFieldsOnClose_Dialog", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void request_CheckRequiredFieldsOnSolve_Dialog(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Request_CheckRequiredFieldsOnSolve_Dialog", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean request_CheckScheduledDates(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Request_CheckScheduledDates", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean request_CheckShoppingCart(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Request_CheckShoppingCart", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean request_CheckWishDates(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Request_CheckWishDates", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void request_ClearAction(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Request_ClearAction", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long request_ContractElapsedTimePercent(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Long)Core.execute(context, "Process.Request_ContractElapsedTimePercent", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String request_ContractRemainingTime(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.Request_ContractRemainingTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void request_CreateAnalysis(IContext context, process.proxies.Request _request, statetransition.proxies.Function _function)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Function", _function == null ? null : _function.getMendixObject());
			Core.execute(context, "Process.Request_CreateAnalysis", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3073] Removed microflow call to 'AC_SetPortalFields'
	 * 677907: Added Department
	 */
	public static void request_EventHandler_AfterCommit(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Request_EventHandler_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void request_EventHandler_AfterCreate(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Request_EventHandler_AfterCreate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [801176] Added check if CreateTime, ActualEndTime, or scheduled times have changes. If changed, update the UTC counterparts
	 * 
	 * [809110] Added check for association ExternalReference_Request to update the overview request
	 */
	public static boolean request_EventHandler_BeforeCommit(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Request_EventHandler_BeforeCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * #3577
	 * Canceled Request not working as expected.
	 */
	public static boolean request_Field_CheckReadWritePermissions(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Request_Field_CheckReadWritePermissions", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * #3577
	 * Canceled Request not working as expected.
	 */
	public static boolean request_Field_CheckReadWritePermissionsForGroup(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Request_Field_CheckReadWritePermissionsForGroup", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * #3577
	 * Canceled Request not working as expected.
	 */
	public static boolean request_Field_CheckReadWritePermissionsForNotes(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Request_Field_CheckReadWritePermissionsForNotes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 5920: Qlik Sense: Filtering voor tickets welke zijn herplaatst naar een andere groep: Verzoek extra veld of relatie
	 * 
	 * [879875] Assign to group and person directly
	 * 
	 * 1165993 - It has become possible to clear the assignee by reassigning the ticket to the same group. This should not affect the first call resolution KPI
	 */
	public static void request_FunctionAssignToGroupSelect(IContext context, nap.proxies.BusinessGroup _businessGroup, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("BusinessGroup", _businessGroup == null ? null : _businessGroup.getMendixObject());
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Request_FunctionAssignToGroupSelect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [1165993] Reset assignee
	 */
	public static void request_FunctionAssignToGroupSelect_Change(IContext context, nap.proxies.BusinessGroup _businessGroup, process.proxies.Change _change)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("BusinessGroup", _businessGroup == null ? null : _businessGroup.getMendixObject());
			params.put("Change", _change == null ? null : _change.getMendixObject());
			Core.execute(context, "Process.Request_FunctionAssignToGroupSelect_Change", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [1165993] Reset assignee
	 */
	public static void request_FunctionAssignToGroupSelect_Delivery(IContext context, nap.proxies.BusinessGroup _businessGroup, process.proxies.Delivery _delivery)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("BusinessGroup", _businessGroup == null ? null : _businessGroup.getMendixObject());
			params.put("Delivery", _delivery == null ? null : _delivery.getMendixObject());
			Core.execute(context, "Process.Request_FunctionAssignToGroupSelect_Delivery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [1165993] Reset assignee
	 */
	public static void request_FunctionAssignToGroupSelect_Incident(IContext context, nap.proxies.BusinessGroup _businessGroup, process.proxies.Incident _incident)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("BusinessGroup", _businessGroup == null ? null : _businessGroup.getMendixObject());
			params.put("Incident", _incident == null ? null : _incident.getMendixObject());
			Core.execute(context, "Process.Request_FunctionAssignToGroupSelect_Incident", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [1165993] Reset assignee
	 */
	public static void request_FunctionAssignToGroupSelect_Operation(IContext context, nap.proxies.BusinessGroup _businessGroup, process.proxies.Operation _operation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("BusinessGroup", _businessGroup == null ? null : _businessGroup.getMendixObject());
			params.put("Operation", _operation == null ? null : _operation.getMendixObject());
			Core.execute(context, "Process.Request_FunctionAssignToGroupSelect_Operation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [1165993] Reset assignee
	 */
	public static void request_FunctionAssignToGroupSelect_Problem(IContext context, nap.proxies.BusinessGroup _businessGroup, process.proxies.Problem _problem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("BusinessGroup", _businessGroup == null ? null : _businessGroup.getMendixObject());
			params.put("Problem", _problem == null ? null : _problem.getMendixObject());
			Core.execute(context, "Process.Request_FunctionAssignToGroupSelect_Problem", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [1165993] Reset assignee
	 */
	public static void request_FunctionAssignToGroupSelect_ServiceRequest(IContext context, nap.proxies.BusinessGroup _businessGroup, process.proxies.ServiceRequest _serviceRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("BusinessGroup", _businessGroup == null ? null : _businessGroup.getMendixObject());
			params.put("ServiceRequest", _serviceRequest == null ? null : _serviceRequest.getMendixObject());
			Core.execute(context, "Process.Request_FunctionAssignToGroupSelect_ServiceRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [1165993] Reset assignee
	 */
	public static void request_FunctionAssignToGroupSelect_Task(IContext context, nap.proxies.BusinessGroup _businessGroup, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("BusinessGroup", _businessGroup == null ? null : _businessGroup.getMendixObject());
			params.put("Task", _task == null ? null : _task.getMendixObject());
			Core.execute(context, "Process.Request_FunctionAssignToGroupSelect_Task", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [879875] Assign to group and person directly - Allow assignment to all persons linked to any group within the current contract (instead of only members of the current assigned group)
	 * 879875: Configurable option to either show only the members of the assigned group, or all members of all groups allowed by the contract
	 */
	public static void request_FunctionAssignToPersonSelect(IContext context, nap.proxies.Person _person, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Request_FunctionAssignToPersonSelect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void request_FunctionAssignToPersonSelect_Change(IContext context, nap.proxies.Person _person, process.proxies.Change _change)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			params.put("Change", _change == null ? null : _change.getMendixObject());
			Core.execute(context, "Process.Request_FunctionAssignToPersonSelect_Change", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void request_FunctionAssignToPersonSelect_Delivery(IContext context, nap.proxies.Person _person, process.proxies.Delivery _delivery)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			params.put("Delivery", _delivery == null ? null : _delivery.getMendixObject());
			Core.execute(context, "Process.Request_FunctionAssignToPersonSelect_Delivery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void request_FunctionAssignToPersonSelect_Incident(IContext context, nap.proxies.Person _person, process.proxies.Incident _incident)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			params.put("Incident", _incident == null ? null : _incident.getMendixObject());
			Core.execute(context, "Process.Request_FunctionAssignToPersonSelect_Incident", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void request_FunctionAssignToPersonSelect_Operation(IContext context, nap.proxies.Person _person, process.proxies.Operation _operation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			params.put("Operation", _operation == null ? null : _operation.getMendixObject());
			Core.execute(context, "Process.Request_FunctionAssignToPersonSelect_Operation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void request_FunctionAssignToPersonSelect_Problem(IContext context, nap.proxies.Person _person, process.proxies.Problem _problem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			params.put("Problem", _problem == null ? null : _problem.getMendixObject());
			Core.execute(context, "Process.Request_FunctionAssignToPersonSelect_Problem", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void request_FunctionAssignToPersonSelect_ServiceRequest(IContext context, nap.proxies.Person _person, process.proxies.ServiceRequest _serviceRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			params.put("ServiceRequest", _serviceRequest == null ? null : _serviceRequest.getMendixObject());
			Core.execute(context, "Process.Request_FunctionAssignToPersonSelect_ServiceRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [879875] Assign to group and person directly - use submicroflow instead of copying new funcitonality to this microflow
	 */
	public static void request_FunctionAssignToPersonSelect_Task(IContext context, nap.proxies.Person _person, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			params.put("Task", _task == null ? null : _task.getMendixObject());
			Core.execute(context, "Process.Request_FunctionAssignToPersonSelect_Task", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void request_FunctionAutoClose(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Request_FunctionAutoClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void request_FunctionCancelAutoclose(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Request_FunctionCancelAutoclose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void request_FunctionCancelNotifications(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Request_FunctionCancelNotifications", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void request_FunctionCancelPause(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Request_FunctionCancelPause", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean request_FunctionCheckAllCILevelsFilled(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Request_FunctionCheckAllCILevelsFilled", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean request_FunctionCheckAllCILevelsFilled_OnCreateAsClosed(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Request_FunctionCheckAllCILevelsFilled_OnCreateAsClosed", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean request_FunctionCheckOpenTasks(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Request_FunctionCheckOpenTasks", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void request_FunctionCheckTriggers(IContext context, process.proxies.Request _request, statetransition.proxies.Function _function)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Function", _function == null ? null : _function.getMendixObject());
			Core.execute(context, "Process.Request_FunctionCheckTriggers", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean request_FunctionCloseCheckRequiredFields(IContext context, process.proxies.Request _request, statetransition.proxies.Function _function)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Function", _function == null ? null : _function.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Request_FunctionCloseCheckRequiredFields", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void request_FunctionCloseRelated(IContext context, process.proxies.Request _request, statetransition.proxies.TransitionMessage _notifyOnlyMessage, statetransition.proxies.TransitionMessage _errorMessage, statetransition.proxies.TransitionMessage _notifyAndActionMessage)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("NotifyOnlyMessage", _notifyOnlyMessage == null ? null : _notifyOnlyMessage.getMendixObject());
			params.put("ErrorMessage", _errorMessage == null ? null : _errorMessage.getMendixObject());
			params.put("NotifyAndActionMessage", _notifyAndActionMessage == null ? null : _notifyAndActionMessage.getMendixObject());
			Core.execute(context, "Process.Request_FunctionCloseRelated", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void request_FunctionContinueContractTimer(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Request_FunctionContinueContractTimer", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void request_FunctionCreateTaskFromTemplate(IContext context, process.proxies.Request _request, statetransition.proxies.Function _function)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Function", _function == null ? null : _function.getMendixObject());
			Core.execute(context, "Process.Request_FunctionCreateTaskFromTemplate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void request_FunctionCreateTicketFromTemplate(IContext context, process.proxies.Request _request, statetransition.proxies.Function _function)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Function", _function == null ? null : _function.getMendixObject());
			Core.execute(context, "Process.Request_FunctionCreateTicketFromTemplate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void request_FunctionDetachChild(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Request_FunctionDetachChild", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 3417
	 * Retrieve Request_DB used for SLM Aspect Audit historic fields.
	 */
	public static void request_FunctionEndPause(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Request_FunctionEndPause", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean request_FunctionIndexRequest(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Request_FunctionIndexRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 3547
	 * ExecutedByUser. This is the user that executed this function.
	 */
	public static void request_FunctionNotify(IContext context, process.proxies.Request _request, statetransition.proxies.TransitionMessage _transitionMessage, system.proxies.User _executedByUser)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("TransitionMessage", _transitionMessage == null ? null : _transitionMessage.getMendixObject());
			params.put("ExecutedByUser", _executedByUser == null ? null : _executedByUser.getMendixObject());
			Core.execute(context, "Process.Request_FunctionNotify", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean request_FunctionPause(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Request_FunctionPause", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 3417
	 * Retrieve Request_DB used for SLM Aspect Audit historic fields.
	 * 
	 * 
	 * 3737
	 * The clear solve time and enable process notifications always need to be triggerd. Also deleted the first split on "Free End Time". There is already a split handling free end time.
	 */
	public static void request_FunctionRestartContractTimer(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Request_FunctionRestartContractTimer", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 3547
	 * Association "RequestAsyncFunction_User" is used to determine the user created the RequestAsyncFunction
	 * 879875: Configurable option to either show only the members of the assigned group, or all members of all groups allowed by the contract
	 */
	public static boolean request_Functions(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Request_Functions", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void request_FunctionSendQuestionnaire(IContext context, statetransition.proxies.TransitionMessage _transitionMessage, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TransitionMessage", _transitionMessage == null ? null : _transitionMessage.getMendixObject());
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Request_FunctionSendQuestionnaire", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void request_FunctionSetNotFTR(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Request_FunctionSetNotFTR", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void request_FunctionSignalWorkflow(IContext context, process.proxies.Request _request, statetransition.proxies.Function _function)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Function", _function == null ? null : _function.getMendixObject());
			Core.execute(context, "Process.Request_FunctionSignalWorkflow", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean request_FunctionSolveCheckRequiredFields(IContext context, process.proxies.Request _request, statetransition.proxies.Function _function)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Function", _function == null ? null : _function.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Request_FunctionSolveCheckRequiredFields", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void request_FunctionSolveRelated(IContext context, process.proxies.Request _request, statetransition.proxies.TransitionMessage _notifyOnlyMessage, statetransition.proxies.TransitionMessage _errorMessage, statetransition.proxies.TransitionMessage _notifyAndActionMessage)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("NotifyOnlyMessage", _notifyOnlyMessage == null ? null : _notifyOnlyMessage.getMendixObject());
			params.put("ErrorMessage", _errorMessage == null ? null : _errorMessage.getMendixObject());
			params.put("NotifyAndActionMessage", _notifyAndActionMessage == null ? null : _notifyAndActionMessage.getMendixObject());
			Core.execute(context, "Process.Request_FunctionSolveRelated", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void request_FunctionStartApproval(IContext context, process.proxies.Request _request, statetransition.proxies.Function _function)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Function", _function == null ? null : _function.getMendixObject());
			Core.execute(context, "Process.Request_FunctionStartApproval", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void request_FunctionStartWorkflow(IContext context, process.proxies.Request _request, statetransition.proxies.Function _function)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Function", _function == null ? null : _function.getMendixObject());
			Core.execute(context, "Process.Request_FunctionStartWorkflow", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void request_FunctionStopContractTimer(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Request_FunctionStopContractTimer", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void request_FunctionStopResponseTimer(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Request_FunctionStopResponseTimer", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void request_FunctionTakeOver(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Request_FunctionTakeOver", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void request_FunctionWorkflowRequestClosed(IContext context, process.proxies.Request _request, statetransition.proxies.Function _function)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Function", _function == null ? null : _function.getMendixObject());
			Core.execute(context, "Process.Request_FunctionWorkflowRequestClosed", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void request_GetMatrix(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Request_GetMatrix", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<statetransition.proxies.Transition> request_HiddenActionMenu(IContext context, process.proxies.Request _request, interfaceshared.proxies.ProcessingPart _parentProcessingPart, interfaceconfiguration.proxies.InterfaceConfiguration _interfaceConfiguration, java.util.List<statetransition.proxies.Transition> _transitionList_Subset)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ParentProcessingPart", _parentProcessingPart == null ? null : _parentProcessingPart.getMendixObject());
			params.put("InterfaceConfiguration", _interfaceConfiguration == null ? null : _interfaceConfiguration.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_transitionList_Subset = null;
			if (_transitionList_Subset != null)
			{
				listparam_transitionList_Subset = new java.util.ArrayList<IMendixObject>();
				for (statetransition.proxies.Transition obj : _transitionList_Subset)
					listparam_transitionList_Subset.add(obj.getMendixObject());
			}
			params.put("TransitionList_Subset", listparam_transitionList_Subset);
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.Request_HiddenActionMenu", params);
			java.util.List<statetransition.proxies.Transition> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<statetransition.proxies.Transition>();
				for (IMendixObject obj : objs)
					result.add(statetransition.proxies.Transition.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean request_InitialPhaseState(IContext context, process.proxies.Request _request, interfaceshared.proxies.ProcessingAttempt _eventInitiatingProcessingAttempt, interfaceshared.proxies.ProcessingPart _processingPart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("EventInitiatingProcessingAttempt", _eventInitiatingProcessingAttempt == null ? null : _eventInitiatingProcessingAttempt.getMendixObject());
			params.put("ProcessingPart", _processingPart == null ? null : _processingPart.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Request_InitialPhaseState", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void request_InitialQueuedPhaseState(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Request_InitialQueuedPhaseState", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String request_Requester(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.Request_Requester", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [846273] Set UTC time as well;
	 */
	public static void request_SetActualEndTime(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Request_SetActualEndTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void request_TransferPhaseState(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Request_TransferPhaseState", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<process.proxies.Request> requestAllSubtasks(IContext context, process.proxies.Request _request, java.lang.Long _recursionCounter)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("RecursionCounter", _recursionCounter);
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.RequestAllSubtasks", params);
			java.util.List<process.proxies.Request> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<process.proxies.Request>();
				for (IMendixObject obj : objs)
					result.add(process.proxies.Request.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<process.proxies.Request> requestDirectSubtasks(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.RequestDirectSubtasks", params);
			java.util.List<process.proxies.Request> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<process.proxies.Request>();
				for (IMendixObject obj : objs)
					result.add(process.proxies.Request.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void requestEvent_And_AuditTicketRelations_AfterCommit(IContext context, process.proxies.TicketRelations _ticketRelations)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TicketRelations", _ticketRelations == null ? null : _ticketRelations.getMendixObject());
			Core.execute(context, "Process.RequestEvent_And_AuditTicketRelations_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void requestEvent_IndexRequest(IContext context, process.proxies.Request _request, process.proxies.RequestEvent _requestEvent)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("RequestEvent", _requestEvent == null ? null : _requestEvent.getMendixObject());
			Core.execute(context, "Process.RequestEvent_IndexRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void requestStartPlannedTicket(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.RequestStartPlannedTicket", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * You may only start a planned request.
	 */
	public static void requestStartPlannedTicketList_NEW(IContext context, scheduling.proxies.ScheduledDay _scheduledDay)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ScheduledDay", _scheduledDay == null ? null : _scheduledDay.getMendixObject());
			Core.execute(context, "Process.RequestStartPlannedTicketList_NEW", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void requestStartPlannedTickets(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Process.RequestStartPlannedTickets", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void resetRequestMultiComplete(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.resetRequestMultiComplete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void restoreRejectedMessage(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			Core.execute(context, "Process.RestoreRejectedMessage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static process.proxies.Request retrieveSRMRequest(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.RetrieveSRMRequest", params);
			return result == null ? null : process.proxies.Request.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void save_ExternalReference(IContext context, process.proxies.ExternalReference _externalReference)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ExternalReference", _externalReference == null ? null : _externalReference.getMendixObject());
			Core.execute(context, "Process.Save_ExternalReference", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void save_Reminder(IContext context, process.proxies.Reminder _reminder)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Reminder", _reminder == null ? null : _reminder.getMendixObject());
			Core.execute(context, "Process.Save_Reminder", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean save_Task(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Save_Task", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void saveDynamicAttribute(IContext context, process.proxies.DynamicAtrribute _dynamicAtrribute)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicAtrribute", _dynamicAtrribute == null ? null : _dynamicAtrribute.getMendixObject());
			Core.execute(context, "Process.SaveDynamicAttribute", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void saveNewRelation(IContext context, process.proxies.TicketRelations _ticketRelations)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TicketRelations", _ticketRelations == null ? null : _ticketRelations.getMendixObject());
			Core.execute(context, "Process.SaveNewRelation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * Ticket #3813:
	 * Change Scheduled_AutoClose microflows, so it continues after a record fails + extra log node.
	 */
	public static void scheduled_AutoClose_ToBeFired(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Process.Scheduled_AutoClose_ToBeFired", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * Ticket #3813:
	 * Change Scheduled_AutoClose microflows, so it continues after a record fails + extra log node.
	 */
	public static void scheduled_AutoCloseAction(IContext context, process.proxies.AutoClose _autoClose)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AutoClose", _autoClose == null ? null : _autoClose.getMendixObject());
			Core.execute(context, "Process.Scheduled_AutoCloseAction", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void scheduled_Notification_Send(IContext context, process.proxies.Notification _notification)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Notification", _notification == null ? null : _notification.getMendixObject());
			Core.execute(context, "Process.Scheduled_Notification_Send", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void scheduled_Notifications_ToBeFired(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Process.Scheduled_Notifications_ToBeFired", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void scheduled_Reminders_Send(IContext context, process.proxies.Reminder _reminder)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Reminder", _reminder == null ? null : _reminder.getMendixObject());
			Core.execute(context, "Process.Scheduled_Reminders_Send", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void scheduled_Reminders_ToBeFired(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Process.Scheduled_Reminders_ToBeFired", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void search_Knowledge(IContext context, mendix.proxies.KnowledgeSearch _knowledgeSearch)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("KnowledgeSearch", _knowledgeSearch == null ? null : _knowledgeSearch.getMendixObject());
			Core.execute(context, "Process.Search_Knowledge", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void selectAssignedPerson(IContext context, nap.proxies.Person _person, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.SelectAssignedPerson", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void selectDeliveringOrganization(IContext context, nap.proxies.BusinessGroup _businessGroup, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("BusinessGroup", _businessGroup == null ? null : _businessGroup.getMendixObject());
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.SelectDeliveringOrganization", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sendMessageToPersonNotificationSubscriptionList(IContext context, nap.proxies.NotificationSubscription _notificationSubscription, process.proxies.Request _request, emailplus.proxies.MessageSource _messageSource, nap.proxies.Person _assignedPerson, nap.proxies.Organisation _assignedGroup, process.proxies.RequestEvent _requestEvent)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("NotificationSubscription", _notificationSubscription == null ? null : _notificationSubscription.getMendixObject());
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("MessageSource", _messageSource == null ? null : _messageSource.name());
			params.put("AssignedPerson", _assignedPerson == null ? null : _assignedPerson.getMendixObject());
			params.put("AssignedGroup", _assignedGroup == null ? null : _assignedGroup.getMendixObject());
			params.put("RequestEvent", _requestEvent == null ? null : _requestEvent.getMendixObject());
			Core.execute(context, "Process.SendMessageToPersonNotificationSubscriptionList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sendProcessFreeMessage(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			Core.execute(context, "Process.SendProcessFreeMessage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sendRequestSubscribers(IContext context, process.proxies.Request _request, emailplus.proxies.MessageSource _messageSource)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("MessageSource", _messageSource == null ? null : _messageSource.name());
			Core.execute(context, "Process.SendRequestSubscribers", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sendRequestSubscribers_FromChangedPersonOrGroup(IContext context, process.proxies.Request _request, emailplus.proxies.MessageSource _messageSource, nap.proxies.Person _assignedPerson, nap.proxies.Organisation _assignedGroup)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("MessageSource", _messageSource == null ? null : _messageSource.name());
			params.put("AssignedPerson", _assignedPerson == null ? null : _assignedPerson.getMendixObject());
			params.put("AssignedGroup", _assignedGroup == null ? null : _assignedGroup.getMendixObject());
			Core.execute(context, "Process.SendRequestSubscribers_FromChangedPersonOrGroup", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void service_SetAspect(IContext context, process.proxies.Request _request, boolean _useParent, java.lang.Long _contractCount, slm.proxies.Contract_Type _contractType, process.proxies.Request _parent, java.lang.Long _maxDropDownResultSize)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("UseParent", _useParent);
			params.put("ContractCount", _contractCount);
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("Parent", _parent == null ? null : _parent.getMendixObject());
			params.put("MaxDropDownResultSize", _maxDropDownResultSize);
			Core.execute(context, "Process.Service_SetAspect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Service> serviceList_All_EntityAccess(IContext context, process.proxies.Request _request, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.ServiceList_All_EntityAccess", params);
			java.util.List<slm.proxies.Service> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Service>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Service.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long serviceList_Count(IContext context, process.proxies.Request _request, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			return (java.lang.Long)Core.execute(context, "Process.ServiceList_Count", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Service> serviceList_Determined_All_EntityAccess(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.ServiceList_Determined_All_EntityAccess", params);
			java.util.List<slm.proxies.Service> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Service>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Service.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static slm.proxies.Service serviceList_First(IContext context, process.proxies.Request _request, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.ServiceList_First", params);
			return result == null ? null : slm.proxies.Service.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Service> serviceList_OLA_All_EntityAccess(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.ServiceList_OLA_All_EntityAccess", params);
			java.util.List<slm.proxies.Service> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Service>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Service.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Service> serviceList_OLA_All_PopUp(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.ServiceList_OLA_All_PopUp", params);
			java.util.List<slm.proxies.Service> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Service>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Service.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean serviceList_ParentValid(IContext context, process.proxies.Request _request, slm.proxies.Contract_Type _contractType, process.proxies.Request _parentRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("ParentRequest", _parentRequest == null ? null : _parentRequest.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.ServiceList_ParentValid", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Service> serviceList_SLA_All_EntityAccess(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.ServiceList_SLA_All_EntityAccess", params);
			java.util.List<slm.proxies.Service> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Service>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Service.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Service> serviceList_SLA_All_PopUp(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.ServiceList_SLA_All_PopUp", params);
			java.util.List<slm.proxies.Service> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Service>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Service.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void serviceProcess_SetAspect(IContext context, process.proxies.Request _request, boolean _useParent, java.lang.Long _contractCount, slm.proxies.Contract_Type _contractType, process.proxies.Request _parent, java.lang.Long _maxDropDownResultSize)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("UseParent", _useParent);
			params.put("ContractCount", _contractCount);
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("Parent", _parent == null ? null : _parent.getMendixObject());
			params.put("MaxDropDownResultSize", _maxDropDownResultSize);
			Core.execute(context, "Process.ServiceProcess_SetAspect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Service_Process> serviceProcessList_All_EntityAccess(IContext context, process.proxies.Request _request, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.ServiceProcessList_All_EntityAccess", params);
			java.util.List<slm.proxies.Service_Process> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Service_Process>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Service_Process.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long serviceProcessList_Count(IContext context, process.proxies.Request _request, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			return (java.lang.Long)Core.execute(context, "Process.ServiceProcessList_Count", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static slm.proxies.Service_Process serviceProcessList_First(IContext context, process.proxies.Request _request, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.ServiceProcessList_First", params);
			return result == null ? null : slm.proxies.Service_Process.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Service_Process> serviceProcessList_OLA_All_EntityAccess(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.ServiceProcessList_OLA_All_EntityAccess", params);
			java.util.List<slm.proxies.Service_Process> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Service_Process>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Service_Process.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Service_Process> serviceProcessList_OLA_All_Popup(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.ServiceProcessList_OLA_All_Popup", params);
			java.util.List<slm.proxies.Service_Process> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Service_Process>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Service_Process.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean serviceProcessList_ParentValid(IContext context, process.proxies.Request _request, slm.proxies.Contract_Type _contractType, process.proxies.Request _parentRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("ParentRequest", _parentRequest == null ? null : _parentRequest.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.ServiceProcessList_ParentValid", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Service_Process> serviceProcessList_SLA_All_EntityAccess(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.ServiceProcessList_SLA_All_EntityAccess", params);
			java.util.List<slm.proxies.Service_Process> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Service_Process>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Service_Process.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Service_Process> serviceProcessList_SLA_All_PopUp(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.ServiceProcessList_SLA_All_PopUp", params);
			java.util.List<slm.proxies.Service_Process> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Service_Process>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Service_Process.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void set_ActivityStreamAspect(IContext context, process.proxies.RequestSLMAspectAudit _requestSLMAspectAudit)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RequestSLMAspectAudit", _requestSLMAspectAudit == null ? null : _requestSLMAspectAudit.getMendixObject());
			Core.execute(context, "Process.Set_ActivityStreamAspect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void set_AllTrendKPIs(IContext context, fusionchartsplus.proxies.ChartConfiguration _chartConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ChartConfiguration", _chartConfiguration == null ? null : _chartConfiguration.getMendixObject());
			Core.execute(context, "Process.Set_AllTrendKPIs", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static fusionchartsplus.proxies.ChartXML set_ClosedRequestKPI(IContext context, fusionchartsplus.proxies.ChartConfiguration _chartConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ChartConfiguration", _chartConfiguration == null ? null : _chartConfiguration.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.Set_ClosedRequestKPI", params);
			return result == null ? null : fusionchartsplus.proxies.ChartXML.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static fusionchartsplus.proxies.ChartXML set_CustomerSatisfactionKPI(IContext context, fusionchartsplus.proxies.ChartConfiguration _chartConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ChartConfiguration", _chartConfiguration == null ? null : _chartConfiguration.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.Set_CustomerSatisfactionKPI", params);
			return result == null ? null : fusionchartsplus.proxies.ChartXML.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static fusionchartsplus.proxies.ChartXML set_FTRClosedRequestKPI(IContext context, fusionchartsplus.proxies.ChartConfiguration _chartConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ChartConfiguration", _chartConfiguration == null ? null : _chartConfiguration.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.Set_FTRClosedRequestKPI", params);
			return result == null ? null : fusionchartsplus.proxies.ChartXML.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static fusionchartsplus.proxies.ChartXML set_InsideReponseOpenRequestKPI(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.Set_InsideReponseOpenRequestKPI", params);
			return result == null ? null : fusionchartsplus.proxies.ChartXML.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static fusionchartsplus.proxies.ChartXML set_InsideSLAClosedRequestKPI(IContext context, fusionchartsplus.proxies.ChartConfiguration _chartConfiguration)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ChartConfiguration", _chartConfiguration == null ? null : _chartConfiguration.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.Set_InsideSLAClosedRequestKPI", params);
			return result == null ? null : fusionchartsplus.proxies.ChartXML.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static fusionchartsplus.proxies.ChartXML set_InsideSLAClosedRequestServiceKPI(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.Set_InsideSLAClosedRequestServiceKPI", params);
			return result == null ? null : fusionchartsplus.proxies.ChartXML.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static fusionchartsplus.proxies.ChartXML set_InsideSLAOpenRequestKPI(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.Set_InsideSLAOpenRequestKPI", params);
			return result == null ? null : fusionchartsplus.proxies.ChartXML.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static fusionchartsplus.proxies.ChartXML set_OpenRequestKPI(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.Set_OpenRequestKPI", params);
			return result == null ? null : fusionchartsplus.proxies.ChartXML.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static fusionchartsplus.proxies.ChartXML set_OpenRequestPerBusinessGroupKPI(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.Set_OpenRequestPerBusinessGroupKPI", params);
			return result == null ? null : fusionchartsplus.proxies.ChartXML.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static fusionchartsplus.proxies.ChartXML set_OpenRequestPerPriorityKPI(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.Set_OpenRequestPerPriorityKPI", params);
			return result == null ? null : fusionchartsplus.proxies.ChartXML.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static fusionchartsplus.proxies.ChartXML set_OpenRequestPerServiceProcessKPI(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.Set_OpenRequestPerServiceProcessKPI", params);
			return result == null ? null : fusionchartsplus.proxies.ChartXML.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 1020269 clarify error message when contract is not found
	 */
	public static void setAspects(IContext context, process.proxies.Request _request, boolean _useParent, slm.proxies.Contract_Type _contractType, boolean _ignoreContract, boolean _ignoreServiceProcess, boolean _ignoreService, boolean _ignoreDeliveringOrganisation, boolean _ignoreImpact, boolean _ignoreCI, boolean _ignoreUrgency, boolean _ignorePriority, boolean _templateSelection)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("UseParent", _useParent);
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("IgnoreContract", _ignoreContract);
			params.put("IgnoreServiceProcess", _ignoreServiceProcess);
			params.put("IgnoreService", _ignoreService);
			params.put("IgnoreDeliveringOrganisation", _ignoreDeliveringOrganisation);
			params.put("IgnoreImpact", _ignoreImpact);
			params.put("IgnoreCI", _ignoreCI);
			params.put("IgnoreUrgency", _ignoreUrgency);
			params.put("IgnorePriority", _ignorePriority);
			params.put("TemplateSelection", _templateSelection);
			Core.execute(context, "Process.SetAspects", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setAspects_DeterminedType(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.SetAspects_DeterminedType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setAspects_DeterminedType_RecalcEndTime(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.SetAspects_DeterminedType_RecalcEndTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setAspects_DeterminedType_RecalcEndTime_OnImpact(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.SetAspects_DeterminedType_RecalcEndTime_OnImpact", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setAspects_DeterminedType_WithIgnoreOption(IContext context, process.proxies.Request _request, boolean _ignoreContract, boolean _ignoreServiceProcess, boolean _ignoreService, boolean _ignoreDeliveringOrganisation, boolean _ignoreImpact, boolean _ignoreCI, boolean _ignoreUrgency, boolean _ignorePriority)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("IgnoreContract", _ignoreContract);
			params.put("IgnoreServiceProcess", _ignoreServiceProcess);
			params.put("IgnoreService", _ignoreService);
			params.put("IgnoreDeliveringOrganisation", _ignoreDeliveringOrganisation);
			params.put("IgnoreImpact", _ignoreImpact);
			params.put("IgnoreCI", _ignoreCI);
			params.put("IgnoreUrgency", _ignoreUrgency);
			params.put("IgnorePriority", _ignorePriority);
			Core.execute(context, "Process.SetAspects_DeterminedType_WithIgnoreOption", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setAspects_OLA_FromTemplate(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.SetAspects_OLA_FromTemplate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.SPScreenBlock> setAspects_OLA_IgnoreParent(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.SetAspects_OLA_IgnoreParent", params);
			java.util.List<slm.proxies.SPScreenBlock> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.SPScreenBlock>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.SPScreenBlock.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.SPScreenBlock> setAspects_OLA_UseParent(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.SetAspects_OLA_UseParent", params);
			java.util.List<slm.proxies.SPScreenBlock> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.SPScreenBlock>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.SPScreenBlock.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setAspects_SLA(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.SetAspects_SLA", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setAspects_SLA_RecalcEndTime(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.SetAspects_SLA_RecalcEndTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setAspects_SLA_WithIgnoreOption(IContext context, process.proxies.Request _request, boolean _ignoreContract, boolean _ignoreServiceProcess, boolean _ignoreService, boolean _ignoreDeliveringOrganisation, boolean _ignoreImpact, boolean _ignoreCI, boolean _ignoreUrgency, boolean _ignorePriority)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("IgnoreContract", _ignoreContract);
			params.put("IgnoreServiceProcess", _ignoreServiceProcess);
			params.put("IgnoreService", _ignoreService);
			params.put("IgnoreDeliveringOrganisation", _ignoreDeliveringOrganisation);
			params.put("IgnoreImpact", _ignoreImpact);
			params.put("IgnoreCI", _ignoreCI);
			params.put("IgnoreUrgency", _ignoreUrgency);
			params.put("IgnorePriority", _ignorePriority);
			Core.execute(context, "Process.SetAspects_SLA_WithIgnoreOption", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setAttributesBasedOnTemplateTask(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			Core.execute(context, "Process.SetAttributesBasedOnTemplateTask", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setCallerLocationByDefault(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.SetCallerLocationByDefault", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [801176] Set ActualEndTimeUTC to current datetime as well
	 * 
	 * #5852 Closure information>>als je direct na openen scherm op save drukt krijg je geen mandatory fields melding
	 */
	public static void setCurrentCloseTime(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.SetCurrentCloseTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [801176] Set ActualEndTimeUTC to current datetime as well
	 */
	public static void setCurrentCloseTimeSPAtt(IContext context, slm.proxies.SPAttribute _sPAttribute)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SPAttribute", _sPAttribute == null ? null : _sPAttribute.getMendixObject());
			Core.execute(context, "Process.SetCurrentCloseTimeSPAtt", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean setDetailDescriptionNoHTML(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.SetDetailDescriptionNoHTML", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static process.proxies.FirstLine setFirstLine(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.lang.String result = (java.lang.String)Core.execute(context, "Process.SetFirstLine", params);
			if (result == null)
				return null;
			return process.proxies.FirstLine.valueOf(result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * Ticket #4031:
	 * Changed values for members DetailDesciption and DetailDescriptionNoHTML
	 * 
	 * [824874] Added mapping for Request.Process.Delivery_Organization with the value of $Knowledge_Input/KnowledgeManagement.Knowledge_DeliveringOrganisation
	 */
	public static void setKnowledge_DialogUseButton(IContext context, knowledgemanagement.proxies.Knowledge _knowledge_Input)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Knowledge_Input", _knowledge_Input == null ? null : _knowledge_Input.getMendixObject());
			Core.execute(context, "Process.SetKnowledge_DialogUseButton", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static process.proxies.DynamicLabelType setLabelTypeField(IContext context, process.proxies.DynamicAtrribute _dynamicAtrribute)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicAtrribute", _dynamicAtrribute == null ? null : _dynamicAtrribute.getMendixObject());
			java.lang.String result = (java.lang.String)Core.execute(context, "Process.SetLabelTypeField", params);
			if (result == null)
				return null;
			return process.proxies.DynamicLabelType.valueOf(result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setMessageRejected(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			Core.execute(context, "Process.SetMessageRejected", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setNameFieldForStandard(IContext context, process.proxies.DynamicAtrribute _dynamicAtrribute)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DynamicAtrribute", _dynamicAtrribute == null ? null : _dynamicAtrribute.getMendixObject());
			Core.execute(context, "Process.SetNameFieldForStandard", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setOrganisationByDefault(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.SetOrganisationByDefault", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setOrResetProcessType(IContext context, process.proxies.Request _request, slm.proxies.Contract _contract)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Contract", _contract == null ? null : _contract.getMendixObject());
			Core.execute(context, "Process.SetOrResetProcessType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setPersonCallerByDialog(IContext context, nap.proxies.Person _person, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.setPersonCallerByDialog", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean setPersonCallerTrue(IContext context, slm_notifications.proxies.AutoCloseEscalation _autoCloseEscalation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AutoCloseEscalation", _autoCloseEscalation == null ? null : _autoCloseEscalation.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.SetPersonCallerTrue", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setPersonLocationByDefault(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.SetPersonLocationByDefault", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static process.proxies.TimeLeft setRemainingTimeLeft(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.lang.String result = (java.lang.String)Core.execute(context, "Process.SetRemainingTimeLeft", params);
			if (result == null)
				return null;
			return process.proxies.TimeLeft.valueOf(result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setRoomForLocation(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.SetRoomForLocation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setSamePersonByDefault(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.SetSamePersonByDefault", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean setShowMessage(IContext context, process.proxies.Dummy_Matching_View _dummy_View)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Dummy_View", _dummy_View == null ? null : _dummy_View.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.SetShowMessage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void shoppingcart_ItemsAreDelivered(IContext context, servicecatalogue.proxies.Delivery _delivery, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Delivery", _delivery == null ? null : _delivery.getMendixObject());
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Shoppingcart_ItemsAreDelivered", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void shoppingcart_ItemsCannotBeDelivered(IContext context, servicecatalogue.proxies.Delivery _delivery, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Delivery", _delivery == null ? null : _delivery.getMendixObject());
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.Shoppingcart_ItemsCannotBeDelivered", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<servicecatalogue.proxies.ShoppingCartProduct> shoppingCartProductListFromParent(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.ShoppingCartProductListFromParent", params);
			java.util.List<servicecatalogue.proxies.ShoppingCartProduct> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<servicecatalogue.proxies.ShoppingCartProduct>();
				for (IMendixObject obj : objs)
					result.add(servicecatalogue.proxies.ShoppingCartProduct.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void showAllTasks(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.ShowAllTasks", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean showCartTab(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.ShowCartTab", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void showDetailDescription(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.ShowDetailDescription", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void showDirectlyRelatedTasks(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.ShowDirectlyRelatedTasks", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void showSelectionWebForm(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.ShowSelectionWebForm", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void showShortDescription(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.ShowShortDescription", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sUB_CompleteTransitionAndSaveRequest(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.SUB_CompleteTransitionAndSaveRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [714503] Copy Questionnaire when copying a planning workorder
	 */
	public static void sUB_CopyQuestionnaire(IContext context, process.proxies.Request _sourceRequest, process.proxies.Request _newRequest, boolean _commit)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SourceRequest", _sourceRequest == null ? null : _sourceRequest.getMendixObject());
			params.put("NewRequest", _newRequest == null ? null : _newRequest.getMendixObject());
			params.put("Commit", _commit);
			Core.execute(context, "Process.SUB_CopyQuestionnaire", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static process.proxies.Request sUB_CopyRequestDataToNewRequest(IContext context, process.proxies.Request _sourceRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SourceRequest", _sourceRequest == null ? null : _sourceRequest.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.SUB_CopyRequestDataToNewRequest", params);
			return result == null ? null : process.proxies.Request.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void suppressProcessNotifications(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.SuppressProcessNotifications", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void swapParentChild(IContext context, process.proxies.TicketRelations _ticketRelations)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TicketRelations", _ticketRelations == null ? null : _ticketRelations.getMendixObject());
			Core.execute(context, "Process.SwapParentChild", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String taskCounterString(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Process.TaskCounterString", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 920858
	 * Set $RequestEvent/RequestEvent_NewRequestInitialState for trigger.
	 */
	public static boolean triggerOneTimeFunctions(IContext context, process.proxies.Request _request, interfaceshared.proxies.ProcessingAttempt _eventInitiatingProcessingAttempt, interfaceshared.proxies.ProcessingPart _processingPart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("EventInitiatingProcessingAttempt", _eventInitiatingProcessingAttempt == null ? null : _eventInitiatingProcessingAttempt.getMendixObject());
			params.put("ProcessingPart", _processingPart == null ? null : _processingPart.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.TriggerOneTimeFunctions", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void unLinkRequestFromIncomingMessage(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			Core.execute(context, "Process.UnLinkRequestFromIncomingMessage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void unlockIncomingMessage_FromGUI(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			Core.execute(context, "Process.UnlockIncomingMessage_FromGUI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean unlockIncomingMessage_FromRequestCancel(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.UnlockIncomingMessage_FromRequestCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [809110] Added update association with ExternalReferences, if changed
	 */
	public static void updateOverviewRequest(IContext context, process.proxies.Request _request, process.proxies.Request _request_DB)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Request_DB", _request_DB == null ? null : _request_DB.getMendixObject());
			Core.execute(context, "Process.UpdateOverviewRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void updateSnippet(IContext context, process.proxies.OverviewRequest _overviewRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OverviewRequest", _overviewRequest == null ? null : _overviewRequest.getMendixObject());
			Core.execute(context, "Process.UpdateSnippet", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void updateTaskCounter(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.UpdateTaskCounter", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void updateTicketIDs(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Process.UpdateTicketIDs", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void urgency_SetAspect(IContext context, process.proxies.Request _request, boolean _useParent, java.lang.Long _contractCount, slm.proxies.Contract_Type _contractType, process.proxies.Request _parent, java.lang.Long _maxDropDownResultSize)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("UseParent", _useParent);
			params.put("ContractCount", _contractCount);
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("Parent", _parent == null ? null : _parent.getMendixObject());
			params.put("MaxDropDownResultSize", _maxDropDownResultSize);
			Core.execute(context, "Process.Urgency_SetAspect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Urgency> urgencyList_All_EntityAccess(IContext context, process.proxies.Request _request, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.UrgencyList_All_EntityAccess", params);
			java.util.List<slm.proxies.Urgency> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Urgency>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Urgency.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long urgencyList_Count(IContext context, process.proxies.Request _request, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			return (java.lang.Long)Core.execute(context, "Process.UrgencyList_Count", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Urgency> urgencyList_Determined_All_EntityAccess(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.UrgencyList_Determined_All_EntityAccess", params);
			java.util.List<slm.proxies.Urgency> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Urgency>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Urgency.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static slm.proxies.Urgency urgencyList_First(IContext context, process.proxies.Request _request, slm.proxies.Contract_Type _contractType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			IMendixObject result = (IMendixObject)Core.execute(context, "Process.UrgencyList_First", params);
			return result == null ? null : slm.proxies.Urgency.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Urgency> urgencyList_OLA_All_EntityAccess(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.UrgencyList_OLA_All_EntityAccess", params);
			java.util.List<slm.proxies.Urgency> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Urgency>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Urgency.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Urgency> urgencyList_OLA_All_PopUp(IContext context, process.proxies.Task _task)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Task", _task == null ? null : _task.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.UrgencyList_OLA_All_PopUp", params);
			java.util.List<slm.proxies.Urgency> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Urgency>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Urgency.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean urgencyList_ParentValid(IContext context, process.proxies.Request _request, slm.proxies.Contract_Type _contractType, process.proxies.Request _parentRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("ContractType", _contractType == null ? null : _contractType.name());
			params.put("ParentRequest", _parentRequest == null ? null : _parentRequest.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.UrgencyList_ParentValid", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Urgency> urgencyList_SLA_All_EntityAccess(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.UrgencyList_SLA_All_EntityAccess", params);
			java.util.List<slm.proxies.Urgency> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Urgency>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Urgency.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<slm.proxies.Urgency> urgencyList_SLA_All_PopUp(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Process.UrgencyList_SLA_All_PopUp", params);
			java.util.List<slm.proxies.Urgency> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.Urgency>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.Urgency.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validate_NAPFields_Request(IContext context, process.proxies.Request _request, boolean _allowEmptyPerson, boolean _allowEmptyLocation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("AllowEmptyPerson", _allowEmptyPerson);
			params.put("AllowEmptyLocation", _allowEmptyLocation);
			return (java.lang.Boolean)Core.execute(context, "Process.Validate_NAPFields_Request", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [1206716] Require CI Assembly field for new incidents
	 */
	public static boolean validate_SLM_Aspects(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.Validate_SLM_Aspects", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateAndProcessRequest(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.ValidateAndProcessRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateExternalReference(IContext context, process.proxies.ExternalReference _externalReference)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ExternalReference", _externalReference == null ? null : _externalReference.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.ValidateExternalReference", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validatePausedReason(IContext context, process.proxies.PausedReasonDefinition _pausedReasonDefinition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PausedReasonDefinition", _pausedReasonDefinition == null ? null : _pausedReasonDefinition.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.ValidatePausedReason", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 935767/220904: UAT>>Incident>>Bericht bij Reminder is verwarrend. Kan alleen als Assignee is ingevuld
	 */
	public static boolean validateReminderNoEmptySendTo(IContext context, process.proxies.Reminder _reminder)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Reminder", _reminder == null ? null : _reminder.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.ValidateReminderNoEmptySendTo", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateRequest(IContext context, process.proxies.Request _request, boolean _allowEmptyPerson, boolean _allowEmptyLocation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("AllowEmptyPerson", _allowEmptyPerson);
			params.put("AllowEmptyLocation", _allowEmptyLocation);
			return (java.lang.Boolean)Core.execute(context, "Process.ValidateRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateRequestContract(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.ValidateRequestContract", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateRequestContractEndTime(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.ValidateRequestContractEndTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateRequestOnSaveOrApply(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Process.ValidateRequestOnSaveOrApply", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void view_All_ActivityStreamItems(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.View_All_ActivityStreamItems", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void view_All_Notes_CurrentRequest(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.View_All_Notes_CurrentRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void view_AllPublishedNotifications_ActivityStream(IContext context, process.proxies.Notification _notification)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Notification", _notification == null ? null : _notification.getMendixObject());
			Core.execute(context, "Process.View_AllPublishedNotifications_ActivityStream", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void view_SelectedRequest_NoClose(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Process.View_SelectedRequest_NoClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void viewAffectCI_CI(IContext context, cmdb.proxies.AffectedCI _affectedCI)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AffectedCI", _affectedCI == null ? null : _affectedCI.getMendixObject());
			Core.execute(context, "Process.ViewAffectCI_CI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void viewEmailAttachments(IContext context, emailplus.proxies.MessageAttachment _messageAttachment)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MessageAttachment", _messageAttachment == null ? null : _messageAttachment.getMendixObject());
			Core.execute(context, "Process.ViewEmailAttachments", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void viewSelectedRequest(IContext context, emailplus.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Message", _message == null ? null : _message.getMendixObject());
			Core.execute(context, "Process.ViewSelectedRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}