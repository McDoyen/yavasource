// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package process.proxies;

public class UU95_CalendarSetting
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject uU95_CalendarSettingMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Process.UU95_CalendarSetting";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		CalendarSelection("CalendarSelection"),
		UU95_CalendarSetting_ChangeCalendar("Process.UU95_CalendarSetting_ChangeCalendar");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public UU95_CalendarSetting(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Process.UU95_CalendarSetting"));
	}

	protected UU95_CalendarSetting(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject uU95_CalendarSettingMendixObject)
	{
		if (uU95_CalendarSettingMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Process.UU95_CalendarSetting", uU95_CalendarSettingMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Process.UU95_CalendarSetting");

		this.uU95_CalendarSettingMendixObject = uU95_CalendarSettingMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'UU95_CalendarSetting.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static process.proxies.UU95_CalendarSetting initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return process.proxies.UU95_CalendarSetting.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static process.proxies.UU95_CalendarSetting initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new process.proxies.UU95_CalendarSetting(context, mendixObject);
	}

	public static process.proxies.UU95_CalendarSetting load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return process.proxies.UU95_CalendarSetting.initialize(context, mendixObject);
	}

	public static java.util.List<process.proxies.UU95_CalendarSetting> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<process.proxies.UU95_CalendarSetting> result = new java.util.ArrayList<process.proxies.UU95_CalendarSetting>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Process.UU95_CalendarSetting" + xpathConstraint))
			result.add(process.proxies.UU95_CalendarSetting.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * Set value of CalendarSelection
	 * @param calendarselection
	 */
	public final process.proxies.ChangeCalenderSelection getCalendarSelection()
	{
		return getCalendarSelection(getContext());
	}

	/**
	 * @param context
	 * @return value of CalendarSelection
	 */
	public final process.proxies.ChangeCalenderSelection getCalendarSelection(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.CalendarSelection.toString());
		if (obj == null)
			return null;

		return process.proxies.ChangeCalenderSelection.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of CalendarSelection
	 * @param calendarselection
	 */
	public final void setCalendarSelection(process.proxies.ChangeCalenderSelection calendarselection)
	{
		setCalendarSelection(getContext(), calendarselection);
	}

	/**
	 * Set value of CalendarSelection
	 * @param context
	 * @param calendarselection
	 */
	public final void setCalendarSelection(com.mendix.systemwideinterfaces.core.IContext context, process.proxies.ChangeCalenderSelection calendarselection)
	{
		if (calendarselection != null)
			getMendixObject().setValue(context, MemberNames.CalendarSelection.toString(), calendarselection.toString());
		else
			getMendixObject().setValue(context, MemberNames.CalendarSelection.toString(), null);
	}

	/**
	 * @return value of UU95_CalendarSetting_ChangeCalendar
	 */
	public final process.proxies.UU95_ChangeCalendar getUU95_CalendarSetting_ChangeCalendar() throws com.mendix.core.CoreException
	{
		return getUU95_CalendarSetting_ChangeCalendar(getContext());
	}

	/**
	 * @param context
	 * @return value of UU95_CalendarSetting_ChangeCalendar
	 */
	public final process.proxies.UU95_ChangeCalendar getUU95_CalendarSetting_ChangeCalendar(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		process.proxies.UU95_ChangeCalendar result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.UU95_CalendarSetting_ChangeCalendar.toString());
		if (identifier != null)
			result = process.proxies.UU95_ChangeCalendar.load(context, identifier);
		return result;
	}

	/**
	 * Set value of UU95_CalendarSetting_ChangeCalendar
	 * @param uu95_calendarsetting_changecalendar
	 */
	public final void setUU95_CalendarSetting_ChangeCalendar(process.proxies.UU95_ChangeCalendar uu95_calendarsetting_changecalendar)
	{
		setUU95_CalendarSetting_ChangeCalendar(getContext(), uu95_calendarsetting_changecalendar);
	}

	/**
	 * Set value of UU95_CalendarSetting_ChangeCalendar
	 * @param context
	 * @param uu95_calendarsetting_changecalendar
	 */
	public final void setUU95_CalendarSetting_ChangeCalendar(com.mendix.systemwideinterfaces.core.IContext context, process.proxies.UU95_ChangeCalendar uu95_calendarsetting_changecalendar)
	{
		if (uu95_calendarsetting_changecalendar == null)
			getMendixObject().setValue(context, MemberNames.UU95_CalendarSetting_ChangeCalendar.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.UU95_CalendarSetting_ChangeCalendar.toString(), uu95_calendarsetting_changecalendar.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return uU95_CalendarSettingMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final process.proxies.UU95_CalendarSetting that = (process.proxies.UU95_CalendarSetting) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Process.UU95_CalendarSetting";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
