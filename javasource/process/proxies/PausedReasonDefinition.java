// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package process.proxies;

public class PausedReasonDefinition
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject pausedReasonDefinitionMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Process.PausedReasonDefinition";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		PausedReasonShort("PausedReasonShort"),
		DefinitionType("DefinitionType"),
		PausedReasonDetailed("PausedReasonDetailed"),
		StopContractTimerMessage("StopContractTimerMessage"),
		PausedReasonDefinition_DataAccess("Process.PausedReasonDefinition_DataAccess"),
		PausedReasonDefinition_IncomingRequestUpdate("Process.PausedReasonDefinition_IncomingRequestUpdate");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public PausedReasonDefinition(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Process.PausedReasonDefinition"));
	}

	protected PausedReasonDefinition(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject pausedReasonDefinitionMendixObject)
	{
		if (pausedReasonDefinitionMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Process.PausedReasonDefinition", pausedReasonDefinitionMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Process.PausedReasonDefinition");

		this.pausedReasonDefinitionMendixObject = pausedReasonDefinitionMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'PausedReasonDefinition.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static process.proxies.PausedReasonDefinition initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return process.proxies.PausedReasonDefinition.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static process.proxies.PausedReasonDefinition initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new process.proxies.PausedReasonDefinition(context, mendixObject);
	}

	public static process.proxies.PausedReasonDefinition load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return process.proxies.PausedReasonDefinition.initialize(context, mendixObject);
	}

	public static java.util.List<process.proxies.PausedReasonDefinition> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<process.proxies.PausedReasonDefinition> result = new java.util.ArrayList<process.proxies.PausedReasonDefinition>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Process.PausedReasonDefinition" + xpathConstraint))
			result.add(process.proxies.PausedReasonDefinition.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of PausedReasonShort
	 */
	public final java.lang.String getPausedReasonShort()
	{
		return getPausedReasonShort(getContext());
	}

	/**
	 * @param context
	 * @return value of PausedReasonShort
	 */
	public final java.lang.String getPausedReasonShort(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.PausedReasonShort.toString());
	}

	/**
	 * Set value of PausedReasonShort
	 * @param pausedreasonshort
	 */
	public final void setPausedReasonShort(java.lang.String pausedreasonshort)
	{
		setPausedReasonShort(getContext(), pausedreasonshort);
	}

	/**
	 * Set value of PausedReasonShort
	 * @param context
	 * @param pausedreasonshort
	 */
	public final void setPausedReasonShort(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String pausedreasonshort)
	{
		getMendixObject().setValue(context, MemberNames.PausedReasonShort.toString(), pausedreasonshort);
	}

	/**
	 * Set value of DefinitionType
	 * @param definitiontype
	 */
	public final process.proxies.PausedReasonType getDefinitionType()
	{
		return getDefinitionType(getContext());
	}

	/**
	 * @param context
	 * @return value of DefinitionType
	 */
	public final process.proxies.PausedReasonType getDefinitionType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.DefinitionType.toString());
		if (obj == null)
			return null;

		return process.proxies.PausedReasonType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of DefinitionType
	 * @param definitiontype
	 */
	public final void setDefinitionType(process.proxies.PausedReasonType definitiontype)
	{
		setDefinitionType(getContext(), definitiontype);
	}

	/**
	 * Set value of DefinitionType
	 * @param context
	 * @param definitiontype
	 */
	public final void setDefinitionType(com.mendix.systemwideinterfaces.core.IContext context, process.proxies.PausedReasonType definitiontype)
	{
		if (definitiontype != null)
			getMendixObject().setValue(context, MemberNames.DefinitionType.toString(), definitiontype.toString());
		else
			getMendixObject().setValue(context, MemberNames.DefinitionType.toString(), null);
	}

	/**
	 * @return value of PausedReasonDetailed
	 */
	public final java.lang.String getPausedReasonDetailed()
	{
		return getPausedReasonDetailed(getContext());
	}

	/**
	 * @param context
	 * @return value of PausedReasonDetailed
	 */
	public final java.lang.String getPausedReasonDetailed(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.PausedReasonDetailed.toString());
	}

	/**
	 * Set value of PausedReasonDetailed
	 * @param pausedreasondetailed
	 */
	public final void setPausedReasonDetailed(java.lang.String pausedreasondetailed)
	{
		setPausedReasonDetailed(getContext(), pausedreasondetailed);
	}

	/**
	 * Set value of PausedReasonDetailed
	 * @param context
	 * @param pausedreasondetailed
	 */
	public final void setPausedReasonDetailed(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String pausedreasondetailed)
	{
		getMendixObject().setValue(context, MemberNames.PausedReasonDetailed.toString(), pausedreasondetailed);
	}

	/**
	 * @return value of StopContractTimerMessage
	 */
	public final java.lang.Boolean getStopContractTimerMessage()
	{
		return getStopContractTimerMessage(getContext());
	}

	/**
	 * @param context
	 * @return value of StopContractTimerMessage
	 */
	public final java.lang.Boolean getStopContractTimerMessage(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.StopContractTimerMessage.toString());
	}

	/**
	 * Set value of StopContractTimerMessage
	 * @param stopcontracttimermessage
	 */
	public final void setStopContractTimerMessage(java.lang.Boolean stopcontracttimermessage)
	{
		setStopContractTimerMessage(getContext(), stopcontracttimermessage);
	}

	/**
	 * Set value of StopContractTimerMessage
	 * @param context
	 * @param stopcontracttimermessage
	 */
	public final void setStopContractTimerMessage(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean stopcontracttimermessage)
	{
		getMendixObject().setValue(context, MemberNames.StopContractTimerMessage.toString(), stopcontracttimermessage);
	}

	/**
	 * @return value of PausedReasonDefinition_DataAccess
	 */
	public final java.util.List<da.proxies.Label> getPausedReasonDefinition_DataAccess() throws com.mendix.core.CoreException
	{
		return getPausedReasonDefinition_DataAccess(getContext());
	}

	/**
	 * @param context
	 * @return value of PausedReasonDefinition_DataAccess
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<da.proxies.Label> getPausedReasonDefinition_DataAccess(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<da.proxies.Label> result = new java.util.ArrayList<da.proxies.Label>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.PausedReasonDefinition_DataAccess.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(da.proxies.Label.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of PausedReasonDefinition_DataAccess
	 * @param pausedreasondefinition_dataaccess
	 */
	public final void setPausedReasonDefinition_DataAccess(java.util.List<da.proxies.Label> pausedreasondefinition_dataaccess)
	{
		setPausedReasonDefinition_DataAccess(getContext(), pausedreasondefinition_dataaccess);
	}

	/**
	 * Set value of PausedReasonDefinition_DataAccess
	 * @param context
	 * @param pausedreasondefinition_dataaccess
	 */
	public final void setPausedReasonDefinition_DataAccess(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<da.proxies.Label> pausedreasondefinition_dataaccess)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (da.proxies.Label proxyObject : pausedreasondefinition_dataaccess)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.PausedReasonDefinition_DataAccess.toString(), identifiers);
	}

	/**
	 * @return value of PausedReasonDefinition_IncomingRequestUpdate
	 */
	public final interfacerequestupdate.proxies.IncomingRequestUpdate getPausedReasonDefinition_IncomingRequestUpdate() throws com.mendix.core.CoreException
	{
		return getPausedReasonDefinition_IncomingRequestUpdate(getContext());
	}

	/**
	 * @param context
	 * @return value of PausedReasonDefinition_IncomingRequestUpdate
	 */
	public final interfacerequestupdate.proxies.IncomingRequestUpdate getPausedReasonDefinition_IncomingRequestUpdate(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfacerequestupdate.proxies.IncomingRequestUpdate result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.PausedReasonDefinition_IncomingRequestUpdate.toString());
		if (identifier != null)
			result = interfacerequestupdate.proxies.IncomingRequestUpdate.load(context, identifier);
		return result;
	}

	/**
	 * Set value of PausedReasonDefinition_IncomingRequestUpdate
	 * @param pausedreasondefinition_incomingrequestupdate
	 */
	public final void setPausedReasonDefinition_IncomingRequestUpdate(interfacerequestupdate.proxies.IncomingRequestUpdate pausedreasondefinition_incomingrequestupdate)
	{
		setPausedReasonDefinition_IncomingRequestUpdate(getContext(), pausedreasondefinition_incomingrequestupdate);
	}

	/**
	 * Set value of PausedReasonDefinition_IncomingRequestUpdate
	 * @param context
	 * @param pausedreasondefinition_incomingrequestupdate
	 */
	public final void setPausedReasonDefinition_IncomingRequestUpdate(com.mendix.systemwideinterfaces.core.IContext context, interfacerequestupdate.proxies.IncomingRequestUpdate pausedreasondefinition_incomingrequestupdate)
	{
		if (pausedreasondefinition_incomingrequestupdate == null)
			getMendixObject().setValue(context, MemberNames.PausedReasonDefinition_IncomingRequestUpdate.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.PausedReasonDefinition_IncomingRequestUpdate.toString(), pausedreasondefinition_incomingrequestupdate.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return pausedReasonDefinitionMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final process.proxies.PausedReasonDefinition that = (process.proxies.PausedReasonDefinition) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Process.PausedReasonDefinition";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
