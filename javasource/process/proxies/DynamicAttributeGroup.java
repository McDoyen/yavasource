// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package process.proxies;

public class DynamicAttributeGroup
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject dynamicAttributeGroupMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Process.DynamicAttributeGroup";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		AttributeGroupName("AttributeGroupName"),
		AttributeGroupFor("AttributeGroupFor"),
		InProcess("InProcess"),
		DynamicLabelGroup_DynamicLabel("Process.DynamicLabelGroup_DynamicLabel"),
		DynamicAttributeGroup_Service("Process.DynamicAttributeGroup_Service");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public DynamicAttributeGroup(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Process.DynamicAttributeGroup"));
	}

	protected DynamicAttributeGroup(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject dynamicAttributeGroupMendixObject)
	{
		if (dynamicAttributeGroupMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Process.DynamicAttributeGroup", dynamicAttributeGroupMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Process.DynamicAttributeGroup");

		this.dynamicAttributeGroupMendixObject = dynamicAttributeGroupMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'DynamicAttributeGroup.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static process.proxies.DynamicAttributeGroup initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return process.proxies.DynamicAttributeGroup.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static process.proxies.DynamicAttributeGroup initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new process.proxies.DynamicAttributeGroup(context, mendixObject);
	}

	public static process.proxies.DynamicAttributeGroup load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return process.proxies.DynamicAttributeGroup.initialize(context, mendixObject);
	}

	public static java.util.List<process.proxies.DynamicAttributeGroup> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<process.proxies.DynamicAttributeGroup> result = new java.util.ArrayList<process.proxies.DynamicAttributeGroup>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Process.DynamicAttributeGroup" + xpathConstraint))
			result.add(process.proxies.DynamicAttributeGroup.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of AttributeGroupName
	 */
	public final java.lang.String getAttributeGroupName()
	{
		return getAttributeGroupName(getContext());
	}

	/**
	 * @param context
	 * @return value of AttributeGroupName
	 */
	public final java.lang.String getAttributeGroupName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.AttributeGroupName.toString());
	}

	/**
	 * Set value of AttributeGroupName
	 * @param attributegroupname
	 */
	public final void setAttributeGroupName(java.lang.String attributegroupname)
	{
		setAttributeGroupName(getContext(), attributegroupname);
	}

	/**
	 * Set value of AttributeGroupName
	 * @param context
	 * @param attributegroupname
	 */
	public final void setAttributeGroupName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String attributegroupname)
	{
		getMendixObject().setValue(context, MemberNames.AttributeGroupName.toString(), attributegroupname);
	}

	/**
	 * Set value of AttributeGroupFor
	 * @param attributegroupfor
	 */
	public final process.proxies.AttributeGroupType getAttributeGroupFor()
	{
		return getAttributeGroupFor(getContext());
	}

	/**
	 * @param context
	 * @return value of AttributeGroupFor
	 */
	public final process.proxies.AttributeGroupType getAttributeGroupFor(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.AttributeGroupFor.toString());
		if (obj == null)
			return null;

		return process.proxies.AttributeGroupType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of AttributeGroupFor
	 * @param attributegroupfor
	 */
	public final void setAttributeGroupFor(process.proxies.AttributeGroupType attributegroupfor)
	{
		setAttributeGroupFor(getContext(), attributegroupfor);
	}

	/**
	 * Set value of AttributeGroupFor
	 * @param context
	 * @param attributegroupfor
	 */
	public final void setAttributeGroupFor(com.mendix.systemwideinterfaces.core.IContext context, process.proxies.AttributeGroupType attributegroupfor)
	{
		if (attributegroupfor != null)
			getMendixObject().setValue(context, MemberNames.AttributeGroupFor.toString(), attributegroupfor.toString());
		else
			getMendixObject().setValue(context, MemberNames.AttributeGroupFor.toString(), null);
	}

	/**
	 * Set value of InProcess
	 * @param inprocess
	 */
	public final slm.proxies.ProcessType getInProcess()
	{
		return getInProcess(getContext());
	}

	/**
	 * @param context
	 * @return value of InProcess
	 */
	public final slm.proxies.ProcessType getInProcess(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.InProcess.toString());
		if (obj == null)
			return null;

		return slm.proxies.ProcessType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of InProcess
	 * @param inprocess
	 */
	public final void setInProcess(slm.proxies.ProcessType inprocess)
	{
		setInProcess(getContext(), inprocess);
	}

	/**
	 * Set value of InProcess
	 * @param context
	 * @param inprocess
	 */
	public final void setInProcess(com.mendix.systemwideinterfaces.core.IContext context, slm.proxies.ProcessType inprocess)
	{
		if (inprocess != null)
			getMendixObject().setValue(context, MemberNames.InProcess.toString(), inprocess.toString());
		else
			getMendixObject().setValue(context, MemberNames.InProcess.toString(), null);
	}

	/**
	 * @return value of DynamicLabelGroup_DynamicLabel
	 */
	public final java.util.List<process.proxies.DynamicAttributeLabel> getDynamicLabelGroup_DynamicLabel() throws com.mendix.core.CoreException
	{
		return getDynamicLabelGroup_DynamicLabel(getContext());
	}

	/**
	 * @param context
	 * @return value of DynamicLabelGroup_DynamicLabel
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<process.proxies.DynamicAttributeLabel> getDynamicLabelGroup_DynamicLabel(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<process.proxies.DynamicAttributeLabel> result = new java.util.ArrayList<process.proxies.DynamicAttributeLabel>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.DynamicLabelGroup_DynamicLabel.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(process.proxies.DynamicAttributeLabel.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of DynamicLabelGroup_DynamicLabel
	 * @param dynamiclabelgroup_dynamiclabel
	 */
	public final void setDynamicLabelGroup_DynamicLabel(java.util.List<process.proxies.DynamicAttributeLabel> dynamiclabelgroup_dynamiclabel)
	{
		setDynamicLabelGroup_DynamicLabel(getContext(), dynamiclabelgroup_dynamiclabel);
	}

	/**
	 * Set value of DynamicLabelGroup_DynamicLabel
	 * @param context
	 * @param dynamiclabelgroup_dynamiclabel
	 */
	public final void setDynamicLabelGroup_DynamicLabel(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<process.proxies.DynamicAttributeLabel> dynamiclabelgroup_dynamiclabel)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (process.proxies.DynamicAttributeLabel proxyObject : dynamiclabelgroup_dynamiclabel)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.DynamicLabelGroup_DynamicLabel.toString(), identifiers);
	}

	/**
	 * @return value of DynamicAttributeGroup_Service
	 */
	public final slm.proxies.Service getDynamicAttributeGroup_Service() throws com.mendix.core.CoreException
	{
		return getDynamicAttributeGroup_Service(getContext());
	}

	/**
	 * @param context
	 * @return value of DynamicAttributeGroup_Service
	 */
	public final slm.proxies.Service getDynamicAttributeGroup_Service(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		slm.proxies.Service result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.DynamicAttributeGroup_Service.toString());
		if (identifier != null)
			result = slm.proxies.Service.load(context, identifier);
		return result;
	}

	/**
	 * Set value of DynamicAttributeGroup_Service
	 * @param dynamicattributegroup_service
	 */
	public final void setDynamicAttributeGroup_Service(slm.proxies.Service dynamicattributegroup_service)
	{
		setDynamicAttributeGroup_Service(getContext(), dynamicattributegroup_service);
	}

	/**
	 * Set value of DynamicAttributeGroup_Service
	 * @param context
	 * @param dynamicattributegroup_service
	 */
	public final void setDynamicAttributeGroup_Service(com.mendix.systemwideinterfaces.core.IContext context, slm.proxies.Service dynamicattributegroup_service)
	{
		if (dynamicattributegroup_service == null)
			getMendixObject().setValue(context, MemberNames.DynamicAttributeGroup_Service.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.DynamicAttributeGroup_Service.toString(), dynamicattributegroup_service.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return dynamicAttributeGroupMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final process.proxies.DynamicAttributeGroup that = (process.proxies.DynamicAttributeGroup) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Process.DynamicAttributeGroup";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
