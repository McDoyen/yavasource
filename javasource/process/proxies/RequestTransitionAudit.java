// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package process.proxies;

public class RequestTransitionAudit
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject requestTransitionAuditMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Process.RequestTransitionAudit";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		DateTimeStart("DateTimeStart"),
		DateTimeStop("DateTimeStop"),
		DurationBusinessHours("DurationBusinessHours"),
		DurationBusinessHoursStr("DurationBusinessHoursStr"),
		AuditErrorMultipleFound("AuditErrorMultipleFound"),
		AuditErrorNoPreviousFound("AuditErrorNoPreviousFound"),
		AuditType("AuditType"),
		HolidaysHistoric("HolidaysHistoric"),
		BusinessTimeHistoric("BusinessTimeHistoric"),
		PersonToTransitionHistoric("PersonToTransitionHistoric"),
		FromPhaseHistoric("FromPhaseHistoric"),
		FromStateHistoric("FromStateHistoric"),
		FromTransitionHistoric("FromTransitionHistoric"),
		ToPhaseHistoric("ToPhaseHistoric"),
		ToStateHistoric("ToStateHistoric"),
		ToTransitionHistoric("ToTransitionHistoric"),
		HasPausedTime("HasPausedTime"),
		IncludeInContractTime("IncludeInContractTime"),
		PersonFromTransitionHistoric("PersonFromTransitionHistoric"),
		RequestTransitionAudit_Request("Process.RequestTransitionAudit_Request"),
		RequestTransitionAudit_RequestSLMAspectAudit("Process.RequestTransitionAudit_RequestSLMAspectAudit"),
		ActivityStream_RequestTransitionAudit("Process.ActivityStream_RequestTransitionAudit"),
		RequestTransitionAudit_ToTransition("Process.RequestTransitionAudit_ToTransition"),
		RequestTransitionAudit_FromPhase("Process.RequestTransitionAudit_FromPhase"),
		RequestTransitionAudit_ToPhase("Process.RequestTransitionAudit_ToPhase"),
		RequestTransitionAudit_FromState("Process.RequestTransitionAudit_FromState"),
		RequestTransitionAudit_ToState("Process.RequestTransitionAudit_ToState"),
		RequestTransitionAudit_Business_Time_Group("Process.RequestTransitionAudit_Business_Time_Group"),
		RequestTransitionAudit_Holiday_Group("Process.RequestTransitionAudit_Holiday_Group"),
		RequestTransitionAudit_PersonToTransition("Process.RequestTransitionAudit_PersonToTransition"),
		RequestTransitionAudit_FromTransition("Process.RequestTransitionAudit_FromTransition"),
		RequestTransitionAudit_PersonFromTransition("Process.RequestTransitionAudit_PersonFromTransition");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public RequestTransitionAudit(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Process.RequestTransitionAudit"));
	}

	protected RequestTransitionAudit(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject requestTransitionAuditMendixObject)
	{
		if (requestTransitionAuditMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Process.RequestTransitionAudit", requestTransitionAuditMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Process.RequestTransitionAudit");

		this.requestTransitionAuditMendixObject = requestTransitionAuditMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'RequestTransitionAudit.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static process.proxies.RequestTransitionAudit initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return process.proxies.RequestTransitionAudit.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static process.proxies.RequestTransitionAudit initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new process.proxies.RequestTransitionAudit(context, mendixObject);
	}

	public static process.proxies.RequestTransitionAudit load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return process.proxies.RequestTransitionAudit.initialize(context, mendixObject);
	}

	public static java.util.List<process.proxies.RequestTransitionAudit> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<process.proxies.RequestTransitionAudit> result = new java.util.ArrayList<process.proxies.RequestTransitionAudit>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Process.RequestTransitionAudit" + xpathConstraint))
			result.add(process.proxies.RequestTransitionAudit.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of DateTimeStart
	 */
	public final java.util.Date getDateTimeStart()
	{
		return getDateTimeStart(getContext());
	}

	/**
	 * @param context
	 * @return value of DateTimeStart
	 */
	public final java.util.Date getDateTimeStart(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.DateTimeStart.toString());
	}

	/**
	 * Set value of DateTimeStart
	 * @param datetimestart
	 */
	public final void setDateTimeStart(java.util.Date datetimestart)
	{
		setDateTimeStart(getContext(), datetimestart);
	}

	/**
	 * Set value of DateTimeStart
	 * @param context
	 * @param datetimestart
	 */
	public final void setDateTimeStart(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date datetimestart)
	{
		getMendixObject().setValue(context, MemberNames.DateTimeStart.toString(), datetimestart);
	}

	/**
	 * @return value of DateTimeStop
	 */
	public final java.util.Date getDateTimeStop()
	{
		return getDateTimeStop(getContext());
	}

	/**
	 * @param context
	 * @return value of DateTimeStop
	 */
	public final java.util.Date getDateTimeStop(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.DateTimeStop.toString());
	}

	/**
	 * Set value of DateTimeStop
	 * @param datetimestop
	 */
	public final void setDateTimeStop(java.util.Date datetimestop)
	{
		setDateTimeStop(getContext(), datetimestop);
	}

	/**
	 * Set value of DateTimeStop
	 * @param context
	 * @param datetimestop
	 */
	public final void setDateTimeStop(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date datetimestop)
	{
		getMendixObject().setValue(context, MemberNames.DateTimeStop.toString(), datetimestop);
	}

	/**
	 * @return value of DurationBusinessHours
	 */
	public final java.lang.Integer getDurationBusinessHours()
	{
		return getDurationBusinessHours(getContext());
	}

	/**
	 * @param context
	 * @return value of DurationBusinessHours
	 */
	public final java.lang.Integer getDurationBusinessHours(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.DurationBusinessHours.toString());
	}

	/**
	 * Set value of DurationBusinessHours
	 * @param durationbusinesshours
	 */
	public final void setDurationBusinessHours(java.lang.Integer durationbusinesshours)
	{
		setDurationBusinessHours(getContext(), durationbusinesshours);
	}

	/**
	 * Set value of DurationBusinessHours
	 * @param context
	 * @param durationbusinesshours
	 */
	public final void setDurationBusinessHours(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer durationbusinesshours)
	{
		getMendixObject().setValue(context, MemberNames.DurationBusinessHours.toString(), durationbusinesshours);
	}

	/**
	 * @return value of DurationBusinessHoursStr
	 */
	public final java.lang.String getDurationBusinessHoursStr()
	{
		return getDurationBusinessHoursStr(getContext());
	}

	/**
	 * @param context
	 * @return value of DurationBusinessHoursStr
	 */
	public final java.lang.String getDurationBusinessHoursStr(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.DurationBusinessHoursStr.toString());
	}

	/**
	 * Set value of DurationBusinessHoursStr
	 * @param durationbusinesshoursstr
	 */
	public final void setDurationBusinessHoursStr(java.lang.String durationbusinesshoursstr)
	{
		setDurationBusinessHoursStr(getContext(), durationbusinesshoursstr);
	}

	/**
	 * Set value of DurationBusinessHoursStr
	 * @param context
	 * @param durationbusinesshoursstr
	 */
	public final void setDurationBusinessHoursStr(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String durationbusinesshoursstr)
	{
		getMendixObject().setValue(context, MemberNames.DurationBusinessHoursStr.toString(), durationbusinesshoursstr);
	}

	/**
	 * @return value of AuditErrorMultipleFound
	 */
	public final java.lang.Boolean getAuditErrorMultipleFound()
	{
		return getAuditErrorMultipleFound(getContext());
	}

	/**
	 * @param context
	 * @return value of AuditErrorMultipleFound
	 */
	public final java.lang.Boolean getAuditErrorMultipleFound(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.AuditErrorMultipleFound.toString());
	}

	/**
	 * Set value of AuditErrorMultipleFound
	 * @param auditerrormultiplefound
	 */
	public final void setAuditErrorMultipleFound(java.lang.Boolean auditerrormultiplefound)
	{
		setAuditErrorMultipleFound(getContext(), auditerrormultiplefound);
	}

	/**
	 * Set value of AuditErrorMultipleFound
	 * @param context
	 * @param auditerrormultiplefound
	 */
	public final void setAuditErrorMultipleFound(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean auditerrormultiplefound)
	{
		getMendixObject().setValue(context, MemberNames.AuditErrorMultipleFound.toString(), auditerrormultiplefound);
	}

	/**
	 * @return value of AuditErrorNoPreviousFound
	 */
	public final java.lang.Boolean getAuditErrorNoPreviousFound()
	{
		return getAuditErrorNoPreviousFound(getContext());
	}

	/**
	 * @param context
	 * @return value of AuditErrorNoPreviousFound
	 */
	public final java.lang.Boolean getAuditErrorNoPreviousFound(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.AuditErrorNoPreviousFound.toString());
	}

	/**
	 * Set value of AuditErrorNoPreviousFound
	 * @param auditerrornopreviousfound
	 */
	public final void setAuditErrorNoPreviousFound(java.lang.Boolean auditerrornopreviousfound)
	{
		setAuditErrorNoPreviousFound(getContext(), auditerrornopreviousfound);
	}

	/**
	 * Set value of AuditErrorNoPreviousFound
	 * @param context
	 * @param auditerrornopreviousfound
	 */
	public final void setAuditErrorNoPreviousFound(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean auditerrornopreviousfound)
	{
		getMendixObject().setValue(context, MemberNames.AuditErrorNoPreviousFound.toString(), auditerrornopreviousfound);
	}

	/**
	 * Set value of AuditType
	 * @param audittype
	 */
	public final process.proxies.AuditType getAuditType()
	{
		return getAuditType(getContext());
	}

	/**
	 * @param context
	 * @return value of AuditType
	 */
	public final process.proxies.AuditType getAuditType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.AuditType.toString());
		if (obj == null)
			return null;

		return process.proxies.AuditType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of AuditType
	 * @param audittype
	 */
	public final void setAuditType(process.proxies.AuditType audittype)
	{
		setAuditType(getContext(), audittype);
	}

	/**
	 * Set value of AuditType
	 * @param context
	 * @param audittype
	 */
	public final void setAuditType(com.mendix.systemwideinterfaces.core.IContext context, process.proxies.AuditType audittype)
	{
		if (audittype != null)
			getMendixObject().setValue(context, MemberNames.AuditType.toString(), audittype.toString());
		else
			getMendixObject().setValue(context, MemberNames.AuditType.toString(), null);
	}

	/**
	 * @return value of HolidaysHistoric
	 */
	public final java.lang.String getHolidaysHistoric()
	{
		return getHolidaysHistoric(getContext());
	}

	/**
	 * @param context
	 * @return value of HolidaysHistoric
	 */
	public final java.lang.String getHolidaysHistoric(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.HolidaysHistoric.toString());
	}

	/**
	 * Set value of HolidaysHistoric
	 * @param holidayshistoric
	 */
	public final void setHolidaysHistoric(java.lang.String holidayshistoric)
	{
		setHolidaysHistoric(getContext(), holidayshistoric);
	}

	/**
	 * Set value of HolidaysHistoric
	 * @param context
	 * @param holidayshistoric
	 */
	public final void setHolidaysHistoric(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String holidayshistoric)
	{
		getMendixObject().setValue(context, MemberNames.HolidaysHistoric.toString(), holidayshistoric);
	}

	/**
	 * @return value of BusinessTimeHistoric
	 */
	public final java.lang.String getBusinessTimeHistoric()
	{
		return getBusinessTimeHistoric(getContext());
	}

	/**
	 * @param context
	 * @return value of BusinessTimeHistoric
	 */
	public final java.lang.String getBusinessTimeHistoric(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.BusinessTimeHistoric.toString());
	}

	/**
	 * Set value of BusinessTimeHistoric
	 * @param businesstimehistoric
	 */
	public final void setBusinessTimeHistoric(java.lang.String businesstimehistoric)
	{
		setBusinessTimeHistoric(getContext(), businesstimehistoric);
	}

	/**
	 * Set value of BusinessTimeHistoric
	 * @param context
	 * @param businesstimehistoric
	 */
	public final void setBusinessTimeHistoric(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String businesstimehistoric)
	{
		getMendixObject().setValue(context, MemberNames.BusinessTimeHistoric.toString(), businesstimehistoric);
	}

	/**
	 * @return value of PersonToTransitionHistoric
	 */
	public final java.lang.String getPersonToTransitionHistoric()
	{
		return getPersonToTransitionHistoric(getContext());
	}

	/**
	 * @param context
	 * @return value of PersonToTransitionHistoric
	 */
	public final java.lang.String getPersonToTransitionHistoric(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.PersonToTransitionHistoric.toString());
	}

	/**
	 * Set value of PersonToTransitionHistoric
	 * @param persontotransitionhistoric
	 */
	public final void setPersonToTransitionHistoric(java.lang.String persontotransitionhistoric)
	{
		setPersonToTransitionHistoric(getContext(), persontotransitionhistoric);
	}

	/**
	 * Set value of PersonToTransitionHistoric
	 * @param context
	 * @param persontotransitionhistoric
	 */
	public final void setPersonToTransitionHistoric(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String persontotransitionhistoric)
	{
		getMendixObject().setValue(context, MemberNames.PersonToTransitionHistoric.toString(), persontotransitionhistoric);
	}

	/**
	 * @return value of FromPhaseHistoric
	 */
	public final java.lang.String getFromPhaseHistoric()
	{
		return getFromPhaseHistoric(getContext());
	}

	/**
	 * @param context
	 * @return value of FromPhaseHistoric
	 */
	public final java.lang.String getFromPhaseHistoric(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.FromPhaseHistoric.toString());
	}

	/**
	 * Set value of FromPhaseHistoric
	 * @param fromphasehistoric
	 */
	public final void setFromPhaseHistoric(java.lang.String fromphasehistoric)
	{
		setFromPhaseHistoric(getContext(), fromphasehistoric);
	}

	/**
	 * Set value of FromPhaseHistoric
	 * @param context
	 * @param fromphasehistoric
	 */
	public final void setFromPhaseHistoric(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String fromphasehistoric)
	{
		getMendixObject().setValue(context, MemberNames.FromPhaseHistoric.toString(), fromphasehistoric);
	}

	/**
	 * @return value of FromStateHistoric
	 */
	public final java.lang.String getFromStateHistoric()
	{
		return getFromStateHistoric(getContext());
	}

	/**
	 * @param context
	 * @return value of FromStateHistoric
	 */
	public final java.lang.String getFromStateHistoric(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.FromStateHistoric.toString());
	}

	/**
	 * Set value of FromStateHistoric
	 * @param fromstatehistoric
	 */
	public final void setFromStateHistoric(java.lang.String fromstatehistoric)
	{
		setFromStateHistoric(getContext(), fromstatehistoric);
	}

	/**
	 * Set value of FromStateHistoric
	 * @param context
	 * @param fromstatehistoric
	 */
	public final void setFromStateHistoric(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String fromstatehistoric)
	{
		getMendixObject().setValue(context, MemberNames.FromStateHistoric.toString(), fromstatehistoric);
	}

	/**
	 * @return value of FromTransitionHistoric
	 */
	public final java.lang.String getFromTransitionHistoric()
	{
		return getFromTransitionHistoric(getContext());
	}

	/**
	 * @param context
	 * @return value of FromTransitionHistoric
	 */
	public final java.lang.String getFromTransitionHistoric(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.FromTransitionHistoric.toString());
	}

	/**
	 * Set value of FromTransitionHistoric
	 * @param fromtransitionhistoric
	 */
	public final void setFromTransitionHistoric(java.lang.String fromtransitionhistoric)
	{
		setFromTransitionHistoric(getContext(), fromtransitionhistoric);
	}

	/**
	 * Set value of FromTransitionHistoric
	 * @param context
	 * @param fromtransitionhistoric
	 */
	public final void setFromTransitionHistoric(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String fromtransitionhistoric)
	{
		getMendixObject().setValue(context, MemberNames.FromTransitionHistoric.toString(), fromtransitionhistoric);
	}

	/**
	 * @return value of ToPhaseHistoric
	 */
	public final java.lang.String getToPhaseHistoric()
	{
		return getToPhaseHistoric(getContext());
	}

	/**
	 * @param context
	 * @return value of ToPhaseHistoric
	 */
	public final java.lang.String getToPhaseHistoric(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ToPhaseHistoric.toString());
	}

	/**
	 * Set value of ToPhaseHistoric
	 * @param tophasehistoric
	 */
	public final void setToPhaseHistoric(java.lang.String tophasehistoric)
	{
		setToPhaseHistoric(getContext(), tophasehistoric);
	}

	/**
	 * Set value of ToPhaseHistoric
	 * @param context
	 * @param tophasehistoric
	 */
	public final void setToPhaseHistoric(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String tophasehistoric)
	{
		getMendixObject().setValue(context, MemberNames.ToPhaseHistoric.toString(), tophasehistoric);
	}

	/**
	 * @return value of ToStateHistoric
	 */
	public final java.lang.String getToStateHistoric()
	{
		return getToStateHistoric(getContext());
	}

	/**
	 * @param context
	 * @return value of ToStateHistoric
	 */
	public final java.lang.String getToStateHistoric(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ToStateHistoric.toString());
	}

	/**
	 * Set value of ToStateHistoric
	 * @param tostatehistoric
	 */
	public final void setToStateHistoric(java.lang.String tostatehistoric)
	{
		setToStateHistoric(getContext(), tostatehistoric);
	}

	/**
	 * Set value of ToStateHistoric
	 * @param context
	 * @param tostatehistoric
	 */
	public final void setToStateHistoric(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String tostatehistoric)
	{
		getMendixObject().setValue(context, MemberNames.ToStateHistoric.toString(), tostatehistoric);
	}

	/**
	 * @return value of ToTransitionHistoric
	 */
	public final java.lang.String getToTransitionHistoric()
	{
		return getToTransitionHistoric(getContext());
	}

	/**
	 * @param context
	 * @return value of ToTransitionHistoric
	 */
	public final java.lang.String getToTransitionHistoric(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ToTransitionHistoric.toString());
	}

	/**
	 * Set value of ToTransitionHistoric
	 * @param totransitionhistoric
	 */
	public final void setToTransitionHistoric(java.lang.String totransitionhistoric)
	{
		setToTransitionHistoric(getContext(), totransitionhistoric);
	}

	/**
	 * Set value of ToTransitionHistoric
	 * @param context
	 * @param totransitionhistoric
	 */
	public final void setToTransitionHistoric(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String totransitionhistoric)
	{
		getMendixObject().setValue(context, MemberNames.ToTransitionHistoric.toString(), totransitionhistoric);
	}

	/**
	 * @return value of HasPausedTime
	 */
	public final java.lang.Boolean getHasPausedTime()
	{
		return getHasPausedTime(getContext());
	}

	/**
	 * @param context
	 * @return value of HasPausedTime
	 */
	public final java.lang.Boolean getHasPausedTime(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.HasPausedTime.toString());
	}

	/**
	 * Set value of HasPausedTime
	 * @param haspausedtime
	 */
	public final void setHasPausedTime(java.lang.Boolean haspausedtime)
	{
		setHasPausedTime(getContext(), haspausedtime);
	}

	/**
	 * Set value of HasPausedTime
	 * @param context
	 * @param haspausedtime
	 */
	public final void setHasPausedTime(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean haspausedtime)
	{
		getMendixObject().setValue(context, MemberNames.HasPausedTime.toString(), haspausedtime);
	}

	/**
	 * @return value of IncludeInContractTime
	 */
	public final java.lang.Boolean getIncludeInContractTime()
	{
		return getIncludeInContractTime(getContext());
	}

	/**
	 * @param context
	 * @return value of IncludeInContractTime
	 */
	public final java.lang.Boolean getIncludeInContractTime(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IncludeInContractTime.toString());
	}

	/**
	 * Set value of IncludeInContractTime
	 * @param includeincontracttime
	 */
	public final void setIncludeInContractTime(java.lang.Boolean includeincontracttime)
	{
		setIncludeInContractTime(getContext(), includeincontracttime);
	}

	/**
	 * Set value of IncludeInContractTime
	 * @param context
	 * @param includeincontracttime
	 */
	public final void setIncludeInContractTime(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean includeincontracttime)
	{
		getMendixObject().setValue(context, MemberNames.IncludeInContractTime.toString(), includeincontracttime);
	}

	/**
	 * @return value of PersonFromTransitionHistoric
	 */
	public final java.lang.String getPersonFromTransitionHistoric()
	{
		return getPersonFromTransitionHistoric(getContext());
	}

	/**
	 * @param context
	 * @return value of PersonFromTransitionHistoric
	 */
	public final java.lang.String getPersonFromTransitionHistoric(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.PersonFromTransitionHistoric.toString());
	}

	/**
	 * Set value of PersonFromTransitionHistoric
	 * @param personfromtransitionhistoric
	 */
	public final void setPersonFromTransitionHistoric(java.lang.String personfromtransitionhistoric)
	{
		setPersonFromTransitionHistoric(getContext(), personfromtransitionhistoric);
	}

	/**
	 * Set value of PersonFromTransitionHistoric
	 * @param context
	 * @param personfromtransitionhistoric
	 */
	public final void setPersonFromTransitionHistoric(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String personfromtransitionhistoric)
	{
		getMendixObject().setValue(context, MemberNames.PersonFromTransitionHistoric.toString(), personfromtransitionhistoric);
	}

	/**
	 * @return value of RequestTransitionAudit_Request
	 */
	public final process.proxies.Request getRequestTransitionAudit_Request() throws com.mendix.core.CoreException
	{
		return getRequestTransitionAudit_Request(getContext());
	}

	/**
	 * @param context
	 * @return value of RequestTransitionAudit_Request
	 */
	public final process.proxies.Request getRequestTransitionAudit_Request(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		process.proxies.Request result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.RequestTransitionAudit_Request.toString());
		if (identifier != null)
			result = process.proxies.Request.load(context, identifier);
		return result;
	}

	/**
	 * Set value of RequestTransitionAudit_Request
	 * @param requesttransitionaudit_request
	 */
	public final void setRequestTransitionAudit_Request(process.proxies.Request requesttransitionaudit_request)
	{
		setRequestTransitionAudit_Request(getContext(), requesttransitionaudit_request);
	}

	/**
	 * Set value of RequestTransitionAudit_Request
	 * @param context
	 * @param requesttransitionaudit_request
	 */
	public final void setRequestTransitionAudit_Request(com.mendix.systemwideinterfaces.core.IContext context, process.proxies.Request requesttransitionaudit_request)
	{
		if (requesttransitionaudit_request == null)
			getMendixObject().setValue(context, MemberNames.RequestTransitionAudit_Request.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.RequestTransitionAudit_Request.toString(), requesttransitionaudit_request.getMendixObject().getId());
	}

	/**
	 * @return value of RequestTransitionAudit_RequestSLMAspectAudit
	 */
	public final process.proxies.RequestSLMAspectAudit getRequestTransitionAudit_RequestSLMAspectAudit() throws com.mendix.core.CoreException
	{
		return getRequestTransitionAudit_RequestSLMAspectAudit(getContext());
	}

	/**
	 * @param context
	 * @return value of RequestTransitionAudit_RequestSLMAspectAudit
	 */
	public final process.proxies.RequestSLMAspectAudit getRequestTransitionAudit_RequestSLMAspectAudit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		process.proxies.RequestSLMAspectAudit result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.RequestTransitionAudit_RequestSLMAspectAudit.toString());
		if (identifier != null)
			result = process.proxies.RequestSLMAspectAudit.load(context, identifier);
		return result;
	}

	/**
	 * Set value of RequestTransitionAudit_RequestSLMAspectAudit
	 * @param requesttransitionaudit_requestslmaspectaudit
	 */
	public final void setRequestTransitionAudit_RequestSLMAspectAudit(process.proxies.RequestSLMAspectAudit requesttransitionaudit_requestslmaspectaudit)
	{
		setRequestTransitionAudit_RequestSLMAspectAudit(getContext(), requesttransitionaudit_requestslmaspectaudit);
	}

	/**
	 * Set value of RequestTransitionAudit_RequestSLMAspectAudit
	 * @param context
	 * @param requesttransitionaudit_requestslmaspectaudit
	 */
	public final void setRequestTransitionAudit_RequestSLMAspectAudit(com.mendix.systemwideinterfaces.core.IContext context, process.proxies.RequestSLMAspectAudit requesttransitionaudit_requestslmaspectaudit)
	{
		if (requesttransitionaudit_requestslmaspectaudit == null)
			getMendixObject().setValue(context, MemberNames.RequestTransitionAudit_RequestSLMAspectAudit.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.RequestTransitionAudit_RequestSLMAspectAudit.toString(), requesttransitionaudit_requestslmaspectaudit.getMendixObject().getId());
	}

	/**
	 * @return value of ActivityStream_RequestTransitionAudit
	 */
	public final process.proxies.ActivityStream getActivityStream_RequestTransitionAudit() throws com.mendix.core.CoreException
	{
		return getActivityStream_RequestTransitionAudit(getContext());
	}

	/**
	 * @param context
	 * @return value of ActivityStream_RequestTransitionAudit
	 */
	public final process.proxies.ActivityStream getActivityStream_RequestTransitionAudit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		process.proxies.ActivityStream result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ActivityStream_RequestTransitionAudit.toString());
		if (identifier != null)
			result = process.proxies.ActivityStream.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ActivityStream_RequestTransitionAudit
	 * @param activitystream_requesttransitionaudit
	 */
	public final void setActivityStream_RequestTransitionAudit(process.proxies.ActivityStream activitystream_requesttransitionaudit)
	{
		setActivityStream_RequestTransitionAudit(getContext(), activitystream_requesttransitionaudit);
	}

	/**
	 * Set value of ActivityStream_RequestTransitionAudit
	 * @param context
	 * @param activitystream_requesttransitionaudit
	 */
	public final void setActivityStream_RequestTransitionAudit(com.mendix.systemwideinterfaces.core.IContext context, process.proxies.ActivityStream activitystream_requesttransitionaudit)
	{
		if (activitystream_requesttransitionaudit == null)
			getMendixObject().setValue(context, MemberNames.ActivityStream_RequestTransitionAudit.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ActivityStream_RequestTransitionAudit.toString(), activitystream_requesttransitionaudit.getMendixObject().getId());
	}

	/**
	 * @return value of RequestTransitionAudit_ToTransition
	 */
	public final statetransition.proxies.Transition getRequestTransitionAudit_ToTransition() throws com.mendix.core.CoreException
	{
		return getRequestTransitionAudit_ToTransition(getContext());
	}

	/**
	 * @param context
	 * @return value of RequestTransitionAudit_ToTransition
	 */
	public final statetransition.proxies.Transition getRequestTransitionAudit_ToTransition(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		statetransition.proxies.Transition result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.RequestTransitionAudit_ToTransition.toString());
		if (identifier != null)
			result = statetransition.proxies.Transition.load(context, identifier);
		return result;
	}

	/**
	 * Set value of RequestTransitionAudit_ToTransition
	 * @param requesttransitionaudit_totransition
	 */
	public final void setRequestTransitionAudit_ToTransition(statetransition.proxies.Transition requesttransitionaudit_totransition)
	{
		setRequestTransitionAudit_ToTransition(getContext(), requesttransitionaudit_totransition);
	}

	/**
	 * Set value of RequestTransitionAudit_ToTransition
	 * @param context
	 * @param requesttransitionaudit_totransition
	 */
	public final void setRequestTransitionAudit_ToTransition(com.mendix.systemwideinterfaces.core.IContext context, statetransition.proxies.Transition requesttransitionaudit_totransition)
	{
		if (requesttransitionaudit_totransition == null)
			getMendixObject().setValue(context, MemberNames.RequestTransitionAudit_ToTransition.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.RequestTransitionAudit_ToTransition.toString(), requesttransitionaudit_totransition.getMendixObject().getId());
	}

	/**
	 * @return value of RequestTransitionAudit_FromPhase
	 */
	public final statetransition.proxies.Phase getRequestTransitionAudit_FromPhase() throws com.mendix.core.CoreException
	{
		return getRequestTransitionAudit_FromPhase(getContext());
	}

	/**
	 * @param context
	 * @return value of RequestTransitionAudit_FromPhase
	 */
	public final statetransition.proxies.Phase getRequestTransitionAudit_FromPhase(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		statetransition.proxies.Phase result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.RequestTransitionAudit_FromPhase.toString());
		if (identifier != null)
			result = statetransition.proxies.Phase.load(context, identifier);
		return result;
	}

	/**
	 * Set value of RequestTransitionAudit_FromPhase
	 * @param requesttransitionaudit_fromphase
	 */
	public final void setRequestTransitionAudit_FromPhase(statetransition.proxies.Phase requesttransitionaudit_fromphase)
	{
		setRequestTransitionAudit_FromPhase(getContext(), requesttransitionaudit_fromphase);
	}

	/**
	 * Set value of RequestTransitionAudit_FromPhase
	 * @param context
	 * @param requesttransitionaudit_fromphase
	 */
	public final void setRequestTransitionAudit_FromPhase(com.mendix.systemwideinterfaces.core.IContext context, statetransition.proxies.Phase requesttransitionaudit_fromphase)
	{
		if (requesttransitionaudit_fromphase == null)
			getMendixObject().setValue(context, MemberNames.RequestTransitionAudit_FromPhase.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.RequestTransitionAudit_FromPhase.toString(), requesttransitionaudit_fromphase.getMendixObject().getId());
	}

	/**
	 * @return value of RequestTransitionAudit_ToPhase
	 */
	public final statetransition.proxies.Phase getRequestTransitionAudit_ToPhase() throws com.mendix.core.CoreException
	{
		return getRequestTransitionAudit_ToPhase(getContext());
	}

	/**
	 * @param context
	 * @return value of RequestTransitionAudit_ToPhase
	 */
	public final statetransition.proxies.Phase getRequestTransitionAudit_ToPhase(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		statetransition.proxies.Phase result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.RequestTransitionAudit_ToPhase.toString());
		if (identifier != null)
			result = statetransition.proxies.Phase.load(context, identifier);
		return result;
	}

	/**
	 * Set value of RequestTransitionAudit_ToPhase
	 * @param requesttransitionaudit_tophase
	 */
	public final void setRequestTransitionAudit_ToPhase(statetransition.proxies.Phase requesttransitionaudit_tophase)
	{
		setRequestTransitionAudit_ToPhase(getContext(), requesttransitionaudit_tophase);
	}

	/**
	 * Set value of RequestTransitionAudit_ToPhase
	 * @param context
	 * @param requesttransitionaudit_tophase
	 */
	public final void setRequestTransitionAudit_ToPhase(com.mendix.systemwideinterfaces.core.IContext context, statetransition.proxies.Phase requesttransitionaudit_tophase)
	{
		if (requesttransitionaudit_tophase == null)
			getMendixObject().setValue(context, MemberNames.RequestTransitionAudit_ToPhase.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.RequestTransitionAudit_ToPhase.toString(), requesttransitionaudit_tophase.getMendixObject().getId());
	}

	/**
	 * @return value of RequestTransitionAudit_FromState
	 */
	public final statetransition.proxies.State getRequestTransitionAudit_FromState() throws com.mendix.core.CoreException
	{
		return getRequestTransitionAudit_FromState(getContext());
	}

	/**
	 * @param context
	 * @return value of RequestTransitionAudit_FromState
	 */
	public final statetransition.proxies.State getRequestTransitionAudit_FromState(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		statetransition.proxies.State result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.RequestTransitionAudit_FromState.toString());
		if (identifier != null)
			result = statetransition.proxies.State.load(context, identifier);
		return result;
	}

	/**
	 * Set value of RequestTransitionAudit_FromState
	 * @param requesttransitionaudit_fromstate
	 */
	public final void setRequestTransitionAudit_FromState(statetransition.proxies.State requesttransitionaudit_fromstate)
	{
		setRequestTransitionAudit_FromState(getContext(), requesttransitionaudit_fromstate);
	}

	/**
	 * Set value of RequestTransitionAudit_FromState
	 * @param context
	 * @param requesttransitionaudit_fromstate
	 */
	public final void setRequestTransitionAudit_FromState(com.mendix.systemwideinterfaces.core.IContext context, statetransition.proxies.State requesttransitionaudit_fromstate)
	{
		if (requesttransitionaudit_fromstate == null)
			getMendixObject().setValue(context, MemberNames.RequestTransitionAudit_FromState.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.RequestTransitionAudit_FromState.toString(), requesttransitionaudit_fromstate.getMendixObject().getId());
	}

	/**
	 * @return value of RequestTransitionAudit_ToState
	 */
	public final statetransition.proxies.State getRequestTransitionAudit_ToState() throws com.mendix.core.CoreException
	{
		return getRequestTransitionAudit_ToState(getContext());
	}

	/**
	 * @param context
	 * @return value of RequestTransitionAudit_ToState
	 */
	public final statetransition.proxies.State getRequestTransitionAudit_ToState(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		statetransition.proxies.State result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.RequestTransitionAudit_ToState.toString());
		if (identifier != null)
			result = statetransition.proxies.State.load(context, identifier);
		return result;
	}

	/**
	 * Set value of RequestTransitionAudit_ToState
	 * @param requesttransitionaudit_tostate
	 */
	public final void setRequestTransitionAudit_ToState(statetransition.proxies.State requesttransitionaudit_tostate)
	{
		setRequestTransitionAudit_ToState(getContext(), requesttransitionaudit_tostate);
	}

	/**
	 * Set value of RequestTransitionAudit_ToState
	 * @param context
	 * @param requesttransitionaudit_tostate
	 */
	public final void setRequestTransitionAudit_ToState(com.mendix.systemwideinterfaces.core.IContext context, statetransition.proxies.State requesttransitionaudit_tostate)
	{
		if (requesttransitionaudit_tostate == null)
			getMendixObject().setValue(context, MemberNames.RequestTransitionAudit_ToState.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.RequestTransitionAudit_ToState.toString(), requesttransitionaudit_tostate.getMendixObject().getId());
	}

	/**
	 * @return value of RequestTransitionAudit_Business_Time_Group
	 */
	public final businesshours.proxies.Business_Time_Group getRequestTransitionAudit_Business_Time_Group() throws com.mendix.core.CoreException
	{
		return getRequestTransitionAudit_Business_Time_Group(getContext());
	}

	/**
	 * @param context
	 * @return value of RequestTransitionAudit_Business_Time_Group
	 */
	public final businesshours.proxies.Business_Time_Group getRequestTransitionAudit_Business_Time_Group(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		businesshours.proxies.Business_Time_Group result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.RequestTransitionAudit_Business_Time_Group.toString());
		if (identifier != null)
			result = businesshours.proxies.Business_Time_Group.load(context, identifier);
		return result;
	}

	/**
	 * Set value of RequestTransitionAudit_Business_Time_Group
	 * @param requesttransitionaudit_business_time_group
	 */
	public final void setRequestTransitionAudit_Business_Time_Group(businesshours.proxies.Business_Time_Group requesttransitionaudit_business_time_group)
	{
		setRequestTransitionAudit_Business_Time_Group(getContext(), requesttransitionaudit_business_time_group);
	}

	/**
	 * Set value of RequestTransitionAudit_Business_Time_Group
	 * @param context
	 * @param requesttransitionaudit_business_time_group
	 */
	public final void setRequestTransitionAudit_Business_Time_Group(com.mendix.systemwideinterfaces.core.IContext context, businesshours.proxies.Business_Time_Group requesttransitionaudit_business_time_group)
	{
		if (requesttransitionaudit_business_time_group == null)
			getMendixObject().setValue(context, MemberNames.RequestTransitionAudit_Business_Time_Group.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.RequestTransitionAudit_Business_Time_Group.toString(), requesttransitionaudit_business_time_group.getMendixObject().getId());
	}

	/**
	 * @return value of RequestTransitionAudit_Holiday_Group
	 */
	public final businesshours.proxies.Holidays_Group getRequestTransitionAudit_Holiday_Group() throws com.mendix.core.CoreException
	{
		return getRequestTransitionAudit_Holiday_Group(getContext());
	}

	/**
	 * @param context
	 * @return value of RequestTransitionAudit_Holiday_Group
	 */
	public final businesshours.proxies.Holidays_Group getRequestTransitionAudit_Holiday_Group(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		businesshours.proxies.Holidays_Group result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.RequestTransitionAudit_Holiday_Group.toString());
		if (identifier != null)
			result = businesshours.proxies.Holidays_Group.load(context, identifier);
		return result;
	}

	/**
	 * Set value of RequestTransitionAudit_Holiday_Group
	 * @param requesttransitionaudit_holiday_group
	 */
	public final void setRequestTransitionAudit_Holiday_Group(businesshours.proxies.Holidays_Group requesttransitionaudit_holiday_group)
	{
		setRequestTransitionAudit_Holiday_Group(getContext(), requesttransitionaudit_holiday_group);
	}

	/**
	 * Set value of RequestTransitionAudit_Holiday_Group
	 * @param context
	 * @param requesttransitionaudit_holiday_group
	 */
	public final void setRequestTransitionAudit_Holiday_Group(com.mendix.systemwideinterfaces.core.IContext context, businesshours.proxies.Holidays_Group requesttransitionaudit_holiday_group)
	{
		if (requesttransitionaudit_holiday_group == null)
			getMendixObject().setValue(context, MemberNames.RequestTransitionAudit_Holiday_Group.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.RequestTransitionAudit_Holiday_Group.toString(), requesttransitionaudit_holiday_group.getMendixObject().getId());
	}

	/**
	 * @return value of RequestTransitionAudit_PersonToTransition
	 */
	public final nap.proxies.Person getRequestTransitionAudit_PersonToTransition() throws com.mendix.core.CoreException
	{
		return getRequestTransitionAudit_PersonToTransition(getContext());
	}

	/**
	 * @param context
	 * @return value of RequestTransitionAudit_PersonToTransition
	 */
	public final nap.proxies.Person getRequestTransitionAudit_PersonToTransition(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		nap.proxies.Person result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.RequestTransitionAudit_PersonToTransition.toString());
		if (identifier != null)
			result = nap.proxies.Person.load(context, identifier);
		return result;
	}

	/**
	 * Set value of RequestTransitionAudit_PersonToTransition
	 * @param requesttransitionaudit_persontotransition
	 */
	public final void setRequestTransitionAudit_PersonToTransition(nap.proxies.Person requesttransitionaudit_persontotransition)
	{
		setRequestTransitionAudit_PersonToTransition(getContext(), requesttransitionaudit_persontotransition);
	}

	/**
	 * Set value of RequestTransitionAudit_PersonToTransition
	 * @param context
	 * @param requesttransitionaudit_persontotransition
	 */
	public final void setRequestTransitionAudit_PersonToTransition(com.mendix.systemwideinterfaces.core.IContext context, nap.proxies.Person requesttransitionaudit_persontotransition)
	{
		if (requesttransitionaudit_persontotransition == null)
			getMendixObject().setValue(context, MemberNames.RequestTransitionAudit_PersonToTransition.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.RequestTransitionAudit_PersonToTransition.toString(), requesttransitionaudit_persontotransition.getMendixObject().getId());
	}

	/**
	 * @return value of RequestTransitionAudit_FromTransition
	 */
	public final statetransition.proxies.Transition getRequestTransitionAudit_FromTransition() throws com.mendix.core.CoreException
	{
		return getRequestTransitionAudit_FromTransition(getContext());
	}

	/**
	 * @param context
	 * @return value of RequestTransitionAudit_FromTransition
	 */
	public final statetransition.proxies.Transition getRequestTransitionAudit_FromTransition(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		statetransition.proxies.Transition result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.RequestTransitionAudit_FromTransition.toString());
		if (identifier != null)
			result = statetransition.proxies.Transition.load(context, identifier);
		return result;
	}

	/**
	 * Set value of RequestTransitionAudit_FromTransition
	 * @param requesttransitionaudit_fromtransition
	 */
	public final void setRequestTransitionAudit_FromTransition(statetransition.proxies.Transition requesttransitionaudit_fromtransition)
	{
		setRequestTransitionAudit_FromTransition(getContext(), requesttransitionaudit_fromtransition);
	}

	/**
	 * Set value of RequestTransitionAudit_FromTransition
	 * @param context
	 * @param requesttransitionaudit_fromtransition
	 */
	public final void setRequestTransitionAudit_FromTransition(com.mendix.systemwideinterfaces.core.IContext context, statetransition.proxies.Transition requesttransitionaudit_fromtransition)
	{
		if (requesttransitionaudit_fromtransition == null)
			getMendixObject().setValue(context, MemberNames.RequestTransitionAudit_FromTransition.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.RequestTransitionAudit_FromTransition.toString(), requesttransitionaudit_fromtransition.getMendixObject().getId());
	}

	/**
	 * @return value of RequestTransitionAudit_PersonFromTransition
	 */
	public final nap.proxies.Person getRequestTransitionAudit_PersonFromTransition() throws com.mendix.core.CoreException
	{
		return getRequestTransitionAudit_PersonFromTransition(getContext());
	}

	/**
	 * @param context
	 * @return value of RequestTransitionAudit_PersonFromTransition
	 */
	public final nap.proxies.Person getRequestTransitionAudit_PersonFromTransition(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		nap.proxies.Person result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.RequestTransitionAudit_PersonFromTransition.toString());
		if (identifier != null)
			result = nap.proxies.Person.load(context, identifier);
		return result;
	}

	/**
	 * Set value of RequestTransitionAudit_PersonFromTransition
	 * @param requesttransitionaudit_personfromtransition
	 */
	public final void setRequestTransitionAudit_PersonFromTransition(nap.proxies.Person requesttransitionaudit_personfromtransition)
	{
		setRequestTransitionAudit_PersonFromTransition(getContext(), requesttransitionaudit_personfromtransition);
	}

	/**
	 * Set value of RequestTransitionAudit_PersonFromTransition
	 * @param context
	 * @param requesttransitionaudit_personfromtransition
	 */
	public final void setRequestTransitionAudit_PersonFromTransition(com.mendix.systemwideinterfaces.core.IContext context, nap.proxies.Person requesttransitionaudit_personfromtransition)
	{
		if (requesttransitionaudit_personfromtransition == null)
			getMendixObject().setValue(context, MemberNames.RequestTransitionAudit_PersonFromTransition.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.RequestTransitionAudit_PersonFromTransition.toString(), requesttransitionaudit_personfromtransition.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return requestTransitionAuditMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final process.proxies.RequestTransitionAudit that = (process.proxies.RequestTransitionAudit) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Process.RequestTransitionAudit";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
