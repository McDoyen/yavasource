// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package importexport.actions;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import importexport.proxies.DataPatchRecord;
import importexport.proxies.ImportActionEnum;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import metamodel.proxies.MendixEntity;
import nl.mansystems.mendiximportexport.SharedFunctions;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;

public class ExportDataPatchRecordListObjectsToExcel extends CustomJavaAction<java.lang.Boolean>
{
	private java.util.List<IMendixObject> __DataPatchRecordList;
	private java.util.List<importexport.proxies.DataPatchRecord> DataPatchRecordList;
	private java.lang.String FolderName;
	private IMendixObject __ImportExportSettingParameter1;
	private importexport.proxies.ImportExportSetting ImportExportSettingParameter1;

	public ExportDataPatchRecordListObjectsToExcel(IContext context, java.util.List<IMendixObject> DataPatchRecordList, java.lang.String FolderName, IMendixObject ImportExportSettingParameter1)
	{
		super(context);
		this.__DataPatchRecordList = DataPatchRecordList;
		this.FolderName = FolderName;
		this.__ImportExportSettingParameter1 = ImportExportSettingParameter1;
	}

	@Override
	public java.lang.Boolean executeAction() throws Exception
	{
		this.DataPatchRecordList = new java.util.ArrayList<importexport.proxies.DataPatchRecord>();
		if (__DataPatchRecordList != null)
			for (IMendixObject __DataPatchRecordListElement : __DataPatchRecordList)
				this.DataPatchRecordList.add(importexport.proxies.DataPatchRecord.initialize(getContext(), __DataPatchRecordListElement));

		this.ImportExportSettingParameter1 = __ImportExportSettingParameter1 == null ? null : importexport.proxies.ImportExportSetting.initialize(getContext(), __ImportExportSettingParameter1);

		// BEGIN USER CODE
		Core.getLogger("ExportRecordListObjectsToExcel").trace("ExportRecordListObjectsToExcel: Starting.");
		List<IMendixObject> remainingObjects = new ArrayList<IMendixObject>();
		remainingObjects.addAll(__DataPatchRecordList);
		
		while(remainingObjects.size()>0) {
			List<IMendixObject> currentDataPatchRecordObjects = nl.mansystems.mendiximportexport.ExportToExcelWithContents.filterDataPatchRecordListByEntity(this.getContext(), remainingObjects);
			Core.getLogger("ExportRecordListObjectsToExcel").trace("ExportRecordListObjectsToExcel: currentExportRecordObjects " + currentDataPatchRecordObjects.size() + (currentDataPatchRecordObjects.size()>0?" "+currentDataPatchRecordObjects.get(0).getMetaObject().getName():"")+".");
			List<IMendixObject> currentRealObjects = nl.mansystems.mendiximportexport.ExportToExcelWithContents.getRealObjectsFromDataPatchRecordList(this.getContext(), currentDataPatchRecordObjects, ImportExportSettingParameter1.getUseAction());
			Core.getLogger("ExportRecordListObjectsToExcel").trace("ExportRecordListObjectsToExcel: currentRealObjects " + currentRealObjects.size() + (currentRealObjects.size()>0?" "+currentRealObjects.get(0).getMetaObject().getName():"")+".");
			List<IMendixObject> currentDeletedObjects = nl.mansystems.mendiximportexport.ExportToExcelWithContents.getDeletedObjectsFromDataPatchRecordList(this.getContext(), currentDataPatchRecordObjects, ImportExportSettingParameter1.getUseAction());
			Core.getLogger("ExportRecordListObjectsToExcel").trace("ExportRecordListObjectsToExcel: currentDeletedAuditObjects " + currentDeletedObjects.size() + (currentDeletedObjects.size()>0?" "+currentDeletedObjects.get(0).getMetaObject().getName():"")+".");
			remainingObjects.removeAll(currentDataPatchRecordObjects);
			Map<Long,ImportActionEnum> actionMap = nl.mansystems.mendiximportexport.ExportToExcelWithContents.getActionHashMapFromDataPatchRecordList(this.getContext(), currentDataPatchRecordObjects);
			String entityName = null;
			if (currentRealObjects!=null && currentRealObjects.size()>0) {
				entityName = currentRealObjects.get(0).getMetaObject().getName();
			} else if (currentDeletedObjects!=null && currentDeletedObjects.size()>0) {
				DataPatchRecord dataPatchRecord = DataPatchRecord.initialize(this.getContext(), currentDeletedObjects.get(0));
				entityName = dataPatchRecord.getEntityName();
			} else {
				Core.getLogger("ExportRecordListObjectsToExcel").error("ExportRecordListObjectsToExcel: error determining entity "+ currentDataPatchRecordObjects.size() + " (" + currentRealObjects.size() + "/" + currentDeletedObjects.size() + ")");
			}
			Core.getLogger("ExportRecordListObjectsToExcel").info("ExportRecordListObjectsToExcel: Exporting " + currentDataPatchRecordObjects.size() + " (insert/update " + currentRealObjects.size() + " /delete " + currentDeletedObjects.size() + ") records for "+ entityName + ". Remaining objects: " + remainingObjects.size());
			MendixEntity mendixEntity = SharedFunctions.getEntityInfo(this.getContext(), currentRealObjects.get(0).getType(),0).getMendixEntity();
			IMendixObject typeObject = null;
			if (mendixEntity.getHasDynamicData()) {
				String typeXPath = mendixEntity.getDDAllTypesXPath() + "[" + mendixEntity.getDDTypeOfRecordXPath().replaceAll("#ID#", ""+currentRealObjects.get(0).getId().toLong() + "]");
				List<IMendixObject> typeList = Core.retrieveXPathQuery(this.getContext(), typeXPath);
				if (typeList!=null && typeList.size()>0) {
					typeObject = typeList.get(0);
				}
			}
			nl.mansystems.mendiximportexport.ExportToExcelWithContents eewc = new nl.mansystems.mendiximportexport.ExportToExcelWithContents(this.getContext(), entityName, FolderName + entityName + "." + ImportExportSettingParameter1.getFileType().toString(), ImportExportSettingParameter1);
			eewc.executeAction(currentRealObjects, actionMap, currentDeletedObjects, typeObject);
		}
		Core.getLogger("ExportRecordListObjectsToExcel").trace("ExportRecordListObjectsToExcel: Finished.");
		return true;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "ExportDataPatchRecordListObjectsToExcel";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
