// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package importexport.proxies;

public class JobNotification
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject jobNotificationMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "ImportExport.JobNotification";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		NotificationTextOnError("NotificationTextOnError"),
		NotificationTextOnSuccess("NotificationTextOnSuccess"),
		IsSend("IsSend"),
		JobNotification_Job("ImportExport.JobNotification_Job");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public JobNotification(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "ImportExport.JobNotification"));
	}

	protected JobNotification(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject jobNotificationMendixObject)
	{
		if (jobNotificationMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("ImportExport.JobNotification", jobNotificationMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a ImportExport.JobNotification");

		this.jobNotificationMendixObject = jobNotificationMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'JobNotification.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static importexport.proxies.JobNotification initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return importexport.proxies.JobNotification.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static importexport.proxies.JobNotification initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new importexport.proxies.JobNotification(context, mendixObject);
	}

	public static importexport.proxies.JobNotification load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return importexport.proxies.JobNotification.initialize(context, mendixObject);
	}

	public static java.util.List<importexport.proxies.JobNotification> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<importexport.proxies.JobNotification> result = new java.util.ArrayList<importexport.proxies.JobNotification>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//ImportExport.JobNotification" + xpathConstraint))
			result.add(importexport.proxies.JobNotification.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of NotificationTextOnError
	 */
	public final java.lang.String getNotificationTextOnError()
	{
		return getNotificationTextOnError(getContext());
	}

	/**
	 * @param context
	 * @return value of NotificationTextOnError
	 */
	public final java.lang.String getNotificationTextOnError(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.NotificationTextOnError.toString());
	}

	/**
	 * Set value of NotificationTextOnError
	 * @param notificationtextonerror
	 */
	public final void setNotificationTextOnError(java.lang.String notificationtextonerror)
	{
		setNotificationTextOnError(getContext(), notificationtextonerror);
	}

	/**
	 * Set value of NotificationTextOnError
	 * @param context
	 * @param notificationtextonerror
	 */
	public final void setNotificationTextOnError(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String notificationtextonerror)
	{
		getMendixObject().setValue(context, MemberNames.NotificationTextOnError.toString(), notificationtextonerror);
	}

	/**
	 * @return value of NotificationTextOnSuccess
	 */
	public final java.lang.String getNotificationTextOnSuccess()
	{
		return getNotificationTextOnSuccess(getContext());
	}

	/**
	 * @param context
	 * @return value of NotificationTextOnSuccess
	 */
	public final java.lang.String getNotificationTextOnSuccess(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.NotificationTextOnSuccess.toString());
	}

	/**
	 * Set value of NotificationTextOnSuccess
	 * @param notificationtextonsuccess
	 */
	public final void setNotificationTextOnSuccess(java.lang.String notificationtextonsuccess)
	{
		setNotificationTextOnSuccess(getContext(), notificationtextonsuccess);
	}

	/**
	 * Set value of NotificationTextOnSuccess
	 * @param context
	 * @param notificationtextonsuccess
	 */
	public final void setNotificationTextOnSuccess(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String notificationtextonsuccess)
	{
		getMendixObject().setValue(context, MemberNames.NotificationTextOnSuccess.toString(), notificationtextonsuccess);
	}

	/**
	 * @return value of IsSend
	 */
	public final java.lang.Boolean getIsSend()
	{
		return getIsSend(getContext());
	}

	/**
	 * @param context
	 * @return value of IsSend
	 */
	public final java.lang.Boolean getIsSend(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsSend.toString());
	}

	/**
	 * Set value of IsSend
	 * @param issend
	 */
	public final void setIsSend(java.lang.Boolean issend)
	{
		setIsSend(getContext(), issend);
	}

	/**
	 * Set value of IsSend
	 * @param context
	 * @param issend
	 */
	public final void setIsSend(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean issend)
	{
		getMendixObject().setValue(context, MemberNames.IsSend.toString(), issend);
	}

	/**
	 * @return value of JobNotification_Job
	 */
	public final importexport.proxies.Job getJobNotification_Job() throws com.mendix.core.CoreException
	{
		return getJobNotification_Job(getContext());
	}

	/**
	 * @param context
	 * @return value of JobNotification_Job
	 */
	public final importexport.proxies.Job getJobNotification_Job(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		importexport.proxies.Job result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.JobNotification_Job.toString());
		if (identifier != null)
			result = importexport.proxies.Job.load(context, identifier);
		return result;
	}

	/**
	 * Set value of JobNotification_Job
	 * @param jobnotification_job
	 */
	public final void setJobNotification_Job(importexport.proxies.Job jobnotification_job)
	{
		setJobNotification_Job(getContext(), jobnotification_job);
	}

	/**
	 * Set value of JobNotification_Job
	 * @param context
	 * @param jobnotification_job
	 */
	public final void setJobNotification_Job(com.mendix.systemwideinterfaces.core.IContext context, importexport.proxies.Job jobnotification_job)
	{
		if (jobnotification_job == null)
			getMendixObject().setValue(context, MemberNames.JobNotification_Job.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.JobNotification_Job.toString(), jobnotification_job.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return jobNotificationMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final importexport.proxies.JobNotification that = (importexport.proxies.JobNotification) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "ImportExport.JobNotification";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
