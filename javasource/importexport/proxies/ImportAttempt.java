// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package importexport.proxies;

public class ImportAttempt
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject importAttemptMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "ImportExport.ImportAttempt";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		FileName("FileName"),
		AttemptDate("AttemptDate"),
		ParentAttempt_ChildAttempt("ImportExport.ParentAttempt_ChildAttempt"),
		ImportAttempt_Job("ImportExport.ImportAttempt_Job");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public ImportAttempt(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "ImportExport.ImportAttempt"));
	}

	protected ImportAttempt(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject importAttemptMendixObject)
	{
		if (importAttemptMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("ImportExport.ImportAttempt", importAttemptMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a ImportExport.ImportAttempt");

		this.importAttemptMendixObject = importAttemptMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'ImportAttempt.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static importexport.proxies.ImportAttempt initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return importexport.proxies.ImportAttempt.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static importexport.proxies.ImportAttempt initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new importexport.proxies.ImportAttempt(context, mendixObject);
	}

	public static importexport.proxies.ImportAttempt load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return importexport.proxies.ImportAttempt.initialize(context, mendixObject);
	}

	public static java.util.List<importexport.proxies.ImportAttempt> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<importexport.proxies.ImportAttempt> result = new java.util.ArrayList<importexport.proxies.ImportAttempt>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//ImportExport.ImportAttempt" + xpathConstraint))
			result.add(importexport.proxies.ImportAttempt.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of FileName
	 */
	public final java.lang.String getFileName()
	{
		return getFileName(getContext());
	}

	/**
	 * @param context
	 * @return value of FileName
	 */
	public final java.lang.String getFileName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.FileName.toString());
	}

	/**
	 * Set value of FileName
	 * @param filename
	 */
	public final void setFileName(java.lang.String filename)
	{
		setFileName(getContext(), filename);
	}

	/**
	 * Set value of FileName
	 * @param context
	 * @param filename
	 */
	public final void setFileName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String filename)
	{
		getMendixObject().setValue(context, MemberNames.FileName.toString(), filename);
	}

	/**
	 * @return value of AttemptDate
	 */
	public final java.util.Date getAttemptDate()
	{
		return getAttemptDate(getContext());
	}

	/**
	 * @param context
	 * @return value of AttemptDate
	 */
	public final java.util.Date getAttemptDate(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.AttemptDate.toString());
	}

	/**
	 * Set value of AttemptDate
	 * @param attemptdate
	 */
	public final void setAttemptDate(java.util.Date attemptdate)
	{
		setAttemptDate(getContext(), attemptdate);
	}

	/**
	 * Set value of AttemptDate
	 * @param context
	 * @param attemptdate
	 */
	public final void setAttemptDate(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date attemptdate)
	{
		getMendixObject().setValue(context, MemberNames.AttemptDate.toString(), attemptdate);
	}

	/**
	 * @return value of ParentAttempt_ChildAttempt
	 */
	public final importexport.proxies.ImportAttempt getParentAttempt_ChildAttempt() throws com.mendix.core.CoreException
	{
		return getParentAttempt_ChildAttempt(getContext());
	}

	/**
	 * @param context
	 * @return value of ParentAttempt_ChildAttempt
	 */
	public final importexport.proxies.ImportAttempt getParentAttempt_ChildAttempt(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		importexport.proxies.ImportAttempt result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ParentAttempt_ChildAttempt.toString());
		if (identifier != null)
			result = importexport.proxies.ImportAttempt.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ParentAttempt_ChildAttempt
	 * @param parentattempt_childattempt
	 */
	public final void setParentAttempt_ChildAttempt(importexport.proxies.ImportAttempt parentattempt_childattempt)
	{
		setParentAttempt_ChildAttempt(getContext(), parentattempt_childattempt);
	}

	/**
	 * Set value of ParentAttempt_ChildAttempt
	 * @param context
	 * @param parentattempt_childattempt
	 */
	public final void setParentAttempt_ChildAttempt(com.mendix.systemwideinterfaces.core.IContext context, importexport.proxies.ImportAttempt parentattempt_childattempt)
	{
		if (parentattempt_childattempt == null)
			getMendixObject().setValue(context, MemberNames.ParentAttempt_ChildAttempt.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ParentAttempt_ChildAttempt.toString(), parentattempt_childattempt.getMendixObject().getId());
	}

	/**
	 * @return value of ImportAttempt_Job
	 */
	public final importexport.proxies.Job getImportAttempt_Job() throws com.mendix.core.CoreException
	{
		return getImportAttempt_Job(getContext());
	}

	/**
	 * @param context
	 * @return value of ImportAttempt_Job
	 */
	public final importexport.proxies.Job getImportAttempt_Job(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		importexport.proxies.Job result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ImportAttempt_Job.toString());
		if (identifier != null)
			result = importexport.proxies.Job.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ImportAttempt_Job
	 * @param importattempt_job
	 */
	public final void setImportAttempt_Job(importexport.proxies.Job importattempt_job)
	{
		setImportAttempt_Job(getContext(), importattempt_job);
	}

	/**
	 * Set value of ImportAttempt_Job
	 * @param context
	 * @param importattempt_job
	 */
	public final void setImportAttempt_Job(com.mendix.systemwideinterfaces.core.IContext context, importexport.proxies.Job importattempt_job)
	{
		if (importattempt_job == null)
			getMendixObject().setValue(context, MemberNames.ImportAttempt_Job.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ImportAttempt_Job.toString(), importattempt_job.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return importAttemptMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final importexport.proxies.ImportAttempt that = (importexport.proxies.ImportAttempt) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "ImportExport.ImportAttempt";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
