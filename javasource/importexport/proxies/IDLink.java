// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package importexport.proxies;

public class IDLink
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject iDLinkMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "ImportExport.IDLink";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		ObjectName("ObjectName"),
		OldId("OldId"),
		NewId("NewId"),
		KeyXPath("KeyXPath"),
		OldIdStr("OldIdStr"),
		NewIdStr("NewIdStr"),
		OldFileID("OldFileID"),
		NewFileID("NewFileID");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public IDLink(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "ImportExport.IDLink"));
	}

	protected IDLink(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject iDLinkMendixObject)
	{
		if (iDLinkMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("ImportExport.IDLink", iDLinkMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a ImportExport.IDLink");

		this.iDLinkMendixObject = iDLinkMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'IDLink.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static importexport.proxies.IDLink initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return importexport.proxies.IDLink.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static importexport.proxies.IDLink initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new importexport.proxies.IDLink(context, mendixObject);
	}

	public static importexport.proxies.IDLink load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return importexport.proxies.IDLink.initialize(context, mendixObject);
	}

	public static java.util.List<importexport.proxies.IDLink> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<importexport.proxies.IDLink> result = new java.util.ArrayList<importexport.proxies.IDLink>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//ImportExport.IDLink" + xpathConstraint))
			result.add(importexport.proxies.IDLink.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of ObjectName
	 */
	public final java.lang.String getObjectName()
	{
		return getObjectName(getContext());
	}

	/**
	 * @param context
	 * @return value of ObjectName
	 */
	public final java.lang.String getObjectName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ObjectName.toString());
	}

	/**
	 * Set value of ObjectName
	 * @param objectname
	 */
	public final void setObjectName(java.lang.String objectname)
	{
		setObjectName(getContext(), objectname);
	}

	/**
	 * Set value of ObjectName
	 * @param context
	 * @param objectname
	 */
	public final void setObjectName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String objectname)
	{
		getMendixObject().setValue(context, MemberNames.ObjectName.toString(), objectname);
	}

	/**
	 * @return value of OldId
	 */
	public final java.lang.Long getOldId()
	{
		return getOldId(getContext());
	}

	/**
	 * @param context
	 * @return value of OldId
	 */
	public final java.lang.Long getOldId(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.OldId.toString());
	}

	/**
	 * Set value of OldId
	 * @param oldid
	 */
	public final void setOldId(java.lang.Long oldid)
	{
		setOldId(getContext(), oldid);
	}

	/**
	 * Set value of OldId
	 * @param context
	 * @param oldid
	 */
	public final void setOldId(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long oldid)
	{
		getMendixObject().setValue(context, MemberNames.OldId.toString(), oldid);
	}

	/**
	 * @return value of NewId
	 */
	public final java.lang.Long getNewId()
	{
		return getNewId(getContext());
	}

	/**
	 * @param context
	 * @return value of NewId
	 */
	public final java.lang.Long getNewId(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.NewId.toString());
	}

	/**
	 * Set value of NewId
	 * @param newid
	 */
	public final void setNewId(java.lang.Long newid)
	{
		setNewId(getContext(), newid);
	}

	/**
	 * Set value of NewId
	 * @param context
	 * @param newid
	 */
	public final void setNewId(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long newid)
	{
		getMendixObject().setValue(context, MemberNames.NewId.toString(), newid);
	}

	/**
	 * @return value of KeyXPath
	 */
	public final java.lang.String getKeyXPath()
	{
		return getKeyXPath(getContext());
	}

	/**
	 * @param context
	 * @return value of KeyXPath
	 */
	public final java.lang.String getKeyXPath(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.KeyXPath.toString());
	}

	/**
	 * Set value of KeyXPath
	 * @param keyxpath
	 */
	public final void setKeyXPath(java.lang.String keyxpath)
	{
		setKeyXPath(getContext(), keyxpath);
	}

	/**
	 * Set value of KeyXPath
	 * @param context
	 * @param keyxpath
	 */
	public final void setKeyXPath(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String keyxpath)
	{
		getMendixObject().setValue(context, MemberNames.KeyXPath.toString(), keyxpath);
	}

	/**
	 * @return value of OldIdStr
	 */
	public final java.lang.String getOldIdStr()
	{
		return getOldIdStr(getContext());
	}

	/**
	 * @param context
	 * @return value of OldIdStr
	 */
	public final java.lang.String getOldIdStr(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.OldIdStr.toString());
	}

	/**
	 * Set value of OldIdStr
	 * @param oldidstr
	 */
	public final void setOldIdStr(java.lang.String oldidstr)
	{
		setOldIdStr(getContext(), oldidstr);
	}

	/**
	 * Set value of OldIdStr
	 * @param context
	 * @param oldidstr
	 */
	public final void setOldIdStr(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String oldidstr)
	{
		getMendixObject().setValue(context, MemberNames.OldIdStr.toString(), oldidstr);
	}

	/**
	 * @return value of NewIdStr
	 */
	public final java.lang.String getNewIdStr()
	{
		return getNewIdStr(getContext());
	}

	/**
	 * @param context
	 * @return value of NewIdStr
	 */
	public final java.lang.String getNewIdStr(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.NewIdStr.toString());
	}

	/**
	 * Set value of NewIdStr
	 * @param newidstr
	 */
	public final void setNewIdStr(java.lang.String newidstr)
	{
		setNewIdStr(getContext(), newidstr);
	}

	/**
	 * Set value of NewIdStr
	 * @param context
	 * @param newidstr
	 */
	public final void setNewIdStr(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String newidstr)
	{
		getMendixObject().setValue(context, MemberNames.NewIdStr.toString(), newidstr);
	}

	/**
	 * @return value of OldFileID
	 */
	public final java.lang.Long getOldFileID()
	{
		return getOldFileID(getContext());
	}

	/**
	 * @param context
	 * @return value of OldFileID
	 */
	public final java.lang.Long getOldFileID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.OldFileID.toString());
	}

	/**
	 * Set value of OldFileID
	 * @param oldfileid
	 */
	public final void setOldFileID(java.lang.Long oldfileid)
	{
		setOldFileID(getContext(), oldfileid);
	}

	/**
	 * Set value of OldFileID
	 * @param context
	 * @param oldfileid
	 */
	public final void setOldFileID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long oldfileid)
	{
		getMendixObject().setValue(context, MemberNames.OldFileID.toString(), oldfileid);
	}

	/**
	 * @return value of NewFileID
	 */
	public final java.lang.Long getNewFileID()
	{
		return getNewFileID(getContext());
	}

	/**
	 * @param context
	 * @return value of NewFileID
	 */
	public final java.lang.Long getNewFileID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.NewFileID.toString());
	}

	/**
	 * Set value of NewFileID
	 * @param newfileid
	 */
	public final void setNewFileID(java.lang.Long newfileid)
	{
		setNewFileID(getContext(), newfileid);
	}

	/**
	 * Set value of NewFileID
	 * @param context
	 * @param newfileid
	 */
	public final void setNewFileID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long newfileid)
	{
		getMendixObject().setValue(context, MemberNames.NewFileID.toString(), newfileid);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return iDLinkMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final importexport.proxies.IDLink that = (importexport.proxies.IDLink) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "ImportExport.IDLink";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
