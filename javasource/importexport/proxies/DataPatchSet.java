// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package importexport.proxies;

public class DataPatchSet
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject dataPatchSetMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "ImportExport.DataPatchSet";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Name("Name"),
		DumpDate("DumpDate"),
		RowCount("RowCount"),
		Job_DataPatchSet("ImportExport.Job_DataPatchSet"),
		DataPatchSet_User("ImportExport.DataPatchSet_User");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public DataPatchSet(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "ImportExport.DataPatchSet"));
	}

	protected DataPatchSet(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject dataPatchSetMendixObject)
	{
		if (dataPatchSetMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("ImportExport.DataPatchSet", dataPatchSetMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a ImportExport.DataPatchSet");

		this.dataPatchSetMendixObject = dataPatchSetMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'DataPatchSet.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static importexport.proxies.DataPatchSet initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return importexport.proxies.DataPatchSet.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static importexport.proxies.DataPatchSet initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new importexport.proxies.DataPatchSet(context, mendixObject);
	}

	public static importexport.proxies.DataPatchSet load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return importexport.proxies.DataPatchSet.initialize(context, mendixObject);
	}

	public static java.util.List<importexport.proxies.DataPatchSet> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<importexport.proxies.DataPatchSet> result = new java.util.ArrayList<importexport.proxies.DataPatchSet>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//ImportExport.DataPatchSet" + xpathConstraint))
			result.add(importexport.proxies.DataPatchSet.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Name
	 */
	public final java.lang.String getName()
	{
		return getName(getContext());
	}

	/**
	 * @param context
	 * @return value of Name
	 */
	public final java.lang.String getName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Name.toString());
	}

	/**
	 * Set value of Name
	 * @param name
	 */
	public final void setName(java.lang.String name)
	{
		setName(getContext(), name);
	}

	/**
	 * Set value of Name
	 * @param context
	 * @param name
	 */
	public final void setName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String name)
	{
		getMendixObject().setValue(context, MemberNames.Name.toString(), name);
	}

	/**
	 * @return value of DumpDate
	 */
	public final java.util.Date getDumpDate()
	{
		return getDumpDate(getContext());
	}

	/**
	 * @param context
	 * @return value of DumpDate
	 */
	public final java.util.Date getDumpDate(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.DumpDate.toString());
	}

	/**
	 * Set value of DumpDate
	 * @param dumpdate
	 */
	public final void setDumpDate(java.util.Date dumpdate)
	{
		setDumpDate(getContext(), dumpdate);
	}

	/**
	 * Set value of DumpDate
	 * @param context
	 * @param dumpdate
	 */
	public final void setDumpDate(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date dumpdate)
	{
		getMendixObject().setValue(context, MemberNames.DumpDate.toString(), dumpdate);
	}

	/**
	 * @return value of RowCount
	 */
	public final java.lang.Integer getRowCount()
	{
		return getRowCount(getContext());
	}

	/**
	 * @param context
	 * @return value of RowCount
	 */
	public final java.lang.Integer getRowCount(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.RowCount.toString());
	}

	/**
	 * Set value of RowCount
	 * @param rowcount
	 */
	public final void setRowCount(java.lang.Integer rowcount)
	{
		setRowCount(getContext(), rowcount);
	}

	/**
	 * Set value of RowCount
	 * @param context
	 * @param rowcount
	 */
	public final void setRowCount(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer rowcount)
	{
		getMendixObject().setValue(context, MemberNames.RowCount.toString(), rowcount);
	}

	/**
	 * @return value of Job_DataPatchSet
	 */
	public final importexport.proxies.Job getJob_DataPatchSet() throws com.mendix.core.CoreException
	{
		return getJob_DataPatchSet(getContext());
	}

	/**
	 * @param context
	 * @return value of Job_DataPatchSet
	 */
	public final importexport.proxies.Job getJob_DataPatchSet(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		importexport.proxies.Job result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Job_DataPatchSet.toString());
		if (identifier != null)
			result = importexport.proxies.Job.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Job_DataPatchSet
	 * @param job_datapatchset
	 */
	public final void setJob_DataPatchSet(importexport.proxies.Job job_datapatchset)
	{
		setJob_DataPatchSet(getContext(), job_datapatchset);
	}

	/**
	 * Set value of Job_DataPatchSet
	 * @param context
	 * @param job_datapatchset
	 */
	public final void setJob_DataPatchSet(com.mendix.systemwideinterfaces.core.IContext context, importexport.proxies.Job job_datapatchset)
	{
		if (job_datapatchset == null)
			getMendixObject().setValue(context, MemberNames.Job_DataPatchSet.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Job_DataPatchSet.toString(), job_datapatchset.getMendixObject().getId());
	}

	/**
	 * @return value of DataPatchSet_User
	 */
	public final system.proxies.User getDataPatchSet_User() throws com.mendix.core.CoreException
	{
		return getDataPatchSet_User(getContext());
	}

	/**
	 * @param context
	 * @return value of DataPatchSet_User
	 */
	public final system.proxies.User getDataPatchSet_User(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		system.proxies.User result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.DataPatchSet_User.toString());
		if (identifier != null)
			result = system.proxies.User.load(context, identifier);
		return result;
	}

	/**
	 * Set value of DataPatchSet_User
	 * @param datapatchset_user
	 */
	public final void setDataPatchSet_User(system.proxies.User datapatchset_user)
	{
		setDataPatchSet_User(getContext(), datapatchset_user);
	}

	/**
	 * Set value of DataPatchSet_User
	 * @param context
	 * @param datapatchset_user
	 */
	public final void setDataPatchSet_User(com.mendix.systemwideinterfaces.core.IContext context, system.proxies.User datapatchset_user)
	{
		if (datapatchset_user == null)
			getMendixObject().setValue(context, MemberNames.DataPatchSet_User.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.DataPatchSet_User.toString(), datapatchset_user.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return dataPatchSetMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final importexport.proxies.DataPatchSet that = (importexport.proxies.DataPatchSet) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "ImportExport.DataPatchSet";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
