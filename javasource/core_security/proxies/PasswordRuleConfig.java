// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package core_security.proxies;

public class PasswordRuleConfig
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject passwordRuleConfigMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "core_security.PasswordRuleConfig";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		MinimumChar("MinimumChar"),
		RequireUpperCase("RequireUpperCase"),
		RequireLowerCase("RequireLowerCase"),
		RequireNumeric("RequireNumeric"),
		RequireSpecial("RequireSpecial"),
		DisallowUsername("DisallowUsername"),
		PasswordHistoryThreshold("PasswordHistoryThreshold"),
		PasswordAge("PasswordAge"),
		DaysBetweenPasswordChanges("DaysBetweenPasswordChanges");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public PasswordRuleConfig(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "core_security.PasswordRuleConfig"));
	}

	protected PasswordRuleConfig(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject passwordRuleConfigMendixObject)
	{
		if (passwordRuleConfigMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("core_security.PasswordRuleConfig", passwordRuleConfigMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a core_security.PasswordRuleConfig");

		this.passwordRuleConfigMendixObject = passwordRuleConfigMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'PasswordRuleConfig.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static core_security.proxies.PasswordRuleConfig initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return core_security.proxies.PasswordRuleConfig.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static core_security.proxies.PasswordRuleConfig initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new core_security.proxies.PasswordRuleConfig(context, mendixObject);
	}

	public static core_security.proxies.PasswordRuleConfig load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return core_security.proxies.PasswordRuleConfig.initialize(context, mendixObject);
	}

	public static java.util.List<core_security.proxies.PasswordRuleConfig> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<core_security.proxies.PasswordRuleConfig> result = new java.util.ArrayList<core_security.proxies.PasswordRuleConfig>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//core_security.PasswordRuleConfig" + xpathConstraint))
			result.add(core_security.proxies.PasswordRuleConfig.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of MinimumChar
	 */
	public final java.lang.Integer getMinimumChar()
	{
		return getMinimumChar(getContext());
	}

	/**
	 * @param context
	 * @return value of MinimumChar
	 */
	public final java.lang.Integer getMinimumChar(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.MinimumChar.toString());
	}

	/**
	 * Set value of MinimumChar
	 * @param minimumchar
	 */
	public final void setMinimumChar(java.lang.Integer minimumchar)
	{
		setMinimumChar(getContext(), minimumchar);
	}

	/**
	 * Set value of MinimumChar
	 * @param context
	 * @param minimumchar
	 */
	public final void setMinimumChar(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer minimumchar)
	{
		getMendixObject().setValue(context, MemberNames.MinimumChar.toString(), minimumchar);
	}

	/**
	 * @return value of RequireUpperCase
	 */
	public final java.lang.Boolean getRequireUpperCase()
	{
		return getRequireUpperCase(getContext());
	}

	/**
	 * @param context
	 * @return value of RequireUpperCase
	 */
	public final java.lang.Boolean getRequireUpperCase(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.RequireUpperCase.toString());
	}

	/**
	 * Set value of RequireUpperCase
	 * @param requireuppercase
	 */
	public final void setRequireUpperCase(java.lang.Boolean requireuppercase)
	{
		setRequireUpperCase(getContext(), requireuppercase);
	}

	/**
	 * Set value of RequireUpperCase
	 * @param context
	 * @param requireuppercase
	 */
	public final void setRequireUpperCase(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean requireuppercase)
	{
		getMendixObject().setValue(context, MemberNames.RequireUpperCase.toString(), requireuppercase);
	}

	/**
	 * @return value of RequireLowerCase
	 */
	public final java.lang.Boolean getRequireLowerCase()
	{
		return getRequireLowerCase(getContext());
	}

	/**
	 * @param context
	 * @return value of RequireLowerCase
	 */
	public final java.lang.Boolean getRequireLowerCase(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.RequireLowerCase.toString());
	}

	/**
	 * Set value of RequireLowerCase
	 * @param requirelowercase
	 */
	public final void setRequireLowerCase(java.lang.Boolean requirelowercase)
	{
		setRequireLowerCase(getContext(), requirelowercase);
	}

	/**
	 * Set value of RequireLowerCase
	 * @param context
	 * @param requirelowercase
	 */
	public final void setRequireLowerCase(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean requirelowercase)
	{
		getMendixObject().setValue(context, MemberNames.RequireLowerCase.toString(), requirelowercase);
	}

	/**
	 * @return value of RequireNumeric
	 */
	public final java.lang.Boolean getRequireNumeric()
	{
		return getRequireNumeric(getContext());
	}

	/**
	 * @param context
	 * @return value of RequireNumeric
	 */
	public final java.lang.Boolean getRequireNumeric(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.RequireNumeric.toString());
	}

	/**
	 * Set value of RequireNumeric
	 * @param requirenumeric
	 */
	public final void setRequireNumeric(java.lang.Boolean requirenumeric)
	{
		setRequireNumeric(getContext(), requirenumeric);
	}

	/**
	 * Set value of RequireNumeric
	 * @param context
	 * @param requirenumeric
	 */
	public final void setRequireNumeric(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean requirenumeric)
	{
		getMendixObject().setValue(context, MemberNames.RequireNumeric.toString(), requirenumeric);
	}

	/**
	 * @return value of RequireSpecial
	 */
	public final java.lang.Boolean getRequireSpecial()
	{
		return getRequireSpecial(getContext());
	}

	/**
	 * @param context
	 * @return value of RequireSpecial
	 */
	public final java.lang.Boolean getRequireSpecial(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.RequireSpecial.toString());
	}

	/**
	 * Set value of RequireSpecial
	 * @param requirespecial
	 */
	public final void setRequireSpecial(java.lang.Boolean requirespecial)
	{
		setRequireSpecial(getContext(), requirespecial);
	}

	/**
	 * Set value of RequireSpecial
	 * @param context
	 * @param requirespecial
	 */
	public final void setRequireSpecial(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean requirespecial)
	{
		getMendixObject().setValue(context, MemberNames.RequireSpecial.toString(), requirespecial);
	}

	/**
	 * @return value of DisallowUsername
	 */
	public final java.lang.Boolean getDisallowUsername()
	{
		return getDisallowUsername(getContext());
	}

	/**
	 * @param context
	 * @return value of DisallowUsername
	 */
	public final java.lang.Boolean getDisallowUsername(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.DisallowUsername.toString());
	}

	/**
	 * Set value of DisallowUsername
	 * @param disallowusername
	 */
	public final void setDisallowUsername(java.lang.Boolean disallowusername)
	{
		setDisallowUsername(getContext(), disallowusername);
	}

	/**
	 * Set value of DisallowUsername
	 * @param context
	 * @param disallowusername
	 */
	public final void setDisallowUsername(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean disallowusername)
	{
		getMendixObject().setValue(context, MemberNames.DisallowUsername.toString(), disallowusername);
	}

	/**
	 * @return value of PasswordHistoryThreshold
	 */
	public final java.lang.Integer getPasswordHistoryThreshold()
	{
		return getPasswordHistoryThreshold(getContext());
	}

	/**
	 * @param context
	 * @return value of PasswordHistoryThreshold
	 */
	public final java.lang.Integer getPasswordHistoryThreshold(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.PasswordHistoryThreshold.toString());
	}

	/**
	 * Set value of PasswordHistoryThreshold
	 * @param passwordhistorythreshold
	 */
	public final void setPasswordHistoryThreshold(java.lang.Integer passwordhistorythreshold)
	{
		setPasswordHistoryThreshold(getContext(), passwordhistorythreshold);
	}

	/**
	 * Set value of PasswordHistoryThreshold
	 * @param context
	 * @param passwordhistorythreshold
	 */
	public final void setPasswordHistoryThreshold(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer passwordhistorythreshold)
	{
		getMendixObject().setValue(context, MemberNames.PasswordHistoryThreshold.toString(), passwordhistorythreshold);
	}

	/**
	 * @return value of PasswordAge
	 */
	public final java.lang.Integer getPasswordAge()
	{
		return getPasswordAge(getContext());
	}

	/**
	 * @param context
	 * @return value of PasswordAge
	 */
	public final java.lang.Integer getPasswordAge(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.PasswordAge.toString());
	}

	/**
	 * Set value of PasswordAge
	 * @param passwordage
	 */
	public final void setPasswordAge(java.lang.Integer passwordage)
	{
		setPasswordAge(getContext(), passwordage);
	}

	/**
	 * Set value of PasswordAge
	 * @param context
	 * @param passwordage
	 */
	public final void setPasswordAge(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer passwordage)
	{
		getMendixObject().setValue(context, MemberNames.PasswordAge.toString(), passwordage);
	}

	/**
	 * @return value of DaysBetweenPasswordChanges
	 */
	public final java.lang.Integer getDaysBetweenPasswordChanges()
	{
		return getDaysBetweenPasswordChanges(getContext());
	}

	/**
	 * @param context
	 * @return value of DaysBetweenPasswordChanges
	 */
	public final java.lang.Integer getDaysBetweenPasswordChanges(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.DaysBetweenPasswordChanges.toString());
	}

	/**
	 * Set value of DaysBetweenPasswordChanges
	 * @param daysbetweenpasswordchanges
	 */
	public final void setDaysBetweenPasswordChanges(java.lang.Integer daysbetweenpasswordchanges)
	{
		setDaysBetweenPasswordChanges(getContext(), daysbetweenpasswordchanges);
	}

	/**
	 * Set value of DaysBetweenPasswordChanges
	 * @param context
	 * @param daysbetweenpasswordchanges
	 */
	public final void setDaysBetweenPasswordChanges(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer daysbetweenpasswordchanges)
	{
		getMendixObject().setValue(context, MemberNames.DaysBetweenPasswordChanges.toString(), daysbetweenpasswordchanges);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return passwordRuleConfigMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final core_security.proxies.PasswordRuleConfig that = (core_security.proxies.PasswordRuleConfig) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "core_security.PasswordRuleConfig";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
