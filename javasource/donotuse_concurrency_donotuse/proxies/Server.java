// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package donotuse_concurrency_donotuse.proxies;

public class Server
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject serverMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "DoNotUse_Concurrency_DoNotUse.Server";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		hostName("hostName"),
		AliveDate("AliveDate"),
		ExecuteLockObjects("ExecuteLockObjects"),
		SimulatedCrash("SimulatedCrash"),
		SimulatedHang("SimulatedHang"),
		DebugSimulationPosition("DebugSimulationPosition"),
		IsCrashedBefore("IsCrashedBefore"),
		MaxMilliSecondsBetweenAlive("MaxMilliSecondsBetweenAlive"),
		HangDurationSecs("HangDurationSecs");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Server(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "DoNotUse_Concurrency_DoNotUse.Server"));
	}

	protected Server(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject serverMendixObject)
	{
		if (serverMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("DoNotUse_Concurrency_DoNotUse.Server", serverMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a DoNotUse_Concurrency_DoNotUse.Server");

		this.serverMendixObject = serverMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Server.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static donotuse_concurrency_donotuse.proxies.Server initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return donotuse_concurrency_donotuse.proxies.Server.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static donotuse_concurrency_donotuse.proxies.Server initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new donotuse_concurrency_donotuse.proxies.Server(context, mendixObject);
	}

	public static donotuse_concurrency_donotuse.proxies.Server load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return donotuse_concurrency_donotuse.proxies.Server.initialize(context, mendixObject);
	}

	public static java.util.List<donotuse_concurrency_donotuse.proxies.Server> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<donotuse_concurrency_donotuse.proxies.Server> result = new java.util.ArrayList<donotuse_concurrency_donotuse.proxies.Server>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//DoNotUse_Concurrency_DoNotUse.Server" + xpathConstraint))
			result.add(donotuse_concurrency_donotuse.proxies.Server.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of hostName
	 */
	public final java.lang.String gethostName()
	{
		return gethostName(getContext());
	}

	/**
	 * @param context
	 * @return value of hostName
	 */
	public final java.lang.String gethostName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.hostName.toString());
	}

	/**
	 * Set value of hostName
	 * @param hostname
	 */
	public final void sethostName(java.lang.String hostname)
	{
		sethostName(getContext(), hostname);
	}

	/**
	 * Set value of hostName
	 * @param context
	 * @param hostname
	 */
	public final void sethostName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String hostname)
	{
		getMendixObject().setValue(context, MemberNames.hostName.toString(), hostname);
	}

	/**
	 * @return value of AliveDate
	 */
	public final java.util.Date getAliveDate()
	{
		return getAliveDate(getContext());
	}

	/**
	 * @param context
	 * @return value of AliveDate
	 */
	public final java.util.Date getAliveDate(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.AliveDate.toString());
	}

	/**
	 * Set value of AliveDate
	 * @param alivedate
	 */
	public final void setAliveDate(java.util.Date alivedate)
	{
		setAliveDate(getContext(), alivedate);
	}

	/**
	 * Set value of AliveDate
	 * @param context
	 * @param alivedate
	 */
	public final void setAliveDate(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date alivedate)
	{
		getMendixObject().setValue(context, MemberNames.AliveDate.toString(), alivedate);
	}

	/**
	 * @return value of ExecuteLockObjects
	 */
	public final java.lang.Boolean getExecuteLockObjects()
	{
		return getExecuteLockObjects(getContext());
	}

	/**
	 * @param context
	 * @return value of ExecuteLockObjects
	 */
	public final java.lang.Boolean getExecuteLockObjects(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.ExecuteLockObjects.toString());
	}

	/**
	 * Set value of ExecuteLockObjects
	 * @param executelockobjects
	 */
	public final void setExecuteLockObjects(java.lang.Boolean executelockobjects)
	{
		setExecuteLockObjects(getContext(), executelockobjects);
	}

	/**
	 * Set value of ExecuteLockObjects
	 * @param context
	 * @param executelockobjects
	 */
	public final void setExecuteLockObjects(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean executelockobjects)
	{
		getMendixObject().setValue(context, MemberNames.ExecuteLockObjects.toString(), executelockobjects);
	}

	/**
	 * @return value of SimulatedCrash
	 */
	public final java.lang.Boolean getSimulatedCrash()
	{
		return getSimulatedCrash(getContext());
	}

	/**
	 * @param context
	 * @return value of SimulatedCrash
	 */
	public final java.lang.Boolean getSimulatedCrash(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.SimulatedCrash.toString());
	}

	/**
	 * Set value of SimulatedCrash
	 * @param simulatedcrash
	 */
	public final void setSimulatedCrash(java.lang.Boolean simulatedcrash)
	{
		setSimulatedCrash(getContext(), simulatedcrash);
	}

	/**
	 * Set value of SimulatedCrash
	 * @param context
	 * @param simulatedcrash
	 */
	public final void setSimulatedCrash(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean simulatedcrash)
	{
		getMendixObject().setValue(context, MemberNames.SimulatedCrash.toString(), simulatedcrash);
	}

	/**
	 * @return value of SimulatedHang
	 */
	public final java.lang.Boolean getSimulatedHang()
	{
		return getSimulatedHang(getContext());
	}

	/**
	 * @param context
	 * @return value of SimulatedHang
	 */
	public final java.lang.Boolean getSimulatedHang(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.SimulatedHang.toString());
	}

	/**
	 * Set value of SimulatedHang
	 * @param simulatedhang
	 */
	public final void setSimulatedHang(java.lang.Boolean simulatedhang)
	{
		setSimulatedHang(getContext(), simulatedhang);
	}

	/**
	 * Set value of SimulatedHang
	 * @param context
	 * @param simulatedhang
	 */
	public final void setSimulatedHang(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean simulatedhang)
	{
		getMendixObject().setValue(context, MemberNames.SimulatedHang.toString(), simulatedhang);
	}

	/**
	 * @return value of DebugSimulationPosition
	 */
	public final java.lang.Integer getDebugSimulationPosition()
	{
		return getDebugSimulationPosition(getContext());
	}

	/**
	 * @param context
	 * @return value of DebugSimulationPosition
	 */
	public final java.lang.Integer getDebugSimulationPosition(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.DebugSimulationPosition.toString());
	}

	/**
	 * Set value of DebugSimulationPosition
	 * @param debugsimulationposition
	 */
	public final void setDebugSimulationPosition(java.lang.Integer debugsimulationposition)
	{
		setDebugSimulationPosition(getContext(), debugsimulationposition);
	}

	/**
	 * Set value of DebugSimulationPosition
	 * @param context
	 * @param debugsimulationposition
	 */
	public final void setDebugSimulationPosition(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer debugsimulationposition)
	{
		getMendixObject().setValue(context, MemberNames.DebugSimulationPosition.toString(), debugsimulationposition);
	}

	/**
	 * @return value of IsCrashedBefore
	 */
	public final java.lang.Boolean getIsCrashedBefore()
	{
		return getIsCrashedBefore(getContext());
	}

	/**
	 * @param context
	 * @return value of IsCrashedBefore
	 */
	public final java.lang.Boolean getIsCrashedBefore(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsCrashedBefore.toString());
	}

	/**
	 * Set value of IsCrashedBefore
	 * @param iscrashedbefore
	 */
	public final void setIsCrashedBefore(java.lang.Boolean iscrashedbefore)
	{
		setIsCrashedBefore(getContext(), iscrashedbefore);
	}

	/**
	 * Set value of IsCrashedBefore
	 * @param context
	 * @param iscrashedbefore
	 */
	public final void setIsCrashedBefore(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean iscrashedbefore)
	{
		getMendixObject().setValue(context, MemberNames.IsCrashedBefore.toString(), iscrashedbefore);
	}

	/**
	 * @return value of MaxMilliSecondsBetweenAlive
	 */
	public final java.lang.Double getMaxMilliSecondsBetweenAlive()
	{
		return getMaxMilliSecondsBetweenAlive(getContext());
	}

	/**
	 * @param context
	 * @return value of MaxMilliSecondsBetweenAlive
	 */
	public final java.lang.Double getMaxMilliSecondsBetweenAlive(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Double) getMendixObject().getValue(context, MemberNames.MaxMilliSecondsBetweenAlive.toString());
	}

	/**
	 * Set value of MaxMilliSecondsBetweenAlive
	 * @param maxmillisecondsbetweenalive
	 */
	public final void setMaxMilliSecondsBetweenAlive(java.lang.Double maxmillisecondsbetweenalive)
	{
		setMaxMilliSecondsBetweenAlive(getContext(), maxmillisecondsbetweenalive);
	}

	/**
	 * Set value of MaxMilliSecondsBetweenAlive
	 * @param context
	 * @param maxmillisecondsbetweenalive
	 */
	public final void setMaxMilliSecondsBetweenAlive(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Double maxmillisecondsbetweenalive)
	{
		getMendixObject().setValue(context, MemberNames.MaxMilliSecondsBetweenAlive.toString(), maxmillisecondsbetweenalive);
	}

	/**
	 * @return value of HangDurationSecs
	 */
	public final java.lang.Integer getHangDurationSecs()
	{
		return getHangDurationSecs(getContext());
	}

	/**
	 * @param context
	 * @return value of HangDurationSecs
	 */
	public final java.lang.Integer getHangDurationSecs(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.HangDurationSecs.toString());
	}

	/**
	 * Set value of HangDurationSecs
	 * @param hangdurationsecs
	 */
	public final void setHangDurationSecs(java.lang.Integer hangdurationsecs)
	{
		setHangDurationSecs(getContext(), hangdurationsecs);
	}

	/**
	 * Set value of HangDurationSecs
	 * @param context
	 * @param hangdurationsecs
	 */
	public final void setHangDurationSecs(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer hangdurationsecs)
	{
		getMendixObject().setValue(context, MemberNames.HangDurationSecs.toString(), hangdurationsecs);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return serverMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final donotuse_concurrency_donotuse.proxies.Server that = (donotuse_concurrency_donotuse.proxies.Server) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "DoNotUse_Concurrency_DoNotUse.Server";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
