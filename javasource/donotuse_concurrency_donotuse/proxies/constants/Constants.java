// This file was generated by Mendix Modeler 7.7.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package donotuse_concurrency_donotuse.proxies.constants;

import com.mendix.core.Core;

public class Constants
{
	// These are the constants for the DoNotUse_Concurrency_DoNotUse module

	/**
	* To be used when running multiple Mendix Business Server instances on the same server.
	*/
	public static java.lang.String getDebugHostnamePostfix()
	{
		return (java.lang.String)Core.getConfiguration().getConstantValue("DoNotUse_Concurrency_DoNotUse.DebugHostnamePostfix");
	}

	public static boolean getDebugRunSingleScheduledEvent()
	{
		return (java.lang.Boolean)Core.getConfiguration().getConstantValue("DoNotUse_Concurrency_DoNotUse.DebugRunSingleScheduledEvent");
	}

	public static java.lang.String getDebugSingleScheduledEventName()
	{
		return (java.lang.String)Core.getConfiguration().getConstantValue("DoNotUse_Concurrency_DoNotUse.DebugSingleScheduledEventName");
	}

	/**
	* To be used to prevent scheduled events from doing any work at all. Usefull for debugging issues where trace logging is needed and scheduled events would generate a lot of logging.
	*/
	public static boolean getDebugSuppressScheduledEvents()
	{
		return (java.lang.Boolean)Core.getConfiguration().getConstantValue("DoNotUse_Concurrency_DoNotUse.DebugSuppressScheduledEvents");
	}

	/**
	* ms
	*/
	public static java.lang.Long getDefaultMaxServerLockDuration()
	{
		return (java.lang.Long)Core.getConfiguration().getConstantValue("DoNotUse_Concurrency_DoNotUse.DefaultMaxServerLockDuration");
	}

	/**
	* ms
	*/
	public static java.lang.Long getDefaultMaxThreadLockDuration()
	{
		return (java.lang.Long)Core.getConfiguration().getConstantValue("DoNotUse_Concurrency_DoNotUse.DefaultMaxThreadLockDuration");
	}

	public static boolean getUseConcurrency()
	{
		return (java.lang.Boolean)Core.getConfiguration().getConstantValue("DoNotUse_Concurrency_DoNotUse.UseConcurrency");
	}
}