// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package donotuse_concurrency_donotuse.proxies;

public class Settings
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject settingsMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "DoNotUse_Concurrency_DoNotUse.Settings";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		UseHistory("UseHistory"),
		CleanHistoryDaysBefore("CleanHistoryDaysBefore"),
		CleanStatisticsDaysBefore("CleanStatisticsDaysBefore"),
		SleepWaitingForServerLock("SleepWaitingForServerLock"),
		SleepWaitingForThreadLock("SleepWaitingForThreadLock"),
		LoadBalancingDelay("LoadBalancingDelay"),
		DetemineAliveSelf("DetemineAliveSelf"),
		DetermineAliveOthers("DetermineAliveOthers"),
		UseSimulate("UseSimulate"),
		SimulatedDelayAverage("SimulatedDelayAverage"),
		SimulateDelaySpread("SimulateDelaySpread"),
		SimulationInterval("SimulationInterval"),
		AliveDatePeriod("AliveDatePeriod"),
		ProtectionPeriod("ProtectionPeriod"),
		SimulatorPeriod("SimulatorPeriod");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Settings(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "DoNotUse_Concurrency_DoNotUse.Settings"));
	}

	protected Settings(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject settingsMendixObject)
	{
		if (settingsMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("DoNotUse_Concurrency_DoNotUse.Settings", settingsMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a DoNotUse_Concurrency_DoNotUse.Settings");

		this.settingsMendixObject = settingsMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Settings.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static donotuse_concurrency_donotuse.proxies.Settings initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return donotuse_concurrency_donotuse.proxies.Settings.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static donotuse_concurrency_donotuse.proxies.Settings initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new donotuse_concurrency_donotuse.proxies.Settings(context, mendixObject);
	}

	public static donotuse_concurrency_donotuse.proxies.Settings load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return donotuse_concurrency_donotuse.proxies.Settings.initialize(context, mendixObject);
	}

	public static java.util.List<donotuse_concurrency_donotuse.proxies.Settings> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<donotuse_concurrency_donotuse.proxies.Settings> result = new java.util.ArrayList<donotuse_concurrency_donotuse.proxies.Settings>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//DoNotUse_Concurrency_DoNotUse.Settings" + xpathConstraint))
			result.add(donotuse_concurrency_donotuse.proxies.Settings.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of UseHistory
	 */
	public final java.lang.Boolean getUseHistory()
	{
		return getUseHistory(getContext());
	}

	/**
	 * @param context
	 * @return value of UseHistory
	 */
	public final java.lang.Boolean getUseHistory(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.UseHistory.toString());
	}

	/**
	 * Set value of UseHistory
	 * @param usehistory
	 */
	public final void setUseHistory(java.lang.Boolean usehistory)
	{
		setUseHistory(getContext(), usehistory);
	}

	/**
	 * Set value of UseHistory
	 * @param context
	 * @param usehistory
	 */
	public final void setUseHistory(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean usehistory)
	{
		getMendixObject().setValue(context, MemberNames.UseHistory.toString(), usehistory);
	}

	/**
	 * @return value of CleanHistoryDaysBefore
	 */
	public final java.lang.Integer getCleanHistoryDaysBefore()
	{
		return getCleanHistoryDaysBefore(getContext());
	}

	/**
	 * @param context
	 * @return value of CleanHistoryDaysBefore
	 */
	public final java.lang.Integer getCleanHistoryDaysBefore(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.CleanHistoryDaysBefore.toString());
	}

	/**
	 * Set value of CleanHistoryDaysBefore
	 * @param cleanhistorydaysbefore
	 */
	public final void setCleanHistoryDaysBefore(java.lang.Integer cleanhistorydaysbefore)
	{
		setCleanHistoryDaysBefore(getContext(), cleanhistorydaysbefore);
	}

	/**
	 * Set value of CleanHistoryDaysBefore
	 * @param context
	 * @param cleanhistorydaysbefore
	 */
	public final void setCleanHistoryDaysBefore(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer cleanhistorydaysbefore)
	{
		getMendixObject().setValue(context, MemberNames.CleanHistoryDaysBefore.toString(), cleanhistorydaysbefore);
	}

	/**
	 * @return value of CleanStatisticsDaysBefore
	 */
	public final java.lang.Integer getCleanStatisticsDaysBefore()
	{
		return getCleanStatisticsDaysBefore(getContext());
	}

	/**
	 * @param context
	 * @return value of CleanStatisticsDaysBefore
	 */
	public final java.lang.Integer getCleanStatisticsDaysBefore(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.CleanStatisticsDaysBefore.toString());
	}

	/**
	 * Set value of CleanStatisticsDaysBefore
	 * @param cleanstatisticsdaysbefore
	 */
	public final void setCleanStatisticsDaysBefore(java.lang.Integer cleanstatisticsdaysbefore)
	{
		setCleanStatisticsDaysBefore(getContext(), cleanstatisticsdaysbefore);
	}

	/**
	 * Set value of CleanStatisticsDaysBefore
	 * @param context
	 * @param cleanstatisticsdaysbefore
	 */
	public final void setCleanStatisticsDaysBefore(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer cleanstatisticsdaysbefore)
	{
		getMendixObject().setValue(context, MemberNames.CleanStatisticsDaysBefore.toString(), cleanstatisticsdaysbefore);
	}

	/**
	 * @return value of SleepWaitingForServerLock
	 */
	public final java.lang.Integer getSleepWaitingForServerLock()
	{
		return getSleepWaitingForServerLock(getContext());
	}

	/**
	 * @param context
	 * @return value of SleepWaitingForServerLock
	 */
	public final java.lang.Integer getSleepWaitingForServerLock(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.SleepWaitingForServerLock.toString());
	}

	/**
	 * Set value of SleepWaitingForServerLock
	 * @param sleepwaitingforserverlock
	 */
	public final void setSleepWaitingForServerLock(java.lang.Integer sleepwaitingforserverlock)
	{
		setSleepWaitingForServerLock(getContext(), sleepwaitingforserverlock);
	}

	/**
	 * Set value of SleepWaitingForServerLock
	 * @param context
	 * @param sleepwaitingforserverlock
	 */
	public final void setSleepWaitingForServerLock(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer sleepwaitingforserverlock)
	{
		getMendixObject().setValue(context, MemberNames.SleepWaitingForServerLock.toString(), sleepwaitingforserverlock);
	}

	/**
	 * @return value of SleepWaitingForThreadLock
	 */
	public final java.lang.Integer getSleepWaitingForThreadLock()
	{
		return getSleepWaitingForThreadLock(getContext());
	}

	/**
	 * @param context
	 * @return value of SleepWaitingForThreadLock
	 */
	public final java.lang.Integer getSleepWaitingForThreadLock(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.SleepWaitingForThreadLock.toString());
	}

	/**
	 * Set value of SleepWaitingForThreadLock
	 * @param sleepwaitingforthreadlock
	 */
	public final void setSleepWaitingForThreadLock(java.lang.Integer sleepwaitingforthreadlock)
	{
		setSleepWaitingForThreadLock(getContext(), sleepwaitingforthreadlock);
	}

	/**
	 * Set value of SleepWaitingForThreadLock
	 * @param context
	 * @param sleepwaitingforthreadlock
	 */
	public final void setSleepWaitingForThreadLock(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer sleepwaitingforthreadlock)
	{
		getMendixObject().setValue(context, MemberNames.SleepWaitingForThreadLock.toString(), sleepwaitingforthreadlock);
	}

	/**
	 * @return value of LoadBalancingDelay
	 */
	public final java.lang.Integer getLoadBalancingDelay()
	{
		return getLoadBalancingDelay(getContext());
	}

	/**
	 * @param context
	 * @return value of LoadBalancingDelay
	 */
	public final java.lang.Integer getLoadBalancingDelay(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.LoadBalancingDelay.toString());
	}

	/**
	 * Set value of LoadBalancingDelay
	 * @param loadbalancingdelay
	 */
	public final void setLoadBalancingDelay(java.lang.Integer loadbalancingdelay)
	{
		setLoadBalancingDelay(getContext(), loadbalancingdelay);
	}

	/**
	 * Set value of LoadBalancingDelay
	 * @param context
	 * @param loadbalancingdelay
	 */
	public final void setLoadBalancingDelay(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer loadbalancingdelay)
	{
		getMendixObject().setValue(context, MemberNames.LoadBalancingDelay.toString(), loadbalancingdelay);
	}

	/**
	 * @return value of DetemineAliveSelf
	 */
	public final java.lang.Integer getDetemineAliveSelf()
	{
		return getDetemineAliveSelf(getContext());
	}

	/**
	 * @param context
	 * @return value of DetemineAliveSelf
	 */
	public final java.lang.Integer getDetemineAliveSelf(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.DetemineAliveSelf.toString());
	}

	/**
	 * Set value of DetemineAliveSelf
	 * @param deteminealiveself
	 */
	public final void setDetemineAliveSelf(java.lang.Integer deteminealiveself)
	{
		setDetemineAliveSelf(getContext(), deteminealiveself);
	}

	/**
	 * Set value of DetemineAliveSelf
	 * @param context
	 * @param deteminealiveself
	 */
	public final void setDetemineAliveSelf(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer deteminealiveself)
	{
		getMendixObject().setValue(context, MemberNames.DetemineAliveSelf.toString(), deteminealiveself);
	}

	/**
	 * @return value of DetermineAliveOthers
	 */
	public final java.lang.Integer getDetermineAliveOthers()
	{
		return getDetermineAliveOthers(getContext());
	}

	/**
	 * @param context
	 * @return value of DetermineAliveOthers
	 */
	public final java.lang.Integer getDetermineAliveOthers(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.DetermineAliveOthers.toString());
	}

	/**
	 * Set value of DetermineAliveOthers
	 * @param determinealiveothers
	 */
	public final void setDetermineAliveOthers(java.lang.Integer determinealiveothers)
	{
		setDetermineAliveOthers(getContext(), determinealiveothers);
	}

	/**
	 * Set value of DetermineAliveOthers
	 * @param context
	 * @param determinealiveothers
	 */
	public final void setDetermineAliveOthers(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer determinealiveothers)
	{
		getMendixObject().setValue(context, MemberNames.DetermineAliveOthers.toString(), determinealiveothers);
	}

	/**
	 * @return value of UseSimulate
	 */
	public final java.lang.Boolean getUseSimulate()
	{
		return getUseSimulate(getContext());
	}

	/**
	 * @param context
	 * @return value of UseSimulate
	 */
	public final java.lang.Boolean getUseSimulate(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.UseSimulate.toString());
	}

	/**
	 * Set value of UseSimulate
	 * @param usesimulate
	 */
	public final void setUseSimulate(java.lang.Boolean usesimulate)
	{
		setUseSimulate(getContext(), usesimulate);
	}

	/**
	 * Set value of UseSimulate
	 * @param context
	 * @param usesimulate
	 */
	public final void setUseSimulate(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean usesimulate)
	{
		getMendixObject().setValue(context, MemberNames.UseSimulate.toString(), usesimulate);
	}

	/**
	 * @return value of SimulatedDelayAverage
	 */
	public final java.lang.Integer getSimulatedDelayAverage()
	{
		return getSimulatedDelayAverage(getContext());
	}

	/**
	 * @param context
	 * @return value of SimulatedDelayAverage
	 */
	public final java.lang.Integer getSimulatedDelayAverage(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.SimulatedDelayAverage.toString());
	}

	/**
	 * Set value of SimulatedDelayAverage
	 * @param simulateddelayaverage
	 */
	public final void setSimulatedDelayAverage(java.lang.Integer simulateddelayaverage)
	{
		setSimulatedDelayAverage(getContext(), simulateddelayaverage);
	}

	/**
	 * Set value of SimulatedDelayAverage
	 * @param context
	 * @param simulateddelayaverage
	 */
	public final void setSimulatedDelayAverage(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer simulateddelayaverage)
	{
		getMendixObject().setValue(context, MemberNames.SimulatedDelayAverage.toString(), simulateddelayaverage);
	}

	/**
	 * @return value of SimulateDelaySpread
	 */
	public final java.lang.Integer getSimulateDelaySpread()
	{
		return getSimulateDelaySpread(getContext());
	}

	/**
	 * @param context
	 * @return value of SimulateDelaySpread
	 */
	public final java.lang.Integer getSimulateDelaySpread(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.SimulateDelaySpread.toString());
	}

	/**
	 * Set value of SimulateDelaySpread
	 * @param simulatedelayspread
	 */
	public final void setSimulateDelaySpread(java.lang.Integer simulatedelayspread)
	{
		setSimulateDelaySpread(getContext(), simulatedelayspread);
	}

	/**
	 * Set value of SimulateDelaySpread
	 * @param context
	 * @param simulatedelayspread
	 */
	public final void setSimulateDelaySpread(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer simulatedelayspread)
	{
		getMendixObject().setValue(context, MemberNames.SimulateDelaySpread.toString(), simulatedelayspread);
	}

	/**
	 * @return value of SimulationInterval
	 */
	public final java.lang.Integer getSimulationInterval()
	{
		return getSimulationInterval(getContext());
	}

	/**
	 * @param context
	 * @return value of SimulationInterval
	 */
	public final java.lang.Integer getSimulationInterval(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.SimulationInterval.toString());
	}

	/**
	 * Set value of SimulationInterval
	 * @param simulationinterval
	 */
	public final void setSimulationInterval(java.lang.Integer simulationinterval)
	{
		setSimulationInterval(getContext(), simulationinterval);
	}

	/**
	 * Set value of SimulationInterval
	 * @param context
	 * @param simulationinterval
	 */
	public final void setSimulationInterval(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer simulationinterval)
	{
		getMendixObject().setValue(context, MemberNames.SimulationInterval.toString(), simulationinterval);
	}

	/**
	 * @return value of AliveDatePeriod
	 */
	public final java.lang.Integer getAliveDatePeriod()
	{
		return getAliveDatePeriod(getContext());
	}

	/**
	 * @param context
	 * @return value of AliveDatePeriod
	 */
	public final java.lang.Integer getAliveDatePeriod(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.AliveDatePeriod.toString());
	}

	/**
	 * Set value of AliveDatePeriod
	 * @param alivedateperiod
	 */
	public final void setAliveDatePeriod(java.lang.Integer alivedateperiod)
	{
		setAliveDatePeriod(getContext(), alivedateperiod);
	}

	/**
	 * Set value of AliveDatePeriod
	 * @param context
	 * @param alivedateperiod
	 */
	public final void setAliveDatePeriod(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer alivedateperiod)
	{
		getMendixObject().setValue(context, MemberNames.AliveDatePeriod.toString(), alivedateperiod);
	}

	/**
	 * @return value of ProtectionPeriod
	 */
	public final java.lang.Integer getProtectionPeriod()
	{
		return getProtectionPeriod(getContext());
	}

	/**
	 * @param context
	 * @return value of ProtectionPeriod
	 */
	public final java.lang.Integer getProtectionPeriod(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.ProtectionPeriod.toString());
	}

	/**
	 * Set value of ProtectionPeriod
	 * @param protectionperiod
	 */
	public final void setProtectionPeriod(java.lang.Integer protectionperiod)
	{
		setProtectionPeriod(getContext(), protectionperiod);
	}

	/**
	 * Set value of ProtectionPeriod
	 * @param context
	 * @param protectionperiod
	 */
	public final void setProtectionPeriod(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer protectionperiod)
	{
		getMendixObject().setValue(context, MemberNames.ProtectionPeriod.toString(), protectionperiod);
	}

	/**
	 * @return value of SimulatorPeriod
	 */
	public final java.lang.Integer getSimulatorPeriod()
	{
		return getSimulatorPeriod(getContext());
	}

	/**
	 * @param context
	 * @return value of SimulatorPeriod
	 */
	public final java.lang.Integer getSimulatorPeriod(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.SimulatorPeriod.toString());
	}

	/**
	 * Set value of SimulatorPeriod
	 * @param simulatorperiod
	 */
	public final void setSimulatorPeriod(java.lang.Integer simulatorperiod)
	{
		setSimulatorPeriod(getContext(), simulatorperiod);
	}

	/**
	 * Set value of SimulatorPeriod
	 * @param context
	 * @param simulatorperiod
	 */
	public final void setSimulatorPeriod(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer simulatorperiod)
	{
		getMendixObject().setValue(context, MemberNames.SimulatorPeriod.toString(), simulatorperiod);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return settingsMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final donotuse_concurrency_donotuse.proxies.Settings that = (donotuse_concurrency_donotuse.proxies.Settings) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "DoNotUse_Concurrency_DoNotUse.Settings";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
