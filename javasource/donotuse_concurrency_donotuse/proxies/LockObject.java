// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package donotuse_concurrency_donotuse.proxies;

public class LockObject
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject lockObjectMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "DoNotUse_Concurrency_DoNotUse.LockObject";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		LockName("LockName"),
		LockType("LockType"),
		Sequence("Sequence"),
		MaxDurationToAcquireLock("MaxDurationToAcquireLock"),
		ExecuteOnTimeout("ExecuteOnTimeout"),
		SimulatedCrash("SimulatedCrash"),
		SimulatedHang("SimulatedHang"),
		DebugSimulationPosition("DebugSimulationPosition"),
		IsCrashedBefore("IsCrashedBefore"),
		TraceInSimulation("TraceInSimulation"),
		HangDurationSecs("HangDurationSecs"),
		LockObject_SimulationServer("DoNotUse_Concurrency_DoNotUse.LockObject_SimulationServer");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public LockObject(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "DoNotUse_Concurrency_DoNotUse.LockObject"));
	}

	protected LockObject(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject lockObjectMendixObject)
	{
		if (lockObjectMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("DoNotUse_Concurrency_DoNotUse.LockObject", lockObjectMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a DoNotUse_Concurrency_DoNotUse.LockObject");

		this.lockObjectMendixObject = lockObjectMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'LockObject.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static donotuse_concurrency_donotuse.proxies.LockObject initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return donotuse_concurrency_donotuse.proxies.LockObject.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static donotuse_concurrency_donotuse.proxies.LockObject initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new donotuse_concurrency_donotuse.proxies.LockObject(context, mendixObject);
	}

	public static donotuse_concurrency_donotuse.proxies.LockObject load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return donotuse_concurrency_donotuse.proxies.LockObject.initialize(context, mendixObject);
	}

	public static java.util.List<donotuse_concurrency_donotuse.proxies.LockObject> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<donotuse_concurrency_donotuse.proxies.LockObject> result = new java.util.ArrayList<donotuse_concurrency_donotuse.proxies.LockObject>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//DoNotUse_Concurrency_DoNotUse.LockObject" + xpathConstraint))
			result.add(donotuse_concurrency_donotuse.proxies.LockObject.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of LockName
	 */
	public final java.lang.String getLockName()
	{
		return getLockName(getContext());
	}

	/**
	 * @param context
	 * @return value of LockName
	 */
	public final java.lang.String getLockName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.LockName.toString());
	}

	/**
	 * Set value of LockName
	 * @param lockname
	 */
	public final void setLockName(java.lang.String lockname)
	{
		setLockName(getContext(), lockname);
	}

	/**
	 * Set value of LockName
	 * @param context
	 * @param lockname
	 */
	public final void setLockName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String lockname)
	{
		getMendixObject().setValue(context, MemberNames.LockName.toString(), lockname);
	}

	/**
	 * Set value of LockType
	 * @param locktype
	 */
	public final donotuse_concurrency_donotuse.proxies.LockTypeEnum getLockType()
	{
		return getLockType(getContext());
	}

	/**
	 * @param context
	 * @return value of LockType
	 */
	public final donotuse_concurrency_donotuse.proxies.LockTypeEnum getLockType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.LockType.toString());
		if (obj == null)
			return null;

		return donotuse_concurrency_donotuse.proxies.LockTypeEnum.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of LockType
	 * @param locktype
	 */
	public final void setLockType(donotuse_concurrency_donotuse.proxies.LockTypeEnum locktype)
	{
		setLockType(getContext(), locktype);
	}

	/**
	 * Set value of LockType
	 * @param context
	 * @param locktype
	 */
	public final void setLockType(com.mendix.systemwideinterfaces.core.IContext context, donotuse_concurrency_donotuse.proxies.LockTypeEnum locktype)
	{
		if (locktype != null)
			getMendixObject().setValue(context, MemberNames.LockType.toString(), locktype.toString());
		else
			getMendixObject().setValue(context, MemberNames.LockType.toString(), null);
	}

	/**
	 * @return value of Sequence
	 */
	public final java.lang.Long getSequence()
	{
		return getSequence(getContext());
	}

	/**
	 * @param context
	 * @return value of Sequence
	 */
	public final java.lang.Long getSequence(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.Sequence.toString());
	}

	/**
	 * Set value of Sequence
	 * @param sequence
	 */
	public final void setSequence(java.lang.Long sequence)
	{
		setSequence(getContext(), sequence);
	}

	/**
	 * Set value of Sequence
	 * @param context
	 * @param sequence
	 */
	public final void setSequence(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long sequence)
	{
		getMendixObject().setValue(context, MemberNames.Sequence.toString(), sequence);
	}

	/**
	 * @return value of MaxDurationToAcquireLock
	 */
	public final java.lang.Integer getMaxDurationToAcquireLock()
	{
		return getMaxDurationToAcquireLock(getContext());
	}

	/**
	 * @param context
	 * @return value of MaxDurationToAcquireLock
	 */
	public final java.lang.Integer getMaxDurationToAcquireLock(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.MaxDurationToAcquireLock.toString());
	}

	/**
	 * Set value of MaxDurationToAcquireLock
	 * @param maxdurationtoacquirelock
	 */
	public final void setMaxDurationToAcquireLock(java.lang.Integer maxdurationtoacquirelock)
	{
		setMaxDurationToAcquireLock(getContext(), maxdurationtoacquirelock);
	}

	/**
	 * Set value of MaxDurationToAcquireLock
	 * @param context
	 * @param maxdurationtoacquirelock
	 */
	public final void setMaxDurationToAcquireLock(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer maxdurationtoacquirelock)
	{
		getMendixObject().setValue(context, MemberNames.MaxDurationToAcquireLock.toString(), maxdurationtoacquirelock);
	}

	/**
	 * @return value of ExecuteOnTimeout
	 */
	public final java.lang.Boolean getExecuteOnTimeout()
	{
		return getExecuteOnTimeout(getContext());
	}

	/**
	 * @param context
	 * @return value of ExecuteOnTimeout
	 */
	public final java.lang.Boolean getExecuteOnTimeout(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.ExecuteOnTimeout.toString());
	}

	/**
	 * Set value of ExecuteOnTimeout
	 * @param executeontimeout
	 */
	public final void setExecuteOnTimeout(java.lang.Boolean executeontimeout)
	{
		setExecuteOnTimeout(getContext(), executeontimeout);
	}

	/**
	 * Set value of ExecuteOnTimeout
	 * @param context
	 * @param executeontimeout
	 */
	public final void setExecuteOnTimeout(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean executeontimeout)
	{
		getMendixObject().setValue(context, MemberNames.ExecuteOnTimeout.toString(), executeontimeout);
	}

	/**
	 * @return value of SimulatedCrash
	 */
	public final java.lang.Boolean getSimulatedCrash()
	{
		return getSimulatedCrash(getContext());
	}

	/**
	 * @param context
	 * @return value of SimulatedCrash
	 */
	public final java.lang.Boolean getSimulatedCrash(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.SimulatedCrash.toString());
	}

	/**
	 * Set value of SimulatedCrash
	 * @param simulatedcrash
	 */
	public final void setSimulatedCrash(java.lang.Boolean simulatedcrash)
	{
		setSimulatedCrash(getContext(), simulatedcrash);
	}

	/**
	 * Set value of SimulatedCrash
	 * @param context
	 * @param simulatedcrash
	 */
	public final void setSimulatedCrash(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean simulatedcrash)
	{
		getMendixObject().setValue(context, MemberNames.SimulatedCrash.toString(), simulatedcrash);
	}

	/**
	 * @return value of SimulatedHang
	 */
	public final java.lang.Boolean getSimulatedHang()
	{
		return getSimulatedHang(getContext());
	}

	/**
	 * @param context
	 * @return value of SimulatedHang
	 */
	public final java.lang.Boolean getSimulatedHang(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.SimulatedHang.toString());
	}

	/**
	 * Set value of SimulatedHang
	 * @param simulatedhang
	 */
	public final void setSimulatedHang(java.lang.Boolean simulatedhang)
	{
		setSimulatedHang(getContext(), simulatedhang);
	}

	/**
	 * Set value of SimulatedHang
	 * @param context
	 * @param simulatedhang
	 */
	public final void setSimulatedHang(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean simulatedhang)
	{
		getMendixObject().setValue(context, MemberNames.SimulatedHang.toString(), simulatedhang);
	}

	/**
	 * @return value of DebugSimulationPosition
	 */
	public final java.lang.Integer getDebugSimulationPosition()
	{
		return getDebugSimulationPosition(getContext());
	}

	/**
	 * @param context
	 * @return value of DebugSimulationPosition
	 */
	public final java.lang.Integer getDebugSimulationPosition(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.DebugSimulationPosition.toString());
	}

	/**
	 * Set value of DebugSimulationPosition
	 * @param debugsimulationposition
	 */
	public final void setDebugSimulationPosition(java.lang.Integer debugsimulationposition)
	{
		setDebugSimulationPosition(getContext(), debugsimulationposition);
	}

	/**
	 * Set value of DebugSimulationPosition
	 * @param context
	 * @param debugsimulationposition
	 */
	public final void setDebugSimulationPosition(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer debugsimulationposition)
	{
		getMendixObject().setValue(context, MemberNames.DebugSimulationPosition.toString(), debugsimulationposition);
	}

	/**
	 * @return value of IsCrashedBefore
	 */
	public final java.lang.Boolean getIsCrashedBefore()
	{
		return getIsCrashedBefore(getContext());
	}

	/**
	 * @param context
	 * @return value of IsCrashedBefore
	 */
	public final java.lang.Boolean getIsCrashedBefore(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsCrashedBefore.toString());
	}

	/**
	 * Set value of IsCrashedBefore
	 * @param iscrashedbefore
	 */
	public final void setIsCrashedBefore(java.lang.Boolean iscrashedbefore)
	{
		setIsCrashedBefore(getContext(), iscrashedbefore);
	}

	/**
	 * Set value of IsCrashedBefore
	 * @param context
	 * @param iscrashedbefore
	 */
	public final void setIsCrashedBefore(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean iscrashedbefore)
	{
		getMendixObject().setValue(context, MemberNames.IsCrashedBefore.toString(), iscrashedbefore);
	}

	/**
	 * @return value of TraceInSimulation
	 */
	public final java.lang.Boolean getTraceInSimulation()
	{
		return getTraceInSimulation(getContext());
	}

	/**
	 * @param context
	 * @return value of TraceInSimulation
	 */
	public final java.lang.Boolean getTraceInSimulation(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.TraceInSimulation.toString());
	}

	/**
	 * Set value of TraceInSimulation
	 * @param traceinsimulation
	 */
	public final void setTraceInSimulation(java.lang.Boolean traceinsimulation)
	{
		setTraceInSimulation(getContext(), traceinsimulation);
	}

	/**
	 * Set value of TraceInSimulation
	 * @param context
	 * @param traceinsimulation
	 */
	public final void setTraceInSimulation(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean traceinsimulation)
	{
		getMendixObject().setValue(context, MemberNames.TraceInSimulation.toString(), traceinsimulation);
	}

	/**
	 * @return value of HangDurationSecs
	 */
	public final java.lang.Integer getHangDurationSecs()
	{
		return getHangDurationSecs(getContext());
	}

	/**
	 * @param context
	 * @return value of HangDurationSecs
	 */
	public final java.lang.Integer getHangDurationSecs(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.HangDurationSecs.toString());
	}

	/**
	 * Set value of HangDurationSecs
	 * @param hangdurationsecs
	 */
	public final void setHangDurationSecs(java.lang.Integer hangdurationsecs)
	{
		setHangDurationSecs(getContext(), hangdurationsecs);
	}

	/**
	 * Set value of HangDurationSecs
	 * @param context
	 * @param hangdurationsecs
	 */
	public final void setHangDurationSecs(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer hangdurationsecs)
	{
		getMendixObject().setValue(context, MemberNames.HangDurationSecs.toString(), hangdurationsecs);
	}

	/**
	 * @return value of LockObject_SimulationServer
	 */
	public final donotuse_concurrency_donotuse.proxies.Server getLockObject_SimulationServer() throws com.mendix.core.CoreException
	{
		return getLockObject_SimulationServer(getContext());
	}

	/**
	 * @param context
	 * @return value of LockObject_SimulationServer
	 */
	public final donotuse_concurrency_donotuse.proxies.Server getLockObject_SimulationServer(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		donotuse_concurrency_donotuse.proxies.Server result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.LockObject_SimulationServer.toString());
		if (identifier != null)
			result = donotuse_concurrency_donotuse.proxies.Server.load(context, identifier);
		return result;
	}

	/**
	 * Set value of LockObject_SimulationServer
	 * @param lockobject_simulationserver
	 */
	public final void setLockObject_SimulationServer(donotuse_concurrency_donotuse.proxies.Server lockobject_simulationserver)
	{
		setLockObject_SimulationServer(getContext(), lockobject_simulationserver);
	}

	/**
	 * Set value of LockObject_SimulationServer
	 * @param context
	 * @param lockobject_simulationserver
	 */
	public final void setLockObject_SimulationServer(com.mendix.systemwideinterfaces.core.IContext context, donotuse_concurrency_donotuse.proxies.Server lockobject_simulationserver)
	{
		if (lockobject_simulationserver == null)
			getMendixObject().setValue(context, MemberNames.LockObject_SimulationServer.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.LockObject_SimulationServer.toString(), lockobject_simulationserver.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return lockObjectMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final donotuse_concurrency_donotuse.proxies.LockObject that = (donotuse_concurrency_donotuse.proxies.LockObject) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "DoNotUse_Concurrency_DoNotUse.LockObject";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
