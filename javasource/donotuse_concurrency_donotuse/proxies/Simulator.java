// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package donotuse_concurrency_donotuse.proxies;

public class Simulator
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject simulatorMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "DoNotUse_Concurrency_DoNotUse.Simulator";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		DebugSimulationPosition("DebugSimulationPosition"),
		Active("Active"),
		SimulationType("SimulationType"),
		StepDate("StepDate"),
		SecondsShort("SecondsShort"),
		SecondsMedium("SecondsMedium"),
		SecondsLong("SecondsLong"),
		InStep("InStep"),
		LastRun("LastRun"),
		Simulator_LockObject("DoNotUse_Concurrency_DoNotUse.Simulator_LockObject"),
		Simulator_Server("DoNotUse_Concurrency_DoNotUse.Simulator_Server");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Simulator(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "DoNotUse_Concurrency_DoNotUse.Simulator"));
	}

	protected Simulator(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject simulatorMendixObject)
	{
		if (simulatorMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("DoNotUse_Concurrency_DoNotUse.Simulator", simulatorMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a DoNotUse_Concurrency_DoNotUse.Simulator");

		this.simulatorMendixObject = simulatorMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Simulator.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static donotuse_concurrency_donotuse.proxies.Simulator initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return donotuse_concurrency_donotuse.proxies.Simulator.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static donotuse_concurrency_donotuse.proxies.Simulator initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new donotuse_concurrency_donotuse.proxies.Simulator(context, mendixObject);
	}

	public static donotuse_concurrency_donotuse.proxies.Simulator load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return donotuse_concurrency_donotuse.proxies.Simulator.initialize(context, mendixObject);
	}

	public static java.util.List<donotuse_concurrency_donotuse.proxies.Simulator> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<donotuse_concurrency_donotuse.proxies.Simulator> result = new java.util.ArrayList<donotuse_concurrency_donotuse.proxies.Simulator>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//DoNotUse_Concurrency_DoNotUse.Simulator" + xpathConstraint))
			result.add(donotuse_concurrency_donotuse.proxies.Simulator.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of DebugSimulationPosition
	 */
	public final java.lang.Integer getDebugSimulationPosition()
	{
		return getDebugSimulationPosition(getContext());
	}

	/**
	 * @param context
	 * @return value of DebugSimulationPosition
	 */
	public final java.lang.Integer getDebugSimulationPosition(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.DebugSimulationPosition.toString());
	}

	/**
	 * Set value of DebugSimulationPosition
	 * @param debugsimulationposition
	 */
	public final void setDebugSimulationPosition(java.lang.Integer debugsimulationposition)
	{
		setDebugSimulationPosition(getContext(), debugsimulationposition);
	}

	/**
	 * Set value of DebugSimulationPosition
	 * @param context
	 * @param debugsimulationposition
	 */
	public final void setDebugSimulationPosition(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer debugsimulationposition)
	{
		getMendixObject().setValue(context, MemberNames.DebugSimulationPosition.toString(), debugsimulationposition);
	}

	/**
	 * @return value of Active
	 */
	public final java.lang.Boolean getActive()
	{
		return getActive(getContext());
	}

	/**
	 * @param context
	 * @return value of Active
	 */
	public final java.lang.Boolean getActive(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.Active.toString());
	}

	/**
	 * Set value of Active
	 * @param active
	 */
	public final void setActive(java.lang.Boolean active)
	{
		setActive(getContext(), active);
	}

	/**
	 * Set value of Active
	 * @param context
	 * @param active
	 */
	public final void setActive(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean active)
	{
		getMendixObject().setValue(context, MemberNames.Active.toString(), active);
	}

	/**
	 * Set value of SimulationType
	 * @param simulationtype
	 */
	public final donotuse_concurrency_donotuse.proxies.SimulationTypeEnum getSimulationType()
	{
		return getSimulationType(getContext());
	}

	/**
	 * @param context
	 * @return value of SimulationType
	 */
	public final donotuse_concurrency_donotuse.proxies.SimulationTypeEnum getSimulationType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.SimulationType.toString());
		if (obj == null)
			return null;

		return donotuse_concurrency_donotuse.proxies.SimulationTypeEnum.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of SimulationType
	 * @param simulationtype
	 */
	public final void setSimulationType(donotuse_concurrency_donotuse.proxies.SimulationTypeEnum simulationtype)
	{
		setSimulationType(getContext(), simulationtype);
	}

	/**
	 * Set value of SimulationType
	 * @param context
	 * @param simulationtype
	 */
	public final void setSimulationType(com.mendix.systemwideinterfaces.core.IContext context, donotuse_concurrency_donotuse.proxies.SimulationTypeEnum simulationtype)
	{
		if (simulationtype != null)
			getMendixObject().setValue(context, MemberNames.SimulationType.toString(), simulationtype.toString());
		else
			getMendixObject().setValue(context, MemberNames.SimulationType.toString(), null);
	}

	/**
	 * @return value of StepDate
	 */
	public final java.util.Date getStepDate()
	{
		return getStepDate(getContext());
	}

	/**
	 * @param context
	 * @return value of StepDate
	 */
	public final java.util.Date getStepDate(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.StepDate.toString());
	}

	/**
	 * Set value of StepDate
	 * @param stepdate
	 */
	public final void setStepDate(java.util.Date stepdate)
	{
		setStepDate(getContext(), stepdate);
	}

	/**
	 * Set value of StepDate
	 * @param context
	 * @param stepdate
	 */
	public final void setStepDate(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date stepdate)
	{
		getMendixObject().setValue(context, MemberNames.StepDate.toString(), stepdate);
	}

	/**
	 * @return value of SecondsShort
	 */
	public final java.lang.Integer getSecondsShort()
	{
		return getSecondsShort(getContext());
	}

	/**
	 * @param context
	 * @return value of SecondsShort
	 */
	public final java.lang.Integer getSecondsShort(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.SecondsShort.toString());
	}

	/**
	 * Set value of SecondsShort
	 * @param secondsshort
	 */
	public final void setSecondsShort(java.lang.Integer secondsshort)
	{
		setSecondsShort(getContext(), secondsshort);
	}

	/**
	 * Set value of SecondsShort
	 * @param context
	 * @param secondsshort
	 */
	public final void setSecondsShort(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer secondsshort)
	{
		getMendixObject().setValue(context, MemberNames.SecondsShort.toString(), secondsshort);
	}

	/**
	 * @return value of SecondsMedium
	 */
	public final java.lang.Integer getSecondsMedium()
	{
		return getSecondsMedium(getContext());
	}

	/**
	 * @param context
	 * @return value of SecondsMedium
	 */
	public final java.lang.Integer getSecondsMedium(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.SecondsMedium.toString());
	}

	/**
	 * Set value of SecondsMedium
	 * @param secondsmedium
	 */
	public final void setSecondsMedium(java.lang.Integer secondsmedium)
	{
		setSecondsMedium(getContext(), secondsmedium);
	}

	/**
	 * Set value of SecondsMedium
	 * @param context
	 * @param secondsmedium
	 */
	public final void setSecondsMedium(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer secondsmedium)
	{
		getMendixObject().setValue(context, MemberNames.SecondsMedium.toString(), secondsmedium);
	}

	/**
	 * @return value of SecondsLong
	 */
	public final java.lang.Integer getSecondsLong()
	{
		return getSecondsLong(getContext());
	}

	/**
	 * @param context
	 * @return value of SecondsLong
	 */
	public final java.lang.Integer getSecondsLong(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.SecondsLong.toString());
	}

	/**
	 * Set value of SecondsLong
	 * @param secondslong
	 */
	public final void setSecondsLong(java.lang.Integer secondslong)
	{
		setSecondsLong(getContext(), secondslong);
	}

	/**
	 * Set value of SecondsLong
	 * @param context
	 * @param secondslong
	 */
	public final void setSecondsLong(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer secondslong)
	{
		getMendixObject().setValue(context, MemberNames.SecondsLong.toString(), secondslong);
	}

	/**
	 * @return value of InStep
	 */
	public final java.lang.Boolean getInStep()
	{
		return getInStep(getContext());
	}

	/**
	 * @param context
	 * @return value of InStep
	 */
	public final java.lang.Boolean getInStep(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.InStep.toString());
	}

	/**
	 * Set value of InStep
	 * @param instep
	 */
	public final void setInStep(java.lang.Boolean instep)
	{
		setInStep(getContext(), instep);
	}

	/**
	 * Set value of InStep
	 * @param context
	 * @param instep
	 */
	public final void setInStep(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean instep)
	{
		getMendixObject().setValue(context, MemberNames.InStep.toString(), instep);
	}

	/**
	 * @return value of LastRun
	 */
	public final java.util.Date getLastRun()
	{
		return getLastRun(getContext());
	}

	/**
	 * @param context
	 * @return value of LastRun
	 */
	public final java.util.Date getLastRun(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.LastRun.toString());
	}

	/**
	 * Set value of LastRun
	 * @param lastrun
	 */
	public final void setLastRun(java.util.Date lastrun)
	{
		setLastRun(getContext(), lastrun);
	}

	/**
	 * Set value of LastRun
	 * @param context
	 * @param lastrun
	 */
	public final void setLastRun(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date lastrun)
	{
		getMendixObject().setValue(context, MemberNames.LastRun.toString(), lastrun);
	}

	/**
	 * @return value of Simulator_LockObject
	 */
	public final donotuse_concurrency_donotuse.proxies.LockObject getSimulator_LockObject() throws com.mendix.core.CoreException
	{
		return getSimulator_LockObject(getContext());
	}

	/**
	 * @param context
	 * @return value of Simulator_LockObject
	 */
	public final donotuse_concurrency_donotuse.proxies.LockObject getSimulator_LockObject(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		donotuse_concurrency_donotuse.proxies.LockObject result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Simulator_LockObject.toString());
		if (identifier != null)
			result = donotuse_concurrency_donotuse.proxies.LockObject.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Simulator_LockObject
	 * @param simulator_lockobject
	 */
	public final void setSimulator_LockObject(donotuse_concurrency_donotuse.proxies.LockObject simulator_lockobject)
	{
		setSimulator_LockObject(getContext(), simulator_lockobject);
	}

	/**
	 * Set value of Simulator_LockObject
	 * @param context
	 * @param simulator_lockobject
	 */
	public final void setSimulator_LockObject(com.mendix.systemwideinterfaces.core.IContext context, donotuse_concurrency_donotuse.proxies.LockObject simulator_lockobject)
	{
		if (simulator_lockobject == null)
			getMendixObject().setValue(context, MemberNames.Simulator_LockObject.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Simulator_LockObject.toString(), simulator_lockobject.getMendixObject().getId());
	}

	/**
	 * @return value of Simulator_Server
	 */
	public final donotuse_concurrency_donotuse.proxies.Server getSimulator_Server() throws com.mendix.core.CoreException
	{
		return getSimulator_Server(getContext());
	}

	/**
	 * @param context
	 * @return value of Simulator_Server
	 */
	public final donotuse_concurrency_donotuse.proxies.Server getSimulator_Server(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		donotuse_concurrency_donotuse.proxies.Server result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Simulator_Server.toString());
		if (identifier != null)
			result = donotuse_concurrency_donotuse.proxies.Server.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Simulator_Server
	 * @param simulator_server
	 */
	public final void setSimulator_Server(donotuse_concurrency_donotuse.proxies.Server simulator_server)
	{
		setSimulator_Server(getContext(), simulator_server);
	}

	/**
	 * Set value of Simulator_Server
	 * @param context
	 * @param simulator_server
	 */
	public final void setSimulator_Server(com.mendix.systemwideinterfaces.core.IContext context, donotuse_concurrency_donotuse.proxies.Server simulator_server)
	{
		if (simulator_server == null)
			getMendixObject().setValue(context, MemberNames.Simulator_Server.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Simulator_Server.toString(), simulator_server.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return simulatorMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final donotuse_concurrency_donotuse.proxies.Simulator that = (donotuse_concurrency_donotuse.proxies.Simulator) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "DoNotUse_Concurrency_DoNotUse.Simulator";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
