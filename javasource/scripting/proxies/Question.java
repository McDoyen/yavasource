// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package scripting.proxies;

public class Question
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject questionMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Scripting.Question";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Question("Question"),
		QuestionNumber("QuestionNumber"),
		Question_Script("Scripting.Question_Script");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Question(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Scripting.Question"));
	}

	protected Question(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject questionMendixObject)
	{
		if (questionMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Scripting.Question", questionMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Scripting.Question");

		this.questionMendixObject = questionMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Question.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static scripting.proxies.Question initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return scripting.proxies.Question.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static scripting.proxies.Question initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new scripting.proxies.Question(context, mendixObject);
	}

	public static scripting.proxies.Question load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return scripting.proxies.Question.initialize(context, mendixObject);
	}

	public static java.util.List<scripting.proxies.Question> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<scripting.proxies.Question> result = new java.util.ArrayList<scripting.proxies.Question>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Scripting.Question" + xpathConstraint))
			result.add(scripting.proxies.Question.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Question
	 */
	public final java.lang.String getQuestion()
	{
		return getQuestion(getContext());
	}

	/**
	 * @param context
	 * @return value of Question
	 */
	public final java.lang.String getQuestion(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Question.toString());
	}

	/**
	 * Set value of Question
	 * @param question
	 */
	public final void setQuestion(java.lang.String question)
	{
		setQuestion(getContext(), question);
	}

	/**
	 * Set value of Question
	 * @param context
	 * @param question
	 */
	public final void setQuestion(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String question)
	{
		getMendixObject().setValue(context, MemberNames.Question.toString(), question);
	}

	/**
	 * @return value of QuestionNumber
	 */
	public final java.lang.Long getQuestionNumber()
	{
		return getQuestionNumber(getContext());
	}

	/**
	 * @param context
	 * @return value of QuestionNumber
	 */
	public final java.lang.Long getQuestionNumber(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.QuestionNumber.toString());
	}

	/**
	 * Set value of QuestionNumber
	 * @param questionnumber
	 */
	public final void setQuestionNumber(java.lang.Long questionnumber)
	{
		setQuestionNumber(getContext(), questionnumber);
	}

	/**
	 * Set value of QuestionNumber
	 * @param context
	 * @param questionnumber
	 */
	public final void setQuestionNumber(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long questionnumber)
	{
		getMendixObject().setValue(context, MemberNames.QuestionNumber.toString(), questionnumber);
	}

	/**
	 * @return value of Question_Script
	 */
	public final scripting.proxies.Script getQuestion_Script() throws com.mendix.core.CoreException
	{
		return getQuestion_Script(getContext());
	}

	/**
	 * @param context
	 * @return value of Question_Script
	 */
	public final scripting.proxies.Script getQuestion_Script(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		scripting.proxies.Script result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Question_Script.toString());
		if (identifier != null)
			result = scripting.proxies.Script.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Question_Script
	 * @param question_script
	 */
	public final void setQuestion_Script(scripting.proxies.Script question_script)
	{
		setQuestion_Script(getContext(), question_script);
	}

	/**
	 * Set value of Question_Script
	 * @param context
	 * @param question_script
	 */
	public final void setQuestion_Script(com.mendix.systemwideinterfaces.core.IContext context, scripting.proxies.Script question_script)
	{
		if (question_script == null)
			getMendixObject().setValue(context, MemberNames.Question_Script.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Question_Script.toString(), question_script.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return questionMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final scripting.proxies.Question that = (scripting.proxies.Question) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Scripting.Question";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
