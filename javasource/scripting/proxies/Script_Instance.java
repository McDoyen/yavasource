// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package scripting.proxies;

public class Script_Instance
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject script_InstanceMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Scripting.Script_Instance";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Name("Name"),
		Delete("Delete"),
		Script_Instance_Question_Instance("Scripting.Script_Instance_Question_Instance"),
		StartQuestionInstance("Scripting.StartQuestionInstance"),
		Request_Script_Instance("Process.Request_Script_Instance");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Script_Instance(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Scripting.Script_Instance"));
	}

	protected Script_Instance(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject script_InstanceMendixObject)
	{
		if (script_InstanceMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Scripting.Script_Instance", script_InstanceMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Scripting.Script_Instance");

		this.script_InstanceMendixObject = script_InstanceMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Script_Instance.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static scripting.proxies.Script_Instance initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return scripting.proxies.Script_Instance.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static scripting.proxies.Script_Instance initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new scripting.proxies.Script_Instance(context, mendixObject);
	}

	public static scripting.proxies.Script_Instance load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return scripting.proxies.Script_Instance.initialize(context, mendixObject);
	}

	public static java.util.List<scripting.proxies.Script_Instance> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<scripting.proxies.Script_Instance> result = new java.util.ArrayList<scripting.proxies.Script_Instance>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Scripting.Script_Instance" + xpathConstraint))
			result.add(scripting.proxies.Script_Instance.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Name
	 */
	public final java.lang.String getName()
	{
		return getName(getContext());
	}

	/**
	 * @param context
	 * @return value of Name
	 */
	public final java.lang.String getName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Name.toString());
	}

	/**
	 * Set value of Name
	 * @param name
	 */
	public final void setName(java.lang.String name)
	{
		setName(getContext(), name);
	}

	/**
	 * Set value of Name
	 * @param context
	 * @param name
	 */
	public final void setName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String name)
	{
		getMendixObject().setValue(context, MemberNames.Name.toString(), name);
	}

	/**
	 * @return value of Delete
	 */
	public final java.lang.Boolean getDelete()
	{
		return getDelete(getContext());
	}

	/**
	 * @param context
	 * @return value of Delete
	 */
	public final java.lang.Boolean getDelete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.Delete.toString());
	}

	/**
	 * Set value of Delete
	 * @param delete
	 */
	public final void setDelete(java.lang.Boolean delete)
	{
		setDelete(getContext(), delete);
	}

	/**
	 * Set value of Delete
	 * @param context
	 * @param delete
	 */
	public final void setDelete(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean delete)
	{
		getMendixObject().setValue(context, MemberNames.Delete.toString(), delete);
	}

	/**
	 * @return value of Script_Instance_Question_Instance
	 */
	public final java.util.List<scripting.proxies.Question_Instance> getScript_Instance_Question_Instance() throws com.mendix.core.CoreException
	{
		return getScript_Instance_Question_Instance(getContext());
	}

	/**
	 * @param context
	 * @return value of Script_Instance_Question_Instance
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<scripting.proxies.Question_Instance> getScript_Instance_Question_Instance(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<scripting.proxies.Question_Instance> result = new java.util.ArrayList<scripting.proxies.Question_Instance>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.Script_Instance_Question_Instance.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(scripting.proxies.Question_Instance.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of Script_Instance_Question_Instance
	 * @param script_instance_question_instance
	 */
	public final void setScript_Instance_Question_Instance(java.util.List<scripting.proxies.Question_Instance> script_instance_question_instance)
	{
		setScript_Instance_Question_Instance(getContext(), script_instance_question_instance);
	}

	/**
	 * Set value of Script_Instance_Question_Instance
	 * @param context
	 * @param script_instance_question_instance
	 */
	public final void setScript_Instance_Question_Instance(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<scripting.proxies.Question_Instance> script_instance_question_instance)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (scripting.proxies.Question_Instance proxyObject : script_instance_question_instance)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.Script_Instance_Question_Instance.toString(), identifiers);
	}

	/**
	 * @return value of StartQuestionInstance
	 */
	public final scripting.proxies.Question_Instance getStartQuestionInstance() throws com.mendix.core.CoreException
	{
		return getStartQuestionInstance(getContext());
	}

	/**
	 * @param context
	 * @return value of StartQuestionInstance
	 */
	public final scripting.proxies.Question_Instance getStartQuestionInstance(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		scripting.proxies.Question_Instance result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.StartQuestionInstance.toString());
		if (identifier != null)
			result = scripting.proxies.Question_Instance.load(context, identifier);
		return result;
	}

	/**
	 * Set value of StartQuestionInstance
	 * @param startquestioninstance
	 */
	public final void setStartQuestionInstance(scripting.proxies.Question_Instance startquestioninstance)
	{
		setStartQuestionInstance(getContext(), startquestioninstance);
	}

	/**
	 * Set value of StartQuestionInstance
	 * @param context
	 * @param startquestioninstance
	 */
	public final void setStartQuestionInstance(com.mendix.systemwideinterfaces.core.IContext context, scripting.proxies.Question_Instance startquestioninstance)
	{
		if (startquestioninstance == null)
			getMendixObject().setValue(context, MemberNames.StartQuestionInstance.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.StartQuestionInstance.toString(), startquestioninstance.getMendixObject().getId());
	}

	/**
	 * @return value of Request_Script_Instance
	 */
	public final java.util.List<process.proxies.Request> getRequest_Script_Instance() throws com.mendix.core.CoreException
	{
		return getRequest_Script_Instance(getContext());
	}

	/**
	 * @param context
	 * @return value of Request_Script_Instance
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<process.proxies.Request> getRequest_Script_Instance(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<process.proxies.Request> result = new java.util.ArrayList<process.proxies.Request>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.Request_Script_Instance.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(process.proxies.Request.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of Request_Script_Instance
	 * @param request_script_instance
	 */
	public final void setRequest_Script_Instance(java.util.List<process.proxies.Request> request_script_instance)
	{
		setRequest_Script_Instance(getContext(), request_script_instance);
	}

	/**
	 * Set value of Request_Script_Instance
	 * @param context
	 * @param request_script_instance
	 */
	public final void setRequest_Script_Instance(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<process.proxies.Request> request_script_instance)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (process.proxies.Request proxyObject : request_script_instance)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.Request_Script_Instance.toString(), identifiers);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return script_InstanceMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final scripting.proxies.Script_Instance that = (scripting.proxies.Script_Instance) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Scripting.Script_Instance";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
