// This file was generated by Mendix Modeler 7.7.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package scripting.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the Scripting module
	public static void addQuestionsToScript(IContext context, java.util.List<scripting.proxies.Question> _questionList, scripting.proxies.Script _script)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_questionList = null;
			if (_questionList != null)
			{
				listparam_questionList = new java.util.ArrayList<IMendixObject>();
				for (scripting.proxies.Question obj : _questionList)
					listparam_questionList.add(obj.getMendixObject());
			}
			params.put("QuestionList", listparam_questionList);
			params.put("Script", _script == null ? null : _script.getMendixObject());
			Core.execute(context, "Scripting.AddQuestionsToScript", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void answerQuestionFromScript(IContext context, scripting.proxies.Answer_Instance _answer_Instance, scripting.proxies.Question_Instance _question_Instance)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Answer_Instance", _answer_Instance == null ? null : _answer_Instance.getMendixObject());
			params.put("Question_Instance", _question_Instance == null ? null : _question_Instance.getMendixObject());
			Core.execute(context, "Scripting.AnswerQuestionFromScript", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void apply_Script(IContext context, scripting.proxies.Script _script)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Script", _script == null ? null : _script.getMendixObject());
			Core.execute(context, "Scripting.Apply_Script", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bC_ScriptInstance(IContext context, scripting.proxies.Script_Instance _script_Instance)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Script_Instance", _script_Instance == null ? null : _script_Instance.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Scripting.BC_ScriptInstance", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void cancelNewAnswer(IContext context, scripting.proxies.Answer _answer)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Answer", _answer == null ? null : _answer.getMendixObject());
			Core.execute(context, "Scripting.CancelNewAnswer", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void cancelQuestion(IContext context, scripting.proxies.Question _question)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Question", _question == null ? null : _question.getMendixObject());
			Core.execute(context, "Scripting.CancelQuestion", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void cancelSelectAnswer(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Scripting.CancelSelectAnswer", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean checkRequiredStartQuestion(IContext context, scripting.proxies.Script _script)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Script", _script == null ? null : _script.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Scripting.CheckRequiredStartQuestion", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void cleanQuestionsAndAnswers(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Scripting.CleanQuestionsAndAnswers", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void clearAnswer(IContext context, scripting.proxies.Question_Instance _question_Instance)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Question_Instance", _question_Instance == null ? null : _question_Instance.getMendixObject());
			Core.execute(context, "Scripting.ClearAnswer", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyQuestionAndAnswer(IContext context, scripting.proxies.Script _script)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Script", _script == null ? null : _script.getMendixObject());
			Core.execute(context, "Scripting.CopyQuestionAndAnswer", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void createNewAnswer(IContext context, scripting.proxies.Question _question)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Question", _question == null ? null : _question.getMendixObject());
			Core.execute(context, "Scripting.CreateNewAnswer", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void createNewQuestion(IContext context, scripting.proxies.Script _script)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Script", _script == null ? null : _script.getMendixObject());
			Core.execute(context, "Scripting.CreateNewQuestion", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deleteQuestion(IContext context, scripting.proxies.Question _question)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Question", _question == null ? null : _question.getMendixObject());
			Core.execute(context, "Scripting.DeleteQuestion", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deleteScriptInstance(IContext context, scripting.proxies.Script_Instance _script_Instance)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Script_Instance", _script_Instance == null ? null : _script_Instance.getMendixObject());
			Core.execute(context, "Scripting.DeleteScriptInstance", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<scripting.proxies.Question> getFirstQuestionsForScript(IContext context, scripting.proxies.Script _script)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Script", _script == null ? null : _script.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Scripting.GetFirstQuestionsForScript", params);
			java.util.List<scripting.proxies.Question> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<scripting.proxies.Question>();
				for (IMendixObject obj : objs)
					result.add(scripting.proxies.Question.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static scripting.proxies.Answer_Instance instantiateAnswer(IContext context, java.util.List<scripting.proxies.Question> _questionList, scripting.proxies.Answer _answer, scripting.proxies.Question_Instance _question_Instance, scripting.proxies.Script_Instance _script_Instance)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_questionList = null;
			if (_questionList != null)
			{
				listparam_questionList = new java.util.ArrayList<IMendixObject>();
				for (scripting.proxies.Question obj : _questionList)
					listparam_questionList.add(obj.getMendixObject());
			}
			params.put("QuestionList", listparam_questionList);
			params.put("Answer", _answer == null ? null : _answer.getMendixObject());
			params.put("Question_Instance", _question_Instance == null ? null : _question_Instance.getMendixObject());
			params.put("Script_Instance", _script_Instance == null ? null : _script_Instance.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Scripting.InstantiateAnswer", params);
			return result == null ? null : scripting.proxies.Answer_Instance.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<scripting.proxies.Answer_Instance> instantiateAnswerList(IContext context, java.util.List<scripting.proxies.Answer> _answerList, scripting.proxies.Script_Instance _script_Instance, scripting.proxies.Question_Instance _question_Instance, java.util.List<scripting.proxies.Question> _questionList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_answerList = null;
			if (_answerList != null)
			{
				listparam_answerList = new java.util.ArrayList<IMendixObject>();
				for (scripting.proxies.Answer obj : _answerList)
					listparam_answerList.add(obj.getMendixObject());
			}
			params.put("AnswerList", listparam_answerList);
			params.put("Script_Instance", _script_Instance == null ? null : _script_Instance.getMendixObject());
			params.put("Question_Instance", _question_Instance == null ? null : _question_Instance.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_questionList = null;
			if (_questionList != null)
			{
				listparam_questionList = new java.util.ArrayList<IMendixObject>();
				for (scripting.proxies.Question obj : _questionList)
					listparam_questionList.add(obj.getMendixObject());
			}
			params.put("QuestionList", listparam_questionList);
			java.util.List<IMendixObject> objs = Core.execute(context, "Scripting.InstantiateAnswerList", params);
			java.util.List<scripting.proxies.Answer_Instance> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<scripting.proxies.Answer_Instance>();
				for (IMendixObject obj : objs)
					result.add(scripting.proxies.Answer_Instance.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static scripting.proxies.Question_Instance instantiateQuestion(IContext context, scripting.proxies.Question _question, scripting.proxies.Script_Instance _script_Instance, java.util.List<scripting.proxies.Question> _questionList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Question", _question == null ? null : _question.getMendixObject());
			params.put("Script_Instance", _script_Instance == null ? null : _script_Instance.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_questionList = null;
			if (_questionList != null)
			{
				listparam_questionList = new java.util.ArrayList<IMendixObject>();
				for (scripting.proxies.Question obj : _questionList)
					listparam_questionList.add(obj.getMendixObject());
			}
			params.put("QuestionList", listparam_questionList);
			IMendixObject result = (IMendixObject)Core.execute(context, "Scripting.InstantiateQuestion", params);
			return result == null ? null : scripting.proxies.Question_Instance.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void retrieveDeleteScriptInstances(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Scripting.RetrieveDeleteScriptInstances", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void saveQuestion(IContext context, scripting.proxies.Question _question)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Question", _question == null ? null : _question.getMendixObject());
			Core.execute(context, "Scripting.SaveQuestion", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void showAnswersForQuestion(IContext context, scripting.proxies.Question_Instance _question_Instance)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Question_Instance", _question_Instance == null ? null : _question_Instance.getMendixObject());
			Core.execute(context, "Scripting.ShowAnswersForQuestion", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}