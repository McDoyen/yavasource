// This file was generated by Mendix Modeler 7.7.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package sdemigration.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the SDEMigration module
	public static void associatePersonWithGroup(IContext context, nap.proxies.Person _person, nap.proxies.Organisation _organisation, boolean _isCustomer)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			params.put("Organisation", _organisation == null ? null : _organisation.getMendixObject());
			params.put("IsCustomer", _isCustomer);
			Core.execute(context, "SDEMigration.AssociatePersonWithGroup", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void cleanupImportedData(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.CleanupImportedData", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void disableNotificationsForMigration(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SDEMigration.DisableNotificationsForMigration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void disableTransitionMessagesForMigration(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SDEMigration.DisableTransitionMessagesForMigration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void enableTransitionMessagesForMigration(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SDEMigration.EnableTransitionMessagesForMigration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void generateAllRelations_ATM_Assembly_ATM_CI(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.GenerateAllRelations_ATM_Assembly_ATM_CI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void generateAllRelations_ICTService_ICTSystem(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.GenerateAllRelations_ICTService_ICTSystem", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void generateAllRelations_ICTSystem_ICTCI(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.GenerateAllRelations_ICTSystem_ICTCI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void generateStdRelation(IContext context, java.lang.String _lognode, sdemigration.proxies.MigrationItemRun _migrationItemRun, cmdb.proxies.CMDBType _cMDBTypeChild, cmdb.proxies.CMDBType _cMDBTypeParent, cmdb.proxies.CMDBRelationType _defaultCMDBRelationType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Lognode", _lognode);
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			params.put("CMDBTypeChild", _cMDBTypeChild == null ? null : _cMDBTypeChild.getMendixObject());
			params.put("CMDBTypeParent", _cMDBTypeParent == null ? null : _cMDBTypeParent.getMendixObject());
			params.put("DefaultCMDBRelationType", _defaultCMDBRelationType == null ? null : _defaultCMDBRelationType.getMendixObject());
			Core.execute(context, "SDEMigration.GenerateStdRelation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void generateStdRelations(IContext context, customlvnl.proxies.CI_Level _cI_LevelParent, customlvnl.proxies.CI_Level _cI_LevelChild, java.lang.String _logNode, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CI_LevelParent", _cI_LevelParent == null ? null : _cI_LevelParent.name());
			params.put("CI_LevelChild", _cI_LevelChild == null ? null : _cI_LevelChild.name());
			params.put("LogNode", _logNode);
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.GenerateStdRelations", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 5757: If there is a default value for the attribute, be sure to add it to the list in order to commit the value once done
	 */
	public static java.util.List<slm.proxies.SPAttribute> getSPAttribute_2(IContext context, slm.proxies.SPScreenBlock _sPScreenBlock, java.util.List<slm.proxies.SPAttributeValue> _sPAttributeValueCommitList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SPScreenBlock", _sPScreenBlock == null ? null : _sPScreenBlock.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_sPAttributeValueCommitList = null;
			if (_sPAttributeValueCommitList != null)
			{
				listparam_sPAttributeValueCommitList = new java.util.ArrayList<IMendixObject>();
				for (slm.proxies.SPAttributeValue obj : _sPAttributeValueCommitList)
					listparam_sPAttributeValueCommitList.add(obj.getMendixObject());
			}
			params.put("SPAttributeValueCommitList", listparam_sPAttributeValueCommitList);
			java.util.List<IMendixObject> objs = Core.execute(context, "SDEMigration.GetSPAttribute_2", params);
			java.util.List<slm.proxies.SPAttribute> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<slm.proxies.SPAttribute>();
				for (IMendixObject obj : objs)
					result.add(slm.proxies.SPAttribute.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void getTicketScreenBlocks(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "SDEMigration.GetTicketScreenBlocks", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AssociateChangeICTWithLastInterfaceMessage(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SDEMigration.IVK_AssociateChangeICTWithLastInterfaceMessage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AssociateChangeWithLastInterfaceMessage(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SDEMigration.IVK_AssociateChangeWithLastInterfaceMessage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AssociateIncidentWithLastInterfaceMessage(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SDEMigration.IVK_AssociateIncidentWithLastInterfaceMessage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AssociateProblemWithLastInterfaceMessage(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SDEMigration.IVK_AssociateProblemWithLastInterfaceMessage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AssociateSRICTWithLastInterfaceMessage(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SDEMigration.IVK_AssociateSRICTWithLastInterfaceMessage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AssociateWOWithLastInterfaceMessage(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SDEMigration.IVK_AssociateWOWithLastInterfaceMessage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AttachmentDeleteAll(IContext context, java.util.List<sdemigration.proxies.Attachment> _attachmentList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_attachmentList = null;
			if (_attachmentList != null)
			{
				listparam_attachmentList = new java.util.ArrayList<IMendixObject>();
				for (sdemigration.proxies.Attachment obj : _attachmentList)
					listparam_attachmentList.add(obj.getMendixObject());
			}
			params.put("AttachmentList", listparam_attachmentList);
			Core.execute(context, "SDEMigration.IVK_AttachmentDeleteAll", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AttachmentICTDeleteAll(IContext context, java.util.List<sdemigration.proxies.AttachmentICT> _attachmentList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_attachmentList = null;
			if (_attachmentList != null)
			{
				listparam_attachmentList = new java.util.ArrayList<IMendixObject>();
				for (sdemigration.proxies.AttachmentICT obj : _attachmentList)
					listparam_attachmentList.add(obj.getMendixObject());
			}
			params.put("AttachmentList", listparam_attachmentList);
			Core.execute(context, "SDEMigration.IVK_AttachmentICTDeleteAll", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ChangeDeleteAll(IContext context, java.util.List<sdemigration.proxies.Change> _changes)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_changes = null;
			if (_changes != null)
			{
				listparam_changes = new java.util.ArrayList<IMendixObject>();
				for (sdemigration.proxies.Change obj : _changes)
					listparam_changes.add(obj.getMendixObject());
			}
			params.put("Changes", listparam_changes);
			Core.execute(context, "SDEMigration.IVK_ChangeDeleteAll", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ChangeIctDeleteAll(IContext context, java.util.List<sdemigration.proxies.ChangeICT> _changes)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_changes = null;
			if (_changes != null)
			{
				listparam_changes = new java.util.ArrayList<IMendixObject>();
				for (sdemigration.proxies.ChangeICT obj : _changes)
					listparam_changes.add(obj.getMendixObject());
			}
			params.put("Changes", listparam_changes);
			Core.execute(context, "SDEMigration.IVK_ChangeIctDeleteAll", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CI_ICTDeleteAll(IContext context, java.util.List<sdemigration.proxies.ConfigurationItemICT> _configurationItemList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_configurationItemList = null;
			if (_configurationItemList != null)
			{
				listparam_configurationItemList = new java.util.ArrayList<IMendixObject>();
				for (sdemigration.proxies.ConfigurationItemICT obj : _configurationItemList)
					listparam_configurationItemList.add(obj.getMendixObject());
			}
			params.put("ConfigurationItemList", listparam_configurationItemList);
			Core.execute(context, "SDEMigration.IVK_CI_ICTDeleteAll", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CIAssemblyDeleteAll(IContext context, java.util.List<sdemigration.proxies.CIAssembly> _cIAssembly)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_cIAssembly = null;
			if (_cIAssembly != null)
			{
				listparam_cIAssembly = new java.util.ArrayList<IMendixObject>();
				for (sdemigration.proxies.CIAssembly obj : _cIAssembly)
					listparam_cIAssembly.add(obj.getMendixObject());
			}
			params.put("CIAssembly", listparam_cIAssembly);
			Core.execute(context, "SDEMigration.IVK_CIAssemblyDeleteAll", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CICatalogPartDeleteAll(IContext context, java.util.List<sdemigration.proxies.CICatalogPart> _ciCatalogParts)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_ciCatalogParts = null;
			if (_ciCatalogParts != null)
			{
				listparam_ciCatalogParts = new java.util.ArrayList<IMendixObject>();
				for (sdemigration.proxies.CICatalogPart obj : _ciCatalogParts)
					listparam_ciCatalogParts.add(obj.getMendixObject());
			}
			params.put("CiCatalogParts", listparam_ciCatalogParts);
			Core.execute(context, "SDEMigration.IVK_CICatalogPartDeleteAll", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CICategoryDeleteAll(IContext context, java.util.List<sdemigration.proxies.CICategory> _cICategory)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_cICategory = null;
			if (_cICategory != null)
			{
				listparam_cICategory = new java.util.ArrayList<IMendixObject>();
				for (sdemigration.proxies.CICategory obj : _cICategory)
					listparam_cICategory.add(obj.getMendixObject());
			}
			params.put("CICategory", listparam_cICategory);
			Core.execute(context, "SDEMigration.IVK_CICategoryDeleteAll", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CILocationDeleteAll(IContext context, java.util.List<sdemigration.proxies.CILocation> _cILocation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_cILocation = null;
			if (_cILocation != null)
			{
				listparam_cILocation = new java.util.ArrayList<IMendixObject>();
				for (sdemigration.proxies.CILocation obj : _cILocation)
					listparam_cILocation.add(obj.getMendixObject());
			}
			params.put("CILocation", listparam_cILocation);
			Core.execute(context, "SDEMigration.IVK_CILocationDeleteAll", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CIOrganisation_ICTDeleteAll(IContext context, java.util.List<sdemigration.proxies.CIOrganisationICT> _cIOrganisations)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_cIOrganisations = null;
			if (_cIOrganisations != null)
			{
				listparam_cIOrganisations = new java.util.ArrayList<IMendixObject>();
				for (sdemigration.proxies.CIOrganisationICT obj : _cIOrganisations)
					listparam_cIOrganisations.add(obj.getMendixObject());
			}
			params.put("CIOrganisations", listparam_cIOrganisations);
			Core.execute(context, "SDEMigration.IVK_CIOrganisation_ICTDeleteAll", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CIPerson_ICTDeleteAll(IContext context, java.util.List<sdemigration.proxies.CIPersonICT> _cIPersons)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_cIPersons = null;
			if (_cIPersons != null)
			{
				listparam_cIPersons = new java.util.ArrayList<IMendixObject>();
				for (sdemigration.proxies.CIPersonICT obj : _cIPersons)
					listparam_cIPersons.add(obj.getMendixObject());
			}
			params.put("CIPersons", listparam_cIPersons);
			Core.execute(context, "SDEMigration.IVK_CIPerson_ICTDeleteAll", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CIRelation_ICTDeleteAll(IContext context, java.util.List<sdemigration.proxies.CIRelationICT> _cIRelations)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_cIRelations = null;
			if (_cIRelations != null)
			{
				listparam_cIRelations = new java.util.ArrayList<IMendixObject>();
				for (sdemigration.proxies.CIRelationICT obj : _cIRelations)
					listparam_cIRelations.add(obj.getMendixObject());
			}
			params.put("CIRelations", listparam_cIRelations);
			Core.execute(context, "SDEMigration.IVK_CIRelation_ICTDeleteAll", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CIRelation2_ICTDeleteAll(IContext context, java.util.List<sdemigration.proxies.CIRelationICT_2> _cIRelations)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_cIRelations = null;
			if (_cIRelations != null)
			{
				listparam_cIRelations = new java.util.ArrayList<IMendixObject>();
				for (sdemigration.proxies.CIRelationICT_2 obj : _cIRelations)
					listparam_cIRelations.add(obj.getMendixObject());
			}
			params.put("CIRelations", listparam_cIRelations);
			Core.execute(context, "SDEMigration.IVK_CIRelation2_ICTDeleteAll", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CISystemDeleteAll(IContext context, java.util.List<sdemigration.proxies.CISystem> _cISystem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_cISystem = null;
			if (_cISystem != null)
			{
				listparam_cISystem = new java.util.ArrayList<IMendixObject>();
				for (sdemigration.proxies.CISystem obj : _cISystem)
					listparam_cISystem.add(obj.getMendixObject());
			}
			params.put("CISystem", listparam_cISystem);
			Core.execute(context, "SDEMigration.IVK_CISystemDeleteAll", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CITypeDeleteAll(IContext context, java.util.List<sdemigration.proxies.CIType> _cITypeList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_cITypeList = null;
			if (_cITypeList != null)
			{
				listparam_cITypeList = new java.util.ArrayList<IMendixObject>();
				for (sdemigration.proxies.CIType obj : _cITypeList)
					listparam_cITypeList.add(obj.getMendixObject());
			}
			params.put("CITypeList", listparam_cITypeList);
			Core.execute(context, "SDEMigration.IVK_CITypeDeleteAll", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CleanUpDuplicateAffectedCIsForMigratedTickets(IContext context, sdemigration.proxies.MigrationTicketCleanUp _migrationTicketCleanUp)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationTicketCleanUp", _migrationTicketCleanUp == null ? null : _migrationTicketCleanUp.getMendixObject());
			Core.execute(context, "SDEMigration.IVK_CleanUpDuplicateAffectedCIsForMigratedTickets", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ConfigurationItemsDeleteAll(IContext context, java.util.List<sdemigration.proxies.ConfigurationItem> _configurationItemList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_configurationItemList = null;
			if (_configurationItemList != null)
			{
				listparam_configurationItemList = new java.util.ArrayList<IMendixObject>();
				for (sdemigration.proxies.ConfigurationItem obj : _configurationItemList)
					listparam_configurationItemList.add(obj.getMendixObject());
			}
			params.put("ConfigurationItemList", listparam_configurationItemList);
			Core.execute(context, "SDEMigration.IVK_ConfigurationItemsDeleteAll", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CreateAffectedCiHelpers(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SDEMigration.IVK_CreateAffectedCiHelpers", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CreateMigrationItemDB(IContext context, sdemigration.proxies.MigrationJob _migrationJob)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationJob", _migrationJob == null ? null : _migrationJob.getMendixObject());
			Core.execute(context, "SDEMigration.IVK_CreateMigrationItemDB", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CreateMigrationItemMF(IContext context, sdemigration.proxies.MigrationJob _migrationJob)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationJob", _migrationJob == null ? null : _migrationJob.getMendixObject());
			Core.execute(context, "SDEMigration.IVK_CreateMigrationItemMF", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CriticaliyInterrelationshipDeleteAll(IContext context, java.util.List<sdemigration.proxies.CriticaliyInterrelationship> _criticaliyInterrelationship)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_criticaliyInterrelationship = null;
			if (_criticaliyInterrelationship != null)
			{
				listparam_criticaliyInterrelationship = new java.util.ArrayList<IMendixObject>();
				for (sdemigration.proxies.CriticaliyInterrelationship obj : _criticaliyInterrelationship)
					listparam_criticaliyInterrelationship.add(obj.getMendixObject());
			}
			params.put("CriticaliyInterrelationship", listparam_criticaliyInterrelationship);
			Core.execute(context, "SDEMigration.IVK_CriticaliyInterrelationshipDeleteAll", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DeleteMigratedAudit(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SDEMigration.IVK_DeleteMigratedAudit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DeleteMigratedCIAttibutes(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SDEMigration.IVK_DeleteMigratedCIAttibutes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DeleteMigratedCIPersons(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SDEMigration.IVK_DeleteMigratedCIPersons", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DeleteMigratedCIs(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SDEMigration.IVK_DeleteMigratedCIs", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DeleteMigratedCMDBRelations(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SDEMigration.IVK_DeleteMigratedCMDBRelations", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DeleteMigratedCMDBType(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SDEMigration.IVK_DeleteMigratedCMDBType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DeleteMigratedRequestAttachment(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SDEMigration.IVK_DeleteMigratedRequestAttachment", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DeleteMigratedRequests(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SDEMigration.IVK_DeleteMigratedRequests", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ExecMigrationUpdate(IContext context, sdemigration.proxies.MigrationUpdate _migrationUpdate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationUpdate", _migrationUpdate == null ? null : _migrationUpdate.getMendixObject());
			Core.execute(context, "SDEMigration.IVK_ExecMigrationUpdate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ExecuteMigrationProcessCleanUp(IContext context, sdemigration.proxies.MigrationTicketCleanUp _migrationTicketCleanUp)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationTicketCleanUp", _migrationTicketCleanUp == null ? null : _migrationTicketCleanUp.getMendixObject());
			Core.execute(context, "SDEMigration.IVK_ExecuteMigrationProcessCleanUp", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_HistoricalIncidentsDeleteAll(IContext context, java.util.List<sdemigration.proxies.HistoricalIncidents> _incidents)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_incidents = null;
			if (_incidents != null)
			{
				listparam_incidents = new java.util.ArrayList<IMendixObject>();
				for (sdemigration.proxies.HistoricalIncidents obj : _incidents)
					listparam_incidents.add(obj.getMendixObject());
			}
			params.put("Incidents", listparam_incidents);
			Core.execute(context, "SDEMigration.IVK_HistoricalIncidentsDeleteAll", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_HistoricalWorkordersDeleteAll(IContext context, java.util.List<sdemigration.proxies.HistoricalWorkorders> _workorders)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_workorders = null;
			if (_workorders != null)
			{
				listparam_workorders = new java.util.ArrayList<IMendixObject>();
				for (sdemigration.proxies.HistoricalWorkorders obj : _workorders)
					listparam_workorders.add(obj.getMendixObject());
			}
			params.put("Workorders", listparam_workorders);
			Core.execute(context, "SDEMigration.IVK_HistoricalWorkordersDeleteAll", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_IncidentDeleteAll(IContext context, java.util.List<sdemigration.proxies.Incident> _incidents)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_incidents = null;
			if (_incidents != null)
			{
				listparam_incidents = new java.util.ArrayList<IMendixObject>();
				for (sdemigration.proxies.Incident obj : _incidents)
					listparam_incidents.add(obj.getMendixObject());
			}
			params.put("Incidents", listparam_incidents);
			Core.execute(context, "SDEMigration.IVK_IncidentDeleteAll", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenAssociatedInterfaceMessage(IContext context, java.util.List<sdemigration.proxies.SDEObject> _sDEObjectList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_sDEObjectList = null;
			if (_sDEObjectList != null)
			{
				listparam_sDEObjectList = new java.util.ArrayList<IMendixObject>();
				for (sdemigration.proxies.SDEObject obj : _sDEObjectList)
					listparam_sDEObjectList.add(obj.getMendixObject());
			}
			params.put("SDEObjectList", listparam_sDEObjectList);
			Core.execute(context, "SDEMigration.IVK_OpenAssociatedInterfaceMessage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenCleanUpPanel(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SDEMigration.IVK_OpenCleanUpPanel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenUpdatePanel(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SDEMigration.IVK_OpenUpdatePanel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ProblemDeleteAll(IContext context, java.util.List<sdemigration.proxies.Problem> _problems)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_problems = null;
			if (_problems != null)
			{
				listparam_problems = new java.util.ArrayList<IMendixObject>();
				for (sdemigration.proxies.Problem obj : _problems)
					listparam_problems.add(obj.getMendixObject());
			}
			params.put("Problems", listparam_problems);
			Core.execute(context, "SDEMigration.IVK_ProblemDeleteAll", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ProcessAssemblyAffectedUser(IContext context, sdemigration.proxies.AssemblyAffectedUser _assemblyAffectedUser)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AssemblyAffectedUser", _assemblyAffectedUser == null ? null : _assemblyAffectedUser.getMendixObject());
			Core.execute(context, "SDEMigration.IVK_ProcessAssemblyAffectedUser", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ProcessAttachment(IContext context, sdemigration.proxies.Attachment _attachment)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Attachment", _attachment == null ? null : _attachment.getMendixObject());
			Core.execute(context, "SDEMigration.IVK_ProcessAttachment", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ProcessAttachmentICT(IContext context, sdemigration.proxies.AttachmentICT _attachment)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Attachment", _attachment == null ? null : _attachment.getMendixObject());
			Core.execute(context, "SDEMigration.IVK_ProcessAttachmentICT", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ProcessChange(IContext context, sdemigration.proxies.Change _change)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Change", _change == null ? null : _change.getMendixObject());
			Core.execute(context, "SDEMigration.IVK_ProcessChange", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ProcessChangeIct(IContext context, sdemigration.proxies.ChangeICT _change)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Change", _change == null ? null : _change.getMendixObject());
			Core.execute(context, "SDEMigration.IVK_ProcessChangeIct", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ProcessCI(IContext context, sdemigration.proxies.ConfigurationItem _cI)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CI", _cI == null ? null : _cI.getMendixObject());
			Core.execute(context, "SDEMigration.IVK_ProcessCI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ProcessCI_ICT(IContext context, sdemigration.proxies.ConfigurationItemICT _cI)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CI", _cI == null ? null : _cI.getMendixObject());
			Core.execute(context, "SDEMigration.IVK_ProcessCI_ICT", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ProcessCIAssembly(IContext context, sdemigration.proxies.CIAssembly _cIAssembly)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CIAssembly", _cIAssembly == null ? null : _cIAssembly.getMendixObject());
			Core.execute(context, "SDEMigration.IVK_ProcessCIAssembly", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ProcessCICatalogPart(IContext context, sdemigration.proxies.CICatalogPart _cICatalogPart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CICatalogPart", _cICatalogPart == null ? null : _cICatalogPart.getMendixObject());
			Core.execute(context, "SDEMigration.IVK_ProcessCICatalogPart", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ProcessCICategories(IContext context, sdemigration.proxies.CICategory _cICategory)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CICategory", _cICategory == null ? null : _cICategory.getMendixObject());
			Core.execute(context, "SDEMigration.IVK_ProcessCICategories", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ProcessCILocation(IContext context, sdemigration.proxies.CILocation _cILocation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CILocation", _cILocation == null ? null : _cILocation.getMendixObject());
			Core.execute(context, "SDEMigration.IVK_ProcessCILocation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ProcessCIOrganisationICT(IContext context, sdemigration.proxies.CIOrganisationICT _cIOrganisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CIOrganisation", _cIOrganisation == null ? null : _cIOrganisation.getMendixObject());
			Core.execute(context, "SDEMigration.IVK_ProcessCIOrganisationICT", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ProcessCIPersonICT(IContext context, sdemigration.proxies.CIPersonICT _cIPerson)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CIPerson", _cIPerson == null ? null : _cIPerson.getMendixObject());
			Core.execute(context, "SDEMigration.IVK_ProcessCIPersonICT", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ProcessCIRelation2ICT(IContext context, sdemigration.proxies.CIRelationICT_2 _cIRelation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CIRelation", _cIRelation == null ? null : _cIRelation.getMendixObject());
			Core.execute(context, "SDEMigration.IVK_ProcessCIRelation2ICT", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ProcessCIRelationICT(IContext context, sdemigration.proxies.CIRelationICT _cIRelation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CIRelation", _cIRelation == null ? null : _cIRelation.getMendixObject());
			Core.execute(context, "SDEMigration.IVK_ProcessCIRelationICT", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ProcessCISystem(IContext context, sdemigration.proxies.CISystem _cISystem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CISystem", _cISystem == null ? null : _cISystem.getMendixObject());
			Core.execute(context, "SDEMigration.IVK_ProcessCISystem", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ProcessCIType(IContext context, sdemigration.proxies.CIType _cIType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CIType", _cIType == null ? null : _cIType.getMendixObject());
			Core.execute(context, "SDEMigration.IVK_ProcessCIType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ProcessCriticaliyInterrelationship(IContext context, sdemigration.proxies.CriticaliyInterrelationship _criticaliyInterrelationship)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CriticaliyInterrelationship", _criticaliyInterrelationship == null ? null : _criticaliyInterrelationship.getMendixObject());
			Core.execute(context, "SDEMigration.IVK_ProcessCriticaliyInterrelationship", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ProcessIncident(IContext context, sdemigration.proxies.Incident _incident)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Incident", _incident == null ? null : _incident.getMendixObject());
			Core.execute(context, "SDEMigration.IVK_ProcessIncident", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ProcessProblem(IContext context, sdemigration.proxies.Problem _problem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Problem", _problem == null ? null : _problem.getMendixObject());
			Core.execute(context, "SDEMigration.IVK_ProcessProblem", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ProcessRelationChangeProblem(IContext context, sdemigration.proxies.RelationChangeProblem _relationChangeProblem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RelationChangeProblem", _relationChangeProblem == null ? null : _relationChangeProblem.getMendixObject());
			Core.execute(context, "SDEMigration.IVK_ProcessRelationChangeProblem", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ProcessRiskAssessment(IContext context, sdemigration.proxies.RiskAssessment _riskAssessment)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RiskAssessment", _riskAssessment == null ? null : _riskAssessment.getMendixObject());
			Core.execute(context, "SDEMigration.IVK_ProcessRiskAssessment", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ProcessServiceRequestIct(IContext context, sdemigration.proxies.ServiceRequestICT _serviceRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ServiceRequest", _serviceRequest == null ? null : _serviceRequest.getMendixObject());
			Core.execute(context, "SDEMigration.IVK_ProcessServiceRequestIct", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ProcessSupposedSystem(IContext context, sdemigration.proxies.SupposedSystem _supposedSystem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SupposedSystem", _supposedSystem == null ? null : _supposedSystem.getMendixObject());
			Core.execute(context, "SDEMigration.IVK_ProcessSupposedSystem", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ProcessVendor(IContext context, sdemigration.proxies.Vendor _vendor)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Vendor", _vendor == null ? null : _vendor.getMendixObject());
			Core.execute(context, "SDEMigration.IVK_ProcessVendor", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ProcessWorkorder(IContext context, sdemigration.proxies.Workorder _workorder)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Workorder", _workorder == null ? null : _workorder.getMendixObject());
			Core.execute(context, "SDEMigration.IVK_ProcessWorkorder", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ProcessWorkorderIct(IContext context, sdemigration.proxies.WorkorderICT _workorder)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Workorder", _workorder == null ? null : _workorder.getMendixObject());
			Core.execute(context, "SDEMigration.IVK_ProcessWorkorderIct", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RelationChangeProblemDeleteAll(IContext context, java.util.List<sdemigration.proxies.RelationChangeProblem> _relationChangeProblem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_relationChangeProblem = null;
			if (_relationChangeProblem != null)
			{
				listparam_relationChangeProblem = new java.util.ArrayList<IMendixObject>();
				for (sdemigration.proxies.RelationChangeProblem obj : _relationChangeProblem)
					listparam_relationChangeProblem.add(obj.getMendixObject());
			}
			params.put("RelationChangeProblem", listparam_relationChangeProblem);
			Core.execute(context, "SDEMigration.IVK_RelationChangeProblemDeleteAll", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RemoveFaultyAllowedRelations(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SDEMigration.IVK_RemoveFaultyAllowedRelations", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ResetProcessedStateChange(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SDEMigration.IVK_ResetProcessedStateChange", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ResetProcessedStateChangeICT(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SDEMigration.IVK_ResetProcessedStateChangeICT", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ResetProcessedStateIncident(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SDEMigration.IVK_ResetProcessedStateIncident", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ResetProcessedStateProblem(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SDEMigration.IVK_ResetProcessedStateProblem", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ResetProcessedStateSR_ICT(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SDEMigration.IVK_ResetProcessedStateSR_ICT", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ResetProcessedStateWO_ICT(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SDEMigration.IVK_ResetProcessedStateWO_ICT", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ResetProcessedStateWorkOrder(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SDEMigration.IVK_ResetProcessedStateWorkOrder", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RiskAssessmentDeleteAll(IContext context, java.util.List<sdemigration.proxies.RiskAssessment> _riskAssessmenrts)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_riskAssessmenrts = null;
			if (_riskAssessmenrts != null)
			{
				listparam_riskAssessmenrts = new java.util.ArrayList<IMendixObject>();
				for (sdemigration.proxies.RiskAssessment obj : _riskAssessmenrts)
					listparam_riskAssessmenrts.add(obj.getMendixObject());
			}
			params.put("RiskAssessmenrts", listparam_riskAssessmenrts);
			Core.execute(context, "SDEMigration.IVK_RiskAssessmentDeleteAll", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ServiceRequestIctDeleteAll(IContext context, java.util.List<sdemigration.proxies.ServiceRequestICT> _serviceRequests)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_serviceRequests = null;
			if (_serviceRequests != null)
			{
				listparam_serviceRequests = new java.util.ArrayList<IMendixObject>();
				for (sdemigration.proxies.ServiceRequestICT obj : _serviceRequests)
					listparam_serviceRequests.add(obj.getMendixObject());
			}
			params.put("ServiceRequests", listparam_serviceRequests);
			Core.execute(context, "SDEMigration.IVK_ServiceRequestIctDeleteAll", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SetInitialActiveValueTransitionMessages(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SDEMigration.IVK_SetInitialActiveValueTransitionMessages", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_StartRun(IContext context, sdemigration.proxies.MigrationJob _migrationJob)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationJob", _migrationJob == null ? null : _migrationJob.getMendixObject());
			Core.execute(context, "SDEMigration.IVK_StartRun", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_StartRunInBackground(IContext context, sdemigration.proxies.MigrationJob _migrationJob)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationJob", _migrationJob == null ? null : _migrationJob.getMendixObject());
			Core.execute(context, "SDEMigration.IVK_StartRunInBackground", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_UpdateOverviewRequest(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SDEMigration.IVK_UpdateOverviewRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_VendorDeleteAll(IContext context, java.util.List<sdemigration.proxies.Vendor> _vendor)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_vendor = null;
			if (_vendor != null)
			{
				listparam_vendor = new java.util.ArrayList<IMendixObject>();
				for (sdemigration.proxies.Vendor obj : _vendor)
					listparam_vendor.add(obj.getMendixObject());
			}
			params.put("Vendor", listparam_vendor);
			Core.execute(context, "SDEMigration.IVK_VendorDeleteAll", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_WorkorderIctDeleteAll(IContext context, java.util.List<sdemigration.proxies.WorkorderICT> _workorders)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_workorders = null;
			if (_workorders != null)
			{
				listparam_workorders = new java.util.ArrayList<IMendixObject>();
				for (sdemigration.proxies.WorkorderICT obj : _workorders)
					listparam_workorders.add(obj.getMendixObject());
			}
			params.put("Workorders", listparam_workorders);
			Core.execute(context, "SDEMigration.IVK_WorkorderIctDeleteAll", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_WorkordersDeleteAll(IContext context, java.util.List<sdemigration.proxies.Workorder> _workorders)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_workorders = null;
			if (_workorders != null)
			{
				listparam_workorders = new java.util.ArrayList<IMendixObject>();
				for (sdemigration.proxies.Workorder obj : _workorders)
					listparam_workorders.add(obj.getMendixObject());
			}
			params.put("Workorders", listparam_workorders);
			Core.execute(context, "SDEMigration.IVK_WorkordersDeleteAll", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.Date mCa_ATMDateTimeConversion(IContext context, java.util.Date _inputDateTime)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputDateTime", _inputDateTime);
			return (java.util.Date)Core.execute(context, "SDEMigration.MCa_ATMDateTimeConversion", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mCa_AutoCloseForClosedMail(IContext context, process.proxies.Request _request, java.util.Date _startTimeOfAutoClose)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("StartTimeOfAutoClose", _startTimeOfAutoClose);
			Core.execute(context, "SDEMigration.MCa_AutoCloseForClosedMail", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String mCa_ConvertPlainToHTML(IContext context, java.lang.String _inputString)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputString", _inputString);
			return (java.lang.String)Core.execute(context, "SDEMigration.MCa_ConvertPlainToHTML", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mCa_CorrectAffectedCIs(IContext context, java.lang.String _externalReferencePrefix)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ExternalReferencePrefix", _externalReferencePrefix);
			Core.execute(context, "SDEMigration.MCa_CorrectAffectedCIs", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long mCa_CreateAuditAsPDF(IContext context, java.lang.String _logNode, sdemigration.proxies.AuditICT _currentAudit, java.lang.String _interfaceGUID, java.lang.Long _processedCount, boolean _isICT)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LogNode", _logNode);
			params.put("CurrentAudit", _currentAudit == null ? null : _currentAudit.getMendixObject());
			params.put("InterfaceGUID", _interfaceGUID);
			params.put("ProcessedCount", _processedCount);
			params.put("IsICT", _isICT);
			return (java.lang.Long)Core.execute(context, "SDEMigration.MCa_CreateAuditAsPDF", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long mCa_CreateAuditCIAsPDF(IContext context, java.lang.String _logNode, sdemigration.proxies.AuditCIICT _currentAudit, java.lang.String _interfaceGUID, java.lang.Long _processedCount)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LogNode", _logNode);
			params.put("CurrentAudit", _currentAudit == null ? null : _currentAudit.getMendixObject());
			params.put("InterfaceGUID", _interfaceGUID);
			params.put("ProcessedCount", _processedCount);
			return (java.lang.Long)Core.execute(context, "SDEMigration.MCa_CreateAuditCIAsPDF", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mCa_DynamicAttribute(IContext context, java.lang.String _labelName, java.lang.String _value, cmdb.proxies.ConfigurationItem _cI, java.lang.String _lognode)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LabelName", _labelName);
			params.put("Value", _value);
			params.put("CI", _cI == null ? null : _cI.getMendixObject());
			params.put("Lognode", _lognode);
			Core.execute(context, "SDEMigration.MCa_DynamicAttribute", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mCa_GenerateInterfaceNote(IContext context, java.lang.String _interfaceGUID, process.proxies.Request _existingTicket, java.lang.String _noteText)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceGUID", _interfaceGUID);
			params.put("ExistingTicket", _existingTicket == null ? null : _existingTicket.getMendixObject());
			params.put("NoteText", _noteText);
			Core.execute(context, "SDEMigration.MCa_GenerateInterfaceNote", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static customlvnl.proxies.AffectedUsers mCa_GetAffectedUser(IContext context, java.lang.String _affectedUserName)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AffectedUserName", _affectedUserName);
			IMendixObject result = (IMendixObject)Core.execute(context, "SDEMigration.MCa_GetAffectedUser", params);
			return result == null ? null : customlvnl.proxies.AffectedUsers.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static sdemigration.proxies.AuditCIPDF mCa_GetAuditForCI(IContext context, java.util.List<sdemigration.proxies.AuditCIICT> _auditCIICTCommitList, sdemigration.proxies.AuditCIICT _currentAudit)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_auditCIICTCommitList = null;
			if (_auditCIICTCommitList != null)
			{
				listparam_auditCIICTCommitList = new java.util.ArrayList<IMendixObject>();
				for (sdemigration.proxies.AuditCIICT obj : _auditCIICTCommitList)
					listparam_auditCIICTCommitList.add(obj.getMendixObject());
			}
			params.put("AuditCIICTCommitList", listparam_auditCIICTCommitList);
			params.put("CurrentAudit", _currentAudit == null ? null : _currentAudit.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "SDEMigration.MCa_GetAuditForCI", params);
			return result == null ? null : sdemigration.proxies.AuditCIPDF.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static sdemigration.proxies.AuditPDF mCa_GetAuditForTicket(IContext context, java.util.List<sdemigration.proxies.AuditICT> _auditICTCommitList, sdemigration.proxies.AuditICT _currentAudit, boolean _isICT)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_auditICTCommitList = null;
			if (_auditICTCommitList != null)
			{
				listparam_auditICTCommitList = new java.util.ArrayList<IMendixObject>();
				for (sdemigration.proxies.AuditICT obj : _auditICTCommitList)
					listparam_auditICTCommitList.add(obj.getMendixObject());
			}
			params.put("AuditICTCommitList", listparam_auditICTCommitList);
			params.put("CurrentAudit", _currentAudit == null ? null : _currentAudit.getMendixObject());
			params.put("IsICT", _isICT);
			IMendixObject result = (IMendixObject)Core.execute(context, "SDEMigration.MCa_GetAuditForTicket", params);
			return result == null ? null : sdemigration.proxies.AuditPDF.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static nap.proxies.BusinessGroup mCa_GetBusinessGroup(IContext context, java.lang.String _organisationName)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OrganisationName", _organisationName);
			IMendixObject result = (IMendixObject)Core.execute(context, "SDEMigration.MCa_GetBusinessGroup", params);
			return result == null ? null : nap.proxies.BusinessGroup.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static categories.proxies.Category mCa_GetClosureCategoryByName(IContext context, java.lang.String _closureCategory, slm.proxies.ProcessType _processType, boolean _isATM)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ClosureCategory", _closureCategory);
			params.put("ProcessType", _processType == null ? null : _processType.name());
			params.put("IsATM", _isATM);
			IMendixObject result = (IMendixObject)Core.execute(context, "SDEMigration.MCa_GetClosureCategoryByName", params);
			return result == null ? null : categories.proxies.Category.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static nap.proxies.Person mCa_GetICTWorkorderAssignee(IContext context, java.lang.String _personFullName, nap.proxies.Organisation _organisation, boolean _checkOrganisationMembership)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PersonFullName", _personFullName);
			params.put("Organisation", _organisation == null ? null : _organisation.getMendixObject());
			params.put("CheckOrganisationMembership", _checkOrganisationMembership);
			IMendixObject result = (IMendixObject)Core.execute(context, "SDEMigration.MCa_GetICTWorkorderAssignee", params);
			return result == null ? null : nap.proxies.Person.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static nap.proxies.Organisation mCa_GetICTWorkorderDeliveryGroup(IContext context, interfaceconfiguration.proxies.InterfaceConfiguration _interfaceConfiguration, java.lang.String _deliveryOrganisationName)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceConfiguration", _interfaceConfiguration == null ? null : _interfaceConfiguration.getMendixObject());
			params.put("DeliveryOrganisationName", _deliveryOrganisationName);
			IMendixObject result = (IMendixObject)Core.execute(context, "SDEMigration.MCa_GetICTWorkorderDeliveryGroup", params);
			return result == null ? null : nap.proxies.Organisation.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static slm.proxies.Service_Process mCa_GetICTWorkorderServiceProcess(IContext context, interfaceconfiguration.proxies.InterfaceConfiguration _interfaceConfiguration, java.lang.String _serviceProcessName)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceConfiguration", _interfaceConfiguration == null ? null : _interfaceConfiguration.getMendixObject());
			params.put("ServiceProcessName", _serviceProcessName);
			IMendixObject result = (IMendixObject)Core.execute(context, "SDEMigration.MCa_GetICTWorkorderServiceProcess", params);
			return result == null ? null : slm.proxies.Service_Process.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static categories.proxies.Category mCa_GetOpeningCategoryByName(IContext context, java.lang.String _openingCategory, slm.proxies.ProcessType _processType, boolean _isATM)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OpeningCategory", _openingCategory);
			params.put("ProcessType", _processType == null ? null : _processType.name());
			params.put("IsATM", _isATM);
			IMendixObject result = (IMendixObject)Core.execute(context, "SDEMigration.MCa_GetOpeningCategoryByName", params);
			return result == null ? null : categories.proxies.Category.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static nap.proxies.Location mCa_GetOrCreateLocationByName(IContext context, java.lang.String _locationName)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LocationName", _locationName);
			IMendixObject result = (IMendixObject)Core.execute(context, "SDEMigration.MCa_GetOrCreateLocationByName", params);
			return result == null ? null : nap.proxies.Location.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static nap.proxies.Room mCa_GetOrCreateRoomByName(IContext context, java.lang.String _roomName, nap.proxies.Location _location)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RoomName", _roomName);
			params.put("Location", _location == null ? null : _location.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "SDEMigration.MCa_GetOrCreateRoomByName", params);
			return result == null ? null : nap.proxies.Room.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String mCa_GetRequestGUIDByProcessType(IContext context, java.lang.String _processType, java.lang.String _ticketSequence, boolean _isICT)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ProcessType", _processType);
			params.put("TicketSequence", _ticketSequence);
			params.put("IsICT", _isICT);
			return (java.lang.String)Core.execute(context, "SDEMigration.MCa_GetRequestGUIDByProcessType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String mCa_GetSDEReferenceForTimesheet(IContext context, sdemigration.proxies.RegisteredHours _registeredHours)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RegisteredHours", _registeredHours == null ? null : _registeredHours.getMendixObject());
			return (java.lang.String)Core.execute(context, "SDEMigration.MCa_GetSDEReferenceForTimesheet", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static process.proxies.Request mCa_GetTicketForAttachment(IContext context, sdemigration.proxies.AttachmentICT _attachment)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Attachment", _attachment == null ? null : _attachment.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "SDEMigration.MCa_GetTicketForAttachment", params);
			return result == null ? null : process.proxies.Request.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static process.proxies.Request mCa_GetTicketForAudit(IContext context, java.lang.String _reference)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Reference", _reference);
			IMendixObject result = (IMendixObject)Core.execute(context, "SDEMigration.MCa_GetTicketForAudit", params);
			return result == null ? null : process.proxies.Request.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String mCa_PadQRCode(IContext context, java.lang.String _qRCode)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QRCode", _qRCode);
			return (java.lang.String)Core.execute(context, "SDEMigration.MCa_PadQRCode", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static customlvnl.proxies.CIBuilding mCa_ProcessCIBuilding(IContext context, sdemigration.proxies.CILocation _cILocationSDE)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CILocationSDE", _cILocationSDE == null ? null : _cILocationSDE.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "SDEMigration.MCa_ProcessCIBuilding", params);
			return result == null ? null : customlvnl.proxies.CIBuilding.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static customlvnl.proxies.CIRoom mCa_ProcessCIRoom(IContext context, sdemigration.proxies.CILocation _cILocationSDE)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CILocationSDE", _cILocationSDE == null ? null : _cILocationSDE.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "SDEMigration.MCa_ProcessCIRoom", params);
			return result == null ? null : customlvnl.proxies.CIRoom.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mCa_RemoveFaultyAssemblySystemRelation(IContext context, cmdb.proxies.ConfigurationItem _configurationItemParent, cmdb.proxies.ConfigurationItem _configurationItemChild, cmdb.proxies.CMDBType _cMDBTypeChild)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ConfigurationItemParent", _configurationItemParent == null ? null : _configurationItemParent.getMendixObject());
			params.put("ConfigurationItemChild", _configurationItemChild == null ? null : _configurationItemChild.getMendixObject());
			params.put("CMDBTypeChild", _cMDBTypeChild == null ? null : _cMDBTypeChild.getMendixObject());
			Core.execute(context, "SDEMigration.MCa_RemoveFaultyAssemblySystemRelation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mCa_SetAdministratorGroup(IContext context, sdemigration.proxies.ConfigurationItemICT _configurationItemSDE, cmdb.proxies.ConfigurationItem _configurationItem, cmdb.proxies.CMDBType _cMDBType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ConfigurationItemSDE", _configurationItemSDE == null ? null : _configurationItemSDE.getMendixObject());
			params.put("ConfigurationItem", _configurationItem == null ? null : _configurationItem.getMendixObject());
			params.put("CMDBType", _cMDBType == null ? null : _cMDBType.getMendixObject());
			Core.execute(context, "SDEMigration.MCa_SetAdministratorGroup", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mCa_SetAsScreenblockAttribute(IContext context, java.lang.String _attributeName, java.lang.String _lognode, process.proxies.Request _request, java.lang.String _value_String, boolean _value_Boolean, java.util.Date _value_DateTime, java.lang.Double _value_Float, java.lang.Long _value_Int)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AttributeName", _attributeName);
			params.put("Lognode", _lognode);
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Value_String", _value_String);
			params.put("Value_Boolean", _value_Boolean);
			params.put("Value_DateTime", _value_DateTime);
			params.put("Value_Float", _value_Float);
			params.put("Value_Int", _value_Int);
			Core.execute(context, "SDEMigration.MCa_SetAsScreenblockAttribute", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mCa_SetManufacturer(IContext context, java.util.List<cmdb.proxies.CIPersons_TypeDefault> _cIPersonsList, cmdb.proxies.CMDBType _cMDBType, sdemigration.proxies.CIType _cIType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_cIPersonsList = null;
			if (_cIPersonsList != null)
			{
				listparam_cIPersonsList = new java.util.ArrayList<IMendixObject>();
				for (cmdb.proxies.CIPersons_TypeDefault obj : _cIPersonsList)
					listparam_cIPersonsList.add(obj.getMendixObject());
			}
			params.put("CIPersonsList", listparam_cIPersonsList);
			params.put("CMDBType", _cMDBType == null ? null : _cMDBType.getMendixObject());
			params.put("CIType", _cIType == null ? null : _cIType.getMendixObject());
			Core.execute(context, "SDEMigration.MCa_SetManufacturer", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mCa_SetOwner(IContext context, sdemigration.proxies.ConfigurationItemICT _configurationItemSDE, cmdb.proxies.ConfigurationItem _configurationItem, cmdb.proxies.CMDBType _cMDBType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ConfigurationItemSDE", _configurationItemSDE == null ? null : _configurationItemSDE.getMendixObject());
			params.put("ConfigurationItem", _configurationItem == null ? null : _configurationItem.getMendixObject());
			params.put("CMDBType", _cMDBType == null ? null : _cMDBType.getMendixObject());
			Core.execute(context, "SDEMigration.MCa_SetOwner", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mCa_SetSales(IContext context, sdemigration.proxies.CIType _cIType, cmdb.proxies.CMDBType _cMDBType, java.util.List<cmdb.proxies.CIPersons_TypeDefault> _cIPersonsList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CIType", _cIType == null ? null : _cIType.getMendixObject());
			params.put("CMDBType", _cMDBType == null ? null : _cMDBType.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_cIPersonsList = null;
			if (_cIPersonsList != null)
			{
				listparam_cIPersonsList = new java.util.ArrayList<IMendixObject>();
				for (cmdb.proxies.CIPersons_TypeDefault obj : _cIPersonsList)
					listparam_cIPersonsList.add(obj.getMendixObject());
			}
			params.put("CIPersonsList", listparam_cIPersonsList);
			Core.execute(context, "SDEMigration.MCa_SetSales", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mCa_SetServiceVendor(IContext context, sdemigration.proxies.CIType _cIType, cmdb.proxies.CMDBType _cMDBType, java.util.List<cmdb.proxies.CIPersons_TypeDefault> _cIPersonsList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CIType", _cIType == null ? null : _cIType.getMendixObject());
			params.put("CMDBType", _cMDBType == null ? null : _cMDBType.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_cIPersonsList = null;
			if (_cIPersonsList != null)
			{
				listparam_cIPersonsList = new java.util.ArrayList<IMendixObject>();
				for (cmdb.proxies.CIPersons_TypeDefault obj : _cIPersonsList)
					listparam_cIPersonsList.add(obj.getMendixObject());
			}
			params.put("CIPersonsList", listparam_cIPersonsList);
			Core.execute(context, "SDEMigration.MCa_SetServiceVendor", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mCa_SetSupplier(IContext context, sdemigration.proxies.ConfigurationItemICT _configurationItemSDE, cmdb.proxies.ConfigurationItem _newConfigurationItem, cmdb.proxies.CMDBType _cMDBType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ConfigurationItemSDE", _configurationItemSDE == null ? null : _configurationItemSDE.getMendixObject());
			params.put("NewConfigurationItem", _newConfigurationItem == null ? null : _newConfigurationItem.getMendixObject());
			params.put("CMDBType", _cMDBType == null ? null : _cMDBType.getMendixObject());
			Core.execute(context, "SDEMigration.MCa_SetSupplier", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mCa_SetWorkOrderUserAffected(IContext context, cmdb.proxies.ConfigurationItem _assemblyCI, process.proxies.Request _request, java.lang.String _lognode)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AssemblyCI", _assemblyCI == null ? null : _assemblyCI.getMendixObject());
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Lognode", _lognode);
			Core.execute(context, "SDEMigration.MCa_SetWorkOrderUserAffected", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long mCa_SkipTicketAudit(IContext context, sdemigration.proxies.AuditICT _currentAudit)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CurrentAudit", _currentAudit == null ? null : _currentAudit.getMendixObject());
			return (java.lang.Long)Core.execute(context, "SDEMigration.MCa_SkipTicketAudit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long mCa_UpdateAuditCIPDF(IContext context, sdemigration.proxies.AuditCIICT _currentAudit, cmdb.proxies.CMDBAttachment _attachment, java.lang.String _logNode)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CurrentAudit", _currentAudit == null ? null : _currentAudit.getMendixObject());
			params.put("Attachment", _attachment == null ? null : _attachment.getMendixObject());
			params.put("LogNode", _logNode);
			return (java.lang.Long)Core.execute(context, "SDEMigration.MCa_UpdateAuditCIPDF", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long mCa_UpdateAuditPDF(IContext context, sdemigration.proxies.AuditICT _currentAudit, process.proxies.RequestAttachment _requestAttachment, java.lang.String _logNode, boolean _isICT)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CurrentAudit", _currentAudit == null ? null : _currentAudit.getMendixObject());
			params.put("RequestAttachment", _requestAttachment == null ? null : _requestAttachment.getMendixObject());
			params.put("LogNode", _logNode);
			params.put("IsICT", _isICT);
			return (java.lang.Long)Core.execute(context, "SDEMigration.MCa_UpdateAuditPDF", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mCa_UpdatePositions(IContext context, java.util.List<cmdb.proxies.CIDefinitionAttribute> _commitList, cmdb.proxies.CMDBType _cMDBType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_commitList = null;
			if (_commitList != null)
			{
				listparam_commitList = new java.util.ArrayList<IMendixObject>();
				for (cmdb.proxies.CIDefinitionAttribute obj : _commitList)
					listparam_commitList.add(obj.getMendixObject());
			}
			params.put("CommitList", listparam_commitList);
			params.put("CMDBType", _cMDBType == null ? null : _cMDBType.getMendixObject());
			Core.execute(context, "SDEMigration.MCa_UpdatePositions", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mCa_UpdateTicketDynamicAttribute(IContext context, process.proxies.Request _request, java.lang.String _lognode, sdemigration.proxies.MigrationItemRun _migrationItemRun, java.lang.String _dynamicAttributeName, java.lang.String _value, java.util.List<process.proxies.DynamicAtrribute> _dynamicAtrributeList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("Lognode", _lognode);
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			params.put("DynamicAttributeName", _dynamicAttributeName);
			params.put("Value", _value);
			java.util.ArrayList<IMendixObject> listparam_dynamicAtrributeList = null;
			if (_dynamicAtrributeList != null)
			{
				listparam_dynamicAtrributeList = new java.util.ArrayList<IMendixObject>();
				for (process.proxies.DynamicAtrribute obj : _dynamicAtrributeList)
					listparam_dynamicAtrributeList.add(obj.getMendixObject());
			}
			params.put("DynamicAtrributeList", listparam_dynamicAtrributeList);
			Core.execute(context, "SDEMigration.MCa_UpdateTicketDynamicAttribute", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void process_Set_PosInfo(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.Process_Set_PosInfo", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processAllAuditATM(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessAllAuditATM", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processAllAuditICT_2(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessAllAuditICT_2", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processAllCIAuditICT(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessAllCIAuditICT", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processAssemblyAffectedUser(IContext context, java.lang.String _lognode, java.util.List<sdemigration.proxies.AssemblyAffectedUser> _assemblyAffectedUserCommitList, sdemigration.proxies.AssemblyAffectedUser _assemblyAffectedUser, sdemigration.proxies.MigrationItemRun _migrationItemRun, boolean _updateObject, java.util.List<cmdb.proxies.ConfigurationItem> _cICommitList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Lognode", _lognode);
			java.util.ArrayList<IMendixObject> listparam_assemblyAffectedUserCommitList = null;
			if (_assemblyAffectedUserCommitList != null)
			{
				listparam_assemblyAffectedUserCommitList = new java.util.ArrayList<IMendixObject>();
				for (sdemigration.proxies.AssemblyAffectedUser obj : _assemblyAffectedUserCommitList)
					listparam_assemblyAffectedUserCommitList.add(obj.getMendixObject());
			}
			params.put("AssemblyAffectedUserCommitList", listparam_assemblyAffectedUserCommitList);
			params.put("AssemblyAffectedUser", _assemblyAffectedUser == null ? null : _assemblyAffectedUser.getMendixObject());
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			params.put("UpdateObject", _updateObject);
			java.util.ArrayList<IMendixObject> listparam_cICommitList = null;
			if (_cICommitList != null)
			{
				listparam_cICommitList = new java.util.ArrayList<IMendixObject>();
				for (cmdb.proxies.ConfigurationItem obj : _cICommitList)
					listparam_cICommitList.add(obj.getMendixObject());
			}
			params.put("CICommitList", listparam_cICommitList);
			Core.execute(context, "SDEMigration.ProcessAssemblyAffectedUser", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processAssemblyAffectedUsers(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessAssemblyAffectedUsers", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processATMReleaseDateCorrections(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessATMReleaseDateCorrections", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processAttachment(IContext context, java.lang.String _lognode, boolean _updateObject, sdemigration.proxies.Attachment _attachment, java.util.List<cmdb.proxies.CMDBAttachment> _cMDBAttachmentList, sdemigration.proxies.MigrationItemRun _migrationItemRun, java.util.List<process.proxies.RequestAttachment> _requestAttachmentList, java.util.List<cmdb.proxies.CMDBTypeAttachments> _cMDBTypeAttachmentsList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Lognode", _lognode);
			params.put("UpdateObject", _updateObject);
			params.put("Attachment", _attachment == null ? null : _attachment.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_cMDBAttachmentList = null;
			if (_cMDBAttachmentList != null)
			{
				listparam_cMDBAttachmentList = new java.util.ArrayList<IMendixObject>();
				for (cmdb.proxies.CMDBAttachment obj : _cMDBAttachmentList)
					listparam_cMDBAttachmentList.add(obj.getMendixObject());
			}
			params.put("CMDBAttachmentList", listparam_cMDBAttachmentList);
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_requestAttachmentList = null;
			if (_requestAttachmentList != null)
			{
				listparam_requestAttachmentList = new java.util.ArrayList<IMendixObject>();
				for (process.proxies.RequestAttachment obj : _requestAttachmentList)
					listparam_requestAttachmentList.add(obj.getMendixObject());
			}
			params.put("RequestAttachmentList", listparam_requestAttachmentList);
			java.util.ArrayList<IMendixObject> listparam_cMDBTypeAttachmentsList = null;
			if (_cMDBTypeAttachmentsList != null)
			{
				listparam_cMDBTypeAttachmentsList = new java.util.ArrayList<IMendixObject>();
				for (cmdb.proxies.CMDBTypeAttachments obj : _cMDBTypeAttachmentsList)
					listparam_cMDBTypeAttachmentsList.add(obj.getMendixObject());
			}
			params.put("CMDBTypeAttachmentsList", listparam_cMDBTypeAttachmentsList);
			Core.execute(context, "SDEMigration.ProcessAttachment", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processAttachmentICT(IContext context, java.lang.String _lognode, boolean _updateObject, sdemigration.proxies.AttachmentICT _attachment, java.util.List<cmdb.proxies.CMDBAttachment> _cMDBAttachmentList, sdemigration.proxies.MigrationItemRun _migrationItemRun, java.util.List<process.proxies.RequestAttachment> _requestAttachmentList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Lognode", _lognode);
			params.put("UpdateObject", _updateObject);
			params.put("Attachment", _attachment == null ? null : _attachment.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_cMDBAttachmentList = null;
			if (_cMDBAttachmentList != null)
			{
				listparam_cMDBAttachmentList = new java.util.ArrayList<IMendixObject>();
				for (cmdb.proxies.CMDBAttachment obj : _cMDBAttachmentList)
					listparam_cMDBAttachmentList.add(obj.getMendixObject());
			}
			params.put("CMDBAttachmentList", listparam_cMDBAttachmentList);
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_requestAttachmentList = null;
			if (_requestAttachmentList != null)
			{
				listparam_requestAttachmentList = new java.util.ArrayList<IMendixObject>();
				for (process.proxies.RequestAttachment obj : _requestAttachmentList)
					listparam_requestAttachmentList.add(obj.getMendixObject());
			}
			params.put("RequestAttachmentList", listparam_requestAttachmentList);
			Core.execute(context, "SDEMigration.ProcessAttachmentICT", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processAttachments(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessAttachments", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processAttachmentsICT(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessAttachmentsICT", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processChange(IContext context, java.lang.String _lognode, boolean _updateObject, sdemigration.proxies.Change _change, java.util.List<process.proxies.Request> _requestList, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Lognode", _lognode);
			params.put("UpdateObject", _updateObject);
			params.put("Change", _change == null ? null : _change.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_requestList = null;
			if (_requestList != null)
			{
				listparam_requestList = new java.util.ArrayList<IMendixObject>();
				for (process.proxies.Request obj : _requestList)
					listparam_requestList.add(obj.getMendixObject());
			}
			params.put("RequestList", listparam_requestList);
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessChange", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processChangeIct(IContext context, java.lang.String _lognode, boolean _updateObject, sdemigration.proxies.ChangeICT _change, java.util.List<process.proxies.Request> _requestList, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Lognode", _lognode);
			params.put("UpdateObject", _updateObject);
			params.put("Change", _change == null ? null : _change.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_requestList = null;
			if (_requestList != null)
			{
				listparam_requestList = new java.util.ArrayList<IMendixObject>();
				for (process.proxies.Request obj : _requestList)
					listparam_requestList.add(obj.getMendixObject());
			}
			params.put("RequestList", listparam_requestList);
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessChangeIct", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processChangeIct_ContractEndTime(IContext context, java.lang.String _lognode, boolean _updateObject, sdemigration.proxies.ChangeICT _change, java.util.List<process.proxies.Request> _requestList, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Lognode", _lognode);
			params.put("UpdateObject", _updateObject);
			params.put("Change", _change == null ? null : _change.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_requestList = null;
			if (_requestList != null)
			{
				listparam_requestList = new java.util.ArrayList<IMendixObject>();
				for (process.proxies.Request obj : _requestList)
					listparam_requestList.add(obj.getMendixObject());
			}
			params.put("RequestList", listparam_requestList);
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessChangeIct_ContractEndTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processChanges(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessChanges", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processChangesIct(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessChangesIct", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processChangesIct_ContractEndTime(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessChangesIct_ContractEndTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processCIAssemblies(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessCIAssemblies", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processCIAssembly(IContext context, java.lang.String _lognode, boolean _updateObject, sdemigration.proxies.CIAssembly _cIAssembly, java.util.List<cmdb.proxies.ConfigurationItem> _cIList, java.util.List<notes.proxies.Note> _noteList, sdemigration.proxies.MigrationItemRun _migrationItemRun, java.util.List<cmdb.proxies.CMDBRelation> _cMDBRelationList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Lognode", _lognode);
			params.put("UpdateObject", _updateObject);
			params.put("CIAssembly", _cIAssembly == null ? null : _cIAssembly.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_cIList = null;
			if (_cIList != null)
			{
				listparam_cIList = new java.util.ArrayList<IMendixObject>();
				for (cmdb.proxies.ConfigurationItem obj : _cIList)
					listparam_cIList.add(obj.getMendixObject());
			}
			params.put("CIList", listparam_cIList);
			java.util.ArrayList<IMendixObject> listparam_noteList = null;
			if (_noteList != null)
			{
				listparam_noteList = new java.util.ArrayList<IMendixObject>();
				for (notes.proxies.Note obj : _noteList)
					listparam_noteList.add(obj.getMendixObject());
			}
			params.put("NoteList", listparam_noteList);
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_cMDBRelationList = null;
			if (_cMDBRelationList != null)
			{
				listparam_cMDBRelationList = new java.util.ArrayList<IMendixObject>();
				for (cmdb.proxies.CMDBRelation obj : _cMDBRelationList)
					listparam_cMDBRelationList.add(obj.getMendixObject());
			}
			params.put("CMDBRelationList", listparam_cMDBRelationList);
			Core.execute(context, "SDEMigration.ProcessCIAssembly", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processCICatalogPart(IContext context, java.lang.String _lognode, boolean _updateObject, sdemigration.proxies.CICatalogPart _cICatalogPart, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Lognode", _lognode);
			params.put("UpdateObject", _updateObject);
			params.put("CICatalogPart", _cICatalogPart == null ? null : _cICatalogPart.getMendixObject());
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessCICatalogPart", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processCICatalogParts(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessCICatalogParts", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processCICategories(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessCICategories", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processCICategory(IContext context, java.lang.String _lognode, boolean _updateObject, sdemigration.proxies.CICategory _cICategory, java.util.List<categories_cmdb.proxies.Category> _categoryList, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Lognode", _lognode);
			params.put("UpdateObject", _updateObject);
			params.put("CICategory", _cICategory == null ? null : _cICategory.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_categoryList = null;
			if (_categoryList != null)
			{
				listparam_categoryList = new java.util.ArrayList<IMendixObject>();
				for (categories_cmdb.proxies.Category obj : _categoryList)
					listparam_categoryList.add(obj.getMendixObject());
			}
			params.put("CategoryList", listparam_categoryList);
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessCICategory", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processCIComponent(IContext context, java.lang.String _lognode, boolean _updateObject, sdemigration.proxies.CIComponents _cIComponent, sdemigration.proxies.MigrationItemRun _migrationItemRun, java.util.List<cmdb.proxies.CMDBRelation> _cMDBRelationList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Lognode", _lognode);
			params.put("UpdateObject", _updateObject);
			params.put("CIComponent", _cIComponent == null ? null : _cIComponent.getMendixObject());
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_cMDBRelationList = null;
			if (_cMDBRelationList != null)
			{
				listparam_cMDBRelationList = new java.util.ArrayList<IMendixObject>();
				for (cmdb.proxies.CMDBRelation obj : _cMDBRelationList)
					listparam_cMDBRelationList.add(obj.getMendixObject());
			}
			params.put("CMDBRelationList", listparam_cMDBRelationList);
			Core.execute(context, "SDEMigration.ProcessCIComponent", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processCIComponents(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessCIComponents", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processCILocation(IContext context, java.lang.String _lognode, boolean _updateObject, sdemigration.proxies.CILocation _cILocationSDE, java.util.List<customlvnl.proxies.CILocation> _cILocationList, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Lognode", _lognode);
			params.put("UpdateObject", _updateObject);
			params.put("CILocationSDE", _cILocationSDE == null ? null : _cILocationSDE.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_cILocationList = null;
			if (_cILocationList != null)
			{
				listparam_cILocationList = new java.util.ArrayList<IMendixObject>();
				for (customlvnl.proxies.CILocation obj : _cILocationList)
					listparam_cILocationList.add(obj.getMendixObject());
			}
			params.put("CILocationList", listparam_cILocationList);
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessCILocation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processCILocations(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessCILocations", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processCINode(IContext context, java.util.List<customlvnl.proxies.Node> _nodeList, sdemigration.proxies.CINode _cINode, java.util.List<sdemigration.proxies.CINode> _cINodeList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_nodeList = null;
			if (_nodeList != null)
			{
				listparam_nodeList = new java.util.ArrayList<IMendixObject>();
				for (customlvnl.proxies.Node obj : _nodeList)
					listparam_nodeList.add(obj.getMendixObject());
			}
			params.put("NodeList", listparam_nodeList);
			params.put("CINode", _cINode == null ? null : _cINode.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_cINodeList = null;
			if (_cINodeList != null)
			{
				listparam_cINodeList = new java.util.ArrayList<IMendixObject>();
				for (sdemigration.proxies.CINode obj : _cINodeList)
					listparam_cINodeList.add(obj.getMendixObject());
			}
			params.put("CINodeList", listparam_cINodeList);
			Core.execute(context, "SDEMigration.ProcessCINode", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processCINodes(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessCINodes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processCIOrganisationICT(IContext context, java.lang.String _lognode, boolean _updateObject, sdemigration.proxies.CIOrganisationICT _cIOrganisation, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Lognode", _lognode);
			params.put("UpdateObject", _updateObject);
			params.put("CIOrganisation", _cIOrganisation == null ? null : _cIOrganisation.getMendixObject());
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessCIOrganisationICT", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processCIOrganisationsICT(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessCIOrganisationsICT", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processCIPersonICT(IContext context, java.lang.String _lognode, boolean _updateObject, sdemigration.proxies.CIPersonICT _cIPerson, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Lognode", _lognode);
			params.put("UpdateObject", _updateObject);
			params.put("CIPerson", _cIPerson == null ? null : _cIPerson.getMendixObject());
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessCIPersonICT", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processCIPersonsICT(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessCIPersonsICT", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processCIRelation2ICT(IContext context, java.lang.String _lognode, boolean _updateObject, sdemigration.proxies.CIRelationICT_2 _cIRelation, java.util.List<cmdb.proxies.CMDBRelation> _cMDBRelationList, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Lognode", _lognode);
			params.put("UpdateObject", _updateObject);
			params.put("CIRelation", _cIRelation == null ? null : _cIRelation.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_cMDBRelationList = null;
			if (_cMDBRelationList != null)
			{
				listparam_cMDBRelationList = new java.util.ArrayList<IMendixObject>();
				for (cmdb.proxies.CMDBRelation obj : _cMDBRelationList)
					listparam_cMDBRelationList.add(obj.getMendixObject());
			}
			params.put("CMDBRelationList", listparam_cMDBRelationList);
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessCIRelation2ICT", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processCIRelationICT(IContext context, java.lang.String _lognode, boolean _updateObject, sdemigration.proxies.CIRelationICT _cIRelation, java.util.List<cmdb.proxies.CMDBRelation> _cMDBRelationList, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Lognode", _lognode);
			params.put("UpdateObject", _updateObject);
			params.put("CIRelation", _cIRelation == null ? null : _cIRelation.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_cMDBRelationList = null;
			if (_cMDBRelationList != null)
			{
				listparam_cMDBRelationList = new java.util.ArrayList<IMendixObject>();
				for (cmdb.proxies.CMDBRelation obj : _cMDBRelationList)
					listparam_cMDBRelationList.add(obj.getMendixObject());
			}
			params.put("CMDBRelationList", listparam_cMDBRelationList);
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessCIRelationICT", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processCIRelations2ICT(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessCIRelations2ICT", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processCIRelationsICT(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessCIRelationsICT", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processCISystem(IContext context, java.lang.String _lognode, boolean _updateObject, sdemigration.proxies.CISystem _cISystem, java.util.List<cmdb.proxies.ConfigurationItem> _cIList, java.util.List<notes.proxies.Note> _noteList, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Lognode", _lognode);
			params.put("UpdateObject", _updateObject);
			params.put("CISystem", _cISystem == null ? null : _cISystem.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_cIList = null;
			if (_cIList != null)
			{
				listparam_cIList = new java.util.ArrayList<IMendixObject>();
				for (cmdb.proxies.ConfigurationItem obj : _cIList)
					listparam_cIList.add(obj.getMendixObject());
			}
			params.put("CIList", listparam_cIList);
			java.util.ArrayList<IMendixObject> listparam_noteList = null;
			if (_noteList != null)
			{
				listparam_noteList = new java.util.ArrayList<IMendixObject>();
				for (notes.proxies.Note obj : _noteList)
					listparam_noteList.add(obj.getMendixObject());
			}
			params.put("NoteList", listparam_noteList);
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessCISystem", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processCISystems(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessCISystems", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processCIType(IContext context, java.lang.String _lognode, boolean _updateObject, sdemigration.proxies.CIType _cIType, java.util.List<cmdb.proxies.CMDBType> _cMDBTypeList, sdemigration.proxies.MigrationItemRun _migrationItemRun, java.util.List<cmdb.proxies.CIPersons_TypeDefault> _cIPersonsList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Lognode", _lognode);
			params.put("UpdateObject", _updateObject);
			params.put("CIType", _cIType == null ? null : _cIType.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_cMDBTypeList = null;
			if (_cMDBTypeList != null)
			{
				listparam_cMDBTypeList = new java.util.ArrayList<IMendixObject>();
				for (cmdb.proxies.CMDBType obj : _cMDBTypeList)
					listparam_cMDBTypeList.add(obj.getMendixObject());
			}
			params.put("CMDBTypeList", listparam_cMDBTypeList);
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_cIPersonsList = null;
			if (_cIPersonsList != null)
			{
				listparam_cIPersonsList = new java.util.ArrayList<IMendixObject>();
				for (cmdb.proxies.CIPersons_TypeDefault obj : _cIPersonsList)
					listparam_cIPersonsList.add(obj.getMendixObject());
			}
			params.put("CIPersonsList", listparam_cIPersonsList);
			Core.execute(context, "SDEMigration.ProcessCIType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processCITypes(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessCITypes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processConfigurationItem(IContext context, java.lang.String _lognode, boolean _updateObject, sdemigration.proxies.ConfigurationItem _configurationItemSDE, java.util.List<cmdb.proxies.ConfigurationItem> _cIList, java.util.List<notes.proxies.Note> _noteList, sdemigration.proxies.MigrationItemRun _migrationItemRun, java.util.List<cmdb.proxies.CMDBRelation> _cMDBRelationList, java.util.List<cmdb.proxies.CIPersons> _cIPersonsList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Lognode", _lognode);
			params.put("UpdateObject", _updateObject);
			params.put("ConfigurationItemSDE", _configurationItemSDE == null ? null : _configurationItemSDE.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_cIList = null;
			if (_cIList != null)
			{
				listparam_cIList = new java.util.ArrayList<IMendixObject>();
				for (cmdb.proxies.ConfigurationItem obj : _cIList)
					listparam_cIList.add(obj.getMendixObject());
			}
			params.put("CIList", listparam_cIList);
			java.util.ArrayList<IMendixObject> listparam_noteList = null;
			if (_noteList != null)
			{
				listparam_noteList = new java.util.ArrayList<IMendixObject>();
				for (notes.proxies.Note obj : _noteList)
					listparam_noteList.add(obj.getMendixObject());
			}
			params.put("NoteList", listparam_noteList);
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_cMDBRelationList = null;
			if (_cMDBRelationList != null)
			{
				listparam_cMDBRelationList = new java.util.ArrayList<IMendixObject>();
				for (cmdb.proxies.CMDBRelation obj : _cMDBRelationList)
					listparam_cMDBRelationList.add(obj.getMendixObject());
			}
			params.put("CMDBRelationList", listparam_cMDBRelationList);
			java.util.ArrayList<IMendixObject> listparam_cIPersonsList = null;
			if (_cIPersonsList != null)
			{
				listparam_cIPersonsList = new java.util.ArrayList<IMendixObject>();
				for (cmdb.proxies.CIPersons obj : _cIPersonsList)
					listparam_cIPersonsList.add(obj.getMendixObject());
			}
			params.put("CIPersonsList", listparam_cIPersonsList);
			Core.execute(context, "SDEMigration.ProcessConfigurationItem", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processConfigurationItemICT(IContext context, java.lang.String _lognode, boolean _updateObject, sdemigration.proxies.ConfigurationItemICT _configurationItemSDE, java.util.List<cmdb.proxies.ConfigurationItem> _cIList, java.util.List<notes.proxies.Note> _noteList, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Lognode", _lognode);
			params.put("UpdateObject", _updateObject);
			params.put("ConfigurationItemSDE", _configurationItemSDE == null ? null : _configurationItemSDE.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_cIList = null;
			if (_cIList != null)
			{
				listparam_cIList = new java.util.ArrayList<IMendixObject>();
				for (cmdb.proxies.ConfigurationItem obj : _cIList)
					listparam_cIList.add(obj.getMendixObject());
			}
			params.put("CIList", listparam_cIList);
			java.util.ArrayList<IMendixObject> listparam_noteList = null;
			if (_noteList != null)
			{
				listparam_noteList = new java.util.ArrayList<IMendixObject>();
				for (notes.proxies.Note obj : _noteList)
					listparam_noteList.add(obj.getMendixObject());
			}
			params.put("NoteList", listparam_noteList);
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessConfigurationItemICT", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processConfigurationItems(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessConfigurationItems", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processConfigurationItemsICT(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessConfigurationItemsICT", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processCriticaliyInterrelationship(IContext context, java.lang.String _lognode, boolean _updateObject, sdemigration.proxies.CriticaliyInterrelationship _criticalityInterrelationship, java.util.List<cmdb.proxies.ConfigurationItem> _cIList, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Lognode", _lognode);
			params.put("UpdateObject", _updateObject);
			params.put("CriticalityInterrelationship", _criticalityInterrelationship == null ? null : _criticalityInterrelationship.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_cIList = null;
			if (_cIList != null)
			{
				listparam_cIList = new java.util.ArrayList<IMendixObject>();
				for (cmdb.proxies.ConfigurationItem obj : _cIList)
					listparam_cIList.add(obj.getMendixObject());
			}
			params.put("CIList", listparam_cIList);
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessCriticaliyInterrelationship", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processCriticaliyInterrelationships(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessCriticaliyInterrelationships", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processDatabaseCall(IContext context, sdemigration.proxies.MigrationJobItem_Database _migrationJobItem_Database, sdemigration.proxies.MigrationRun _migrationRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationJobItem_Database", _migrationJobItem_Database == null ? null : _migrationJobItem_Database.getMendixObject());
			params.put("MigrationRun", _migrationRun == null ? null : _migrationRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessDatabaseCall", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processIncident(IContext context, java.lang.String _lognode, boolean _updateObject, sdemigration.proxies.Incident _incident, java.util.List<process.proxies.Request> _requestList, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Lognode", _lognode);
			params.put("UpdateObject", _updateObject);
			params.put("Incident", _incident == null ? null : _incident.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_requestList = null;
			if (_requestList != null)
			{
				listparam_requestList = new java.util.ArrayList<IMendixObject>();
				for (process.proxies.Request obj : _requestList)
					listparam_requestList.add(obj.getMendixObject());
			}
			params.put("RequestList", listparam_requestList);
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessIncident", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processIncidents(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessIncidents", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processMicroflow(IContext context, sdemigration.proxies.MigrationRun _migrationRun, sdemigration.proxies.MigrationJobItem_Microflow _migrationJob_MF)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationRun", _migrationRun == null ? null : _migrationRun.getMendixObject());
			params.put("MigrationJob_MF", _migrationJob_MF == null ? null : _migrationJob_MF.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessMicroflow", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processMicroflowInBackground(IContext context, sdemigration.proxies.MigrationRun _migrationRun, sdemigration.proxies.MigrationJobItem_Microflow _migrationJob_MF)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationRun", _migrationRun == null ? null : _migrationRun.getMendixObject());
			params.put("MigrationJob_MF", _migrationJob_MF == null ? null : _migrationJob_MF.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessMicroflowInBackground", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processProblem(IContext context, java.lang.String _lognode, boolean _updateObject, sdemigration.proxies.Problem _problem, java.util.List<process.proxies.Request> _requestList, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Lognode", _lognode);
			params.put("UpdateObject", _updateObject);
			params.put("Problem", _problem == null ? null : _problem.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_requestList = null;
			if (_requestList != null)
			{
				listparam_requestList = new java.util.ArrayList<IMendixObject>();
				for (process.proxies.Request obj : _requestList)
					listparam_requestList.add(obj.getMendixObject());
			}
			params.put("RequestList", listparam_requestList);
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessProblem", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processProblems(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessProblems", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processRegisteredHour(IContext context, java.lang.String _lognode, boolean _updateObject, sdemigration.proxies.RegisteredHours _registeredHours, sdemigration.proxies.MigrationItemRun _migrationItemRun, java.util.List<billing.proxies.Timesheet> _timesheetList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Lognode", _lognode);
			params.put("UpdateObject", _updateObject);
			params.put("RegisteredHours", _registeredHours == null ? null : _registeredHours.getMendixObject());
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_timesheetList = null;
			if (_timesheetList != null)
			{
				listparam_timesheetList = new java.util.ArrayList<IMendixObject>();
				for (billing.proxies.Timesheet obj : _timesheetList)
					listparam_timesheetList.add(obj.getMendixObject());
			}
			params.put("TimesheetList", listparam_timesheetList);
			Core.execute(context, "SDEMigration.ProcessRegisteredHour", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processRegisteredHours(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessRegisteredHours", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processRelationChangeProblem(IContext context, java.lang.String _lognode, boolean _updateObject, sdemigration.proxies.RelationChangeProblem _relationChangeProblem, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Lognode", _lognode);
			params.put("UpdateObject", _updateObject);
			params.put("RelationChangeProblem", _relationChangeProblem == null ? null : _relationChangeProblem.getMendixObject());
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessRelationChangeProblem", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processRelationsChangeProblem(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessRelationsChangeProblem", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processRemoveAdministratorGroups(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessRemoveAdministratorGroups", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processRiskAssessment(IContext context, java.lang.String _lognode, boolean _updateObject, sdemigration.proxies.RiskAssessment _riskAssessment, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Lognode", _lognode);
			params.put("UpdateObject", _updateObject);
			params.put("RiskAssessment", _riskAssessment == null ? null : _riskAssessment.getMendixObject());
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessRiskAssessment", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processRiskAssessments(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessRiskAssessments", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processServiceRequestIct(IContext context, java.lang.String _lognode, boolean _updateObject, sdemigration.proxies.ServiceRequestICT _serviceRequest, java.util.List<process.proxies.Request> _requestList, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Lognode", _lognode);
			params.put("UpdateObject", _updateObject);
			params.put("ServiceRequest", _serviceRequest == null ? null : _serviceRequest.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_requestList = null;
			if (_requestList != null)
			{
				listparam_requestList = new java.util.ArrayList<IMendixObject>();
				for (process.proxies.Request obj : _requestList)
					listparam_requestList.add(obj.getMendixObject());
			}
			params.put("RequestList", listparam_requestList);
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessServiceRequestIct", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processServiceRequestIct_ContractEndTime(IContext context, java.lang.String _lognode, boolean _updateObject, sdemigration.proxies.ServiceRequestICT _serviceRequest, java.util.List<process.proxies.Request> _requestList, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Lognode", _lognode);
			params.put("UpdateObject", _updateObject);
			params.put("ServiceRequest", _serviceRequest == null ? null : _serviceRequest.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_requestList = null;
			if (_requestList != null)
			{
				listparam_requestList = new java.util.ArrayList<IMendixObject>();
				for (process.proxies.Request obj : _requestList)
					listparam_requestList.add(obj.getMendixObject());
			}
			params.put("RequestList", listparam_requestList);
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessServiceRequestIct_ContractEndTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processServiceRequestsIct(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessServiceRequestsIct", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processServiceRequestsIct_ContractEndTime(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessServiceRequestsIct_ContractEndTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processSetCICategoriesRelations(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessSetCICategoriesRelations", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processSupposedSystem(IContext context, java.lang.String _lognode, java.util.List<sdemigration.proxies.SupposedSystem> _supposedSystemCommitList, sdemigration.proxies.SupposedSystem _supposedSystem, sdemigration.proxies.MigrationItemRun _migrationItemRun, boolean _updateObject, java.util.List<cmdb.proxies.CMDBType> _cMDBTypeCommitList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Lognode", _lognode);
			java.util.ArrayList<IMendixObject> listparam_supposedSystemCommitList = null;
			if (_supposedSystemCommitList != null)
			{
				listparam_supposedSystemCommitList = new java.util.ArrayList<IMendixObject>();
				for (sdemigration.proxies.SupposedSystem obj : _supposedSystemCommitList)
					listparam_supposedSystemCommitList.add(obj.getMendixObject());
			}
			params.put("SupposedSystemCommitList", listparam_supposedSystemCommitList);
			params.put("SupposedSystem", _supposedSystem == null ? null : _supposedSystem.getMendixObject());
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			params.put("UpdateObject", _updateObject);
			java.util.ArrayList<IMendixObject> listparam_cMDBTypeCommitList = null;
			if (_cMDBTypeCommitList != null)
			{
				listparam_cMDBTypeCommitList = new java.util.ArrayList<IMendixObject>();
				for (cmdb.proxies.CMDBType obj : _cMDBTypeCommitList)
					listparam_cMDBTypeCommitList.add(obj.getMendixObject());
			}
			params.put("CMDBTypeCommitList", listparam_cMDBTypeCommitList);
			Core.execute(context, "SDEMigration.ProcessSupposedSystem", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processSupposedSystems(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessSupposedSystems", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processTempAssociatedPersonCustomers(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessTempAssociatedPersonCustomers", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processTempAssociatedPersonGroup(IContext context, java.lang.String _lognode, boolean _updateObject, sdemigration.proxies.TempPersonGroupAssociation _tempPersonGroupAssociation, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Lognode", _lognode);
			params.put("UpdateObject", _updateObject);
			params.put("TempPersonGroupAssociation", _tempPersonGroupAssociation == null ? null : _tempPersonGroupAssociation.getMendixObject());
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessTempAssociatedPersonGroup", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processTempAssociatedPersonGroups(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessTempAssociatedPersonGroups", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processTypeAttributePositions(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SDEMigration.ProcessTypeAttributePositions", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processUpdateAuditPDFNames(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessUpdateAuditPDFNames", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processUpdateCINode(IContext context, java.util.List<customlvnl.proxies.Node> _nodeList, sdemigration.proxies.ConfigurationItem _configurationItemSDE)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_nodeList = null;
			if (_nodeList != null)
			{
				listparam_nodeList = new java.util.ArrayList<IMendixObject>();
				for (customlvnl.proxies.Node obj : _nodeList)
					listparam_nodeList.add(obj.getMendixObject());
			}
			params.put("NodeList", listparam_nodeList);
			params.put("ConfigurationItemSDE", _configurationItemSDE == null ? null : _configurationItemSDE.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessUpdateCINode", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processUpdateCINodes(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessUpdateCINodes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processVendor(IContext context, java.lang.String _lognode, boolean _updateObject, sdemigration.proxies.Vendor _vendor, java.util.List<nap.proxies.BusinessGroup> _businessGroupList, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Lognode", _lognode);
			params.put("UpdateObject", _updateObject);
			params.put("Vendor", _vendor == null ? null : _vendor.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_businessGroupList = null;
			if (_businessGroupList != null)
			{
				listparam_businessGroupList = new java.util.ArrayList<IMendixObject>();
				for (nap.proxies.BusinessGroup obj : _businessGroupList)
					listparam_businessGroupList.add(obj.getMendixObject());
			}
			params.put("BusinessGroupList", listparam_businessGroupList);
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessVendor", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processVendors(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessVendors", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processWorkorder(IContext context, java.lang.String _lognode, boolean _updateObject, sdemigration.proxies.Workorder _workorder, java.util.List<process.proxies.Request> _requestList, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Lognode", _lognode);
			params.put("UpdateObject", _updateObject);
			params.put("Workorder", _workorder == null ? null : _workorder.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_requestList = null;
			if (_requestList != null)
			{
				listparam_requestList = new java.util.ArrayList<IMendixObject>();
				for (process.proxies.Request obj : _requestList)
					listparam_requestList.add(obj.getMendixObject());
			}
			params.put("RequestList", listparam_requestList);
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessWorkorder", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processWorkorderIct_TaskType(IContext context, java.lang.String _lognode, boolean _updateObject, sdemigration.proxies.WorkorderICT _workorder, java.util.List<process.proxies.Request> _requestList, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Lognode", _lognode);
			params.put("UpdateObject", _updateObject);
			params.put("Workorder", _workorder == null ? null : _workorder.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_requestList = null;
			if (_requestList != null)
			{
				listparam_requestList = new java.util.ArrayList<IMendixObject>();
				for (process.proxies.Request obj : _requestList)
					listparam_requestList.add(obj.getMendixObject());
			}
			params.put("RequestList", listparam_requestList);
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessWorkorderIct_TaskType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processWorkorderIct_TaskType_ContractEndTime(IContext context, java.lang.String _lognode, boolean _updateObject, sdemigration.proxies.WorkorderICT _workorder, java.util.List<process.proxies.Request> _requestList, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Lognode", _lognode);
			params.put("UpdateObject", _updateObject);
			params.put("Workorder", _workorder == null ? null : _workorder.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_requestList = null;
			if (_requestList != null)
			{
				listparam_requestList = new java.util.ArrayList<IMendixObject>();
				for (process.proxies.Request obj : _requestList)
					listparam_requestList.add(obj.getMendixObject());
			}
			params.put("RequestList", listparam_requestList);
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessWorkorderIct_TaskType_ContractEndTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processWorkorderIct_TicketType(IContext context, java.lang.String _lognode, boolean _updateObject, sdemigration.proxies.WorkorderICT _workorder, java.util.List<process.proxies.Request> _requestList, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Lognode", _lognode);
			params.put("UpdateObject", _updateObject);
			params.put("Workorder", _workorder == null ? null : _workorder.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_requestList = null;
			if (_requestList != null)
			{
				listparam_requestList = new java.util.ArrayList<IMendixObject>();
				for (process.proxies.Request obj : _requestList)
					listparam_requestList.add(obj.getMendixObject());
			}
			params.put("RequestList", listparam_requestList);
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessWorkorderIct_TicketType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processWorkorderIctAffectedCI(IContext context, java.lang.String _lognode, boolean _updateObject, sdemigration.proxies.WorkorderICTAffectedItems _workorderAffectedItem, java.util.List<cmdb.proxies.AffectedCI> _affectedCIList, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Lognode", _lognode);
			params.put("UpdateObject", _updateObject);
			params.put("WorkorderAffectedItem", _workorderAffectedItem == null ? null : _workorderAffectedItem.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_affectedCIList = null;
			if (_affectedCIList != null)
			{
				listparam_affectedCIList = new java.util.ArrayList<IMendixObject>();
				for (cmdb.proxies.AffectedCI obj : _affectedCIList)
					listparam_affectedCIList.add(obj.getMendixObject());
			}
			params.put("AffectedCIList", listparam_affectedCIList);
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessWorkorderIctAffectedCI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processWorkorderIctAffectedCIs(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessWorkorderIctAffectedCIs", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processWorkorders(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessWorkorders", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processWorkordersIct(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessWorkordersIct", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processWorkordersIct_ContractEndTime(IContext context, sdemigration.proxies.MigrationItemRun _migrationItemRun)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MigrationItemRun", _migrationItemRun == null ? null : _migrationItemRun.getMendixObject());
			Core.execute(context, "SDEMigration.ProcessWorkordersIct_ContractEndTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void reenableNotificationsAfterMigration(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SDEMigration.ReenableNotificationsAfterMigration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean relateByExternalReference(IContext context, java.lang.String _externalReference, boolean _inputRequestIsParent, process.proxies.Request _inputRequest, java.lang.String _lognode, slm.proxies.SPAllowedRelation _inputSPAllowedRelation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ExternalReference", _externalReference);
			params.put("InputRequestIsParent", _inputRequestIsParent);
			params.put("InputRequest", _inputRequest == null ? null : _inputRequest.getMendixObject());
			params.put("Lognode", _lognode);
			params.put("InputSPAllowedRelation", _inputSPAllowedRelation == null ? null : _inputSPAllowedRelation.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "SDEMigration.RelateByExternalReference", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean relateTickets(IContext context, process.proxies.Request _parentRequest, process.proxies.Request _childRequest, java.lang.String _lognode, slm.proxies.SPAllowedRelation _sPAllowedRelation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ParentRequest", _parentRequest == null ? null : _parentRequest.getMendixObject());
			params.put("ChildRequest", _childRequest == null ? null : _childRequest.getMendixObject());
			params.put("Lognode", _lognode);
			params.put("SPAllowedRelation", _sPAllowedRelation == null ? null : _sPAllowedRelation.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "SDEMigration.RelateTickets", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void set_AlternateCIType(IContext context, sdemigration.proxies.CIType _cIType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CIType", _cIType == null ? null : _cIType.getMendixObject());
			Core.execute(context, "SDEMigration.Set_AlternateCIType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setCategoryRelation(IContext context, sdemigration.proxies.CICategory _cICategory, java.util.List<categories_cmdb.proxies.Category> _categoryList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CICategory", _cICategory == null ? null : _cICategory.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_categoryList = null;
			if (_categoryList != null)
			{
				listparam_categoryList = new java.util.ArrayList<IMendixObject>();
				for (categories_cmdb.proxies.Category obj : _categoryList)
					listparam_categoryList.add(obj.getMendixObject());
			}
			params.put("CategoryList", listparam_categoryList);
			Core.execute(context, "SDEMigration.SetCategoryRelation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sub_CreateDynamicAttributes(IContext context, sdemigration.proxies.CICatalogPart _cICatalogPart, cmdb.proxies.CMDBType _cMDBType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CICatalogPart", _cICatalogPart == null ? null : _cICatalogPart.getMendixObject());
			params.put("CMDBType", _cMDBType == null ? null : _cMDBType.getMendixObject());
			Core.execute(context, "SDEMigration.Sub_CreateDynamicAttributes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static categories_cmdb.proxies.Category sub_GetCategory(IContext context, sdemigration.proxies.CICatalogPart _cICatalogPart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CICatalogPart", _cICatalogPart == null ? null : _cICatalogPart.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "SDEMigration.Sub_GetCategory", params);
			return result == null ? null : categories_cmdb.proxies.Category.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static customlvnl.proxies.Node sub_GetNode(IContext context, sdemigration.proxies.ConfigurationItem _configurationItemSDE)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ConfigurationItemSDE", _configurationItemSDE == null ? null : _configurationItemSDE.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "SDEMigration.Sub_GetNode", params);
			return result == null ? null : customlvnl.proxies.Node.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static process.proxies.Request sUB_GetParentTickt(IContext context, sdemigration.proxies.WorkorderICT _workorder)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Workorder", _workorder == null ? null : _workorder.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "SDEMigration.SUB_GetParentTickt", params);
			return result == null ? null : process.proxies.Request.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static customlvnl.proxies.PrimaryUse sub_GetPrimaryUse(IContext context, sdemigration.proxies.CIAssembly _cIAssembly)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CIAssembly", _cIAssembly == null ? null : _cIAssembly.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "SDEMigration.Sub_GetPrimaryUse", params);
			return result == null ? null : customlvnl.proxies.PrimaryUse.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String sub_GetRequest(IContext context, sdemigration.proxies.Attachment _attachment)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Attachment", _attachment == null ? null : _attachment.getMendixObject());
			return (java.lang.String)Core.execute(context, "SDEMigration.Sub_GetRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String sub_GetRequestICT(IContext context, sdemigration.proxies.AttachmentICT _attachment)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Attachment", _attachment == null ? null : _attachment.getMendixObject());
			return (java.lang.String)Core.execute(context, "SDEMigration.Sub_GetRequestICT", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sub_SetCIParentChildAssociation(IContext context, cmdb.proxies.ConfigurationItem _configurationItemChild, cmdb.proxies.ConfigurationItem _configurationItemParent)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ConfigurationItemChild", _configurationItemChild == null ? null : _configurationItemChild.getMendixObject());
			params.put("ConfigurationItemParent", _configurationItemParent == null ? null : _configurationItemParent.getMendixObject());
			Core.execute(context, "SDEMigration.Sub_SetCIParentChildAssociation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sub_SetCMDBRelation(IContext context, cmdb.proxies.ConfigurationItem _configurationItemChild, cmdb.proxies.CMDBType _cMDBTypeChild, cmdb.proxies.ConfigurationItem _configurationItemParent, java.util.List<cmdb.proxies.CMDBRelation> _cMDBRelationList, java.lang.String _relationship)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ConfigurationItemChild", _configurationItemChild == null ? null : _configurationItemChild.getMendixObject());
			params.put("CMDBTypeChild", _cMDBTypeChild == null ? null : _cMDBTypeChild.getMendixObject());
			params.put("ConfigurationItemParent", _configurationItemParent == null ? null : _configurationItemParent.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_cMDBRelationList = null;
			if (_cMDBRelationList != null)
			{
				listparam_cMDBRelationList = new java.util.ArrayList<IMendixObject>();
				for (cmdb.proxies.CMDBRelation obj : _cMDBRelationList)
					listparam_cMDBRelationList.add(obj.getMendixObject());
			}
			params.put("CMDBRelationList", listparam_cMDBRelationList);
			params.put("Relationship", _relationship);
			Core.execute(context, "SDEMigration.Sub_SetCMDBRelation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sub_SetDynamicAttributes(IContext context, sdemigration.proxies.Workorder _workorder, interfacerequests.proxies.IncomingRequest _newIncomingRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Workorder", _workorder == null ? null : _workorder.getMendixObject());
			params.put("NewIncomingRequest", _newIncomingRequest == null ? null : _newIncomingRequest.getMendixObject());
			Core.execute(context, "SDEMigration.Sub_SetDynamicAttributes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}