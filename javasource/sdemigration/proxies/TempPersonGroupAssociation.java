// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package sdemigration.proxies;

public class TempPersonGroupAssociation extends sdemigration.proxies.SDEObject
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "SDEMigration.TempPersonGroupAssociation";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		IsCustomer("IsCustomer"),
		processed("processed"),
		TempPersonGroupAssociation_Person("SDEMigration.TempPersonGroupAssociation_Person"),
		TempPersonGroupAssociation_Organisation("SDEMigration.TempPersonGroupAssociation_Organisation"),
		SDEObject_MigrationItemRun("SDEMigration.SDEObject_MigrationItemRun"),
		IncomingRequest_SDEObject("InterfaceRequests.IncomingRequest_SDEObject");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public TempPersonGroupAssociation(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "SDEMigration.TempPersonGroupAssociation"));
	}

	protected TempPersonGroupAssociation(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject tempPersonGroupAssociationMendixObject)
	{
		super(context, tempPersonGroupAssociationMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("SDEMigration.TempPersonGroupAssociation", tempPersonGroupAssociationMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a SDEMigration.TempPersonGroupAssociation");
	}

	/**
	 * @deprecated Use 'TempPersonGroupAssociation.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static sdemigration.proxies.TempPersonGroupAssociation initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return sdemigration.proxies.TempPersonGroupAssociation.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static sdemigration.proxies.TempPersonGroupAssociation initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new sdemigration.proxies.TempPersonGroupAssociation(context, mendixObject);
	}

	public static sdemigration.proxies.TempPersonGroupAssociation load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return sdemigration.proxies.TempPersonGroupAssociation.initialize(context, mendixObject);
	}

	public static java.util.List<sdemigration.proxies.TempPersonGroupAssociation> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<sdemigration.proxies.TempPersonGroupAssociation> result = new java.util.ArrayList<sdemigration.proxies.TempPersonGroupAssociation>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//SDEMigration.TempPersonGroupAssociation" + xpathConstraint))
			result.add(sdemigration.proxies.TempPersonGroupAssociation.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of IsCustomer
	 */
	public final java.lang.Boolean getIsCustomer()
	{
		return getIsCustomer(getContext());
	}

	/**
	 * @param context
	 * @return value of IsCustomer
	 */
	public final java.lang.Boolean getIsCustomer(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsCustomer.toString());
	}

	/**
	 * Set value of IsCustomer
	 * @param iscustomer
	 */
	public final void setIsCustomer(java.lang.Boolean iscustomer)
	{
		setIsCustomer(getContext(), iscustomer);
	}

	/**
	 * Set value of IsCustomer
	 * @param context
	 * @param iscustomer
	 */
	public final void setIsCustomer(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean iscustomer)
	{
		getMendixObject().setValue(context, MemberNames.IsCustomer.toString(), iscustomer);
	}

	/**
	 * @return value of TempPersonGroupAssociation_Person
	 */
	public final nap.proxies.Person getTempPersonGroupAssociation_Person() throws com.mendix.core.CoreException
	{
		return getTempPersonGroupAssociation_Person(getContext());
	}

	/**
	 * @param context
	 * @return value of TempPersonGroupAssociation_Person
	 */
	public final nap.proxies.Person getTempPersonGroupAssociation_Person(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		nap.proxies.Person result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.TempPersonGroupAssociation_Person.toString());
		if (identifier != null)
			result = nap.proxies.Person.load(context, identifier);
		return result;
	}

	/**
	 * Set value of TempPersonGroupAssociation_Person
	 * @param temppersongroupassociation_person
	 */
	public final void setTempPersonGroupAssociation_Person(nap.proxies.Person temppersongroupassociation_person)
	{
		setTempPersonGroupAssociation_Person(getContext(), temppersongroupassociation_person);
	}

	/**
	 * Set value of TempPersonGroupAssociation_Person
	 * @param context
	 * @param temppersongroupassociation_person
	 */
	public final void setTempPersonGroupAssociation_Person(com.mendix.systemwideinterfaces.core.IContext context, nap.proxies.Person temppersongroupassociation_person)
	{
		if (temppersongroupassociation_person == null)
			getMendixObject().setValue(context, MemberNames.TempPersonGroupAssociation_Person.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.TempPersonGroupAssociation_Person.toString(), temppersongroupassociation_person.getMendixObject().getId());
	}

	/**
	 * @return value of TempPersonGroupAssociation_Organisation
	 */
	public final nap.proxies.Organisation getTempPersonGroupAssociation_Organisation() throws com.mendix.core.CoreException
	{
		return getTempPersonGroupAssociation_Organisation(getContext());
	}

	/**
	 * @param context
	 * @return value of TempPersonGroupAssociation_Organisation
	 */
	public final nap.proxies.Organisation getTempPersonGroupAssociation_Organisation(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		nap.proxies.Organisation result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.TempPersonGroupAssociation_Organisation.toString());
		if (identifier != null)
			result = nap.proxies.Organisation.load(context, identifier);
		return result;
	}

	/**
	 * Set value of TempPersonGroupAssociation_Organisation
	 * @param temppersongroupassociation_organisation
	 */
	public final void setTempPersonGroupAssociation_Organisation(nap.proxies.Organisation temppersongroupassociation_organisation)
	{
		setTempPersonGroupAssociation_Organisation(getContext(), temppersongroupassociation_organisation);
	}

	/**
	 * Set value of TempPersonGroupAssociation_Organisation
	 * @param context
	 * @param temppersongroupassociation_organisation
	 */
	public final void setTempPersonGroupAssociation_Organisation(com.mendix.systemwideinterfaces.core.IContext context, nap.proxies.Organisation temppersongroupassociation_organisation)
	{
		if (temppersongroupassociation_organisation == null)
			getMendixObject().setValue(context, MemberNames.TempPersonGroupAssociation_Organisation.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.TempPersonGroupAssociation_Organisation.toString(), temppersongroupassociation_organisation.getMendixObject().getId());
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final sdemigration.proxies.TempPersonGroupAssociation that = (sdemigration.proxies.TempPersonGroupAssociation) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "SDEMigration.TempPersonGroupAssociation";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
