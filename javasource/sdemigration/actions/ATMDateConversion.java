// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package sdemigration.actions;

import java.text.SimpleDateFormat;
import java.util.TimeZone;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;

/**
 * Input date is formatted in Europe/Amsterdam format,
 * which in turn is used to parse a date asif the datetime string is in UTC Timezone
 */
public class ATMDateConversion extends CustomJavaAction<java.util.Date>
{
	private java.util.Date InputDateTime;

	public ATMDateConversion(IContext context, java.util.Date InputDateTime)
	{
		super(context);
		this.InputDateTime = InputDateTime;
	}

	@Override
	public java.util.Date executeAction() throws Exception
	{
		// BEGIN USER CODE
		SimpleDateFormat localFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss");
		localFormat.setTimeZone(TimeZone.getTimeZone("Europe/Amsterdam"));
		
		SimpleDateFormat isoFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss");
		isoFormat.setTimeZone(TimeZone.getTimeZone("UTC"));
		return isoFormat.parse(localFormat.format(this.InputDateTime));
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "ATMDateConversion";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
