// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package slm.proxies;

public class ServiceProcessMatrix
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject serviceProcessMatrixMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "SLM.ServiceProcessMatrix";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		ProcessType("ProcessType"),
		ServiceProcessMatrix_Service_Process("SLM.ServiceProcessMatrix_Service_Process"),
		ServiceProcessMatrix_Matrix("SLM.ServiceProcessMatrix_Matrix");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public ServiceProcessMatrix(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "SLM.ServiceProcessMatrix"));
	}

	protected ServiceProcessMatrix(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject serviceProcessMatrixMendixObject)
	{
		if (serviceProcessMatrixMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("SLM.ServiceProcessMatrix", serviceProcessMatrixMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a SLM.ServiceProcessMatrix");

		this.serviceProcessMatrixMendixObject = serviceProcessMatrixMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'ServiceProcessMatrix.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static slm.proxies.ServiceProcessMatrix initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return slm.proxies.ServiceProcessMatrix.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static slm.proxies.ServiceProcessMatrix initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new slm.proxies.ServiceProcessMatrix(context, mendixObject);
	}

	public static slm.proxies.ServiceProcessMatrix load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return slm.proxies.ServiceProcessMatrix.initialize(context, mendixObject);
	}

	public static java.util.List<slm.proxies.ServiceProcessMatrix> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<slm.proxies.ServiceProcessMatrix> result = new java.util.ArrayList<slm.proxies.ServiceProcessMatrix>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//SLM.ServiceProcessMatrix" + xpathConstraint))
			result.add(slm.proxies.ServiceProcessMatrix.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * Set value of ProcessType
	 * @param processtype
	 */
	public final slm.proxies.ProcessType getProcessType()
	{
		return getProcessType(getContext());
	}

	/**
	 * @param context
	 * @return value of ProcessType
	 */
	public final slm.proxies.ProcessType getProcessType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.ProcessType.toString());
		if (obj == null)
			return null;

		return slm.proxies.ProcessType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of ProcessType
	 * @param processtype
	 */
	public final void setProcessType(slm.proxies.ProcessType processtype)
	{
		setProcessType(getContext(), processtype);
	}

	/**
	 * Set value of ProcessType
	 * @param context
	 * @param processtype
	 */
	public final void setProcessType(com.mendix.systemwideinterfaces.core.IContext context, slm.proxies.ProcessType processtype)
	{
		if (processtype != null)
			getMendixObject().setValue(context, MemberNames.ProcessType.toString(), processtype.toString());
		else
			getMendixObject().setValue(context, MemberNames.ProcessType.toString(), null);
	}

	/**
	 * @return value of ServiceProcessMatrix_Service_Process
	 */
	public final slm.proxies.Service_Process getServiceProcessMatrix_Service_Process() throws com.mendix.core.CoreException
	{
		return getServiceProcessMatrix_Service_Process(getContext());
	}

	/**
	 * @param context
	 * @return value of ServiceProcessMatrix_Service_Process
	 */
	public final slm.proxies.Service_Process getServiceProcessMatrix_Service_Process(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		slm.proxies.Service_Process result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ServiceProcessMatrix_Service_Process.toString());
		if (identifier != null)
			result = slm.proxies.Service_Process.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ServiceProcessMatrix_Service_Process
	 * @param serviceprocessmatrix_service_process
	 */
	public final void setServiceProcessMatrix_Service_Process(slm.proxies.Service_Process serviceprocessmatrix_service_process)
	{
		setServiceProcessMatrix_Service_Process(getContext(), serviceprocessmatrix_service_process);
	}

	/**
	 * Set value of ServiceProcessMatrix_Service_Process
	 * @param context
	 * @param serviceprocessmatrix_service_process
	 */
	public final void setServiceProcessMatrix_Service_Process(com.mendix.systemwideinterfaces.core.IContext context, slm.proxies.Service_Process serviceprocessmatrix_service_process)
	{
		if (serviceprocessmatrix_service_process == null)
			getMendixObject().setValue(context, MemberNames.ServiceProcessMatrix_Service_Process.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ServiceProcessMatrix_Service_Process.toString(), serviceprocessmatrix_service_process.getMendixObject().getId());
	}

	/**
	 * @return value of ServiceProcessMatrix_Matrix
	 */
	public final statetransition.proxies.Matrix getServiceProcessMatrix_Matrix() throws com.mendix.core.CoreException
	{
		return getServiceProcessMatrix_Matrix(getContext());
	}

	/**
	 * @param context
	 * @return value of ServiceProcessMatrix_Matrix
	 */
	public final statetransition.proxies.Matrix getServiceProcessMatrix_Matrix(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		statetransition.proxies.Matrix result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ServiceProcessMatrix_Matrix.toString());
		if (identifier != null)
			result = statetransition.proxies.Matrix.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ServiceProcessMatrix_Matrix
	 * @param serviceprocessmatrix_matrix
	 */
	public final void setServiceProcessMatrix_Matrix(statetransition.proxies.Matrix serviceprocessmatrix_matrix)
	{
		setServiceProcessMatrix_Matrix(getContext(), serviceprocessmatrix_matrix);
	}

	/**
	 * Set value of ServiceProcessMatrix_Matrix
	 * @param context
	 * @param serviceprocessmatrix_matrix
	 */
	public final void setServiceProcessMatrix_Matrix(com.mendix.systemwideinterfaces.core.IContext context, statetransition.proxies.Matrix serviceprocessmatrix_matrix)
	{
		if (serviceprocessmatrix_matrix == null)
			getMendixObject().setValue(context, MemberNames.ServiceProcessMatrix_Matrix.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ServiceProcessMatrix_Matrix.toString(), serviceprocessmatrix_matrix.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return serviceProcessMatrixMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final slm.proxies.ServiceProcessMatrix that = (slm.proxies.ServiceProcessMatrix) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "SLM.ServiceProcessMatrix";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
