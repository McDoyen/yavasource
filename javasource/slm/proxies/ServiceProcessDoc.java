// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package slm.proxies;

public class ServiceProcessDoc extends system.proxies.FileDocument
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "SLM.ServiceProcessDoc";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		FileID("FileID"),
		Name("Name"),
		DeleteAfterDownload("DeleteAfterDownload"),
		Contents("Contents"),
		HasContents("HasContents"),
		Size("Size"),
		ServiceProcessDoc_Service_Process("SLM.ServiceProcessDoc_Service_Process");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public ServiceProcessDoc(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "SLM.ServiceProcessDoc"));
	}

	protected ServiceProcessDoc(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject serviceProcessDocMendixObject)
	{
		super(context, serviceProcessDocMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("SLM.ServiceProcessDoc", serviceProcessDocMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a SLM.ServiceProcessDoc");
	}

	/**
	 * @deprecated Use 'ServiceProcessDoc.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static slm.proxies.ServiceProcessDoc initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return slm.proxies.ServiceProcessDoc.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static slm.proxies.ServiceProcessDoc initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new slm.proxies.ServiceProcessDoc(context, mendixObject);
	}

	public static slm.proxies.ServiceProcessDoc load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return slm.proxies.ServiceProcessDoc.initialize(context, mendixObject);
	}

	public static java.util.List<slm.proxies.ServiceProcessDoc> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<slm.proxies.ServiceProcessDoc> result = new java.util.ArrayList<slm.proxies.ServiceProcessDoc>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//SLM.ServiceProcessDoc" + xpathConstraint))
			result.add(slm.proxies.ServiceProcessDoc.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of ServiceProcessDoc_Service_Process
	 */
	public final slm.proxies.Service_Process getServiceProcessDoc_Service_Process() throws com.mendix.core.CoreException
	{
		return getServiceProcessDoc_Service_Process(getContext());
	}

	/**
	 * @param context
	 * @return value of ServiceProcessDoc_Service_Process
	 */
	public final slm.proxies.Service_Process getServiceProcessDoc_Service_Process(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		slm.proxies.Service_Process result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ServiceProcessDoc_Service_Process.toString());
		if (identifier != null)
			result = slm.proxies.Service_Process.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ServiceProcessDoc_Service_Process
	 * @param serviceprocessdoc_service_process
	 */
	public final void setServiceProcessDoc_Service_Process(slm.proxies.Service_Process serviceprocessdoc_service_process)
	{
		setServiceProcessDoc_Service_Process(getContext(), serviceprocessdoc_service_process);
	}

	/**
	 * Set value of ServiceProcessDoc_Service_Process
	 * @param context
	 * @param serviceprocessdoc_service_process
	 */
	public final void setServiceProcessDoc_Service_Process(com.mendix.systemwideinterfaces.core.IContext context, slm.proxies.Service_Process serviceprocessdoc_service_process)
	{
		if (serviceprocessdoc_service_process == null)
			getMendixObject().setValue(context, MemberNames.ServiceProcessDoc_Service_Process.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ServiceProcessDoc_Service_Process.toString(), serviceprocessdoc_service_process.getMendixObject().getId());
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final slm.proxies.ServiceProcessDoc that = (slm.proxies.ServiceProcessDoc) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "SLM.ServiceProcessDoc";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
