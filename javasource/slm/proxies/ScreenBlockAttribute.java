// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package slm.proxies;

public class ScreenBlockAttribute
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject screenBlockAttributeMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "SLM.ScreenBlockAttribute";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		UsedInBlock("UsedInBlock"),
		IsSelectable("IsSelectable"),
		Active("Active"),
		AddFromBlock("AddFromBlock"),
		ScreenBlockAttribute_ScreenBlock("SLM.ScreenBlockAttribute_ScreenBlock"),
		ScreenBlockAttribute_ScreenBlock_Temp("SLM.ScreenBlockAttribute_ScreenBlock_Temp"),
		SPDefinitionAttribute_ScreenBlockAttribute("SLM.SPDefinitionAttribute_ScreenBlockAttribute");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public ScreenBlockAttribute(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "SLM.ScreenBlockAttribute"));
	}

	protected ScreenBlockAttribute(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject screenBlockAttributeMendixObject)
	{
		if (screenBlockAttributeMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("SLM.ScreenBlockAttribute", screenBlockAttributeMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a SLM.ScreenBlockAttribute");

		this.screenBlockAttributeMendixObject = screenBlockAttributeMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'ScreenBlockAttribute.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static slm.proxies.ScreenBlockAttribute initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return slm.proxies.ScreenBlockAttribute.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static slm.proxies.ScreenBlockAttribute initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new slm.proxies.ScreenBlockAttribute(context, mendixObject);
	}

	public static slm.proxies.ScreenBlockAttribute load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return slm.proxies.ScreenBlockAttribute.initialize(context, mendixObject);
	}

	public static java.util.List<slm.proxies.ScreenBlockAttribute> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<slm.proxies.ScreenBlockAttribute> result = new java.util.ArrayList<slm.proxies.ScreenBlockAttribute>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//SLM.ScreenBlockAttribute" + xpathConstraint))
			result.add(slm.proxies.ScreenBlockAttribute.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of UsedInBlock
	 */
	public final java.lang.Boolean getUsedInBlock()
	{
		return getUsedInBlock(getContext());
	}

	/**
	 * @param context
	 * @return value of UsedInBlock
	 */
	public final java.lang.Boolean getUsedInBlock(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.UsedInBlock.toString());
	}

	/**
	 * Set value of UsedInBlock
	 * @param usedinblock
	 */
	public final void setUsedInBlock(java.lang.Boolean usedinblock)
	{
		setUsedInBlock(getContext(), usedinblock);
	}

	/**
	 * Set value of UsedInBlock
	 * @param context
	 * @param usedinblock
	 */
	public final void setUsedInBlock(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean usedinblock)
	{
		getMendixObject().setValue(context, MemberNames.UsedInBlock.toString(), usedinblock);
	}

	/**
	 * @return value of IsSelectable
	 */
	public final java.lang.Boolean getIsSelectable()
	{
		return getIsSelectable(getContext());
	}

	/**
	 * @param context
	 * @return value of IsSelectable
	 */
	public final java.lang.Boolean getIsSelectable(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsSelectable.toString());
	}

	/**
	 * Set value of IsSelectable
	 * @param isselectable
	 */
	public final void setIsSelectable(java.lang.Boolean isselectable)
	{
		setIsSelectable(getContext(), isselectable);
	}

	/**
	 * Set value of IsSelectable
	 * @param context
	 * @param isselectable
	 */
	public final void setIsSelectable(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean isselectable)
	{
		getMendixObject().setValue(context, MemberNames.IsSelectable.toString(), isselectable);
	}

	/**
	 * @return value of Active
	 */
	public final java.lang.Boolean getActive()
	{
		return getActive(getContext());
	}

	/**
	 * @param context
	 * @return value of Active
	 */
	public final java.lang.Boolean getActive(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.Active.toString());
	}

	/**
	 * Set value of Active
	 * @param active
	 */
	public final void setActive(java.lang.Boolean active)
	{
		setActive(getContext(), active);
	}

	/**
	 * Set value of Active
	 * @param context
	 * @param active
	 */
	public final void setActive(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean active)
	{
		getMendixObject().setValue(context, MemberNames.Active.toString(), active);
	}

	/**
	 * @return value of AddFromBlock
	 */
	public final java.lang.Boolean getAddFromBlock()
	{
		return getAddFromBlock(getContext());
	}

	/**
	 * @param context
	 * @return value of AddFromBlock
	 */
	public final java.lang.Boolean getAddFromBlock(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.AddFromBlock.toString());
	}

	/**
	 * Set value of AddFromBlock
	 * @param addfromblock
	 */
	public final void setAddFromBlock(java.lang.Boolean addfromblock)
	{
		setAddFromBlock(getContext(), addfromblock);
	}

	/**
	 * Set value of AddFromBlock
	 * @param context
	 * @param addfromblock
	 */
	public final void setAddFromBlock(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean addfromblock)
	{
		getMendixObject().setValue(context, MemberNames.AddFromBlock.toString(), addfromblock);
	}

	/**
	 * @return value of ScreenBlockAttribute_ScreenBlock
	 */
	public final slm.proxies.ScreenBlock getScreenBlockAttribute_ScreenBlock() throws com.mendix.core.CoreException
	{
		return getScreenBlockAttribute_ScreenBlock(getContext());
	}

	/**
	 * @param context
	 * @return value of ScreenBlockAttribute_ScreenBlock
	 */
	public final slm.proxies.ScreenBlock getScreenBlockAttribute_ScreenBlock(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		slm.proxies.ScreenBlock result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ScreenBlockAttribute_ScreenBlock.toString());
		if (identifier != null)
			result = slm.proxies.ScreenBlock.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ScreenBlockAttribute_ScreenBlock
	 * @param screenblockattribute_screenblock
	 */
	public final void setScreenBlockAttribute_ScreenBlock(slm.proxies.ScreenBlock screenblockattribute_screenblock)
	{
		setScreenBlockAttribute_ScreenBlock(getContext(), screenblockattribute_screenblock);
	}

	/**
	 * Set value of ScreenBlockAttribute_ScreenBlock
	 * @param context
	 * @param screenblockattribute_screenblock
	 */
	public final void setScreenBlockAttribute_ScreenBlock(com.mendix.systemwideinterfaces.core.IContext context, slm.proxies.ScreenBlock screenblockattribute_screenblock)
	{
		if (screenblockattribute_screenblock == null)
			getMendixObject().setValue(context, MemberNames.ScreenBlockAttribute_ScreenBlock.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ScreenBlockAttribute_ScreenBlock.toString(), screenblockattribute_screenblock.getMendixObject().getId());
	}

	/**
	 * @return value of ScreenBlockAttribute_ScreenBlock_Temp
	 */
	public final slm.proxies.ScreenBlock getScreenBlockAttribute_ScreenBlock_Temp() throws com.mendix.core.CoreException
	{
		return getScreenBlockAttribute_ScreenBlock_Temp(getContext());
	}

	/**
	 * @param context
	 * @return value of ScreenBlockAttribute_ScreenBlock_Temp
	 */
	public final slm.proxies.ScreenBlock getScreenBlockAttribute_ScreenBlock_Temp(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		slm.proxies.ScreenBlock result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ScreenBlockAttribute_ScreenBlock_Temp.toString());
		if (identifier != null)
			result = slm.proxies.ScreenBlock.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ScreenBlockAttribute_ScreenBlock_Temp
	 * @param screenblockattribute_screenblock_temp
	 */
	public final void setScreenBlockAttribute_ScreenBlock_Temp(slm.proxies.ScreenBlock screenblockattribute_screenblock_temp)
	{
		setScreenBlockAttribute_ScreenBlock_Temp(getContext(), screenblockattribute_screenblock_temp);
	}

	/**
	 * Set value of ScreenBlockAttribute_ScreenBlock_Temp
	 * @param context
	 * @param screenblockattribute_screenblock_temp
	 */
	public final void setScreenBlockAttribute_ScreenBlock_Temp(com.mendix.systemwideinterfaces.core.IContext context, slm.proxies.ScreenBlock screenblockattribute_screenblock_temp)
	{
		if (screenblockattribute_screenblock_temp == null)
			getMendixObject().setValue(context, MemberNames.ScreenBlockAttribute_ScreenBlock_Temp.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ScreenBlockAttribute_ScreenBlock_Temp.toString(), screenblockattribute_screenblock_temp.getMendixObject().getId());
	}

	/**
	 * @return value of SPDefinitionAttribute_ScreenBlockAttribute
	 */
	public final slm.proxies.SPDefinitionAttribute getSPDefinitionAttribute_ScreenBlockAttribute() throws com.mendix.core.CoreException
	{
		return getSPDefinitionAttribute_ScreenBlockAttribute(getContext());
	}

	/**
	 * @param context
	 * @return value of SPDefinitionAttribute_ScreenBlockAttribute
	 */
	public final slm.proxies.SPDefinitionAttribute getSPDefinitionAttribute_ScreenBlockAttribute(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		slm.proxies.SPDefinitionAttribute result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.SPDefinitionAttribute_ScreenBlockAttribute.toString());
		if (identifier != null)
			result = slm.proxies.SPDefinitionAttribute.load(context, identifier);
		return result;
	}

	/**
	 * Set value of SPDefinitionAttribute_ScreenBlockAttribute
	 * @param spdefinitionattribute_screenblockattribute
	 */
	public final void setSPDefinitionAttribute_ScreenBlockAttribute(slm.proxies.SPDefinitionAttribute spdefinitionattribute_screenblockattribute)
	{
		setSPDefinitionAttribute_ScreenBlockAttribute(getContext(), spdefinitionattribute_screenblockattribute);
	}

	/**
	 * Set value of SPDefinitionAttribute_ScreenBlockAttribute
	 * @param context
	 * @param spdefinitionattribute_screenblockattribute
	 */
	public final void setSPDefinitionAttribute_ScreenBlockAttribute(com.mendix.systemwideinterfaces.core.IContext context, slm.proxies.SPDefinitionAttribute spdefinitionattribute_screenblockattribute)
	{
		if (spdefinitionattribute_screenblockattribute == null)
			getMendixObject().setValue(context, MemberNames.SPDefinitionAttribute_ScreenBlockAttribute.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.SPDefinitionAttribute_ScreenBlockAttribute.toString(), spdefinitionattribute_screenblockattribute.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return screenBlockAttributeMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final slm.proxies.ScreenBlockAttribute that = (slm.proxies.ScreenBlockAttribute) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "SLM.ScreenBlockAttribute";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
