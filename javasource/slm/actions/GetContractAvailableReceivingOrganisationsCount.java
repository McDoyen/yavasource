// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package slm.actions;

import java.util.Iterator;
import nap.proxies.Organisation;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.webui.CustomJavaAction;
import communitycommons.XPath;

public class GetContractAvailableReceivingOrganisationsCount extends CustomJavaAction<java.lang.Long>
{
	private IMendixObject __ContractParameter1;
	private slm.proxies.Contract ContractParameter1;

	public GetContractAvailableReceivingOrganisationsCount(IContext context, IMendixObject ContractParameter1)
	{
		super(context);
		this.__ContractParameter1 = ContractParameter1;
	}

	@Override
	public java.lang.Long executeAction() throws Exception
	{
		this.ContractParameter1 = __ContractParameter1 == null ? null : slm.proxies.Contract.initialize(getContext(), __ContractParameter1);

		// BEGIN USER CODE
		XPath<Organisation> receivingOrganisationXPath = XPath.create(Core.createSystemContext(), Organisation.class);
		for( Iterator<IMendixObject> addedReceivingOrganisationsIterator = Core.retrieveByPath(getContext(), ContractParameter1.getMendixObject(), Organisation.MemberNames.ReceivingOrganisation_Contracts.toString()).iterator(); addedReceivingOrganisationsIterator.hasNext(); ){
			receivingOrganisationXPath.notEq(XPath.ID,addedReceivingOrganisationsIterator.next().getId().toLong());
		}
		//Exclude all organisation entries which are already related to the contract as receiving organisation (from the user context), because the relation is not stored on the contract side, the retrieve of the id's is done using OQL
		if(ContractParameter1.getSearchAvailableOrganisation() != null && !ContractParameter1.getSearchAvailableOrganisation().equals("")){
			receivingOrganisationXPath.contains(Organisation.MemberNames.OrganisationName, ContractParameter1.getSearchAvailableOrganisation());
		}
		return receivingOrganisationXPath.count();
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "GetContractAvailableReceivingOrganisationsCount";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
