// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package interfaceshared.proxies;

public class IndexData
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject indexDataMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "InterfaceShared.IndexData";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Message_IndexData("InterfaceShared.Message_IndexData"),
		IndexData_Request("InterfaceShared.IndexData_Request");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public IndexData(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "InterfaceShared.IndexData"));
	}

	protected IndexData(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject indexDataMendixObject)
	{
		if (indexDataMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("InterfaceShared.IndexData", indexDataMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a InterfaceShared.IndexData");

		this.indexDataMendixObject = indexDataMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'IndexData.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static interfaceshared.proxies.IndexData initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return interfaceshared.proxies.IndexData.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static interfaceshared.proxies.IndexData initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new interfaceshared.proxies.IndexData(context, mendixObject);
	}

	public static interfaceshared.proxies.IndexData load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return interfaceshared.proxies.IndexData.initialize(context, mendixObject);
	}

	public static java.util.List<interfaceshared.proxies.IndexData> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<interfaceshared.proxies.IndexData> result = new java.util.ArrayList<interfaceshared.proxies.IndexData>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//InterfaceShared.IndexData" + xpathConstraint))
			result.add(interfaceshared.proxies.IndexData.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Message_IndexData
	 */
	public final interfaceshared.proxies.Message getMessage_IndexData() throws com.mendix.core.CoreException
	{
		return getMessage_IndexData(getContext());
	}

	/**
	 * @param context
	 * @return value of Message_IndexData
	 */
	public final interfaceshared.proxies.Message getMessage_IndexData(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfaceshared.proxies.Message result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Message_IndexData.toString());
		if (identifier != null)
			result = interfaceshared.proxies.Message.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Message_IndexData
	 * @param message_indexdata
	 */
	public final void setMessage_IndexData(interfaceshared.proxies.Message message_indexdata)
	{
		setMessage_IndexData(getContext(), message_indexdata);
	}

	/**
	 * Set value of Message_IndexData
	 * @param context
	 * @param message_indexdata
	 */
	public final void setMessage_IndexData(com.mendix.systemwideinterfaces.core.IContext context, interfaceshared.proxies.Message message_indexdata)
	{
		if (message_indexdata == null)
			getMendixObject().setValue(context, MemberNames.Message_IndexData.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Message_IndexData.toString(), message_indexdata.getMendixObject().getId());
	}

	/**
	 * @return value of IndexData_Request
	 */
	public final process.proxies.Request getIndexData_Request() throws com.mendix.core.CoreException
	{
		return getIndexData_Request(getContext());
	}

	/**
	 * @param context
	 * @return value of IndexData_Request
	 */
	public final process.proxies.Request getIndexData_Request(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		process.proxies.Request result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.IndexData_Request.toString());
		if (identifier != null)
			result = process.proxies.Request.load(context, identifier);
		return result;
	}

	/**
	 * Set value of IndexData_Request
	 * @param indexdata_request
	 */
	public final void setIndexData_Request(process.proxies.Request indexdata_request)
	{
		setIndexData_Request(getContext(), indexdata_request);
	}

	/**
	 * Set value of IndexData_Request
	 * @param context
	 * @param indexdata_request
	 */
	public final void setIndexData_Request(com.mendix.systemwideinterfaces.core.IContext context, process.proxies.Request indexdata_request)
	{
		if (indexdata_request == null)
			getMendixObject().setValue(context, MemberNames.IndexData_Request.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.IndexData_Request.toString(), indexdata_request.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return indexDataMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final interfaceshared.proxies.IndexData that = (interfaceshared.proxies.IndexData) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "InterfaceShared.IndexData";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
