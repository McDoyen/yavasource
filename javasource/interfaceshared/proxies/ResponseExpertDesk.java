// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package interfaceshared.proxies;

public class ResponseExpertDesk extends interfaceshared.proxies.Response
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "InterfaceShared.ResponseExpertDesk";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		ResponseCode("ResponseCode"),
		ResponseMessage("ResponseMessage"),
		ProcessingAttempt_Response("InterfaceShared.ProcessingAttempt_Response"),
		IncomingMessage_SynchronousResponse("InterfaceShared.IncomingMessage_SynchronousResponse");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public ResponseExpertDesk(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "InterfaceShared.ResponseExpertDesk"));
	}

	protected ResponseExpertDesk(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject responseExpertDeskMendixObject)
	{
		super(context, responseExpertDeskMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("InterfaceShared.ResponseExpertDesk", responseExpertDeskMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a InterfaceShared.ResponseExpertDesk");
	}

	/**
	 * @deprecated Use 'ResponseExpertDesk.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static interfaceshared.proxies.ResponseExpertDesk initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return interfaceshared.proxies.ResponseExpertDesk.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static interfaceshared.proxies.ResponseExpertDesk initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		if (com.mendix.core.Core.isSubClassOf("InterfaceAffectedCIs.AffectedCIResponse", mendixObject.getType()))
			return interfaceaffectedcis.proxies.AffectedCIResponse.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceAffectedCIs.AffectedCIsResponse", mendixObject.getType()))
			return interfaceaffectedcis.proxies.AffectedCIsResponse.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceAttachments.AttachmentResponse", mendixObject.getType()))
			return interfaceattachments.proxies.AttachmentResponse.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceAttachments.AttachmentsResponse", mendixObject.getType()))
			return interfaceattachments.proxies.AttachmentsResponse.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceContractAspectUpdates.ContractAspectUpdateResponse", mendixObject.getType()))
			return interfacecontractaspectupdates.proxies.ContractAspectUpdateResponse.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceRequests.DynamicAttributeResponse", mendixObject.getType()))
			return interfacerequests.proxies.DynamicAttributeResponse.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceExternalReferences.ExternalReferenceResponse", mendixObject.getType()))
			return interfaceexternalreferences.proxies.ExternalReferenceResponse.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceExternalReferences.ExternalReferencesResponse", mendixObject.getType()))
			return interfaceexternalreferences.proxies.ExternalReferencesResponse.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceAffectedCIs.IncomingAffectedCIsConfirmationResponse", mendixObject.getType()))
			return interfaceaffectedcis.proxies.IncomingAffectedCIsConfirmationResponse.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceAttachments.IncomingAttachmentsConfirmationResponse", mendixObject.getType()))
			return interfaceattachments.proxies.IncomingAttachmentsConfirmationResponse.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceContractAspectUpdates.IncomingContractAspectUpdateConfirmationResponse", mendixObject.getType()))
			return interfacecontractaspectupdates.proxies.IncomingContractAspectUpdateConfirmationResponse.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceExternalReferences.IncomingExternalReferencesConfirmationResponse", mendixObject.getType()))
			return interfaceexternalreferences.proxies.IncomingExternalReferencesConfirmationResponse.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceShared.IncomingHeartBeatConfirmationResponse", mendixObject.getType()))
			return interfaceshared.proxies.IncomingHeartBeatConfirmationResponse.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceShared.IncomingHeartBeatResponse", mendixObject.getType()))
			return interfaceshared.proxies.IncomingHeartBeatResponse.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceNotes.IncomingNotesConfirmationResponse", mendixObject.getType()))
			return interfacenotes.proxies.IncomingNotesConfirmationResponse.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceRelations.IncomingRelationsConfirmationResponse", mendixObject.getType()))
			return interfacerelations.proxies.IncomingRelationsConfirmationResponse.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceRequests.IncomingRequestConfirmationResponse", mendixObject.getType()))
			return interfacerequests.proxies.IncomingRequestConfirmationResponse.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceRequestUpdate.IncomingRequestUpdateConfirmationResponse", mendixObject.getType()))
			return interfacerequestupdate.proxies.IncomingRequestUpdateConfirmationResponse.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceNotes.NoteResponse", mendixObject.getType()))
			return interfacenotes.proxies.NoteResponse.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceNotes.NotesResponse", mendixObject.getType()))
			return interfacenotes.proxies.NotesResponse.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceAffectedCIs.OutgoingAffectedCIsConfirmationResponseExpertDesk", mendixObject.getType()))
			return interfaceaffectedcis.proxies.OutgoingAffectedCIsConfirmationResponseExpertDesk.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceAttachments.OutgoingAttachmentsConfirmationResponseExpertDesk", mendixObject.getType()))
			return interfaceattachments.proxies.OutgoingAttachmentsConfirmationResponseExpertDesk.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceContractAspectUpdates.OutgoingContractAspectUpdateConfirmationResponseExpertDesk", mendixObject.getType()))
			return interfacecontractaspectupdates.proxies.OutgoingContractAspectUpdateConfirmationResponseExpertDesk.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceExternalReferences.OutgoingExternalReferencesConfirmationResponseExpertDesk", mendixObject.getType()))
			return interfaceexternalreferences.proxies.OutgoingExternalReferencesConfirmationResponseExpertDesk.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceShared.OutgoingHeartBeatConfirmationResponseExpertDesk", mendixObject.getType()))
			return interfaceshared.proxies.OutgoingHeartBeatConfirmationResponseExpertDesk.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceShared.OutgoingHeartBeatResponseExpertDesk", mendixObject.getType()))
			return interfaceshared.proxies.OutgoingHeartBeatResponseExpertDesk.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceNotes.OutgoingNotesConfirmationResponseExpertDesk", mendixObject.getType()))
			return interfacenotes.proxies.OutgoingNotesConfirmationResponseExpertDesk.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceRelations.OutgoingRelationsConfirmationResponseExpertDesk", mendixObject.getType()))
			return interfacerelations.proxies.OutgoingRelationsConfirmationResponseExpertDesk.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceRequests.OutgoingRequestConfirmationResponseExpertDesk", mendixObject.getType()))
			return interfacerequests.proxies.OutgoingRequestConfirmationResponseExpertDesk.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceRequestUpdate.OutgoingRequestUpdateConfirmationResponseExpertDesk", mendixObject.getType()))
			return interfacerequestupdate.proxies.OutgoingRequestUpdateConfirmationResponseExpertDesk.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceRelations.RelationResponse", mendixObject.getType()))
			return interfacerelations.proxies.RelationResponse.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceRelations.RelationsResponse", mendixObject.getType()))
			return interfacerelations.proxies.RelationsResponse.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceRequests.RequestResponse", mendixObject.getType()))
			return interfacerequests.proxies.RequestResponse.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceRequestUpdate.RequestUpdateResponse", mendixObject.getType()))
			return interfacerequestupdate.proxies.RequestUpdateResponse.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceRequests.TaskResponse", mendixObject.getType()))
			return interfacerequests.proxies.TaskResponse.initialize(context, mendixObject);

		return new interfaceshared.proxies.ResponseExpertDesk(context, mendixObject);
	}

	public static interfaceshared.proxies.ResponseExpertDesk load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return interfaceshared.proxies.ResponseExpertDesk.initialize(context, mendixObject);
	}

	public static java.util.List<? extends interfaceshared.proxies.ResponseExpertDesk> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<interfaceshared.proxies.ResponseExpertDesk> result = new java.util.ArrayList<interfaceshared.proxies.ResponseExpertDesk>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//InterfaceShared.ResponseExpertDesk" + xpathConstraint))
			result.add(interfaceshared.proxies.ResponseExpertDesk.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of ResponseCode
	 */
	public final java.lang.String getResponseCode()
	{
		return getResponseCode(getContext());
	}

	/**
	 * @param context
	 * @return value of ResponseCode
	 */
	public final java.lang.String getResponseCode(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ResponseCode.toString());
	}

	/**
	 * Set value of ResponseCode
	 * @param responsecode
	 */
	public final void setResponseCode(java.lang.String responsecode)
	{
		setResponseCode(getContext(), responsecode);
	}

	/**
	 * Set value of ResponseCode
	 * @param context
	 * @param responsecode
	 */
	public final void setResponseCode(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String responsecode)
	{
		getMendixObject().setValue(context, MemberNames.ResponseCode.toString(), responsecode);
	}

	/**
	 * @return value of ResponseMessage
	 */
	public final java.lang.String getResponseMessage()
	{
		return getResponseMessage(getContext());
	}

	/**
	 * @param context
	 * @return value of ResponseMessage
	 */
	public final java.lang.String getResponseMessage(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ResponseMessage.toString());
	}

	/**
	 * Set value of ResponseMessage
	 * @param responsemessage
	 */
	public final void setResponseMessage(java.lang.String responsemessage)
	{
		setResponseMessage(getContext(), responsemessage);
	}

	/**
	 * Set value of ResponseMessage
	 * @param context
	 * @param responsemessage
	 */
	public final void setResponseMessage(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String responsemessage)
	{
		getMendixObject().setValue(context, MemberNames.ResponseMessage.toString(), responsemessage);
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final interfaceshared.proxies.ResponseExpertDesk that = (interfaceshared.proxies.ResponseExpertDesk) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "InterfaceShared.ResponseExpertDesk";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
