// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package interfaceshared.proxies;

public enum MonitoringEventType
{
	Message_Received(new java.lang.String[][] { new java.lang.String[] { "en_US", "Message Received" }, new java.lang.String[] { "nl_NL", "Bericht ontvangen" } }),
	Synchronous_Reply_Sent(new java.lang.String[][] { new java.lang.String[] { "en_US", "Synchronous Reply Sent" }, new java.lang.String[] { "nl_NL", "Synchroon Antwoord Verzonden" } }),
	Synchronous_Processing_Started(new java.lang.String[][] { new java.lang.String[] { "en_US", "Synchronous Processing Started" }, new java.lang.String[] { "nl_NL", "Synchrone Verwerking Gestart" } }),
	Synchronous_Processing_Completed(new java.lang.String[][] { new java.lang.String[] { "en_US", "Synchronous Processing Completed" }, new java.lang.String[] { "nl_NL", "Synchrone Verwerking Afgerond" } }),
	Asynchronous_Processing_Started(new java.lang.String[][] { new java.lang.String[] { "en_US", "Asynchronous Processing Started" }, new java.lang.String[] { "nl_NL", "Asynchrone verwerking gestart" } }),
	Asynchronous_Processing_Completed(new java.lang.String[][] { new java.lang.String[] { "en_US", "Asynchronous Processing Completed" }, new java.lang.String[] { "nl_NL", "Asynchrone verwerking afgerond" } }),
	Message_Sent(new java.lang.String[][] { new java.lang.String[] { "en_US", "Message Sent" }, new java.lang.String[] { "nl_NL", "Berichten verzonden" } }),
	Synchronous_Reply_Received(new java.lang.String[][] { new java.lang.String[] { "en_US", "Synchronous Reply Received" }, new java.lang.String[] { "nl_NL", "Synchroon Antwoord Ontvangen" } }),
	Confirmation_Received(new java.lang.String[][] { new java.lang.String[] { "en_US", "Confirmation Received" }, new java.lang.String[] { "nl_NL", "Bevestiging ontvangen" } }),
	Prepare_Outgoing_Message_Started(new java.lang.String[][] { new java.lang.String[] { "en_US", "Prepare Outgoing Message Started" }, new java.lang.String[] { "nl_NL", "Voorbereiden Uitgang Bericht Gestart" } }),
	Prepare_Outgoing_Message_Completed(new java.lang.String[][] { new java.lang.String[] { "en_US", "Prepare Outgoing Message Completed" }, new java.lang.String[] { "nl_NL", "Voorbereiden Uitgaand Bericht Afgerond" } }),
	Import_Started(new java.lang.String[][] { new java.lang.String[] { "en_US", "Import Started" }, new java.lang.String[] { "nl_NL", "Import Gestart" } }),
	Import_Completed(new java.lang.String[][] { new java.lang.String[] { "en_US", "Import Completed" }, new java.lang.String[] { "nl_NL", "Import Afgerond" } }),
	Processing_Started(new java.lang.String[][] { new java.lang.String[] { "en_US", "Processing Started" }, new java.lang.String[] { "nl_NL", "Verwerking Gestart" } }),
	Processing_Completed(new java.lang.String[][] { new java.lang.String[] { "en_US", "Processing Completed" }, new java.lang.String[] { "nl_NL", "Verwerking Afgerond" } }),
	LDAP_Read_Started(new java.lang.String[][] { new java.lang.String[] { "en_US", "LDAP Read Started" }, new java.lang.String[] { "nl_NL", "LDAP Lezen Gestart" } }),
	LDAP_Read_Completed(new java.lang.String[][] { new java.lang.String[] { "en_US", "LDAP Read Completed" }, new java.lang.String[] { "nl_NL", "LDAP Lezen Afgerond" } });

	private java.util.Map<java.lang.String, java.lang.String> captions;

	private MonitoringEventType(java.lang.String[][] captionStrings)
	{
		this.captions = new java.util.HashMap<java.lang.String, java.lang.String>();
		for (java.lang.String[] captionString : captionStrings)
			captions.put(captionString[0], captionString[1]);
	}

	public java.lang.String getCaption(java.lang.String languageCode)
	{
		if (captions.containsKey(languageCode))
			return captions.get(languageCode);
		return captions.get("en_US");
	}

	public java.lang.String getCaption()
	{
		return captions.get("en_US");
	}
}
