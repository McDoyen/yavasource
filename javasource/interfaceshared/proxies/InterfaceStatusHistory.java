// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package interfaceshared.proxies;

public class InterfaceStatusHistory
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject interfaceStatusHistoryMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "InterfaceShared.InterfaceStatusHistory";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Status("Status"),
		MessageDirection("MessageDirection"),
		InterfaceStatusHistory_InterfaceConfiguration("InterfaceShared.InterfaceStatusHistory_InterfaceConfiguration");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public InterfaceStatusHistory(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "InterfaceShared.InterfaceStatusHistory"));
	}

	protected InterfaceStatusHistory(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject interfaceStatusHistoryMendixObject)
	{
		if (interfaceStatusHistoryMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("InterfaceShared.InterfaceStatusHistory", interfaceStatusHistoryMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a InterfaceShared.InterfaceStatusHistory");

		this.interfaceStatusHistoryMendixObject = interfaceStatusHistoryMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'InterfaceStatusHistory.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static interfaceshared.proxies.InterfaceStatusHistory initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return interfaceshared.proxies.InterfaceStatusHistory.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static interfaceshared.proxies.InterfaceStatusHistory initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new interfaceshared.proxies.InterfaceStatusHistory(context, mendixObject);
	}

	public static interfaceshared.proxies.InterfaceStatusHistory load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return interfaceshared.proxies.InterfaceStatusHistory.initialize(context, mendixObject);
	}

	public static java.util.List<interfaceshared.proxies.InterfaceStatusHistory> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<interfaceshared.proxies.InterfaceStatusHistory> result = new java.util.ArrayList<interfaceshared.proxies.InterfaceStatusHistory>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//InterfaceShared.InterfaceStatusHistory" + xpathConstraint))
			result.add(interfaceshared.proxies.InterfaceStatusHistory.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * Set value of Status
	 * @param status
	 */
	public final interfaceshared.proxies.InterfaceStatus getStatus()
	{
		return getStatus(getContext());
	}

	/**
	 * @param context
	 * @return value of Status
	 */
	public final interfaceshared.proxies.InterfaceStatus getStatus(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.Status.toString());
		if (obj == null)
			return null;

		return interfaceshared.proxies.InterfaceStatus.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of Status
	 * @param status
	 */
	public final void setStatus(interfaceshared.proxies.InterfaceStatus status)
	{
		setStatus(getContext(), status);
	}

	/**
	 * Set value of Status
	 * @param context
	 * @param status
	 */
	public final void setStatus(com.mendix.systemwideinterfaces.core.IContext context, interfaceshared.proxies.InterfaceStatus status)
	{
		if (status != null)
			getMendixObject().setValue(context, MemberNames.Status.toString(), status.toString());
		else
			getMendixObject().setValue(context, MemberNames.Status.toString(), null);
	}

	/**
	 * Set value of MessageDirection
	 * @param messagedirection
	 */
	public final interfaceshared.proxies.MessageDirection getMessageDirection()
	{
		return getMessageDirection(getContext());
	}

	/**
	 * @param context
	 * @return value of MessageDirection
	 */
	public final interfaceshared.proxies.MessageDirection getMessageDirection(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.MessageDirection.toString());
		if (obj == null)
			return null;

		return interfaceshared.proxies.MessageDirection.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of MessageDirection
	 * @param messagedirection
	 */
	public final void setMessageDirection(interfaceshared.proxies.MessageDirection messagedirection)
	{
		setMessageDirection(getContext(), messagedirection);
	}

	/**
	 * Set value of MessageDirection
	 * @param context
	 * @param messagedirection
	 */
	public final void setMessageDirection(com.mendix.systemwideinterfaces.core.IContext context, interfaceshared.proxies.MessageDirection messagedirection)
	{
		if (messagedirection != null)
			getMendixObject().setValue(context, MemberNames.MessageDirection.toString(), messagedirection.toString());
		else
			getMendixObject().setValue(context, MemberNames.MessageDirection.toString(), null);
	}

	/**
	 * @return value of InterfaceStatusHistory_InterfaceConfiguration
	 */
	public final interfaceconfiguration.proxies.InterfaceConfiguration getInterfaceStatusHistory_InterfaceConfiguration() throws com.mendix.core.CoreException
	{
		return getInterfaceStatusHistory_InterfaceConfiguration(getContext());
	}

	/**
	 * @param context
	 * @return value of InterfaceStatusHistory_InterfaceConfiguration
	 */
	public final interfaceconfiguration.proxies.InterfaceConfiguration getInterfaceStatusHistory_InterfaceConfiguration(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfaceconfiguration.proxies.InterfaceConfiguration result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.InterfaceStatusHistory_InterfaceConfiguration.toString());
		if (identifier != null)
			result = interfaceconfiguration.proxies.InterfaceConfiguration.load(context, identifier);
		return result;
	}

	/**
	 * Set value of InterfaceStatusHistory_InterfaceConfiguration
	 * @param interfacestatushistory_interfaceconfiguration
	 */
	public final void setInterfaceStatusHistory_InterfaceConfiguration(interfaceconfiguration.proxies.InterfaceConfiguration interfacestatushistory_interfaceconfiguration)
	{
		setInterfaceStatusHistory_InterfaceConfiguration(getContext(), interfacestatushistory_interfaceconfiguration);
	}

	/**
	 * Set value of InterfaceStatusHistory_InterfaceConfiguration
	 * @param context
	 * @param interfacestatushistory_interfaceconfiguration
	 */
	public final void setInterfaceStatusHistory_InterfaceConfiguration(com.mendix.systemwideinterfaces.core.IContext context, interfaceconfiguration.proxies.InterfaceConfiguration interfacestatushistory_interfaceconfiguration)
	{
		if (interfacestatushistory_interfaceconfiguration == null)
			getMendixObject().setValue(context, MemberNames.InterfaceStatusHistory_InterfaceConfiguration.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.InterfaceStatusHistory_InterfaceConfiguration.toString(), interfacestatushistory_interfaceconfiguration.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return interfaceStatusHistoryMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final interfaceshared.proxies.InterfaceStatusHistory that = (interfaceshared.proxies.InterfaceStatusHistory) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "InterfaceShared.InterfaceStatusHistory";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
