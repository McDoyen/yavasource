// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package interfaceshared.proxies;

public class SendAttempt extends interfaceshared.proxies.Attempt
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "InterfaceShared.SendAttempt";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Successful("Successful"),
		ManualAttempt("ManualAttempt"),
		Log("Log"),
		ShowCritical("ShowCritical"),
		ShowError("ShowError"),
		ShowWarming("ShowWarming"),
		ShowInfo("ShowInfo"),
		ShowDebug("ShowDebug"),
		ShowTrace("ShowTrace"),
		SendAttempt_Response("InterfaceShared.SendAttempt_Response"),
		SendFault_SendAttempt("InterfaceShared.SendFault_SendAttempt"),
		SendAttempt_User("InterfaceShared.SendAttempt_User"),
		SendAttempt_SendFaultFilter("InterfaceShared.SendAttempt_SendFaultFilter"),
		Attempt_Message("InterfaceShared.Attempt_Message");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public SendAttempt(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "InterfaceShared.SendAttempt"));
	}

	protected SendAttempt(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject sendAttemptMendixObject)
	{
		super(context, sendAttemptMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("InterfaceShared.SendAttempt", sendAttemptMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a InterfaceShared.SendAttempt");
	}

	/**
	 * @deprecated Use 'SendAttempt.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static interfaceshared.proxies.SendAttempt initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return interfaceshared.proxies.SendAttempt.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static interfaceshared.proxies.SendAttempt initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		if (com.mendix.core.Core.isSubClassOf("InterfaceShared.DatabaseSendAttempt", mendixObject.getType()))
			return interfaceshared.proxies.DatabaseSendAttempt.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceShared.WebServiceSendAttempt", mendixObject.getType()))
			return interfaceshared.proxies.WebServiceSendAttempt.initialize(context, mendixObject);

		return new interfaceshared.proxies.SendAttempt(context, mendixObject);
	}

	public static interfaceshared.proxies.SendAttempt load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return interfaceshared.proxies.SendAttempt.initialize(context, mendixObject);
	}

	public static java.util.List<? extends interfaceshared.proxies.SendAttempt> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<interfaceshared.proxies.SendAttempt> result = new java.util.ArrayList<interfaceshared.proxies.SendAttempt>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//InterfaceShared.SendAttempt" + xpathConstraint))
			result.add(interfaceshared.proxies.SendAttempt.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of SendAttempt_Response
	 */
	public final interfaceshared.proxies.Response getSendAttempt_Response() throws com.mendix.core.CoreException
	{
		return getSendAttempt_Response(getContext());
	}

	/**
	 * @param context
	 * @return value of SendAttempt_Response
	 */
	public final interfaceshared.proxies.Response getSendAttempt_Response(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfaceshared.proxies.Response result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.SendAttempt_Response.toString());
		if (identifier != null)
			result = interfaceshared.proxies.Response.load(context, identifier);
		return result;
	}

	/**
	 * Set value of SendAttempt_Response
	 * @param sendattempt_response
	 */
	public final void setSendAttempt_Response(interfaceshared.proxies.Response sendattempt_response)
	{
		setSendAttempt_Response(getContext(), sendattempt_response);
	}

	/**
	 * Set value of SendAttempt_Response
	 * @param context
	 * @param sendattempt_response
	 */
	public final void setSendAttempt_Response(com.mendix.systemwideinterfaces.core.IContext context, interfaceshared.proxies.Response sendattempt_response)
	{
		if (sendattempt_response == null)
			getMendixObject().setValue(context, MemberNames.SendAttempt_Response.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.SendAttempt_Response.toString(), sendattempt_response.getMendixObject().getId());
	}

	/**
	 * @return value of SendFault_SendAttempt
	 */
	public final interfaceshared.proxies.SendFault getSendFault_SendAttempt() throws com.mendix.core.CoreException
	{
		return getSendFault_SendAttempt(getContext());
	}

	/**
	 * @param context
	 * @return value of SendFault_SendAttempt
	 */
	public final interfaceshared.proxies.SendFault getSendFault_SendAttempt(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfaceshared.proxies.SendFault result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.SendFault_SendAttempt.toString());
		if (identifier != null)
			result = interfaceshared.proxies.SendFault.load(context, identifier);
		return result;
	}

	/**
	 * Set value of SendFault_SendAttempt
	 * @param sendfault_sendattempt
	 */
	public final void setSendFault_SendAttempt(interfaceshared.proxies.SendFault sendfault_sendattempt)
	{
		setSendFault_SendAttempt(getContext(), sendfault_sendattempt);
	}

	/**
	 * Set value of SendFault_SendAttempt
	 * @param context
	 * @param sendfault_sendattempt
	 */
	public final void setSendFault_SendAttempt(com.mendix.systemwideinterfaces.core.IContext context, interfaceshared.proxies.SendFault sendfault_sendattempt)
	{
		if (sendfault_sendattempt == null)
			getMendixObject().setValue(context, MemberNames.SendFault_SendAttempt.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.SendFault_SendAttempt.toString(), sendfault_sendattempt.getMendixObject().getId());
	}

	/**
	 * @return value of SendAttempt_User
	 */
	public final system.proxies.User getSendAttempt_User() throws com.mendix.core.CoreException
	{
		return getSendAttempt_User(getContext());
	}

	/**
	 * @param context
	 * @return value of SendAttempt_User
	 */
	public final system.proxies.User getSendAttempt_User(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		system.proxies.User result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.SendAttempt_User.toString());
		if (identifier != null)
			result = system.proxies.User.load(context, identifier);
		return result;
	}

	/**
	 * Set value of SendAttempt_User
	 * @param sendattempt_user
	 */
	public final void setSendAttempt_User(system.proxies.User sendattempt_user)
	{
		setSendAttempt_User(getContext(), sendattempt_user);
	}

	/**
	 * Set value of SendAttempt_User
	 * @param context
	 * @param sendattempt_user
	 */
	public final void setSendAttempt_User(com.mendix.systemwideinterfaces.core.IContext context, system.proxies.User sendattempt_user)
	{
		if (sendattempt_user == null)
			getMendixObject().setValue(context, MemberNames.SendAttempt_User.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.SendAttempt_User.toString(), sendattempt_user.getMendixObject().getId());
	}

	/**
	 * @return value of SendAttempt_SendFaultFilter
	 */
	public final interfaceconfiguration.proxies.SendFaultFilter getSendAttempt_SendFaultFilter() throws com.mendix.core.CoreException
	{
		return getSendAttempt_SendFaultFilter(getContext());
	}

	/**
	 * @param context
	 * @return value of SendAttempt_SendFaultFilter
	 */
	public final interfaceconfiguration.proxies.SendFaultFilter getSendAttempt_SendFaultFilter(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfaceconfiguration.proxies.SendFaultFilter result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.SendAttempt_SendFaultFilter.toString());
		if (identifier != null)
			result = interfaceconfiguration.proxies.SendFaultFilter.load(context, identifier);
		return result;
	}

	/**
	 * Set value of SendAttempt_SendFaultFilter
	 * @param sendattempt_sendfaultfilter
	 */
	public final void setSendAttempt_SendFaultFilter(interfaceconfiguration.proxies.SendFaultFilter sendattempt_sendfaultfilter)
	{
		setSendAttempt_SendFaultFilter(getContext(), sendattempt_sendfaultfilter);
	}

	/**
	 * Set value of SendAttempt_SendFaultFilter
	 * @param context
	 * @param sendattempt_sendfaultfilter
	 */
	public final void setSendAttempt_SendFaultFilter(com.mendix.systemwideinterfaces.core.IContext context, interfaceconfiguration.proxies.SendFaultFilter sendattempt_sendfaultfilter)
	{
		if (sendattempt_sendfaultfilter == null)
			getMendixObject().setValue(context, MemberNames.SendAttempt_SendFaultFilter.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.SendAttempt_SendFaultFilter.toString(), sendattempt_sendfaultfilter.getMendixObject().getId());
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final interfaceshared.proxies.SendAttempt that = (interfaceshared.proxies.SendAttempt) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "InterfaceShared.SendAttempt";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
