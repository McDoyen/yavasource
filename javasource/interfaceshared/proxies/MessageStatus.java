// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package interfaceshared.proxies;

public enum MessageStatus
{
	Sent(new java.lang.String[][] { new java.lang.String[] { "en_US", "Sent" }, new java.lang.String[] { "nl_NL", "Verstuurd" } }),
	Sent_Waiting_For_Confirmation(new java.lang.String[][] { new java.lang.String[] { "en_US", "Sent Waiting For Confirmation" }, new java.lang.String[] { "nl_NL", "Verstuurd wachten op confirmatie" } }),
	Confirmed(new java.lang.String[][] { new java.lang.String[] { "en_US", "Confirmed" }, new java.lang.String[] { "nl_NL", "Bevestigd" } }),
	Confirmed_With_Error(new java.lang.String[][] { new java.lang.String[] { "en_US", "Confirmed With Error" }, new java.lang.String[] { "nl_NL", "Bevestigd met fout" } }),
	Queued(new java.lang.String[][] { new java.lang.String[] { "en_US", "Queued" }, new java.lang.String[] { "nl_NL", "In wachtrij" } }),
	Waiting_For_Retry(new java.lang.String[][] { new java.lang.String[] { "en_US", "Waiting For Retry" }, new java.lang.String[] { "nl_NL", "Wachten op nieuwe verzendpoging" } }),
	Error(new java.lang.String[][] { new java.lang.String[] { "en_US", "Error" }, new java.lang.String[] { "nl_NL", "Fout" } }),
	Processed(new java.lang.String[][] { new java.lang.String[] { "en_US", "Processed" }, new java.lang.String[] { "nl_NL", "Verwerkt" } }),
	Ready_For_Asynchronous_Processing(new java.lang.String[][] { new java.lang.String[] { "en_US", "Ready For Asynchronous Processing" }, new java.lang.String[] { "nl_NL", "Klaar om asynchroon te verwerken" } }),
	Error_Ignored(new java.lang.String[][] { new java.lang.String[] { "en_US", "Error Ignored" }, new java.lang.String[] { "nl_NL", "Fout genegeerd" } });

	private java.util.Map<java.lang.String, java.lang.String> captions;

	private MessageStatus(java.lang.String[][] captionStrings)
	{
		this.captions = new java.util.HashMap<java.lang.String, java.lang.String>();
		for (java.lang.String[] captionString : captionStrings)
			captions.put(captionString[0], captionString[1]);
	}

	public java.lang.String getCaption(java.lang.String languageCode)
	{
		if (captions.containsKey(languageCode))
			return captions.get(languageCode);
		return captions.get("en_US");
	}

	public java.lang.String getCaption()
	{
		return captions.get("en_US");
	}
}
