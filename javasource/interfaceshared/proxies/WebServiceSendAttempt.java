// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package interfaceshared.proxies;

public class WebServiceSendAttempt extends interfaceshared.proxies.SendAttempt
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "InterfaceShared.WebServiceSendAttempt";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Endpoint("Endpoint"),
		Successful("Successful"),
		ManualAttempt("ManualAttempt"),
		Log("Log"),
		ShowCritical("ShowCritical"),
		ShowError("ShowError"),
		ShowWarming("ShowWarming"),
		ShowInfo("ShowInfo"),
		ShowDebug("ShowDebug"),
		ShowTrace("ShowTrace"),
		SendAttempt_Response("InterfaceShared.SendAttempt_Response"),
		SendFault_SendAttempt("InterfaceShared.SendFault_SendAttempt"),
		SendAttempt_User("InterfaceShared.SendAttempt_User"),
		SendAttempt_SendFaultFilter("InterfaceShared.SendAttempt_SendFaultFilter"),
		Attempt_Message("InterfaceShared.Attempt_Message");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public WebServiceSendAttempt(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "InterfaceShared.WebServiceSendAttempt"));
	}

	protected WebServiceSendAttempt(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject webServiceSendAttemptMendixObject)
	{
		super(context, webServiceSendAttemptMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("InterfaceShared.WebServiceSendAttempt", webServiceSendAttemptMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a InterfaceShared.WebServiceSendAttempt");
	}

	/**
	 * @deprecated Use 'WebServiceSendAttempt.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static interfaceshared.proxies.WebServiceSendAttempt initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return interfaceshared.proxies.WebServiceSendAttempt.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static interfaceshared.proxies.WebServiceSendAttempt initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new interfaceshared.proxies.WebServiceSendAttempt(context, mendixObject);
	}

	public static interfaceshared.proxies.WebServiceSendAttempt load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return interfaceshared.proxies.WebServiceSendAttempt.initialize(context, mendixObject);
	}

	public static java.util.List<interfaceshared.proxies.WebServiceSendAttempt> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<interfaceshared.proxies.WebServiceSendAttempt> result = new java.util.ArrayList<interfaceshared.proxies.WebServiceSendAttempt>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//InterfaceShared.WebServiceSendAttempt" + xpathConstraint))
			result.add(interfaceshared.proxies.WebServiceSendAttempt.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of Endpoint
	 */
	public final java.lang.String getEndpoint()
	{
		return getEndpoint(getContext());
	}

	/**
	 * @param context
	 * @return value of Endpoint
	 */
	public final java.lang.String getEndpoint(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Endpoint.toString());
	}

	/**
	 * Set value of Endpoint
	 * @param endpoint
	 */
	public final void setEndpoint(java.lang.String endpoint)
	{
		setEndpoint(getContext(), endpoint);
	}

	/**
	 * Set value of Endpoint
	 * @param context
	 * @param endpoint
	 */
	public final void setEndpoint(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String endpoint)
	{
		getMendixObject().setValue(context, MemberNames.Endpoint.toString(), endpoint);
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final interfaceshared.proxies.WebServiceSendAttempt that = (interfaceshared.proxies.WebServiceSendAttempt) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "InterfaceShared.WebServiceSendAttempt";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
