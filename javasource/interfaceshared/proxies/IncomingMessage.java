// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package interfaceshared.proxies;

public class IncomingMessage extends interfaceshared.proxies.Message
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "InterfaceShared.IncomingMessage";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		InterfaceName("InterfaceName"),
		ExternalReferenceID("ExternalReferenceID"),
		InternalReferenceID("InternalReferenceID"),
		SuccessfullyProcessed("SuccessfullyProcessed"),
		MessageID("MessageID"),
		MessageType("MessageType"),
		MessageDirection("MessageDirection"),
		Status("Status"),
		RetrievedInterfaceName("RetrievedInterfaceName"),
		CreatedByCustomMessage("CreatedByCustomMessage"),
		IncomingMessage_SynchronousResponse("InterfaceShared.IncomingMessage_SynchronousResponse"),
		BooleanWrapper_Message("InterfaceShared.BooleanWrapper_Message"),
		Message_IndexData("InterfaceShared.Message_IndexData"),
		Message_InterfaceMessageConfiguration("InterfaceShared.Message_InterfaceMessageConfiguration"),
		Message_InterfaceConfiguration("InterfaceShared.Message_InterfaceConfiguration");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public IncomingMessage(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "InterfaceShared.IncomingMessage"));
	}

	protected IncomingMessage(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject incomingMessageMendixObject)
	{
		super(context, incomingMessageMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("InterfaceShared.IncomingMessage", incomingMessageMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a InterfaceShared.IncomingMessage");
	}

	/**
	 * @deprecated Use 'IncomingMessage.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static interfaceshared.proxies.IncomingMessage initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return interfaceshared.proxies.IncomingMessage.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static interfaceshared.proxies.IncomingMessage initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		if (com.mendix.core.Core.isSubClassOf("InterfaceAffectedCIs.IncomingAffectedCIs", mendixObject.getType()))
			return interfaceaffectedcis.proxies.IncomingAffectedCIs.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceAttachments.IncomingAttachments", mendixObject.getType()))
			return interfaceattachments.proxies.IncomingAttachments.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceShared.IncomingConfirmation", mendixObject.getType()))
			return interfaceshared.proxies.IncomingConfirmation.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceContractAspectUpdates.IncomingContractAspectUpdate", mendixObject.getType()))
			return interfacecontractaspectupdates.proxies.IncomingContractAspectUpdate.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceExternalReferences.IncomingExternalReferences", mendixObject.getType()))
			return interfaceexternalreferences.proxies.IncomingExternalReferences.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceShared.IncomingHeartBeat", mendixObject.getType()))
			return interfaceshared.proxies.IncomingHeartBeat.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceNotes.IncomingNotes", mendixObject.getType()))
			return interfacenotes.proxies.IncomingNotes.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceRelations.IncomingRelations", mendixObject.getType()))
			return interfacerelations.proxies.IncomingRelations.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceRequests.IncomingRequest", mendixObject.getType()))
			return interfacerequests.proxies.IncomingRequest.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceRequestUpdate.IncomingRequestUpdate", mendixObject.getType()))
			return interfacerequestupdate.proxies.IncomingRequestUpdate.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceLDAP.LDAPImport", mendixObject.getType()))
			return interfaceldap.proxies.LDAPImport.initialize(context, mendixObject);

		return new interfaceshared.proxies.IncomingMessage(context, mendixObject);
	}

	public static interfaceshared.proxies.IncomingMessage load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return interfaceshared.proxies.IncomingMessage.initialize(context, mendixObject);
	}

	public static java.util.List<? extends interfaceshared.proxies.IncomingMessage> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<interfaceshared.proxies.IncomingMessage> result = new java.util.ArrayList<interfaceshared.proxies.IncomingMessage>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//InterfaceShared.IncomingMessage" + xpathConstraint))
			result.add(interfaceshared.proxies.IncomingMessage.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of InterfaceName
	 */
	public final java.lang.String getInterfaceName()
	{
		return getInterfaceName(getContext());
	}

	/**
	 * @param context
	 * @return value of InterfaceName
	 */
	public final java.lang.String getInterfaceName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.InterfaceName.toString());
	}

	/**
	 * Set value of InterfaceName
	 * @param interfacename
	 */
	public final void setInterfaceName(java.lang.String interfacename)
	{
		setInterfaceName(getContext(), interfacename);
	}

	/**
	 * Set value of InterfaceName
	 * @param context
	 * @param interfacename
	 */
	public final void setInterfaceName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String interfacename)
	{
		getMendixObject().setValue(context, MemberNames.InterfaceName.toString(), interfacename);
	}

	/**
	 * @return value of ExternalReferenceID
	 */
	public final java.lang.String getExternalReferenceID()
	{
		return getExternalReferenceID(getContext());
	}

	/**
	 * @param context
	 * @return value of ExternalReferenceID
	 */
	public final java.lang.String getExternalReferenceID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ExternalReferenceID.toString());
	}

	/**
	 * Set value of ExternalReferenceID
	 * @param externalreferenceid
	 */
	public final void setExternalReferenceID(java.lang.String externalreferenceid)
	{
		setExternalReferenceID(getContext(), externalreferenceid);
	}

	/**
	 * Set value of ExternalReferenceID
	 * @param context
	 * @param externalreferenceid
	 */
	public final void setExternalReferenceID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String externalreferenceid)
	{
		getMendixObject().setValue(context, MemberNames.ExternalReferenceID.toString(), externalreferenceid);
	}

	/**
	 * @return value of InternalReferenceID
	 */
	public final java.lang.String getInternalReferenceID()
	{
		return getInternalReferenceID(getContext());
	}

	/**
	 * @param context
	 * @return value of InternalReferenceID
	 */
	public final java.lang.String getInternalReferenceID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.InternalReferenceID.toString());
	}

	/**
	 * Set value of InternalReferenceID
	 * @param internalreferenceid
	 */
	public final void setInternalReferenceID(java.lang.String internalreferenceid)
	{
		setInternalReferenceID(getContext(), internalreferenceid);
	}

	/**
	 * Set value of InternalReferenceID
	 * @param context
	 * @param internalreferenceid
	 */
	public final void setInternalReferenceID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String internalreferenceid)
	{
		getMendixObject().setValue(context, MemberNames.InternalReferenceID.toString(), internalreferenceid);
	}

	/**
	 * @return value of SuccessfullyProcessed
	 */
	public final java.lang.Boolean getSuccessfullyProcessed()
	{
		return getSuccessfullyProcessed(getContext());
	}

	/**
	 * @param context
	 * @return value of SuccessfullyProcessed
	 */
	public final java.lang.Boolean getSuccessfullyProcessed(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.SuccessfullyProcessed.toString());
	}

	/**
	 * Set value of SuccessfullyProcessed
	 * @param successfullyprocessed
	 */
	public final void setSuccessfullyProcessed(java.lang.Boolean successfullyprocessed)
	{
		setSuccessfullyProcessed(getContext(), successfullyprocessed);
	}

	/**
	 * Set value of SuccessfullyProcessed
	 * @param context
	 * @param successfullyprocessed
	 */
	public final void setSuccessfullyProcessed(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean successfullyprocessed)
	{
		getMendixObject().setValue(context, MemberNames.SuccessfullyProcessed.toString(), successfullyprocessed);
	}

	/**
	 * @return value of IncomingMessage_SynchronousResponse
	 */
	public final interfaceshared.proxies.Response getIncomingMessage_SynchronousResponse() throws com.mendix.core.CoreException
	{
		return getIncomingMessage_SynchronousResponse(getContext());
	}

	/**
	 * @param context
	 * @return value of IncomingMessage_SynchronousResponse
	 */
	public final interfaceshared.proxies.Response getIncomingMessage_SynchronousResponse(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfaceshared.proxies.Response result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.IncomingMessage_SynchronousResponse.toString());
		if (identifier != null)
			result = interfaceshared.proxies.Response.load(context, identifier);
		return result;
	}

	/**
	 * Set value of IncomingMessage_SynchronousResponse
	 * @param incomingmessage_synchronousresponse
	 */
	public final void setIncomingMessage_SynchronousResponse(interfaceshared.proxies.Response incomingmessage_synchronousresponse)
	{
		setIncomingMessage_SynchronousResponse(getContext(), incomingmessage_synchronousresponse);
	}

	/**
	 * Set value of IncomingMessage_SynchronousResponse
	 * @param context
	 * @param incomingmessage_synchronousresponse
	 */
	public final void setIncomingMessage_SynchronousResponse(com.mendix.systemwideinterfaces.core.IContext context, interfaceshared.proxies.Response incomingmessage_synchronousresponse)
	{
		if (incomingmessage_synchronousresponse == null)
			getMendixObject().setValue(context, MemberNames.IncomingMessage_SynchronousResponse.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.IncomingMessage_SynchronousResponse.toString(), incomingmessage_synchronousresponse.getMendixObject().getId());
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final interfaceshared.proxies.IncomingMessage that = (interfaceshared.proxies.IncomingMessage) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "InterfaceShared.IncomingMessage";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
