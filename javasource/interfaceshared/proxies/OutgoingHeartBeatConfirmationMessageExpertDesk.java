// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package interfaceshared.proxies;

public class OutgoingHeartBeatConfirmationMessageExpertDesk extends interfaceshared.proxies.OutgoingHeartBeatConfirmation
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "InterfaceShared.OutgoingHeartBeatConfirmationMessageExpertDesk";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		NextRetry("NextRetry"),
		RetryByHeartBeat("RetryByHeartBeat"),
		MessageID("MessageID"),
		MessageType("MessageType"),
		MessageDirection("MessageDirection"),
		Status("Status"),
		RetrievedInterfaceName("RetrievedInterfaceName"),
		CreatedByCustomMessage("CreatedByCustomMessage"),
		OutgoingHeartBeatConfirmationExpertDesk_OutgoingHeartBeatConfirmationMessageExpertDesk("InterfaceShared.OutgoingHeartBeatConfirmationExpertDesk_OutgoingHeartBeatConfirmationMessageExpertDesk"),
		OutgoingHeartBeatConfirmationMessageExpertDesk_MendixWebServiceHeader("InterfaceShared.OutgoingHeartBeatConfirmationMessageExpertDesk_MendixWebServiceHeader"),
		ProcessingAttempt_OutgoingConfirmation("InterfaceShared.ProcessingAttempt_OutgoingConfirmation"),
		InterfaceEvent_OutgoingMessage("InterfaceShared.InterfaceEvent_OutgoingMessage"),
		IncomingConfirmation_OutgoingMessage("InterfaceShared.IncomingConfirmation_OutgoingMessage"),
		OutgoingMessage_QueuedByOutgoingMessage("InterfaceShared.OutgoingMessage_QueuedByOutgoingMessage"),
		BooleanWrapper_Message("InterfaceShared.BooleanWrapper_Message"),
		Message_IndexData("InterfaceShared.Message_IndexData"),
		Message_InterfaceMessageConfiguration("InterfaceShared.Message_InterfaceMessageConfiguration"),
		Message_InterfaceConfiguration("InterfaceShared.Message_InterfaceConfiguration");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public OutgoingHeartBeatConfirmationMessageExpertDesk(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "InterfaceShared.OutgoingHeartBeatConfirmationMessageExpertDesk"));
	}

	protected OutgoingHeartBeatConfirmationMessageExpertDesk(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject outgoingHeartBeatConfirmationMessageExpertDeskMendixObject)
	{
		super(context, outgoingHeartBeatConfirmationMessageExpertDeskMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("InterfaceShared.OutgoingHeartBeatConfirmationMessageExpertDesk", outgoingHeartBeatConfirmationMessageExpertDeskMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a InterfaceShared.OutgoingHeartBeatConfirmationMessageExpertDesk");
	}

	/**
	 * @deprecated Use 'OutgoingHeartBeatConfirmationMessageExpertDesk.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static interfaceshared.proxies.OutgoingHeartBeatConfirmationMessageExpertDesk initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return interfaceshared.proxies.OutgoingHeartBeatConfirmationMessageExpertDesk.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static interfaceshared.proxies.OutgoingHeartBeatConfirmationMessageExpertDesk initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new interfaceshared.proxies.OutgoingHeartBeatConfirmationMessageExpertDesk(context, mendixObject);
	}

	public static interfaceshared.proxies.OutgoingHeartBeatConfirmationMessageExpertDesk load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return interfaceshared.proxies.OutgoingHeartBeatConfirmationMessageExpertDesk.initialize(context, mendixObject);
	}

	public static java.util.List<interfaceshared.proxies.OutgoingHeartBeatConfirmationMessageExpertDesk> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<interfaceshared.proxies.OutgoingHeartBeatConfirmationMessageExpertDesk> result = new java.util.ArrayList<interfaceshared.proxies.OutgoingHeartBeatConfirmationMessageExpertDesk>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//InterfaceShared.OutgoingHeartBeatConfirmationMessageExpertDesk" + xpathConstraint))
			result.add(interfaceshared.proxies.OutgoingHeartBeatConfirmationMessageExpertDesk.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of OutgoingHeartBeatConfirmationExpertDesk_OutgoingHeartBeatConfirmationMessageExpertDesk
	 */
	public final interfaceshared.proxies.OutgoingHeartBeatConfirmationExpertDesk getOutgoingHeartBeatConfirmationExpertDesk_OutgoingHeartBeatConfirmationMessageExpertDesk() throws com.mendix.core.CoreException
	{
		return getOutgoingHeartBeatConfirmationExpertDesk_OutgoingHeartBeatConfirmationMessageExpertDesk(getContext());
	}

	/**
	 * @param context
	 * @return value of OutgoingHeartBeatConfirmationExpertDesk_OutgoingHeartBeatConfirmationMessageExpertDesk
	 */
	public final interfaceshared.proxies.OutgoingHeartBeatConfirmationExpertDesk getOutgoingHeartBeatConfirmationExpertDesk_OutgoingHeartBeatConfirmationMessageExpertDesk(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfaceshared.proxies.OutgoingHeartBeatConfirmationExpertDesk result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.OutgoingHeartBeatConfirmationExpertDesk_OutgoingHeartBeatConfirmationMessageExpertDesk.toString());
		if (identifier != null)
			result = interfaceshared.proxies.OutgoingHeartBeatConfirmationExpertDesk.load(context, identifier);
		return result;
	}

	/**
	 * Set value of OutgoingHeartBeatConfirmationExpertDesk_OutgoingHeartBeatConfirmationMessageExpertDesk
	 * @param outgoingheartbeatconfirmationexpertdesk_outgoingheartbeatconfirmationmessageexpertdesk
	 */
	public final void setOutgoingHeartBeatConfirmationExpertDesk_OutgoingHeartBeatConfirmationMessageExpertDesk(interfaceshared.proxies.OutgoingHeartBeatConfirmationExpertDesk outgoingheartbeatconfirmationexpertdesk_outgoingheartbeatconfirmationmessageexpertdesk)
	{
		setOutgoingHeartBeatConfirmationExpertDesk_OutgoingHeartBeatConfirmationMessageExpertDesk(getContext(), outgoingheartbeatconfirmationexpertdesk_outgoingheartbeatconfirmationmessageexpertdesk);
	}

	/**
	 * Set value of OutgoingHeartBeatConfirmationExpertDesk_OutgoingHeartBeatConfirmationMessageExpertDesk
	 * @param context
	 * @param outgoingheartbeatconfirmationexpertdesk_outgoingheartbeatconfirmationmessageexpertdesk
	 */
	public final void setOutgoingHeartBeatConfirmationExpertDesk_OutgoingHeartBeatConfirmationMessageExpertDesk(com.mendix.systemwideinterfaces.core.IContext context, interfaceshared.proxies.OutgoingHeartBeatConfirmationExpertDesk outgoingheartbeatconfirmationexpertdesk_outgoingheartbeatconfirmationmessageexpertdesk)
	{
		if (outgoingheartbeatconfirmationexpertdesk_outgoingheartbeatconfirmationmessageexpertdesk == null)
			getMendixObject().setValue(context, MemberNames.OutgoingHeartBeatConfirmationExpertDesk_OutgoingHeartBeatConfirmationMessageExpertDesk.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.OutgoingHeartBeatConfirmationExpertDesk_OutgoingHeartBeatConfirmationMessageExpertDesk.toString(), outgoingheartbeatconfirmationexpertdesk_outgoingheartbeatconfirmationmessageexpertdesk.getMendixObject().getId());
	}

	/**
	 * @return value of OutgoingHeartBeatConfirmationMessageExpertDesk_MendixWebServiceHeader
	 */
	public final interfaceshared.proxies.MendixWebServiceHeader getOutgoingHeartBeatConfirmationMessageExpertDesk_MendixWebServiceHeader() throws com.mendix.core.CoreException
	{
		return getOutgoingHeartBeatConfirmationMessageExpertDesk_MendixWebServiceHeader(getContext());
	}

	/**
	 * @param context
	 * @return value of OutgoingHeartBeatConfirmationMessageExpertDesk_MendixWebServiceHeader
	 */
	public final interfaceshared.proxies.MendixWebServiceHeader getOutgoingHeartBeatConfirmationMessageExpertDesk_MendixWebServiceHeader(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfaceshared.proxies.MendixWebServiceHeader result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.OutgoingHeartBeatConfirmationMessageExpertDesk_MendixWebServiceHeader.toString());
		if (identifier != null)
			result = interfaceshared.proxies.MendixWebServiceHeader.load(context, identifier);
		return result;
	}

	/**
	 * Set value of OutgoingHeartBeatConfirmationMessageExpertDesk_MendixWebServiceHeader
	 * @param outgoingheartbeatconfirmationmessageexpertdesk_mendixwebserviceheader
	 */
	public final void setOutgoingHeartBeatConfirmationMessageExpertDesk_MendixWebServiceHeader(interfaceshared.proxies.MendixWebServiceHeader outgoingheartbeatconfirmationmessageexpertdesk_mendixwebserviceheader)
	{
		setOutgoingHeartBeatConfirmationMessageExpertDesk_MendixWebServiceHeader(getContext(), outgoingheartbeatconfirmationmessageexpertdesk_mendixwebserviceheader);
	}

	/**
	 * Set value of OutgoingHeartBeatConfirmationMessageExpertDesk_MendixWebServiceHeader
	 * @param context
	 * @param outgoingheartbeatconfirmationmessageexpertdesk_mendixwebserviceheader
	 */
	public final void setOutgoingHeartBeatConfirmationMessageExpertDesk_MendixWebServiceHeader(com.mendix.systemwideinterfaces.core.IContext context, interfaceshared.proxies.MendixWebServiceHeader outgoingheartbeatconfirmationmessageexpertdesk_mendixwebserviceheader)
	{
		if (outgoingheartbeatconfirmationmessageexpertdesk_mendixwebserviceheader == null)
			getMendixObject().setValue(context, MemberNames.OutgoingHeartBeatConfirmationMessageExpertDesk_MendixWebServiceHeader.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.OutgoingHeartBeatConfirmationMessageExpertDesk_MendixWebServiceHeader.toString(), outgoingheartbeatconfirmationmessageexpertdesk_mendixwebserviceheader.getMendixObject().getId());
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final interfaceshared.proxies.OutgoingHeartBeatConfirmationMessageExpertDesk that = (interfaceshared.proxies.OutgoingHeartBeatConfirmationMessageExpertDesk) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "InterfaceShared.OutgoingHeartBeatConfirmationMessageExpertDesk";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
