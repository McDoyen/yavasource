// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package interfaceshared.proxies;

public class OutgoingMessage extends interfaceshared.proxies.Message
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "InterfaceShared.OutgoingMessage";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		NextRetry("NextRetry"),
		RetryByHeartBeat("RetryByHeartBeat"),
		MessageID("MessageID"),
		MessageType("MessageType"),
		MessageDirection("MessageDirection"),
		Status("Status"),
		RetrievedInterfaceName("RetrievedInterfaceName"),
		CreatedByCustomMessage("CreatedByCustomMessage"),
		InterfaceEvent_OutgoingMessage("InterfaceShared.InterfaceEvent_OutgoingMessage"),
		IncomingConfirmation_OutgoingMessage("InterfaceShared.IncomingConfirmation_OutgoingMessage"),
		OutgoingMessage_QueuedByOutgoingMessage("InterfaceShared.OutgoingMessage_QueuedByOutgoingMessage"),
		BooleanWrapper_Message("InterfaceShared.BooleanWrapper_Message"),
		Message_IndexData("InterfaceShared.Message_IndexData"),
		Message_InterfaceMessageConfiguration("InterfaceShared.Message_InterfaceMessageConfiguration"),
		Message_InterfaceConfiguration("InterfaceShared.Message_InterfaceConfiguration");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public OutgoingMessage(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "InterfaceShared.OutgoingMessage"));
	}

	protected OutgoingMessage(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject outgoingMessageMendixObject)
	{
		super(context, outgoingMessageMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("InterfaceShared.OutgoingMessage", outgoingMessageMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a InterfaceShared.OutgoingMessage");
	}

	/**
	 * @deprecated Use 'OutgoingMessage.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static interfaceshared.proxies.OutgoingMessage initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return interfaceshared.proxies.OutgoingMessage.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static interfaceshared.proxies.OutgoingMessage initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		if (com.mendix.core.Core.isSubClassOf("InterfaceAffectedCIs.OutgoingAffectedCIs", mendixObject.getType()))
			return interfaceaffectedcis.proxies.OutgoingAffectedCIs.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceAttachments.OutgoingAttachments", mendixObject.getType()))
			return interfaceattachments.proxies.OutgoingAttachments.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceShared.OutgoingConfirmation", mendixObject.getType()))
			return interfaceshared.proxies.OutgoingConfirmation.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceContractAspectUpdates.OutgoingContractAspectUpdate", mendixObject.getType()))
			return interfacecontractaspectupdates.proxies.OutgoingContractAspectUpdate.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceExternalReferences.OutgoingExternalReferences", mendixObject.getType()))
			return interfaceexternalreferences.proxies.OutgoingExternalReferences.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceShared.OutgoingHeartBeat", mendixObject.getType()))
			return interfaceshared.proxies.OutgoingHeartBeat.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceNotes.OutgoingNotes", mendixObject.getType()))
			return interfacenotes.proxies.OutgoingNotes.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceRelations.OutgoingRelations", mendixObject.getType()))
			return interfacerelations.proxies.OutgoingRelations.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceRequests.OutgoingRequest", mendixObject.getType()))
			return interfacerequests.proxies.OutgoingRequest.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceRequestUpdate.OutgoingRequestUpdate", mendixObject.getType()))
			return interfacerequestupdate.proxies.OutgoingRequestUpdate.initialize(context, mendixObject);

		return new interfaceshared.proxies.OutgoingMessage(context, mendixObject);
	}

	public static interfaceshared.proxies.OutgoingMessage load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return interfaceshared.proxies.OutgoingMessage.initialize(context, mendixObject);
	}

	public static java.util.List<? extends interfaceshared.proxies.OutgoingMessage> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<interfaceshared.proxies.OutgoingMessage> result = new java.util.ArrayList<interfaceshared.proxies.OutgoingMessage>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//InterfaceShared.OutgoingMessage" + xpathConstraint))
			result.add(interfaceshared.proxies.OutgoingMessage.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of NextRetry
	 */
	public final java.util.Date getNextRetry()
	{
		return getNextRetry(getContext());
	}

	/**
	 * @param context
	 * @return value of NextRetry
	 */
	public final java.util.Date getNextRetry(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.NextRetry.toString());
	}

	/**
	 * Set value of NextRetry
	 * @param nextretry
	 */
	public final void setNextRetry(java.util.Date nextretry)
	{
		setNextRetry(getContext(), nextretry);
	}

	/**
	 * Set value of NextRetry
	 * @param context
	 * @param nextretry
	 */
	public final void setNextRetry(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date nextretry)
	{
		getMendixObject().setValue(context, MemberNames.NextRetry.toString(), nextretry);
	}

	/**
	 * @return value of RetryByHeartBeat
	 */
	public final java.lang.Boolean getRetryByHeartBeat()
	{
		return getRetryByHeartBeat(getContext());
	}

	/**
	 * @param context
	 * @return value of RetryByHeartBeat
	 */
	public final java.lang.Boolean getRetryByHeartBeat(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.RetryByHeartBeat.toString());
	}

	/**
	 * Set value of RetryByHeartBeat
	 * @param retrybyheartbeat
	 */
	public final void setRetryByHeartBeat(java.lang.Boolean retrybyheartbeat)
	{
		setRetryByHeartBeat(getContext(), retrybyheartbeat);
	}

	/**
	 * Set value of RetryByHeartBeat
	 * @param context
	 * @param retrybyheartbeat
	 */
	public final void setRetryByHeartBeat(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean retrybyheartbeat)
	{
		getMendixObject().setValue(context, MemberNames.RetryByHeartBeat.toString(), retrybyheartbeat);
	}

	/**
	 * @return value of InterfaceEvent_OutgoingMessage
	 */
	public final interfaceshared.proxies.InterfaceEvent getInterfaceEvent_OutgoingMessage() throws com.mendix.core.CoreException
	{
		return getInterfaceEvent_OutgoingMessage(getContext());
	}

	/**
	 * @param context
	 * @return value of InterfaceEvent_OutgoingMessage
	 */
	public final interfaceshared.proxies.InterfaceEvent getInterfaceEvent_OutgoingMessage(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfaceshared.proxies.InterfaceEvent result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.InterfaceEvent_OutgoingMessage.toString());
		if (identifier != null)
			result = interfaceshared.proxies.InterfaceEvent.load(context, identifier);
		return result;
	}

	/**
	 * Set value of InterfaceEvent_OutgoingMessage
	 * @param interfaceevent_outgoingmessage
	 */
	public final void setInterfaceEvent_OutgoingMessage(interfaceshared.proxies.InterfaceEvent interfaceevent_outgoingmessage)
	{
		setInterfaceEvent_OutgoingMessage(getContext(), interfaceevent_outgoingmessage);
	}

	/**
	 * Set value of InterfaceEvent_OutgoingMessage
	 * @param context
	 * @param interfaceevent_outgoingmessage
	 */
	public final void setInterfaceEvent_OutgoingMessage(com.mendix.systemwideinterfaces.core.IContext context, interfaceshared.proxies.InterfaceEvent interfaceevent_outgoingmessage)
	{
		if (interfaceevent_outgoingmessage == null)
			getMendixObject().setValue(context, MemberNames.InterfaceEvent_OutgoingMessage.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.InterfaceEvent_OutgoingMessage.toString(), interfaceevent_outgoingmessage.getMendixObject().getId());
	}

	/**
	 * @return value of IncomingConfirmation_OutgoingMessage
	 */
	public final interfaceshared.proxies.IncomingConfirmation getIncomingConfirmation_OutgoingMessage() throws com.mendix.core.CoreException
	{
		return getIncomingConfirmation_OutgoingMessage(getContext());
	}

	/**
	 * @param context
	 * @return value of IncomingConfirmation_OutgoingMessage
	 */
	public final interfaceshared.proxies.IncomingConfirmation getIncomingConfirmation_OutgoingMessage(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfaceshared.proxies.IncomingConfirmation result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.IncomingConfirmation_OutgoingMessage.toString());
		if (identifier != null)
			result = interfaceshared.proxies.IncomingConfirmation.load(context, identifier);
		return result;
	}

	/**
	 * Set value of IncomingConfirmation_OutgoingMessage
	 * @param incomingconfirmation_outgoingmessage
	 */
	public final void setIncomingConfirmation_OutgoingMessage(interfaceshared.proxies.IncomingConfirmation incomingconfirmation_outgoingmessage)
	{
		setIncomingConfirmation_OutgoingMessage(getContext(), incomingconfirmation_outgoingmessage);
	}

	/**
	 * Set value of IncomingConfirmation_OutgoingMessage
	 * @param context
	 * @param incomingconfirmation_outgoingmessage
	 */
	public final void setIncomingConfirmation_OutgoingMessage(com.mendix.systemwideinterfaces.core.IContext context, interfaceshared.proxies.IncomingConfirmation incomingconfirmation_outgoingmessage)
	{
		if (incomingconfirmation_outgoingmessage == null)
			getMendixObject().setValue(context, MemberNames.IncomingConfirmation_OutgoingMessage.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.IncomingConfirmation_OutgoingMessage.toString(), incomingconfirmation_outgoingmessage.getMendixObject().getId());
	}

	/**
	 * @return value of OutgoingMessage_QueuedByOutgoingMessage
	 */
	public final interfaceshared.proxies.OutgoingMessage getOutgoingMessage_QueuedByOutgoingMessage() throws com.mendix.core.CoreException
	{
		return getOutgoingMessage_QueuedByOutgoingMessage(getContext());
	}

	/**
	 * @param context
	 * @return value of OutgoingMessage_QueuedByOutgoingMessage
	 */
	public final interfaceshared.proxies.OutgoingMessage getOutgoingMessage_QueuedByOutgoingMessage(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfaceshared.proxies.OutgoingMessage result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.OutgoingMessage_QueuedByOutgoingMessage.toString());
		if (identifier != null)
			result = interfaceshared.proxies.OutgoingMessage.load(context, identifier);
		return result;
	}

	/**
	 * Set value of OutgoingMessage_QueuedByOutgoingMessage
	 * @param outgoingmessage_queuedbyoutgoingmessage
	 */
	public final void setOutgoingMessage_QueuedByOutgoingMessage(interfaceshared.proxies.OutgoingMessage outgoingmessage_queuedbyoutgoingmessage)
	{
		setOutgoingMessage_QueuedByOutgoingMessage(getContext(), outgoingmessage_queuedbyoutgoingmessage);
	}

	/**
	 * Set value of OutgoingMessage_QueuedByOutgoingMessage
	 * @param context
	 * @param outgoingmessage_queuedbyoutgoingmessage
	 */
	public final void setOutgoingMessage_QueuedByOutgoingMessage(com.mendix.systemwideinterfaces.core.IContext context, interfaceshared.proxies.OutgoingMessage outgoingmessage_queuedbyoutgoingmessage)
	{
		if (outgoingmessage_queuedbyoutgoingmessage == null)
			getMendixObject().setValue(context, MemberNames.OutgoingMessage_QueuedByOutgoingMessage.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.OutgoingMessage_QueuedByOutgoingMessage.toString(), outgoingmessage_queuedbyoutgoingmessage.getMendixObject().getId());
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final interfaceshared.proxies.OutgoingMessage that = (interfaceshared.proxies.OutgoingMessage) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "InterfaceShared.OutgoingMessage";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
