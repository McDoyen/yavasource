// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package interfaceshared.proxies;

public class ProcessingLog extends interfaceshared.proxies.Processing
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "InterfaceShared.ProcessingLog";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Message("Message"),
		Level("Level"),
		Node("Node"),
		Status("Status"),
		ProcessingType("ProcessingType"),
		ProcessingMessage("ProcessingMessage"),
		Processing_Processing("InterfaceShared.Processing_Processing"),
		Processing_Attempt("InterfaceShared.Processing_Attempt"),
		Processing_Message("InterfaceShared.Processing_Message"),
		Processing_InterfaceMessageConfiguration("InterfaceShared.Processing_InterfaceMessageConfiguration");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public ProcessingLog(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "InterfaceShared.ProcessingLog"));
	}

	protected ProcessingLog(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject processingLogMendixObject)
	{
		super(context, processingLogMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("InterfaceShared.ProcessingLog", processingLogMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a InterfaceShared.ProcessingLog");
	}

	/**
	 * @deprecated Use 'ProcessingLog.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static interfaceshared.proxies.ProcessingLog initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return interfaceshared.proxies.ProcessingLog.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static interfaceshared.proxies.ProcessingLog initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new interfaceshared.proxies.ProcessingLog(context, mendixObject);
	}

	public static interfaceshared.proxies.ProcessingLog load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return interfaceshared.proxies.ProcessingLog.initialize(context, mendixObject);
	}

	public static java.util.List<interfaceshared.proxies.ProcessingLog> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<interfaceshared.proxies.ProcessingLog> result = new java.util.ArrayList<interfaceshared.proxies.ProcessingLog>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//InterfaceShared.ProcessingLog" + xpathConstraint))
			result.add(interfaceshared.proxies.ProcessingLog.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of Message
	 */
	public final java.lang.String getMessage()
	{
		return getMessage(getContext());
	}

	/**
	 * @param context
	 * @return value of Message
	 */
	public final java.lang.String getMessage(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Message.toString());
	}

	/**
	 * Set value of Message
	 * @param message
	 */
	public final void setMessage(java.lang.String message)
	{
		setMessage(getContext(), message);
	}

	/**
	 * Set value of Message
	 * @param context
	 * @param message
	 */
	public final void setMessage(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String message)
	{
		getMendixObject().setValue(context, MemberNames.Message.toString(), message);
	}

	/**
	 * Set value of Level
	 * @param level
	 */
	public final mendix.proxies.Level getLevel()
	{
		return getLevel(getContext());
	}

	/**
	 * @param context
	 * @return value of Level
	 */
	public final mendix.proxies.Level getLevel(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.Level.toString());
		if (obj == null)
			return null;

		return mendix.proxies.Level.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of Level
	 * @param level
	 */
	public final void setLevel(mendix.proxies.Level level)
	{
		setLevel(getContext(), level);
	}

	/**
	 * Set value of Level
	 * @param context
	 * @param level
	 */
	public final void setLevel(com.mendix.systemwideinterfaces.core.IContext context, mendix.proxies.Level level)
	{
		if (level != null)
			getMendixObject().setValue(context, MemberNames.Level.toString(), level.toString());
		else
			getMendixObject().setValue(context, MemberNames.Level.toString(), null);
	}

	/**
	 * @return value of Node
	 */
	public final java.lang.String getNode()
	{
		return getNode(getContext());
	}

	/**
	 * @param context
	 * @return value of Node
	 */
	public final java.lang.String getNode(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Node.toString());
	}

	/**
	 * Set value of Node
	 * @param node
	 */
	public final void setNode(java.lang.String node)
	{
		setNode(getContext(), node);
	}

	/**
	 * Set value of Node
	 * @param context
	 * @param node
	 */
	public final void setNode(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String node)
	{
		getMendixObject().setValue(context, MemberNames.Node.toString(), node);
	}

	/**
	 * Set value of Status
	 * @param status
	 */
	public final interfaceshared.proxies.LogStatus getStatus()
	{
		return getStatus(getContext());
	}

	/**
	 * @param context
	 * @return value of Status
	 */
	public final interfaceshared.proxies.LogStatus getStatus(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.Status.toString());
		if (obj == null)
			return null;

		return interfaceshared.proxies.LogStatus.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of Status
	 * @param status
	 */
	public final void setStatus(interfaceshared.proxies.LogStatus status)
	{
		setStatus(getContext(), status);
	}

	/**
	 * Set value of Status
	 * @param context
	 * @param status
	 */
	public final void setStatus(com.mendix.systemwideinterfaces.core.IContext context, interfaceshared.proxies.LogStatus status)
	{
		if (status != null)
			getMendixObject().setValue(context, MemberNames.Status.toString(), status.toString());
		else
			getMendixObject().setValue(context, MemberNames.Status.toString(), null);
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final interfaceshared.proxies.ProcessingLog that = (interfaceshared.proxies.ProcessingLog) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "InterfaceShared.ProcessingLog";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
