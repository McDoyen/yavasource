// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package interfaceshared.proxies;

public class ProcessingAttempt extends interfaceshared.proxies.Attempt
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "InterfaceShared.ProcessingAttempt";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		UU95_Processed("UU95_Processed"),
		ProcessAsynchronous("ProcessAsynchronous"),
		AsynchronousProcessingComplete("AsynchronousProcessingComplete"),
		AsynchronousConfirmationMessageProcessingComplete("AsynchronousConfirmationMessageProcessingComplete"),
		Successful("Successful"),
		ManualAttempt("ManualAttempt"),
		Log("Log"),
		ShowCritical("ShowCritical"),
		ShowError("ShowError"),
		ShowWarming("ShowWarming"),
		ShowInfo("ShowInfo"),
		ShowDebug("ShowDebug"),
		ShowTrace("ShowTrace"),
		ProcessingAttempt_OutgoingConfirmation("InterfaceShared.ProcessingAttempt_OutgoingConfirmation"),
		ProcessingAttempt_Response("InterfaceShared.ProcessingAttempt_Response"),
		Attempt_Message("InterfaceShared.Attempt_Message");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public ProcessingAttempt(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "InterfaceShared.ProcessingAttempt"));
	}

	protected ProcessingAttempt(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject processingAttemptMendixObject)
	{
		super(context, processingAttemptMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("InterfaceShared.ProcessingAttempt", processingAttemptMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a InterfaceShared.ProcessingAttempt");
	}

	/**
	 * @deprecated Use 'ProcessingAttempt.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static interfaceshared.proxies.ProcessingAttempt initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return interfaceshared.proxies.ProcessingAttempt.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static interfaceshared.proxies.ProcessingAttempt initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		if (com.mendix.core.Core.isSubClassOf("InterfaceShared.DatabaseProcessingAttempt", mendixObject.getType()))
			return interfaceshared.proxies.DatabaseProcessingAttempt.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceShared.LDAPProcessingAttempt", mendixObject.getType()))
			return interfaceshared.proxies.LDAPProcessingAttempt.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceShared.RepeatingStructureProcessingAttempt", mendixObject.getType()))
			return interfaceshared.proxies.RepeatingStructureProcessingAttempt.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("InterfaceShared.WebServiceProcessingAttempt", mendixObject.getType()))
			return interfaceshared.proxies.WebServiceProcessingAttempt.initialize(context, mendixObject);

		return new interfaceshared.proxies.ProcessingAttempt(context, mendixObject);
	}

	public static interfaceshared.proxies.ProcessingAttempt load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return interfaceshared.proxies.ProcessingAttempt.initialize(context, mendixObject);
	}

	public static java.util.List<? extends interfaceshared.proxies.ProcessingAttempt> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<interfaceshared.proxies.ProcessingAttempt> result = new java.util.ArrayList<interfaceshared.proxies.ProcessingAttempt>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//InterfaceShared.ProcessingAttempt" + xpathConstraint))
			result.add(interfaceshared.proxies.ProcessingAttempt.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of UU95_Processed
	 */
	public final java.lang.Boolean getUU95_Processed()
	{
		return getUU95_Processed(getContext());
	}

	/**
	 * @param context
	 * @return value of UU95_Processed
	 */
	public final java.lang.Boolean getUU95_Processed(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.UU95_Processed.toString());
	}

	/**
	 * Set value of UU95_Processed
	 * @param uu95_processed
	 */
	public final void setUU95_Processed(java.lang.Boolean uu95_processed)
	{
		setUU95_Processed(getContext(), uu95_processed);
	}

	/**
	 * Set value of UU95_Processed
	 * @param context
	 * @param uu95_processed
	 */
	public final void setUU95_Processed(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean uu95_processed)
	{
		getMendixObject().setValue(context, MemberNames.UU95_Processed.toString(), uu95_processed);
	}

	/**
	 * @return value of ProcessAsynchronous
	 */
	public final java.lang.Boolean getProcessAsynchronous()
	{
		return getProcessAsynchronous(getContext());
	}

	/**
	 * @param context
	 * @return value of ProcessAsynchronous
	 */
	public final java.lang.Boolean getProcessAsynchronous(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.ProcessAsynchronous.toString());
	}

	/**
	 * Set value of ProcessAsynchronous
	 * @param processasynchronous
	 */
	public final void setProcessAsynchronous(java.lang.Boolean processasynchronous)
	{
		setProcessAsynchronous(getContext(), processasynchronous);
	}

	/**
	 * Set value of ProcessAsynchronous
	 * @param context
	 * @param processasynchronous
	 */
	public final void setProcessAsynchronous(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean processasynchronous)
	{
		getMendixObject().setValue(context, MemberNames.ProcessAsynchronous.toString(), processasynchronous);
	}

	/**
	 * @return value of AsynchronousProcessingComplete
	 */
	public final java.lang.Boolean getAsynchronousProcessingComplete()
	{
		return getAsynchronousProcessingComplete(getContext());
	}

	/**
	 * @param context
	 * @return value of AsynchronousProcessingComplete
	 */
	public final java.lang.Boolean getAsynchronousProcessingComplete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.AsynchronousProcessingComplete.toString());
	}

	/**
	 * Set value of AsynchronousProcessingComplete
	 * @param asynchronousprocessingcomplete
	 */
	public final void setAsynchronousProcessingComplete(java.lang.Boolean asynchronousprocessingcomplete)
	{
		setAsynchronousProcessingComplete(getContext(), asynchronousprocessingcomplete);
	}

	/**
	 * Set value of AsynchronousProcessingComplete
	 * @param context
	 * @param asynchronousprocessingcomplete
	 */
	public final void setAsynchronousProcessingComplete(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean asynchronousprocessingcomplete)
	{
		getMendixObject().setValue(context, MemberNames.AsynchronousProcessingComplete.toString(), asynchronousprocessingcomplete);
	}

	/**
	 * @return value of AsynchronousConfirmationMessageProcessingComplete
	 */
	public final java.lang.Boolean getAsynchronousConfirmationMessageProcessingComplete()
	{
		return getAsynchronousConfirmationMessageProcessingComplete(getContext());
	}

	/**
	 * @param context
	 * @return value of AsynchronousConfirmationMessageProcessingComplete
	 */
	public final java.lang.Boolean getAsynchronousConfirmationMessageProcessingComplete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.AsynchronousConfirmationMessageProcessingComplete.toString());
	}

	/**
	 * Set value of AsynchronousConfirmationMessageProcessingComplete
	 * @param asynchronousconfirmationmessageprocessingcomplete
	 */
	public final void setAsynchronousConfirmationMessageProcessingComplete(java.lang.Boolean asynchronousconfirmationmessageprocessingcomplete)
	{
		setAsynchronousConfirmationMessageProcessingComplete(getContext(), asynchronousconfirmationmessageprocessingcomplete);
	}

	/**
	 * Set value of AsynchronousConfirmationMessageProcessingComplete
	 * @param context
	 * @param asynchronousconfirmationmessageprocessingcomplete
	 */
	public final void setAsynchronousConfirmationMessageProcessingComplete(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean asynchronousconfirmationmessageprocessingcomplete)
	{
		getMendixObject().setValue(context, MemberNames.AsynchronousConfirmationMessageProcessingComplete.toString(), asynchronousconfirmationmessageprocessingcomplete);
	}

	/**
	 * @return value of ProcessingAttempt_OutgoingConfirmation
	 */
	public final interfaceshared.proxies.OutgoingConfirmation getProcessingAttempt_OutgoingConfirmation() throws com.mendix.core.CoreException
	{
		return getProcessingAttempt_OutgoingConfirmation(getContext());
	}

	/**
	 * @param context
	 * @return value of ProcessingAttempt_OutgoingConfirmation
	 */
	public final interfaceshared.proxies.OutgoingConfirmation getProcessingAttempt_OutgoingConfirmation(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfaceshared.proxies.OutgoingConfirmation result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ProcessingAttempt_OutgoingConfirmation.toString());
		if (identifier != null)
			result = interfaceshared.proxies.OutgoingConfirmation.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ProcessingAttempt_OutgoingConfirmation
	 * @param processingattempt_outgoingconfirmation
	 */
	public final void setProcessingAttempt_OutgoingConfirmation(interfaceshared.proxies.OutgoingConfirmation processingattempt_outgoingconfirmation)
	{
		setProcessingAttempt_OutgoingConfirmation(getContext(), processingattempt_outgoingconfirmation);
	}

	/**
	 * Set value of ProcessingAttempt_OutgoingConfirmation
	 * @param context
	 * @param processingattempt_outgoingconfirmation
	 */
	public final void setProcessingAttempt_OutgoingConfirmation(com.mendix.systemwideinterfaces.core.IContext context, interfaceshared.proxies.OutgoingConfirmation processingattempt_outgoingconfirmation)
	{
		if (processingattempt_outgoingconfirmation == null)
			getMendixObject().setValue(context, MemberNames.ProcessingAttempt_OutgoingConfirmation.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ProcessingAttempt_OutgoingConfirmation.toString(), processingattempt_outgoingconfirmation.getMendixObject().getId());
	}

	/**
	 * @return value of ProcessingAttempt_Response
	 */
	public final interfaceshared.proxies.Response getProcessingAttempt_Response() throws com.mendix.core.CoreException
	{
		return getProcessingAttempt_Response(getContext());
	}

	/**
	 * @param context
	 * @return value of ProcessingAttempt_Response
	 */
	public final interfaceshared.proxies.Response getProcessingAttempt_Response(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfaceshared.proxies.Response result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ProcessingAttempt_Response.toString());
		if (identifier != null)
			result = interfaceshared.proxies.Response.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ProcessingAttempt_Response
	 * @param processingattempt_response
	 */
	public final void setProcessingAttempt_Response(interfaceshared.proxies.Response processingattempt_response)
	{
		setProcessingAttempt_Response(getContext(), processingattempt_response);
	}

	/**
	 * Set value of ProcessingAttempt_Response
	 * @param context
	 * @param processingattempt_response
	 */
	public final void setProcessingAttempt_Response(com.mendix.systemwideinterfaces.core.IContext context, interfaceshared.proxies.Response processingattempt_response)
	{
		if (processingattempt_response == null)
			getMendixObject().setValue(context, MemberNames.ProcessingAttempt_Response.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ProcessingAttempt_Response.toString(), processingattempt_response.getMendixObject().getId());
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final interfaceshared.proxies.ProcessingAttempt that = (interfaceshared.proxies.ProcessingAttempt) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "InterfaceShared.ProcessingAttempt";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
