// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package apmagent.proxies;

public class MetricCollectorQuery extends apmagent.proxies.MetricCollector
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "APMAgent.MetricCollectorQuery";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		QueryUseFirstColumnInName("QueryUseFirstColumnInName"),
		PublishToJMX("PublishToJMX"),
		Description("Description"),
		Frequency("Frequency"),
		Enabled("Enabled"),
		StoreInDatabase("StoreInDatabase"),
		LastRun("LastRun"),
		MetricCollectorType("MetricCollectorType"),
		IsRunning("IsRunning"),
		QueryMultipleValues("QueryMultipleValues"),
		MetricCollectorQuery_QueryStatement("APMAgent.MetricCollectorQuery_QueryStatement");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public MetricCollectorQuery(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "APMAgent.MetricCollectorQuery"));
	}

	protected MetricCollectorQuery(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject metricCollectorQueryMendixObject)
	{
		super(context, metricCollectorQueryMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("APMAgent.MetricCollectorQuery", metricCollectorQueryMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a APMAgent.MetricCollectorQuery");
	}

	/**
	 * @deprecated Use 'MetricCollectorQuery.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static apmagent.proxies.MetricCollectorQuery initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return apmagent.proxies.MetricCollectorQuery.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static apmagent.proxies.MetricCollectorQuery initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new apmagent.proxies.MetricCollectorQuery(context, mendixObject);
	}

	public static apmagent.proxies.MetricCollectorQuery load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return apmagent.proxies.MetricCollectorQuery.initialize(context, mendixObject);
	}

	public static java.util.List<apmagent.proxies.MetricCollectorQuery> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<apmagent.proxies.MetricCollectorQuery> result = new java.util.ArrayList<apmagent.proxies.MetricCollectorQuery>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//APMAgent.MetricCollectorQuery" + xpathConstraint))
			result.add(apmagent.proxies.MetricCollectorQuery.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of QueryUseFirstColumnInName
	 */
	public final java.lang.Boolean getQueryUseFirstColumnInName()
	{
		return getQueryUseFirstColumnInName(getContext());
	}

	/**
	 * @param context
	 * @return value of QueryUseFirstColumnInName
	 */
	public final java.lang.Boolean getQueryUseFirstColumnInName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.QueryUseFirstColumnInName.toString());
	}

	/**
	 * Set value of QueryUseFirstColumnInName
	 * @param queryusefirstcolumninname
	 */
	public final void setQueryUseFirstColumnInName(java.lang.Boolean queryusefirstcolumninname)
	{
		setQueryUseFirstColumnInName(getContext(), queryusefirstcolumninname);
	}

	/**
	 * Set value of QueryUseFirstColumnInName
	 * @param context
	 * @param queryusefirstcolumninname
	 */
	public final void setQueryUseFirstColumnInName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean queryusefirstcolumninname)
	{
		getMendixObject().setValue(context, MemberNames.QueryUseFirstColumnInName.toString(), queryusefirstcolumninname);
	}

	/**
	 * @return value of PublishToJMX
	 */
	public final java.lang.Boolean getPublishToJMX()
	{
		return getPublishToJMX(getContext());
	}

	/**
	 * @param context
	 * @return value of PublishToJMX
	 */
	public final java.lang.Boolean getPublishToJMX(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.PublishToJMX.toString());
	}

	/**
	 * Set value of PublishToJMX
	 * @param publishtojmx
	 */
	public final void setPublishToJMX(java.lang.Boolean publishtojmx)
	{
		setPublishToJMX(getContext(), publishtojmx);
	}

	/**
	 * Set value of PublishToJMX
	 * @param context
	 * @param publishtojmx
	 */
	public final void setPublishToJMX(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean publishtojmx)
	{
		getMendixObject().setValue(context, MemberNames.PublishToJMX.toString(), publishtojmx);
	}

	/**
	 * @return value of MetricCollectorQuery_QueryStatement
	 */
	public final apmagent.proxies.QueryStatement getMetricCollectorQuery_QueryStatement() throws com.mendix.core.CoreException
	{
		return getMetricCollectorQuery_QueryStatement(getContext());
	}

	/**
	 * @param context
	 * @return value of MetricCollectorQuery_QueryStatement
	 */
	public final apmagent.proxies.QueryStatement getMetricCollectorQuery_QueryStatement(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		apmagent.proxies.QueryStatement result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.MetricCollectorQuery_QueryStatement.toString());
		if (identifier != null)
			result = apmagent.proxies.QueryStatement.load(context, identifier);
		return result;
	}

	/**
	 * Set value of MetricCollectorQuery_QueryStatement
	 * @param metriccollectorquery_querystatement
	 */
	public final void setMetricCollectorQuery_QueryStatement(apmagent.proxies.QueryStatement metriccollectorquery_querystatement)
	{
		setMetricCollectorQuery_QueryStatement(getContext(), metriccollectorquery_querystatement);
	}

	/**
	 * Set value of MetricCollectorQuery_QueryStatement
	 * @param context
	 * @param metriccollectorquery_querystatement
	 */
	public final void setMetricCollectorQuery_QueryStatement(com.mendix.systemwideinterfaces.core.IContext context, apmagent.proxies.QueryStatement metriccollectorquery_querystatement)
	{
		if (metriccollectorquery_querystatement == null)
			getMendixObject().setValue(context, MemberNames.MetricCollectorQuery_QueryStatement.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.MetricCollectorQuery_QueryStatement.toString(), metriccollectorquery_querystatement.getMendixObject().getId());
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final apmagent.proxies.MetricCollectorQuery that = (apmagent.proxies.MetricCollectorQuery) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "APMAgent.MetricCollectorQuery";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
