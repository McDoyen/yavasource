// This file was generated by Mendix Modeler 7.7.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package apmagent.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the APMAgent module
	public static void advisedNonProductionSettings(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.AdvisedNonProductionSettings", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void advisedProductionSettings(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.AdvisedProductionSettings", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean afterStartup(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.Boolean)Core.execute(context, "APMAgent.AfterStartup", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bCo_MatchMicroflow(IContext context, apmagent.proxies.ProfilerLogObject _logObject)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LogObject", _logObject == null ? null : _logObject.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "APMAgent.BCo_MatchMicroflow", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bCo_SetLogLevelToSubscriber(IContext context, apmagent.proxies.LogNode _settings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Settings", _settings == null ? null : _settings.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "APMAgent.BCo_SetLogLevelToSubscriber", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void beforeShutdown(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.BeforeShutdown", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void cancelPerformanceMeasurement(IContext context, apmagent.proxies.PerformanceToolSettings _performanceToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PerformanceToolSettings", _performanceToolSettings == null ? null : _performanceToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.CancelPerformanceMeasurement", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void checkTrigger(IContext context, apmagent.proxies.MetricTrigger _metricTrigger, apmagent.proxies.Metric _metric, apmagent.proxies.MetricCollectorItem _metricCollectorItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MetricTrigger", _metricTrigger == null ? null : _metricTrigger.getMendixObject());
			params.put("Metric", _metric == null ? null : _metric.getMendixObject());
			params.put("MetricCollectorItem", _metricCollectorItem == null ? null : _metricCollectorItem.getMendixObject());
			Core.execute(context, "APMAgent.CheckTrigger", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void clearRunningMicroflows(IContext context, apmagent.proxies.PerformanceToolSettings _performanceToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PerformanceToolSettings", _performanceToolSettings == null ? null : _performanceToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.ClearRunningMicroflows", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void createSampleData(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			Core.execute(context, "APMAgent.CreateSampleData", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deleteAllMetrics(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.DeleteAllMetrics", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deleteAllMicroflowStatistics(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.DeleteAllMicroflowStatistics", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deleteAllMicroflowStatisticsRunning(IContext context, boolean _perUser, boolean _isSnapshot)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PerUser", _perUser);
			params.put("IsSnapshot", _isSnapshot);
			Core.execute(context, "APMAgent.DeleteAllMicroflowStatisticsRunning", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deleteAllPerformanceToolInfo(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.DeleteAllPerformanceToolInfo", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deleteDatabaseProfiler(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.DeleteDatabaseProfiler", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deleteLogMessages(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.DeleteLogMessages", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deleteTrapMessages(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.DeleteTrapMessages", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void generateShowTree(IContext context, apmagent.proxies.MicroflowPerformance _microflowPerformance, apmagent.proxies.CallTreeHelper _parentCallTreeHelper, apmagent.proxies.CallTreeConfig _callTreeConfig, java.lang.Long _depth)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MicroflowPerformance", _microflowPerformance == null ? null : _microflowPerformance.getMendixObject());
			params.put("ParentCallTreeHelper", _parentCallTreeHelper == null ? null : _parentCallTreeHelper.getMendixObject());
			params.put("CallTreeConfig", _callTreeConfig == null ? null : _callTreeConfig.getMendixObject());
			params.put("Depth", _depth);
			Core.execute(context, "APMAgent.GenerateShowTree", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void generateShowTreeList(IContext context, apmagent.proxies.CallTreeConfig _callTreeConfig, boolean _openForm)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CallTreeConfig", _callTreeConfig == null ? null : _callTreeConfig.getMendixObject());
			params.put("OpenForm", _openForm);
			Core.execute(context, "APMAgent.GenerateShowTreeList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void generateShowTreeListAndOpenForm(IContext context, apmagent.proxies.CallTreeConfig _callTreeConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CallTreeConfig", _callTreeConfig == null ? null : _callTreeConfig.getMendixObject());
			Core.execute(context, "APMAgent.GenerateShowTreeListAndOpenForm", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<apmagent.proxies.ActionPerformanceRunning> getActionsForMicroflow(IContext context, apmagent.proxies.MicroflowPerformanceRunning _microflowPerformanceRunning)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MicroflowPerformanceRunning", _microflowPerformanceRunning == null ? null : _microflowPerformanceRunning.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "APMAgent.GetActionsForMicroflow", params);
			java.util.List<apmagent.proxies.ActionPerformanceRunning> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<apmagent.proxies.ActionPerformanceRunning>();
				for (IMendixObject obj : objs)
					result.add(apmagent.proxies.ActionPerformanceRunning.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void getAndResetStatistics_ScheduledEvent(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.GetAndResetStatistics_ScheduledEvent", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static apmagent.proxies.Chart getChart_DV(IContext context, apmagent.proxies.MetricCollectorItem _metricCollectorItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MetricCollectorItem", _metricCollectorItem == null ? null : _metricCollectorItem.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "APMAgent.GetChart_DV", params);
			return result == null ? null : apmagent.proxies.Chart.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<apmagent.proxies.Metric> getCollectibleMetricID(IContext context, apmagent.proxies.MetricCollectorQuery _metricCollectorQuery, apmagent.proxies.QueryStatement _queryStatement)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MetricCollectorQuery", _metricCollectorQuery == null ? null : _metricCollectorQuery.getMendixObject());
			params.put("QueryStatement", _queryStatement == null ? null : _queryStatement.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "APMAgent.GetCollectibleMetricID", params);
			java.util.List<apmagent.proxies.Metric> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<apmagent.proxies.Metric>();
				for (IMendixObject obj : objs)
					result.add(apmagent.proxies.Metric.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<apmagent.proxies.Metric> getCollectibleMetricJDBC(IContext context, apmagent.proxies.MetricCollectorQuery _metricCollectorQuery, apmagent.proxies.QueryStatement _queryStatement)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MetricCollectorQuery", _metricCollectorQuery == null ? null : _metricCollectorQuery.getMendixObject());
			params.put("QueryStatement", _queryStatement == null ? null : _queryStatement.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "APMAgent.GetCollectibleMetricJDBC", params);
			java.util.List<apmagent.proxies.Metric> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<apmagent.proxies.Metric>();
				for (IMendixObject obj : objs)
					result.add(apmagent.proxies.Metric.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void getCollectibleMetricJMX(IContext context, apmagent.proxies.MetricCollectorJMX _metricCollectorJMX)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MetricCollectorJMX", _metricCollectorJMX == null ? null : _metricCollectorJMX.getMendixObject());
			Core.execute(context, "APMAgent.GetCollectibleMetricJMX", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<apmagent.proxies.Metric> getCollectibleMetricOQL(IContext context, apmagent.proxies.MetricCollectorQuery _metricCollectorQuery, apmagent.proxies.QueryStatement _queryStatement)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MetricCollectorQuery", _metricCollectorQuery == null ? null : _metricCollectorQuery.getMendixObject());
			params.put("QueryStatement", _queryStatement == null ? null : _queryStatement.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "APMAgent.GetCollectibleMetricOQL", params);
			java.util.List<apmagent.proxies.Metric> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<apmagent.proxies.Metric>();
				for (IMendixObject obj : objs)
					result.add(apmagent.proxies.Metric.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void getCollectibleMetricQuery(IContext context, apmagent.proxies.MetricCollectorQuery _metricCollectorQuery)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MetricCollectorQuery", _metricCollectorQuery == null ? null : _metricCollectorQuery.getMendixObject());
			Core.execute(context, "APMAgent.GetCollectibleMetricQuery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void getCollectibleMetrics(IContext context, apmagent.proxies.MetricCollector _metricCollector_i)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MetricCollector_i", _metricCollector_i == null ? null : _metricCollector_i.getMendixObject());
			Core.execute(context, "APMAgent.GetCollectibleMetrics", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<apmagent.proxies.Metric> getCollectibleMetricXPath(IContext context, apmagent.proxies.MetricCollectorQuery _metricCollectorQuery, apmagent.proxies.QueryStatement _queryStatement)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MetricCollectorQuery", _metricCollectorQuery == null ? null : _metricCollectorQuery.getMendixObject());
			params.put("QueryStatement", _queryStatement == null ? null : _queryStatement.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "APMAgent.GetCollectibleMetricXPath", params);
			java.util.List<apmagent.proxies.Metric> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<apmagent.proxies.Metric>();
				for (IMendixObject obj : objs)
					result.add(apmagent.proxies.Metric.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<apmagent.proxies.MicroflowPerformanceRunning> getFinishedRecordedMicroflows(IContext context, apmagent.proxies.PerformanceToolSettings _performanceToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PerformanceToolSettings", _performanceToolSettings == null ? null : _performanceToolSettings.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "APMAgent.GetFinishedRecordedMicroflows", params);
			java.util.List<apmagent.proxies.MicroflowPerformanceRunning> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<apmagent.proxies.MicroflowPerformanceRunning>();
				for (IMendixObject obj : objs)
					result.add(apmagent.proxies.MicroflowPerformanceRunning.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static apmagent.proxies.MetricCollectorItem getFirstCollectorItem_DV(IContext context, apmagent.proxies.MetricCollector _metricCollector)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MetricCollector", _metricCollector == null ? null : _metricCollector.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "APMAgent.GetFirstCollectorItem_DV", params);
			return result == null ? null : apmagent.proxies.MetricCollectorItem.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static apmagent.proxies.GlobalSettings getGlobalSettings(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "APMAgent.GetGlobalSettings", params);
			return result == null ? null : apmagent.proxies.GlobalSettings.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getJarVersion_Field(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			return (java.lang.String)Core.execute(context, "APMAgent.GetJarVersion_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getLicenseType(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			return (java.lang.String)Core.execute(context, "APMAgent.GetLicenseType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static apmagent.proxies.LogToolSettings getLogToolSettings(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "APMAgent.GetLogToolSettings", params);
			return result == null ? null : apmagent.proxies.LogToolSettings.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<apmagent.proxies.MicroflowPerformance> getMainMicroflowsForAction(IContext context, apmagent.proxies.ActionPerformance _actionPerformance)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ActionPerformance", _actionPerformance == null ? null : _actionPerformance.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "APMAgent.GetMainMicroflowsForAction", params);
			java.util.List<apmagent.proxies.MicroflowPerformance> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<apmagent.proxies.MicroflowPerformance>();
				for (IMendixObject obj : objs)
					result.add(apmagent.proxies.MicroflowPerformance.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<apmagent.proxies.MicroflowPerformance> getMainMicroflowsForMicroflow(IContext context, apmagent.proxies.MicroflowPerformance _microflowPerformance)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MicroflowPerformance", _microflowPerformance == null ? null : _microflowPerformance.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "APMAgent.GetMainMicroflowsForMicroflow", params);
			java.util.List<apmagent.proxies.MicroflowPerformance> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<apmagent.proxies.MicroflowPerformance>();
				for (IMendixObject obj : objs)
					result.add(apmagent.proxies.MicroflowPerformance.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<apmagent.proxies.MicroflowPerformance> getMainMicroflowsInsideInterval(IContext context, java.util.Date _startDateTime, java.util.Date _endDateTime, java.lang.Long _excludeID, apmagent.proxies.BooleanWS _isMain, java.lang.Long _durationLargerThan)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("StartDateTime", _startDateTime);
			params.put("EndDateTime", _endDateTime);
			params.put("ExcludeID", _excludeID);
			params.put("IsMain", _isMain == null ? null : _isMain.name());
			params.put("DurationLargerThan", _durationLargerThan);
			java.util.List<IMendixObject> objs = Core.execute(context, "APMAgent.GetMainMicroflowsInsideInterval", params);
			java.util.List<apmagent.proxies.MicroflowPerformance> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<apmagent.proxies.MicroflowPerformance>();
				for (IMendixObject obj : objs)
					result.add(apmagent.proxies.MicroflowPerformance.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getNewUsername(IContext context, java.lang.String _oldUser, java.lang.String _newUser)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OldUser", _oldUser);
			params.put("NewUser", _newUser);
			return (java.lang.String)Core.execute(context, "APMAgent.GetNewUsername", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long getNumberOfActionsPerformanceTool_Field(IContext context, apmagent.proxies.PerformanceToolSettings _performanceToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PerformanceToolSettings", _performanceToolSettings == null ? null : _performanceToolSettings.getMendixObject());
			return (java.lang.Long)Core.execute(context, "APMAgent.GetNumberOfActionsPerformanceTool_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getNumberOfExclusions(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.String)Core.execute(context, "APMAgent.GetNumberOfExclusions", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long getNumberOfMicroflowsPerformanceTool_Field(IContext context, apmagent.proxies.PerformanceToolSettings _performanceToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PerformanceToolSettings", _performanceToolSettings == null ? null : _performanceToolSettings.getMendixObject());
			return (java.lang.Long)Core.execute(context, "APMAgent.GetNumberOfMicroflowsPerformanceTool_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long getNumberOfPrivateScheduledEventsRunning_Field(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			return (java.lang.Long)Core.execute(context, "APMAgent.GetNumberOfPrivateScheduledEventsRunning_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long getNumberOfRuntimeRequestsDatabaseProfiler_Field(IContext context, apmagent.proxies.PerformanceToolSettings _performanceToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PerformanceToolSettings", _performanceToolSettings == null ? null : _performanceToolSettings.getMendixObject());
			return (java.lang.Long)Core.execute(context, "APMAgent.GetNumberOfRuntimeRequestsDatabaseProfiler_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long getNumberOfStatementsDatabaseProfiler_Field(IContext context, apmagent.proxies.PerformanceToolSettings _performanceToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PerformanceToolSettings", _performanceToolSettings == null ? null : _performanceToolSettings.getMendixObject());
			return (java.lang.Long)Core.execute(context, "APMAgent.GetNumberOfStatementsDatabaseProfiler_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long getOutputQueueSizeTrapTool_Field(IContext context, apmagent.proxies.TrapToolSettings _trapToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TrapToolSettings", _trapToolSettings == null ? null : _trapToolSettings.getMendixObject());
			return (java.lang.Long)Core.execute(context, "APMAgent.GetOutputQueueSizeTrapTool_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static apmagent.proxies.PerformanceToolSettings getPerformanceToolSettings(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "APMAgent.GetPerformanceToolSettings", params);
			return result == null ? null : apmagent.proxies.PerformanceToolSettings.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getProjectId_Field(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			return (java.lang.String)Core.execute(context, "APMAgent.GetProjectId_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static apmagent.proxies.RunningMetricItem getRootMetricItem(IContext context, apmagent.proxies.RunningMetricItem _runningMetricItem, java.lang.Long _level)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RunningMetricItem", _runningMetricItem == null ? null : _runningMetricItem.getMendixObject());
			params.put("Level", _level);
			IMendixObject result = (IMendixObject)Core.execute(context, "APMAgent.GetRootMetricItem", params);
			return result == null ? null : apmagent.proxies.RunningMetricItem.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<apmagent.proxies.RunningMetric> getRootMetricItems(IContext context, apmagent.proxies.RunningDomain _runningDomain)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RunningDomain", _runningDomain == null ? null : _runningDomain.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "APMAgent.GetRootMetricItems", params);
			java.util.List<apmagent.proxies.RunningMetric> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<apmagent.proxies.RunningMetric>();
				for (IMendixObject obj : objs)
					result.add(apmagent.proxies.RunningMetric.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<apmagent.proxies.RunningDomain> getRunningDomains(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "APMAgent.GetRunningDomains", params);
			java.util.List<apmagent.proxies.RunningDomain> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<apmagent.proxies.RunningDomain>();
				for (IMendixObject obj : objs)
					result.add(apmagent.proxies.RunningDomain.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<apmagent.proxies.RunningMetricItem> getRunningMetricItems(IContext context, apmagent.proxies.RunningMetric _runningMetric)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RunningMetric", _runningMetric == null ? null : _runningMetric.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "APMAgent.GetRunningMetricItems", params);
			java.util.List<apmagent.proxies.RunningMetricItem> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<apmagent.proxies.RunningMetricItem>();
				for (IMendixObject obj : objs)
					result.add(apmagent.proxies.RunningMetricItem.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<apmagent.proxies.MicroflowRunning> getRunningMicroflows(IContext context, apmagent.proxies.StatisticsToolSettings _statisticsToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("StatisticsToolSettings", _statisticsToolSettings == null ? null : _statisticsToolSettings.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "APMAgent.GetRunningMicroflows", params);
			java.util.List<apmagent.proxies.MicroflowRunning> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<apmagent.proxies.MicroflowRunning>();
				for (IMendixObject obj : objs)
					result.add(apmagent.proxies.MicroflowRunning.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<apmagent.proxies.MicroflowPerformanceRunning> getRunningRecordedMicroflows(IContext context, apmagent.proxies.PerformanceToolSettings _performanceToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PerformanceToolSettings", _performanceToolSettings == null ? null : _performanceToolSettings.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "APMAgent.GetRunningRecordedMicroflows", params);
			java.util.List<apmagent.proxies.MicroflowPerformanceRunning> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<apmagent.proxies.MicroflowPerformanceRunning>();
				for (IMendixObject obj : objs)
					result.add(apmagent.proxies.MicroflowPerformanceRunning.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Double getRuntimeAverageMessageDurationLogTool_Field(IContext context, apmagent.proxies.LogToolSettings _logToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LogToolSettings", _logToolSettings == null ? null : _logToolSettings.getMendixObject());
			return (java.lang.Double)Core.execute(context, "APMAgent.GetRuntimeAverageMessageDurationLogTool_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Double getRuntimeAverageMessageDurationPerformanceTool_Field(IContext context, apmagent.proxies.PerformanceToolSettings _performanceToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PerformanceToolSettings", _performanceToolSettings == null ? null : _performanceToolSettings.getMendixObject());
			return (java.lang.Double)Core.execute(context, "APMAgent.GetRuntimeAverageMessageDurationPerformanceTool_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Double getRuntimeAverageMessageDurationStatisticsTool_Field(IContext context, apmagent.proxies.StatisticsToolSettings _statisticsToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("StatisticsToolSettings", _statisticsToolSettings == null ? null : _statisticsToolSettings.getMendixObject());
			return (java.lang.Double)Core.execute(context, "APMAgent.GetRuntimeAverageMessageDurationStatisticsTool_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Double getRuntimeAverageMessageDurationTrapTool_Field(IContext context, apmagent.proxies.TrapToolSettings _trapToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TrapToolSettings", _trapToolSettings == null ? null : _trapToolSettings.getMendixObject());
			return (java.lang.Double)Core.execute(context, "APMAgent.GetRuntimeAverageMessageDurationTrapTool_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long getRuntimeLagDurationDatabaseProfiler_Field(IContext context, apmagent.proxies.PerformanceToolSettings _performanceToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PerformanceToolSettings", _performanceToolSettings == null ? null : _performanceToolSettings.getMendixObject());
			return (java.lang.Long)Core.execute(context, "APMAgent.GetRuntimeLagDurationDatabaseProfiler_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long getRuntimeLagDurationLogTool_Field(IContext context, apmagent.proxies.LogToolSettings _logToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LogToolSettings", _logToolSettings == null ? null : _logToolSettings.getMendixObject());
			return (java.lang.Long)Core.execute(context, "APMAgent.GetRuntimeLagDurationLogTool_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long getRuntimeLagDurationPerformanceTool_Field(IContext context, apmagent.proxies.PerformanceToolSettings _performanceToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PerformanceToolSettings", _performanceToolSettings == null ? null : _performanceToolSettings.getMendixObject());
			return (java.lang.Long)Core.execute(context, "APMAgent.GetRuntimeLagDurationPerformanceTool_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long getRuntimeLagDurationStatisticsTool_Field(IContext context, apmagent.proxies.StatisticsToolSettings _statisticsToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("StatisticsToolSettings", _statisticsToolSettings == null ? null : _statisticsToolSettings.getMendixObject());
			return (java.lang.Long)Core.execute(context, "APMAgent.GetRuntimeLagDurationStatisticsTool_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long getRuntimeLagDurationTrapTool_Field(IContext context, apmagent.proxies.TrapToolSettings _trapToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TrapToolSettings", _trapToolSettings == null ? null : _trapToolSettings.getMendixObject());
			return (java.lang.Long)Core.execute(context, "APMAgent.GetRuntimeLagDurationTrapTool_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Double getRuntimeMaxMessageDurationLogTool_Field(IContext context, apmagent.proxies.LogToolSettings _logToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LogToolSettings", _logToolSettings == null ? null : _logToolSettings.getMendixObject());
			return (java.lang.Double)Core.execute(context, "APMAgent.GetRuntimeMaxMessageDurationLogTool_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Double getRuntimeMaxMessageDurationPerformanceTool_Field(IContext context, apmagent.proxies.PerformanceToolSettings _performanceToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PerformanceToolSettings", _performanceToolSettings == null ? null : _performanceToolSettings.getMendixObject());
			return (java.lang.Double)Core.execute(context, "APMAgent.GetRuntimeMaxMessageDurationPerformanceTool_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Double getRuntimeMaxMessageDurationStatisticsTool_Field(IContext context, apmagent.proxies.StatisticsToolSettings _statisticsToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("StatisticsToolSettings", _statisticsToolSettings == null ? null : _statisticsToolSettings.getMendixObject());
			return (java.lang.Double)Core.execute(context, "APMAgent.GetRuntimeMaxMessageDurationStatisticsTool_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Double getRuntimeMaxMessageDurationTrapTool_Field(IContext context, apmagent.proxies.TrapToolSettings _trapToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TrapToolSettings", _trapToolSettings == null ? null : _trapToolSettings.getMendixObject());
			return (java.lang.Double)Core.execute(context, "APMAgent.GetRuntimeMaxMessageDurationTrapTool_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long getRuntimeMessageCounterLogTool_Field(IContext context, apmagent.proxies.LogToolSettings _logToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LogToolSettings", _logToolSettings == null ? null : _logToolSettings.getMendixObject());
			return (java.lang.Long)Core.execute(context, "APMAgent.GetRuntimeMessageCounterLogTool_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long getRuntimeMessageCounterPerformanceTool_Field(IContext context, apmagent.proxies.PerformanceToolSettings _performanceToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PerformanceToolSettings", _performanceToolSettings == null ? null : _performanceToolSettings.getMendixObject());
			return (java.lang.Long)Core.execute(context, "APMAgent.GetRuntimeMessageCounterPerformanceTool_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long getRuntimeMessageCounterStatisticsTool_Field(IContext context, apmagent.proxies.StatisticsToolSettings _statisticsToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("StatisticsToolSettings", _statisticsToolSettings == null ? null : _statisticsToolSettings.getMendixObject());
			return (java.lang.Long)Core.execute(context, "APMAgent.GetRuntimeMessageCounterStatisticsTool_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long getRuntimeMessageCounterTrapTool_Field(IContext context, apmagent.proxies.TrapToolSettings _trapToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TrapToolSettings", _trapToolSettings == null ? null : _trapToolSettings.getMendixObject());
			return (java.lang.Long)Core.execute(context, "APMAgent.GetRuntimeMessageCounterTrapTool_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<apmagent.proxies.CallTreeHelper> getShowTreeChildren(IContext context, apmagent.proxies.CallTreeHelper _callTreeHelper)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CallTreeHelper", _callTreeHelper == null ? null : _callTreeHelper.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "APMAgent.GetShowTreeChildren", params);
			java.util.List<apmagent.proxies.CallTreeHelper> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<apmagent.proxies.CallTreeHelper>();
				for (IMendixObject obj : objs)
					result.add(apmagent.proxies.CallTreeHelper.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<apmagent.proxies.ProfilerDatabaseLogObject> getSQLsForMicroflow(IContext context, apmagent.proxies.MicroflowPerformance _microflowPerformance)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MicroflowPerformance", _microflowPerformance == null ? null : _microflowPerformance.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "APMAgent.GetSQLsForMicroflow", params);
			java.util.List<apmagent.proxies.ProfilerDatabaseLogObject> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<apmagent.proxies.ProfilerDatabaseLogObject>();
				for (IMendixObject obj : objs)
					result.add(apmagent.proxies.ProfilerDatabaseLogObject.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<apmagent.proxies.ProfilerDatabaseLogObject> getSQLsInsideInterval(IContext context, java.util.Date _startDateTime, java.util.Date _endDateTime, java.lang.Long _durationLargerThan)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("StartDateTime", _startDateTime);
			params.put("EndDateTime", _endDateTime);
			params.put("DurationLargerThan", _durationLargerThan);
			java.util.List<IMendixObject> objs = Core.execute(context, "APMAgent.GetSQLsInsideInterval", params);
			java.util.List<apmagent.proxies.ProfilerDatabaseLogObject> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<apmagent.proxies.ProfilerDatabaseLogObject>();
				for (IMendixObject obj : objs)
					result.add(apmagent.proxies.ProfilerDatabaseLogObject.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void getStatistics2(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.GetStatistics2", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static apmagent.proxies.StatisticsToolSettings getStatisticsToolSettings(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "APMAgent.GetStatisticsToolSettings", params);
			return result == null ? null : apmagent.proxies.StatisticsToolSettings.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getStoragePassword(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.String)Core.execute(context, "APMAgent.GetStoragePassword", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static apmagent.proxies.MicroflowPerformance getSubMicroflow(IContext context, apmagent.proxies.ActionPerformance _actionPerformance)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ActionPerformance", _actionPerformance == null ? null : _actionPerformance.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "APMAgent.GetSubMicroflow", params);
			return result == null ? null : apmagent.proxies.MicroflowPerformance.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static apmagent.proxies.TrapToolSettings getTrapToolSettings(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "APMAgent.GetTrapToolSettings", params);
			return result == null ? null : apmagent.proxies.TrapToolSettings.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean isInDevelopment_Field(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "APMAgent.IsInDevelopment_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AdvisedNonProductionSettings(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_AdvisedNonProductionSettings", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AdvisedProductionSettings(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_AdvisedProductionSettings", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AfterStartup(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_AfterStartup", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AllInfo(IContext context, java.util.List<apmagent.proxies.LogNode> _logNodeList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_logNodeList = null;
			if (_logNodeList != null)
			{
				listparam_logNodeList = new java.util.ArrayList<IMendixObject>();
				for (apmagent.proxies.LogNode obj : _logNodeList)
					listparam_logNodeList.add(obj.getMendixObject());
			}
			params.put("LogNodeList", listparam_logNodeList);
			Core.execute(context, "APMAgent.IVK_AllInfo", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AllNone(IContext context, java.util.List<apmagent.proxies.LogNode> _logNodeList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_logNodeList = null;
			if (_logNodeList != null)
			{
				listparam_logNodeList = new java.util.ArrayList<IMendixObject>();
				for (apmagent.proxies.LogNode obj : _logNodeList)
					listparam_logNodeList.add(obj.getMendixObject());
			}
			params.put("LogNodeList", listparam_logNodeList);
			Core.execute(context, "APMAgent.IVK_AllNone", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_BeforeShutdown(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_BeforeShutdown", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CancelPerformanceMeasurement(IContext context, apmagent.proxies.PerformanceToolSettings _performanceToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PerformanceToolSettings", _performanceToolSettings == null ? null : _performanceToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_CancelPerformanceMeasurement", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ChangePassword(IContext context, apmagent.proxies.JDBCSetting _jDBCSetting)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("JDBCSetting", _jDBCSetting == null ? null : _jDBCSetting.getMendixObject());
			Core.execute(context, "APMAgent.IVK_ChangePassword", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Close_ShowTreeDialog(IContext context, apmagent.proxies.CallTreeConfig _callTreeConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CallTreeConfig", _callTreeConfig == null ? null : _callTreeConfig.getMendixObject());
			Core.execute(context, "APMAgent.IVK_Close_ShowTreeDialog", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CloseForm(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_CloseForm", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Collect(IContext context, apmagent.proxies.RunningMetricItem _runningMetricItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RunningMetricItem", _runningMetricItem == null ? null : _runningMetricItem.getMendixObject());
			Core.execute(context, "APMAgent.IVK_Collect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CollectDialog(IContext context, apmagent.proxies.RunningMetricItem _runningMetricItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RunningMetricItem", _runningMetricItem == null ? null : _runningMetricItem.getMendixObject());
			Core.execute(context, "APMAgent.IVK_CollectDialog", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CollectQuery(IContext context, apmagent.proxies.QueryStatement _queryStatement)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryStatement", _queryStatement == null ? null : _queryStatement.getMendixObject());
			Core.execute(context, "APMAgent.IVK_CollectQuery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ConsoleOpenLogTool(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_ConsoleOpenLogTool", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ConsoleOpenPerformanceTool(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_ConsoleOpenPerformanceTool", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ConsoleOpenStatisticsTool(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_ConsoleOpenStatisticsTool", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ConsoleOpenTrapTool(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_ConsoleOpenTrapTool", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CopySettings(IContext context, apmagent.proxies.JDBCSetting _jDBCSetting)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("JDBCSetting", _jDBCSetting == null ? null : _jDBCSetting.getMendixObject());
			Core.execute(context, "APMAgent.IVK_CopySettings", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CopyStatement(IContext context, apmagent.proxies.QueryStatement _queryStatement)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryStatement", _queryStatement == null ? null : _queryStatement.getMendixObject());
			Core.execute(context, "APMAgent.IVK_CopyStatement", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CopyTrigger(IContext context, apmagent.proxies.MetricTrigger _metricTrigger)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MetricTrigger", _metricTrigger == null ? null : _metricTrigger.getMendixObject());
			Core.execute(context, "APMAgent.IVK_CopyTrigger", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CreateSampleData(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_CreateSampleData", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DebugClearInit(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_DebugClearInit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DebugGenerateCritical(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_DebugGenerateCritical", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DebugGenerateError(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_DebugGenerateError", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DebugGenerateJavaConsoleErr(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_DebugGenerateJavaConsoleErr", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DebugGenerateJavaConsoleOut(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_DebugGenerateJavaConsoleOut", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DebugGenerateWarning(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_DebugGenerateWarning", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DecreaseLogLevels(IContext context, java.util.List<apmagent.proxies.LogNode> _logNodeList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_logNodeList = null;
			if (_logNodeList != null)
			{
				listparam_logNodeList = new java.util.ArrayList<IMendixObject>();
				for (apmagent.proxies.LogNode obj : _logNodeList)
					listparam_logNodeList.add(obj.getMendixObject());
			}
			params.put("LogNodeList", listparam_logNodeList);
			Core.execute(context, "APMAgent.IVK_DecreaseLogLevels", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DownAction(IContext context, apmagent.proxies.ActionPerformanceRunning _actionPerformanceRunning)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ActionPerformanceRunning", _actionPerformanceRunning == null ? null : _actionPerformanceRunning.getMendixObject());
			Core.execute(context, "APMAgent.IVK_DownAction", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DownAndRefreshMicroflow(IContext context, apmagent.proxies.MicroflowPerformanceRunning _microflowPerformanceRunning)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MicroflowPerformanceRunning", _microflowPerformanceRunning == null ? null : _microflowPerformanceRunning.getMendixObject());
			Core.execute(context, "APMAgent.IVK_DownAndRefreshMicroflow", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ExcludeTrap(IContext context, apmagent.proxies.TrapMessage _trapMessage)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TrapMessage", _trapMessage == null ? null : _trapMessage.getMendixObject());
			Core.execute(context, "APMAgent.IVK_ExcludeTrap", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ExcludeTrapFromLogTool(IContext context, apmagent.proxies.LogMessage _logMessage)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LogMessage", _logMessage == null ? null : _logMessage.getMendixObject());
			Core.execute(context, "APMAgent.IVK_ExcludeTrapFromLogTool", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ExecuteIDStatement(IContext context, apmagent.proxies.QueryStatement _queryStatement)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryStatement", _queryStatement == null ? null : _queryStatement.getMendixObject());
			Core.execute(context, "APMAgent.IVK_ExecuteIDStatement", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ExecuteJDBCQueryStatement(IContext context, apmagent.proxies.QueryStatement _queryStatement)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryStatement", _queryStatement == null ? null : _queryStatement.getMendixObject());
			Core.execute(context, "APMAgent.IVK_ExecuteJDBCQueryStatement", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ExecuteOQLStatement(IContext context, apmagent.proxies.QueryStatement _queryStatement)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryStatement", _queryStatement == null ? null : _queryStatement.getMendixObject());
			Core.execute(context, "APMAgent.IVK_ExecuteOQLStatement", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ExecuteXPathStatement(IContext context, apmagent.proxies.QueryStatement _queryStatement)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryStatement", _queryStatement == null ? null : _queryStatement.getMendixObject());
			Core.execute(context, "APMAgent.IVK_ExecuteXPathStatement", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ExitWizard_End(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_ExitWizard_End", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ExitWizard_ToBeContinued(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_ExitWizard_ToBeContinued", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ExplainPlan(IContext context, apmagent.proxies.ProfilerDatabaseLogObject _profilerDatabaseLogObject)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ProfilerDatabaseLogObject", _profilerDatabaseLogObject == null ? null : _profilerDatabaseLogObject.getMendixObject());
			Core.execute(context, "APMAgent.IVK_ExplainPlan", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_GetRunningStatistics(IContext context, apmagent.proxies.StatisticsToolSettings _statisticsToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("StatisticsToolSettings", _statisticsToolSettings == null ? null : _statisticsToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_GetRunningStatistics", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_GetRunningStatistics2(IContext context, apmagent.proxies.StatisticsToolSettings _statisticsToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("StatisticsToolSettings", _statisticsToolSettings == null ? null : _statisticsToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_GetRunningStatistics2", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_GetStatisticsNow(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_GetStatisticsNow", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ImportLogTool(IContext context, apmagent.proxies.LogToolSettings _logToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LogToolSettings", _logToolSettings == null ? null : _logToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_ImportLogTool", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ImportPerformanceTool(IContext context, apmagent.proxies.PerformanceToolSettings _performanceToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PerformanceToolSettings", _performanceToolSettings == null ? null : _performanceToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_ImportPerformanceTool", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ImportToStatisticsTool(IContext context, apmagent.proxies.StatisticsToolSettings _statisticsToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("StatisticsToolSettings", _statisticsToolSettings == null ? null : _statisticsToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_ImportToStatisticsTool", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_IncreaseLogLevels(IContext context, java.util.List<apmagent.proxies.LogNode> _logNodeList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_logNodeList = null;
			if (_logNodeList != null)
			{
				listparam_logNodeList = new java.util.ArrayList<IMendixObject>();
				for (apmagent.proxies.LogNode obj : _logNodeList)
					listparam_logNodeList.add(obj.getMendixObject());
			}
			params.put("LogNodeList", listparam_logNodeList);
			Core.execute(context, "APMAgent.IVK_IncreaseLogLevels", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NextOnDataConfiguration(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_NextOnDataConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NextOnGlobalSettings(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_NextOnGlobalSettings", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NextOnInitWizard(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_NextOnInitWizard", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NextOnLicense(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_NextOnLicense", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Open_JDBCSettings(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_Open_JDBCSettings", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Open_QueryExecutionHistory(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_Open_QueryExecutionHistory", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Open_QueryTool(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_Open_QueryTool", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenAction(IContext context, apmagent.proxies.ActionPerformance _actionPerformance)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ActionPerformance", _actionPerformance == null ? null : _actionPerformance.getMendixObject());
			Core.execute(context, "APMAgent.IVK_OpenAction", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenAction_DEBUG(IContext context, apmagent.proxies.ActionPerformance _actionPerformance)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ActionPerformance", _actionPerformance == null ? null : _actionPerformance.getMendixObject());
			Core.execute(context, "APMAgent.IVK_OpenAction_DEBUG", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenActionOrSubMicroflow(IContext context, apmagent.proxies.ActionPerformance _actionPerformance)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ActionPerformance", _actionPerformance == null ? null : _actionPerformance.getMendixObject());
			Core.execute(context, "APMAgent.IVK_OpenActionOrSubMicroflow", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenConsole(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_OpenConsole", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenDataConfiguration(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_OpenDataConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenGlobalSettings(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_OpenGlobalSettings", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenJVMConsole_NoParameters(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_OpenJVMConsole_NoParameters", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenJVMConsole_WithGlobalSettings(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_OpenJVMConsole_WithGlobalSettings", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenLicenseDialog(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_OpenLicenseDialog", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenLogNodeLevels(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_OpenLogNodeLevels", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenLogToolOptions(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_OpenLogToolOptions", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenMeasurements_NoParameters(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_OpenMeasurements_NoParameters", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenMeasurements_WithGlobalSettings(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_OpenMeasurements_WithGlobalSettings", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenMetricCollectorOptions_NoParameters(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_OpenMetricCollectorOptions_NoParameters", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenMetricCollectorOptions_WithGlobalSettings(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_OpenMetricCollectorOptions_WithGlobalSettings", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenMicroflow(IContext context, apmagent.proxies.MicroflowPerformance _microflowPerformance)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MicroflowPerformance", _microflowPerformance == null ? null : _microflowPerformance.getMendixObject());
			Core.execute(context, "APMAgent.IVK_OpenMicroflow", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenMicroflowFromAction(IContext context, apmagent.proxies.ActionPerformance _actionPerformance)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ActionPerformance", _actionPerformance == null ? null : _actionPerformance.getMendixObject());
			Core.execute(context, "APMAgent.IVK_OpenMicroflowFromAction", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenPerformanceToolFilterNotRunning(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_OpenPerformanceToolFilterNotRunning", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenPerformanceToolFilterRunning(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_OpenPerformanceToolFilterRunning", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenPerformanceToolOptions(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_OpenPerformanceToolOptions", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenRunningMicroflowsDialog(IContext context, apmagent.proxies.PerformanceToolSettings _performanceToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PerformanceToolSettings", _performanceToolSettings == null ? null : _performanceToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_OpenRunningMicroflowsDialog", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenSelectUserDialog(IContext context, apmagent.proxies.QueryStatement _queryStatement)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryStatement", _queryStatement == null ? null : _queryStatement.getMendixObject());
			Core.execute(context, "APMAgent.IVK_OpenSelectUserDialog", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenShowTree_ChangeParameters(IContext context, apmagent.proxies.CallTreeConfig _callTreeConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CallTreeConfig", _callTreeConfig == null ? null : _callTreeConfig.getMendixObject());
			Core.execute(context, "APMAgent.IVK_OpenShowTree_ChangeParameters", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenShowTreeConfig_List(IContext context, java.util.List<apmagent.proxies.MicroflowPerformance> _microflowPerformanceList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_microflowPerformanceList = null;
			if (_microflowPerformanceList != null)
			{
				listparam_microflowPerformanceList = new java.util.ArrayList<IMendixObject>();
				for (apmagent.proxies.MicroflowPerformance obj : _microflowPerformanceList)
					listparam_microflowPerformanceList.add(obj.getMendixObject());
			}
			params.put("MicroflowPerformanceList", listparam_microflowPerformanceList);
			Core.execute(context, "APMAgent.IVK_OpenShowTreeConfig_List", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenShowTreeConfig_Single(IContext context, apmagent.proxies.MicroflowPerformance _microflowPerformance)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MicroflowPerformance", _microflowPerformance == null ? null : _microflowPerformance.getMendixObject());
			Core.execute(context, "APMAgent.IVK_OpenShowTreeConfig_Single", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenStartStopRerouting_NoParameters(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_OpenStartStopRerouting_NoParameters", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenStartStopRerouting_WithGlobalSettings(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_OpenStartStopRerouting_WithGlobalSettings", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenStatisticsToolOptions(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_OpenStatisticsToolOptions", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenTrapNodeExclusions(IContext context, apmagent.proxies.TrapToolSettings _trapToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TrapToolSettings", _trapToolSettings == null ? null : _trapToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_OpenTrapNodeExclusions", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_OpenTrapToolOptions(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_OpenTrapToolOptions", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_PerformHeapDump(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_PerformHeapDump", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_PreviousOnDataConfiguration(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_PreviousOnDataConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_PreviousOnGlobalSettings(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_PreviousOnGlobalSettings", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_PreviousOnLicense(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_PreviousOnLicense", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_PreviousOnStartStop(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_PreviousOnStartStop", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ProcessLogMessagesInPerformanceTool(IContext context, java.util.List<apmagent.proxies.LogMessage> _logMessageList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_logMessageList = null;
			if (_logMessageList != null)
			{
				listparam_logMessageList = new java.util.ArrayList<IMendixObject>();
				for (apmagent.proxies.LogMessage obj : _logMessageList)
					listparam_logMessageList.add(obj.getMendixObject());
			}
			params.put("LogMessageList", listparam_logMessageList);
			Core.execute(context, "APMAgent.IVK_ProcessLogMessagesInPerformanceTool", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ProcessPerformanceTool(IContext context, apmagent.proxies.PerformanceToolSettings _performanceToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PerformanceToolSettings", _performanceToolSettings == null ? null : _performanceToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_ProcessPerformanceTool", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ProcessTrapMemory(IContext context, apmagent.proxies.PerformanceToolSettings _performanceToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PerformanceToolSettings", _performanceToolSettings == null ? null : _performanceToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_ProcessTrapMemory", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ProcessTrapMessagesInPerformanceTool(IContext context, java.util.List<apmagent.proxies.TrapMessage> _trapMessageList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_trapMessageList = null;
			if (_trapMessageList != null)
			{
				listparam_trapMessageList = new java.util.ArrayList<IMendixObject>();
				for (apmagent.proxies.TrapMessage obj : _trapMessageList)
					listparam_trapMessageList.add(obj.getMendixObject());
			}
			params.put("TrapMessageList", listparam_trapMessageList);
			Core.execute(context, "APMAgent.IVK_ProcessTrapMessagesInPerformanceTool", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean iVK_RefreshConsole(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.Boolean)Core.execute(context, "APMAgent.IVK_RefreshConsole", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RefreshDomain(IContext context, apmagent.proxies.RunningDomain _runningDomain)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RunningDomain", _runningDomain == null ? null : _runningDomain.getMendixObject());
			Core.execute(context, "APMAgent.IVK_RefreshDomain", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RefreshMainMetric(IContext context, apmagent.proxies.RunningMetric _runningMetric)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RunningMetric", _runningMetric == null ? null : _runningMetric.getMendixObject());
			Core.execute(context, "APMAgent.IVK_RefreshMainMetric", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RefreshMetric(IContext context, apmagent.proxies.RunningMetricItem _runningMetricItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RunningMetricItem", _runningMetricItem == null ? null : _runningMetricItem.getMendixObject());
			Core.execute(context, "APMAgent.IVK_RefreshMetric", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RefreshMetricDialog(IContext context, apmagent.proxies.RunningMetricItem _runningMetricItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RunningMetricItem", _runningMetricItem == null ? null : _runningMetricItem.getMendixObject());
			Core.execute(context, "APMAgent.IVK_RefreshMetricDialog", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RefreshRunningMicroflows(IContext context, apmagent.proxies.StatisticsToolSettings _statisticsToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("StatisticsToolSettings", _statisticsToolSettings == null ? null : _statisticsToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_RefreshRunningMicroflows", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RefreshStatistics_LogTool(IContext context, apmagent.proxies.LogToolSettings _logToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LogToolSettings", _logToolSettings == null ? null : _logToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_RefreshStatistics_LogTool", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RefreshStatistics_PerformanceTool_ADMIN(IContext context, apmagent.proxies.PerformanceToolSettings _performanceToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PerformanceToolSettings", _performanceToolSettings == null ? null : _performanceToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_RefreshStatistics_PerformanceTool_ADMIN", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RefreshStatistics_PerformanceTool_DEBUG(IContext context, apmagent.proxies.PerformanceToolSettings _performanceToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PerformanceToolSettings", _performanceToolSettings == null ? null : _performanceToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_RefreshStatistics_PerformanceTool_DEBUG", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RefreshStatistics_RunningStatistics(IContext context, apmagent.proxies.StatisticsToolSettings _statisticsToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("StatisticsToolSettings", _statisticsToolSettings == null ? null : _statisticsToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_RefreshStatistics_RunningStatistics", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RefreshStatistics_TrapTool(IContext context, apmagent.proxies.TrapToolSettings _trapToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TrapToolSettings", _trapToolSettings == null ? null : _trapToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_RefreshStatistics_TrapTool", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ReGenerateShowTreeList(IContext context, apmagent.proxies.CallTreeConfig _callTreeConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CallTreeConfig", _callTreeConfig == null ? null : _callTreeConfig.getMendixObject());
			Core.execute(context, "APMAgent.IVK_ReGenerateShowTreeList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ResetMicroflowStatistics2(IContext context, apmagent.proxies.StatisticsToolSettings _statisticsToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("StatisticsToolSettings", _statisticsToolSettings == null ? null : _statisticsToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_ResetMicroflowStatistics2", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ResetRanges(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_ResetRanges", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ResetRuntimeStatisticsLogTool(IContext context, apmagent.proxies.LogToolSettings _logToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LogToolSettings", _logToolSettings == null ? null : _logToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_ResetRuntimeStatisticsLogTool", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ResetRuntimeStatisticsPerformanceTool(IContext context, apmagent.proxies.PerformanceToolSettings _performanceToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PerformanceToolSettings", _performanceToolSettings == null ? null : _performanceToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_ResetRuntimeStatisticsPerformanceTool", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ResetRuntimeStatisticsStatisticsTool(IContext context, apmagent.proxies.StatisticsToolSettings _statisticsToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("StatisticsToolSettings", _statisticsToolSettings == null ? null : _statisticsToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_ResetRuntimeStatisticsStatisticsTool", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ResetRuntimeStatisticsTrapTool(IContext context, apmagent.proxies.TrapToolSettings _trapToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TrapToolSettings", _trapToolSettings == null ? null : _trapToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_ResetRuntimeStatisticsTrapTool", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RunningMicroflowPerformance_Refresh(IContext context, apmagent.proxies.PerformanceToolSettings _performanceToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PerformanceToolSettings", _performanceToolSettings == null ? null : _performanceToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_RunningMicroflowPerformance_Refresh", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RunningMicroflowPerformance_RefreshAll(IContext context, apmagent.proxies.PerformanceToolSettings _performanceToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PerformanceToolSettings", _performanceToolSettings == null ? null : _performanceToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_RunningMicroflowPerformance_RefreshAll", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SaveEncryptedPassword(IContext context, apmagent.proxies.JDBCChangePassword _jDBCChangePassword)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("JDBCChangePassword", _jDBCChangePassword == null ? null : _jDBCChangePassword.getMendixObject());
			Core.execute(context, "APMAgent.IVK_SaveEncryptedPassword", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SaveExclusion(IContext context, apmagent.proxies.TrapNodeExclusion _trapNodeExclusion)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TrapNodeExclusion", _trapNodeExclusion == null ? null : _trapNodeExclusion.getMendixObject());
			Core.execute(context, "APMAgent.IVK_SaveExclusion", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SaveMetricCollector(IContext context, apmagent.proxies.MetricCollector _metricCollector)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MetricCollector", _metricCollector == null ? null : _metricCollector.getMendixObject());
			Core.execute(context, "APMAgent.IVK_SaveMetricCollector", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SearchMeasurements(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_SearchMeasurements", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SearchMicroflowActions(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_SearchMicroflowActions", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SearchMicroflows(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_SearchMicroflows", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SearchProfilerDatabaseStatements(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_SearchProfilerDatabaseStatements", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SearchProfilerRuntimes(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_SearchProfilerRuntimes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SelectUser(IContext context, system.proxies.User _user, apmagent.proxies.QueryStatement _queryStatement)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("User", _user == null ? null : _user.getMendixObject());
			params.put("QueryStatement", _queryStatement == null ? null : _queryStatement.getMendixObject());
			Core.execute(context, "APMAgent.IVK_SelectUser", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SetOptionsAndClose(IContext context, apmagent.proxies.PerformanceToolSettings _performanceToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PerformanceToolSettings", _performanceToolSettings == null ? null : _performanceToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_SetOptionsAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SetOptionsLogTool(IContext context, apmagent.proxies.LogToolSettings _logToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LogToolSettings", _logToolSettings == null ? null : _logToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_SetOptionsLogTool", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SetOptionsPerformanceTool(IContext context, apmagent.proxies.PerformanceToolSettings _performanceToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PerformanceToolSettings", _performanceToolSettings == null ? null : _performanceToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_SetOptionsPerformanceTool", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SetOptionsStatisticsTool(IContext context, apmagent.proxies.StatisticsToolSettings _statisticsToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("StatisticsToolSettings", _statisticsToolSettings == null ? null : _statisticsToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_SetOptionsStatisticsTool", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SetOptionsTrapTool(IContext context, apmagent.proxies.TrapToolSettings _trapToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TrapToolSettings", _trapToolSettings == null ? null : _trapToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_SetOptionsTrapTool", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ShowStoredStatistics(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_ShowStoredStatistics", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_StartAll(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_StartAll", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_StartAllMeasurement(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_StartAllMeasurement", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_StartJavaConsoleLogging(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_StartJavaConsoleLogging", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_StartJavaUtilLogging(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_StartJavaUtilLogging", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean iVK_StartJMX(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "APMAgent.IVK_StartJMX", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_StartJMXAndRefreshDomains(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_StartJMXAndRefreshDomains", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_StartLog4jLogging(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_StartLog4jLogging", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_StartLogTool(IContext context, apmagent.proxies.LogToolSettings _logToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LogToolSettings", _logToolSettings == null ? null : _logToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_StartLogTool", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_StartMeasurement(IContext context, apmagent.proxies.MetricCollector _metricCollector)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MetricCollector", _metricCollector == null ? null : _metricCollector.getMendixObject());
			Core.execute(context, "APMAgent.IVK_StartMeasurement", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_StartPerformanceMeasurement(IContext context, apmagent.proxies.PerformanceToolSettings _performanceToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PerformanceToolSettings", _performanceToolSettings == null ? null : _performanceToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_StartPerformanceMeasurement", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_StartStatisticsTool(IContext context, apmagent.proxies.StatisticsToolSettings _statisticsToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("StatisticsToolSettings", _statisticsToolSettings == null ? null : _statisticsToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_StartStatisticsTool", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_StartTrapTool(IContext context, apmagent.proxies.TrapToolSettings _trapToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TrapToolSettings", _trapToolSettings == null ? null : _trapToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_StartTrapTool", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_StopAllMeasurement(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_StopAllMeasurement", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_StopJavaConsoleLogging(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_StopJavaConsoleLogging", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_StopJavaUtilLogging(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_StopJavaUtilLogging", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_StopJMX(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_StopJMX", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_StopLog4jLogging(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_StopLog4jLogging", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_StopLogTool(IContext context, apmagent.proxies.LogToolSettings _logToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LogToolSettings", _logToolSettings == null ? null : _logToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_StopLogTool", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_StopMeasurement(IContext context, apmagent.proxies.MetricCollector _metricCollector)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MetricCollector", _metricCollector == null ? null : _metricCollector.getMendixObject());
			Core.execute(context, "APMAgent.IVK_StopMeasurement", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_StopRecordingPerformanceTool(IContext context, apmagent.proxies.PerformanceToolSettings _performanceToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PerformanceToolSettings", _performanceToolSettings == null ? null : _performanceToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_StopRecordingPerformanceTool", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_StopStatisticsTool(IContext context, apmagent.proxies.StatisticsToolSettings _statisticsToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("StatisticsToolSettings", _statisticsToolSettings == null ? null : _statisticsToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_StopStatisticsTool", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_StopTrapTool(IContext context, apmagent.proxies.TrapToolSettings _trapToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TrapToolSettings", _trapToolSettings == null ? null : _trapToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_StopTrapTool", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_StoreRunningMicroflows(IContext context, apmagent.proxies.MicroflowPerformanceRunning _microflowPerformanceRunning)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MicroflowPerformanceRunning", _microflowPerformanceRunning == null ? null : _microflowPerformanceRunning.getMendixObject());
			Core.execute(context, "APMAgent.IVK_StoreRunningMicroflows", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SwapEnabled(IContext context, apmagent.proxies.MetricCollector _metricCollector)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MetricCollector", _metricCollector == null ? null : _metricCollector.getMendixObject());
			Core.execute(context, "APMAgent.IVK_SwapEnabled", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_TestRegex(IContext context, apmagent.proxies.TrapNodeExclusion _trapNodeExclusion)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TrapNodeExclusion", _trapNodeExclusion == null ? null : _trapNodeExclusion.getMendixObject());
			Core.execute(context, "APMAgent.IVK_TestRegex", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_TrapNow(IContext context, apmagent.proxies.TrapToolSettings _trapToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TrapToolSettings", _trapToolSettings == null ? null : _trapToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_TrapNow", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_UpAction(IContext context, apmagent.proxies.ActionPerformanceRunning _actionPerformanceRunning)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ActionPerformanceRunning", _actionPerformanceRunning == null ? null : _actionPerformanceRunning.getMendixObject());
			Core.execute(context, "APMAgent.IVK_UpAction", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_Upgrade(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.IVK_Upgrade", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_UpMicroflow(IContext context, apmagent.proxies.MicroflowPerformanceRunning _microflowPerformanceRunning)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MicroflowPerformanceRunning", _microflowPerformanceRunning == null ? null : _microflowPerformanceRunning.getMendixObject());
			Core.execute(context, "APMAgent.IVK_UpMicroflow", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ValidateLicense(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			Core.execute(context, "APMAgent.IVK_ValidateLicense", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ViewAttributes(IContext context, apmagent.proxies.RunningMetricItem _runningMetricItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RunningMetricItem", _runningMetricItem == null ? null : _runningMetricItem.getMendixObject());
			Core.execute(context, "APMAgent.IVK_ViewAttributes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean javaConsoleLoggingIsRunning_Field(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "APMAgent.JavaConsoleLoggingIsRunning_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean javaUtilLoggingIsRunning_Field(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "APMAgent.JavaUtilLoggingIsRunning_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean jMXIsRunning_Field(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "APMAgent.JMXIsRunning_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<apmagent.proxies.CallTreeHelper> jS_GetShowTree(IContext context, apmagent.proxies.CallTreeConfig _callTreeConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CallTreeConfig", _callTreeConfig == null ? null : _callTreeConfig.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "APMAgent.JS_GetShowTree", params);
			java.util.List<apmagent.proxies.CallTreeHelper> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<apmagent.proxies.CallTreeHelper>();
				for (IMendixObject obj : objs)
					result.add(apmagent.proxies.CallTreeHelper.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void jS_ShowTreeOpenMicroflowOrAction(IContext context, apmagent.proxies.CallTreeHelper _callTreeHelper)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CallTreeHelper", _callTreeHelper == null ? null : _callTreeHelper.getMendixObject());
			Core.execute(context, "APMAgent.JS_ShowTreeOpenMicroflowOrAction", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean log4jLoggingIsRunning_Field(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "APMAgent.Log4jLoggingIsRunning_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean logToolIsRunning_Field(IContext context, apmagent.proxies.LogToolSettings _logToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LogToolSettings", _logToolSettings == null ? null : _logToolSettings.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "APMAgent.LogToolIsRunning_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String mailToURL_Field(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			return (java.lang.String)Core.execute(context, "APMAgent.MailToURL_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void markUserOnSubMicroflows(IContext context, apmagent.proxies.MicroflowPerformance _microflowPerformance, java.lang.Long _depth, boolean _subOnly)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MicroflowPerformance", _microflowPerformance == null ? null : _microflowPerformance.getMendixObject());
			params.put("Depth", _depth);
			params.put("SubOnly", _subOnly);
			Core.execute(context, "APMAgent.MarkUserOnSubMicroflows", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void maxLevel(IContext context, apmagent.proxies.LogToolSettings _logToolSettings, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LogToolSettings", _logToolSettings == null ? null : _logToolSettings.getMendixObject());
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			Core.execute(context, "APMAgent.MaxLevel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void metricCommitAndStore(IContext context, apmagent.proxies.MetricCollector _metricCollector, apmagent.proxies.Metric _metric)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MetricCollector", _metricCollector == null ? null : _metricCollector.getMendixObject());
			params.put("Metric", _metric == null ? null : _metric.getMendixObject());
			Core.execute(context, "APMAgent.MetricCommitAndStore", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oCh_QueryType(IContext context, apmagent.proxies.QueryStatement _queryStatement)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryStatement", _queryStatement == null ? null : _queryStatement.getMendixObject());
			Core.execute(context, "APMAgent.OCh_QueryType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oCh_Range(IContext context, apmagent.proxies.MetricCollectorItem _metricCollectorItem)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MetricCollectorItem", _metricCollectorItem == null ? null : _metricCollectorItem.getMendixObject());
			Core.execute(context, "APMAgent.OCh_Range", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean performanceToolIsRecording_Field(IContext context, apmagent.proxies.PerformanceToolSettings _performanceToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PerformanceToolSettings", _performanceToolSettings == null ? null : _performanceToolSettings.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "APMAgent.PerformanceToolIsRecording_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean performanceToolIsRunning_Field(IContext context, apmagent.proxies.PerformanceToolSettings _performanceToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PerformanceToolSettings", _performanceToolSettings == null ? null : _performanceToolSettings.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "APMAgent.PerformanceToolIsRunning_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean privateScheduledEventIsRunning_Field(IContext context, apmagent.proxies.MetricCollector _metricCollector)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MetricCollector", _metricCollector == null ? null : _metricCollector.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "APMAgent.PrivateScheduledEventIsRunning_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean privateScheduledEventsAreRunning_Field(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "APMAgent.PrivateScheduledEventsAreRunning_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void processMetric(IContext context, apmagent.proxies.MetricCollectorItem _metricCollectorItem, apmagent.proxies.Metric _metric, apmagent.proxies.MetricCollector _metricCollector)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MetricCollectorItem", _metricCollectorItem == null ? null : _metricCollectorItem.getMendixObject());
			params.put("Metric", _metric == null ? null : _metric.getMendixObject());
			params.put("MetricCollector", _metricCollector == null ? null : _metricCollector.getMendixObject());
			Core.execute(context, "APMAgent.ProcessMetric", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean processPerformanceMeasurement(IContext context, apmagent.proxies.PerformanceToolSettings _performanceToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PerformanceToolSettings", _performanceToolSettings == null ? null : _performanceToolSettings.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "APMAgent.ProcessPerformanceMeasurement", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean profilerIsRecording_Field(IContext context, apmagent.proxies.PerformanceToolSettings _performanceToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PerformanceToolSettings", _performanceToolSettings == null ? null : _performanceToolSettings.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "APMAgent.ProfilerIsRecording_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean profilerIsRunning_Field(IContext context, apmagent.proxies.PerformanceToolSettings _performanceToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PerformanceToolSettings", _performanceToolSettings == null ? null : _performanceToolSettings.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "APMAgent.ProfilerIsRunning_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void refreshRunningDomains(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			Core.execute(context, "APMAgent.RefreshRunningDomains", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean reroutingIsRunning_Field(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "APMAgent.ReroutingIsRunning_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void restartScheduledEvent(IContext context, apmagent.proxies.MetricCollector _metricCollector)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MetricCollector", _metricCollector == null ? null : _metricCollector.getMendixObject());
			Core.execute(context, "APMAgent.RestartScheduledEvent", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean runAfterStartupConstant_Field(IContext context, apmagent.proxies.GlobalSettings _globalSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GlobalSettings", _globalSettings == null ? null : _globalSettings.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "APMAgent.RunAfterStartupConstant_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean statisticsToolIsRecording_Field(IContext context, apmagent.proxies.StatisticsToolSettings _statisticsToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("StatisticsToolSettings", _statisticsToolSettings == null ? null : _statisticsToolSettings.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "APMAgent.StatisticsToolIsRecording_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean statisticsToolIsRunning_Field(IContext context, apmagent.proxies.StatisticsToolSettings _statisticsToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("StatisticsToolSettings", _statisticsToolSettings == null ? null : _statisticsToolSettings.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "APMAgent.StatisticsToolIsRunning_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void stopRecordingPerformanceMeasurement(IContext context, apmagent.proxies.PerformanceToolSettings _performanceToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PerformanceToolSettings", _performanceToolSettings == null ? null : _performanceToolSettings.getMendixObject());
			Core.execute(context, "APMAgent.StopRecordingPerformanceMeasurement", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean stopScheduledEvent_BeforeDelete(IContext context, apmagent.proxies.MetricCollector _metricCollector)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MetricCollector", _metricCollector == null ? null : _metricCollector.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "APMAgent.StopScheduledEvent_BeforeDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean trapToolIsRunning_Field(IContext context, apmagent.proxies.TrapToolSettings _trapToolSettings)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TrapToolSettings", _trapToolSettings == null ? null : _trapToolSettings.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "APMAgent.TrapToolIsRunning_Field", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void upgradeMetricCollector(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "APMAgent.UpgradeMetricCollector", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateMeticCollectorQuery(IContext context, apmagent.proxies.MetricCollectorQuery _metricCollectorQuery)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MetricCollectorQuery", _metricCollectorQuery == null ? null : _metricCollectorQuery.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "APMAgent.ValidateMeticCollectorQuery", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}