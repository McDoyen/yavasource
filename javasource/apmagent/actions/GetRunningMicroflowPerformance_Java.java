// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package apmagent.actions;

import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;

/**
 * Due to the dynamic nature of the list the chunking has been replace with a size/fixedsize retrieve.
 * 
 * You will allways retrieve max [Size] new microflows and if [FixedSize] is true the existing microflows in memory add to the total, so the maximum will not be breached.
 */
public class GetRunningMicroflowPerformance_Java extends CustomJavaAction<java.lang.Boolean>
{
	private IMendixObject __PerformanceToolSettingsParameter;
	private apmagent.proxies.PerformanceToolSettings PerformanceToolSettingsParameter;
	private java.util.List<IMendixObject> __MicroflowPerformanceRunningListParameter;
	private java.util.List<apmagent.proxies.MicroflowPerformanceRunning> MicroflowPerformanceRunningListParameter;
	private java.lang.Long Size;
	private java.lang.Boolean FixedSize;

	public GetRunningMicroflowPerformance_Java(IContext context, IMendixObject PerformanceToolSettingsParameter, java.util.List<IMendixObject> MicroflowPerformanceRunningListParameter, java.lang.Long Size, java.lang.Boolean FixedSize)
	{
		super(context);
		this.__PerformanceToolSettingsParameter = PerformanceToolSettingsParameter;
		this.__MicroflowPerformanceRunningListParameter = MicroflowPerformanceRunningListParameter;
		this.Size = Size;
		this.FixedSize = FixedSize;
	}

	@Override
	public java.lang.Boolean executeAction() throws Exception
	{
		this.PerformanceToolSettingsParameter = __PerformanceToolSettingsParameter == null ? null : apmagent.proxies.PerformanceToolSettings.initialize(getContext(), __PerformanceToolSettingsParameter);

		this.MicroflowPerformanceRunningListParameter = new java.util.ArrayList<apmagent.proxies.MicroflowPerformanceRunning>();
		if (__MicroflowPerformanceRunningListParameter != null)
			for (IMendixObject __MicroflowPerformanceRunningListParameterElement : __MicroflowPerformanceRunningListParameter)
				this.MicroflowPerformanceRunningListParameter.add(apmagent.proxies.MicroflowPerformanceRunning.initialize(getContext(), __MicroflowPerformanceRunningListParameterElement));

		// BEGIN USER CODE
		return nl.mansystems.performancetool.PerformanceToolLogSubscriber.getRunningMicroflows(this.getContext(), PerformanceToolSettingsParameter, MicroflowPerformanceRunningListParameter, Size.intValue(), FixedSize);
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "GetRunningMicroflowPerformance_Java";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
