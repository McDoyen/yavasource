// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package apmagent.actions;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;

public class ExecuteMicroflowAsync extends CustomJavaAction<java.lang.Boolean>
{
	private java.lang.String MicroflowName;
	private IMendixObject __MetricParameter;
	private apmagent.proxies.Metric MetricParameter;
	private IMendixObject __MetricTriggerParameter;
	private apmagent.proxies.MetricTrigger MetricTriggerParameter;

	public ExecuteMicroflowAsync(IContext context, java.lang.String MicroflowName, IMendixObject MetricParameter, IMendixObject MetricTriggerParameter)
	{
		super(context);
		this.MicroflowName = MicroflowName;
		this.__MetricParameter = MetricParameter;
		this.__MetricTriggerParameter = MetricTriggerParameter;
	}

	@Override
	public java.lang.Boolean executeAction() throws Exception
	{
		this.MetricParameter = __MetricParameter == null ? null : apmagent.proxies.Metric.initialize(getContext(), __MetricParameter);

		this.MetricTriggerParameter = __MetricTriggerParameter == null ? null : apmagent.proxies.MetricTrigger.initialize(getContext(), __MetricTriggerParameter);

		// BEGIN USER CODE
		Core.executeAsync(Core.createSystemContext(), MicroflowName, MetricParameter.getMendixObject(), MetricTriggerParameter.getMendixObject());
		return true;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "ExecuteMicroflowAsync";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
