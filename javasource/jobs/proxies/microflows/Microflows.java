// This file was generated by Mendix Modeler 7.7.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package jobs.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the Jobs module
	/**
	 * [3833] Added microflow to be called as the general before commit microflow.
	 * Only calls the validation flow for now, but for future extentions it is better to have this flow set up in advance.
	 */
	public static boolean bC_Job(IContext context, jobs.proxies.Job _job)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Job", _job == null ? null : _job.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Jobs.BC_Job", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3833] Added microflow to be called as the general before commit microflow.
	 * Only calls the validation flow for now, but for future extentions it is better to have this flow set up in advance.
	 */
	public static boolean bC_TransformationConfiguration(IContext context, jobs.proxies.TransformationConfig _transformationConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TransformationConfig", _transformationConfig == null ? null : _transformationConfig.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Jobs.BC_TransformationConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3833] Added microflow to be called as the general before commit microflow.
	 * Only calls the validation flow for now, but for future extentions it is better to have this flow set up in advance.
	 */
	public static boolean bC_TransformationJob(IContext context, jobs.proxies.TransformationJob _transformationJob)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TransformationJob", _transformationJob == null ? null : _transformationJob.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Jobs.BC_TransformationJob", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3833] Added microflow to validate a Jobs.Job object.
	 * - Checks if the name is set,
	 * - Threads is set and between 0-11 (not included)
	 * - QueueLimit is set and between 50-5000
	 * 
	 * Returns Boolean
	 * 
	 */
	public static boolean bC_ValidateJob(IContext context, jobs.proxies.Job _job)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Job", _job == null ? null : _job.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Jobs.BC_ValidateJob", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3833] Added validation microflow for Jobs.TransformationConfiguration objects
	 * - Checks if entity name is set, and matches expression ^([a-zA-Z0-9_\-])+\.([a-zA-Z0-9_\-])+$'
	 * - Checks if attributes are set and matches expression ^(([a-zA-Z0-9_\-])+,)*([a-zA-Z0-9_\-])+$'
	 * 
	 * Returns Boolean
	 */
	public static boolean bC_ValidateTransformationConfiguration(IContext context, jobs.proxies.TransformationConfig _transformationConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TransformationConfig", _transformationConfig == null ? null : _transformationConfig.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Jobs.BC_ValidateTransformationConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3833] Added microflow to validate attributes of a Jobs.TransformationJob object.
	 * - Checks if the name is unique.
	 * - BatchSize is set and between 0-1001 (not included)
	 * 
	 * Returns Boolean
	 * 
	 */
	public static boolean bC_ValidateTransformationJob(IContext context, jobs.proxies.TransformationJob _transformationJob)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TransformationJob", _transformationJob == null ? null : _transformationJob.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Jobs.BC_ValidateTransformationJob", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3833] Microflow to be used as datasource for Jobs.JobConfig_MendixAttribute_Select.
	 * 
	 */
	public static java.util.List<metamodel.proxies.MendixAttribute> dS_GetAttributesLimitedByEntityFromMetaModel(IContext context, jobs.proxies.TransformationConfig _transformationConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TransformationConfig", _transformationConfig == null ? null : _transformationConfig.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Jobs.DS_GetAttributesLimitedByEntityFromMetaModel", params);
			java.util.List<metamodel.proxies.MendixAttribute> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<metamodel.proxies.MendixAttribute>();
				for (IMendixObject obj : objs)
					result.add(metamodel.proxies.MendixAttribute.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ActivateExpertDeskLogNode(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Jobs.IVK_ActivateExpertDeskLogNode", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3833] Custom Select microflow for the page Jobs.JobConfig_MendixAttribute_Select
	 */
	public static void iVK_AddSelectedAttributesToTransformationConfiguration(IContext context, java.util.List<metamodel.proxies.MendixAttribute> _mendixAttributeList, jobs.proxies.TransformationConfig _transformationConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_mendixAttributeList = null;
			if (_mendixAttributeList != null)
			{
				listparam_mendixAttributeList = new java.util.ArrayList<IMendixObject>();
				for (metamodel.proxies.MendixAttribute obj : _mendixAttributeList)
					listparam_mendixAttributeList.add(obj.getMendixObject());
			}
			params.put("MendixAttributeList", listparam_mendixAttributeList);
			params.put("TransformationConfig", _transformationConfig == null ? null : _transformationConfig.getMendixObject());
			Core.execute(context, "Jobs.IVK_AddSelectedAttributesToTransformationConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3833] Added microflow to execute a given Job.
	 */
	public static void iVK_ExecJob(IContext context, jobs.proxies.Job _job)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Job", _job == null ? null : _job.getMendixObject());
			Core.execute(context, "Jobs.IVK_ExecJob", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3833] Added microflow to open the page Jobs.JobConfig_MendixAttribute_Select
	 */
	public static void iVK_OpenSelectForm_MendixAttribute(IContext context, jobs.proxies.TransformationConfig _transformationConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TransformationConfig", _transformationConfig == null ? null : _transformationConfig.getMendixObject());
			Core.execute(context, "Jobs.IVK_OpenSelectForm_MendixAttribute", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3833] Added microflow to specify if the Edit button should open the Edit page, or a View page, depending on the time-attributes of a TransformationConfiguration
	 */
	public static void iVK_OpenTransformationConfig_Edit(IContext context, jobs.proxies.TransformationConfig _transformationConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TransformationConfig", _transformationConfig == null ? null : _transformationConfig.getMendixObject());
			Core.execute(context, "Jobs.IVK_OpenTransformationConfig_Edit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3833] Added microflow to specify if the Edit button should open the Edit page, or a View page, depending on the time-attributes of a TransformationJob
	 */
	public static void iVK_OpenTransformationJob_Edit(IContext context, jobs.proxies.TransformationJob _transformationJob)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TransformationJob", _transformationJob == null ? null : _transformationJob.getMendixObject());
			Core.execute(context, "Jobs.IVK_OpenTransformationJob_Edit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3833] Added flow to reset the time-attributes of a Job. 
	 */
	public static void iVK_Reset_Job_Times(IContext context, jobs.proxies.Job _job)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Job", _job == null ? null : _job.getMendixObject());
			Core.execute(context, "Jobs.IVK_Reset_Job_Times", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3833] Added flow to reset the time-attributes of a Job. 
	 */
	public static void iVK_Reset_Job_Times_WithCommit(IContext context, jobs.proxies.Job _job)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Job", _job == null ? null : _job.getMendixObject());
			Core.execute(context, "Jobs.IVK_Reset_Job_Times_WithCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3833] Added flow to reset the time-attributes of a TransformationConfig
	 */
	public static void iVK_ResetTransformationConfig_Times(IContext context, jobs.proxies.TransformationConfig _transformationConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TransformationConfig", _transformationConfig == null ? null : _transformationConfig.getMendixObject());
			Core.execute(context, "Jobs.IVK_ResetTransformationConfig_Times", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3833] Added flow to reset the time-attributes of a TransformationConfig
	 */
	public static void iVK_ResetTransformationConfig_Times_WithCommit(IContext context, jobs.proxies.TransformationConfig _transformationConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TransformationConfig", _transformationConfig == null ? null : _transformationConfig.getMendixObject());
			Core.execute(context, "Jobs.IVK_ResetTransformationConfig_Times_WithCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3833] Added customized Save button behavior for Jobs.Job_NewEdit.
	 */
	public static void iVK_Save_Job(IContext context, jobs.proxies.Job _job)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Job", _job == null ? null : _job.getMendixObject());
			Core.execute(context, "Jobs.IVK_Save_Job", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3833] Added microflow as custom save behavior
	 */
	public static void iVK_Save_TransformationConfiguration(IContext context, jobs.proxies.TransformationConfig _transformationConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TransformationConfig", _transformationConfig == null ? null : _transformationConfig.getMendixObject());
			Core.execute(context, "Jobs.IVK_Save_TransformationConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3833] Added custom Save behavior microflow for Jobs.TransformationJob_New & Jobs.TransformationJob_Edit
	 */
	public static void iVK_Save_TransformationJob(IContext context, jobs.proxies.TransformationJob _transformationJob)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TransformationJob", _transformationJob == null ? null : _transformationJob.getMendixObject());
			Core.execute(context, "Jobs.IVK_Save_TransformationJob", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3833] Originally the transformation job uses string values instead of objects from the MetaModel to keep itself clear from dependencies. 
	 * 
	 * However in ExpertDesk the MetaModel module is present, use it to prevent incorrect entity/ and attribute names. Preprocess the selected MetaModel objects into the configuration objects
	 */
	public static void mCa_PreprocessTransformationConfig(IContext context, jobs.proxies.TransformationConfig _transformationConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TransformationConfig", _transformationConfig == null ? null : _transformationConfig.getMendixObject());
			Core.execute(context, "Jobs.MCa_PreprocessTransformationConfig", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3833] Added microflow to clear the related attributes, if the related entity has changed
	 */
	public static void oCh_SelectedMendixEntity(IContext context, jobs.proxies.TransformationConfig _transformationConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TransformationConfig", _transformationConfig == null ? null : _transformationConfig.getMendixObject());
			Core.execute(context, "Jobs.OCh_SelectedMendixEntity", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}