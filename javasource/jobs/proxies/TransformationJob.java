// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package jobs.proxies;

/**
 * [3833] Added entity as specialisation of Jobs.Job, for future uses.
 */
public class TransformationJob extends jobs.proxies.Job
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Jobs.TransformationJob";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		BatchSize("BatchSize"),
		Name("Name"),
		StartTime("StartTime"),
		EndTime("EndTime"),
		LastCheckup("LastCheckup"),
		Threads("Threads"),
		QueueLimit("QueueLimit");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public TransformationJob(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Jobs.TransformationJob"));
	}

	protected TransformationJob(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject transformationJobMendixObject)
	{
		super(context, transformationJobMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("Jobs.TransformationJob", transformationJobMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Jobs.TransformationJob");
	}

	/**
	 * @deprecated Use 'TransformationJob.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static jobs.proxies.TransformationJob initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return jobs.proxies.TransformationJob.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static jobs.proxies.TransformationJob initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new jobs.proxies.TransformationJob(context, mendixObject);
	}

	public static jobs.proxies.TransformationJob load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return jobs.proxies.TransformationJob.initialize(context, mendixObject);
	}

	public static java.util.List<jobs.proxies.TransformationJob> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<jobs.proxies.TransformationJob> result = new java.util.ArrayList<jobs.proxies.TransformationJob>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Jobs.TransformationJob" + xpathConstraint))
			result.add(jobs.proxies.TransformationJob.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of BatchSize
	 */
	public final java.lang.Integer getBatchSize()
	{
		return getBatchSize(getContext());
	}

	/**
	 * @param context
	 * @return value of BatchSize
	 */
	public final java.lang.Integer getBatchSize(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.BatchSize.toString());
	}

	/**
	 * Set value of BatchSize
	 * @param batchsize
	 */
	public final void setBatchSize(java.lang.Integer batchsize)
	{
		setBatchSize(getContext(), batchsize);
	}

	/**
	 * Set value of BatchSize
	 * @param context
	 * @param batchsize
	 */
	public final void setBatchSize(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer batchsize)
	{
		getMendixObject().setValue(context, MemberNames.BatchSize.toString(), batchsize);
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final jobs.proxies.TransformationJob that = (jobs.proxies.TransformationJob) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Jobs.TransformationJob";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
