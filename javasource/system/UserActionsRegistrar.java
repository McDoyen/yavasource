package system;

import aQute.bnd.annotation.component.Component;
import aQute.bnd.annotation.component.Reference;

import com.mendix.core.actionmanagement.IActionRegistrator;

@Component(immediate = true)
public class UserActionsRegistrar
{
  @Reference
  public void registerActions(IActionRegistrator registrator)
  {
    registrator.bundleComponentLoaded();
    registrator.registerUserAction(advancedsearch.actions.DeleteCIFromIndex.class);
    registrator.registerUserAction(advancedsearch.actions.DeleteInterfaceMessageFromIndex.class);
    registrator.registerUserAction(advancedsearch.actions.DeletePersonFromIndex.class);
    registrator.registerUserAction(advancedsearch.actions.DeleteProductFromIndex.class);
    registrator.registerUserAction(advancedsearch.actions.DeleteRequestFromIndex.class);
    registrator.registerUserAction(advancedsearch.actions.IndexCIList.class);
    registrator.registerUserAction(advancedsearch.actions.IndexInterfaceMessageList.class);
    registrator.registerUserAction(advancedsearch.actions.IndexPersonList.class);
    registrator.registerUserAction(advancedsearch.actions.IndexProductList.class);
    registrator.registerUserAction(advancedsearch.actions.IndexRequestList.class);
    registrator.registerUserAction(advancedsearch.actions.PeriodTimeCheck.class);
    registrator.registerUserAction(advancedsearch.actions.QueueReferentialIndexObjects.class);
    registrator.registerUserAction(advancedsearch.actions.SearchIndexCMDB.class);
    registrator.registerUserAction(advancedsearch.actions.SearchIndexInterfaceMessage.class);
    registrator.registerUserAction(advancedsearch.actions.SearchIndexPerson.class);
    registrator.registerUserAction(advancedsearch.actions.SearchIndexProduct.class);
    registrator.registerUserAction(advancedsearch.actions.SearchIndexRequest.class);
    registrator.registerUserAction(advancedsearch.actions.updateSearchFields.class);
    registrator.registerUserAction(apmagent.actions.AddJMXLongValue.class);
    registrator.registerUserAction(apmagent.actions.BatchDeleteEntity.class);
    registrator.registerUserAction(apmagent.actions.CancelPerformanceTool.class);
    registrator.registerUserAction(apmagent.actions.CancelProfiler.class);
    registrator.registerUserAction(apmagent.actions.CommitToDatabaseAndStartNewTransaction.class);
    registrator.registerUserAction(apmagent.actions.DecryptString.class);
    registrator.registerUserAction(apmagent.actions.EncodeURL.class);
    registrator.registerUserAction(apmagent.actions.EncryptString.class);
    registrator.registerUserAction(apmagent.actions.EvaluateExpression_1Parameter.class);
    registrator.registerUserAction(apmagent.actions.EvaluateExpression_2Parameters.class);
    registrator.registerUserAction(apmagent.actions.ExecuteIDQueryToMetricList.class);
    registrator.registerUserAction(apmagent.actions.ExecuteIDQueryToString.class);
    registrator.registerUserAction(apmagent.actions.ExecuteJDBCQueryToMetricList.class);
    registrator.registerUserAction(apmagent.actions.ExecuteJDBCQueryToString.class);
    registrator.registerUserAction(apmagent.actions.ExecuteMicroflowAsync.class);
    registrator.registerUserAction(apmagent.actions.ExecuteOQLQueryToMetricList.class);
    registrator.registerUserAction(apmagent.actions.ExecuteOQLQueryToString.class);
    registrator.registerUserAction(apmagent.actions.ExecuteXPathQueryToMetricList.class);
    registrator.registerUserAction(apmagent.actions.ExecuteXPathQueryToString.class);
    registrator.registerUserAction(apmagent.actions.GenerateJavaConsoleMessage.class);
    registrator.registerUserAction(apmagent.actions.GetAndResetMicroflowStatistics.class);
    registrator.registerUserAction(apmagent.actions.GetHostname.class);
    registrator.registerUserAction(apmagent.actions.GetJarVersion.class);
    registrator.registerUserAction(apmagent.actions.GetMicroflowStatistics.class);
    registrator.registerUserAction(apmagent.actions.GetMicroflowStatistics2.class);
    registrator.registerUserAction(apmagent.actions.GetMicroflowStatistics2Running.class);
    registrator.registerUserAction(apmagent.actions.GetMicroflowStatisticsRunning.class);
    registrator.registerUserAction(apmagent.actions.GetNumberOfActionsPerformanceTool.class);
    registrator.registerUserAction(apmagent.actions.GetNumberOfMicroflowsPerformanceTool.class);
    registrator.registerUserAction(apmagent.actions.GetNumberOfPrivateScheduledEventsRunning.class);
    registrator.registerUserAction(apmagent.actions.GetNumberOfRuntimeRequestsDatabaseProfiler.class);
    registrator.registerUserAction(apmagent.actions.GetNumberOfStatementsDatabaseProfiler.class);
    registrator.registerUserAction(apmagent.actions.GetOutputQueueSizeTrapTool.class);
    registrator.registerUserAction(apmagent.actions.GetProjectId.class);
    registrator.registerUserAction(apmagent.actions.GetRunningActionPerformance_Java.class);
    registrator.registerUserAction(apmagent.actions.GetRunningMicroflowPerformance_Java.class);
    registrator.registerUserAction(apmagent.actions.GetRunningMicroflows_Java.class);
    registrator.registerUserAction(apmagent.actions.GetRuntimeAverageMessageDurationLogTool.class);
    registrator.registerUserAction(apmagent.actions.GetRuntimeAverageMessageDurationPerformanceTool.class);
    registrator.registerUserAction(apmagent.actions.GetRuntimeAverageMessageDurationStatisticsTool.class);
    registrator.registerUserAction(apmagent.actions.GetRuntimeAverageMessageDurationTrapTool.class);
    registrator.registerUserAction(apmagent.actions.GetRuntimeLagDurationDatabaseProfiler.class);
    registrator.registerUserAction(apmagent.actions.GetRuntimeLagDurationLogTool.class);
    registrator.registerUserAction(apmagent.actions.GetRuntimeLagDurationPerformanceTool.class);
    registrator.registerUserAction(apmagent.actions.GetRuntimeLagDurationStatisticsTool.class);
    registrator.registerUserAction(apmagent.actions.GetRuntimeLagDurationTrapTool.class);
    registrator.registerUserAction(apmagent.actions.GetRuntimeMaxMessageDurationLogTool.class);
    registrator.registerUserAction(apmagent.actions.GetRuntimeMaxMessageDurationPerformanceTool.class);
    registrator.registerUserAction(apmagent.actions.GetRuntimeMaxMessageDurationStatisticsTool.class);
    registrator.registerUserAction(apmagent.actions.GetRuntimeMaxMessageDurationTrapTool.class);
    registrator.registerUserAction(apmagent.actions.GetRuntimeMessageCounterLogTool.class);
    registrator.registerUserAction(apmagent.actions.GetRuntimeMessageCounterPerformanceTool.class);
    registrator.registerUserAction(apmagent.actions.GetRuntimeMessageCounterStatisticsTool.class);
    registrator.registerUserAction(apmagent.actions.GetRuntimeMessageCounterTrapTool.class);
    registrator.registerUserAction(apmagent.actions.ImportLogToolFile.class);
    registrator.registerUserAction(apmagent.actions.ImportPerformanceToolFile.class);
    registrator.registerUserAction(apmagent.actions.ImportStatisticsToolFile.class);
    registrator.registerUserAction(apmagent.actions.InitJDBCSetting.class);
    registrator.registerUserAction(apmagent.actions.IsInDevelopment.class);
    registrator.registerUserAction(apmagent.actions.JavaConsoleLoggingIsRunning.class);
    registrator.registerUserAction(apmagent.actions.JavaUtilLoggingIsRunning.class);
    registrator.registerUserAction(apmagent.actions.JMXGetDomainsRunning.class);
    registrator.registerUserAction(apmagent.actions.JMXGetElementMetric.class);
    registrator.registerUserAction(apmagent.actions.JMXGetElementRunning.class);
    registrator.registerUserAction(apmagent.actions.JMXGetElementsRunning.class);
    registrator.registerUserAction(apmagent.actions.JMXIsRunning.class);
    registrator.registerUserAction(apmagent.actions.Log4jLoggingIsRunning.class);
    registrator.registerUserAction(apmagent.actions.LogToolIsRunning.class);
    registrator.registerUserAction(apmagent.actions.PerformanceToolInfoAction.class);
    registrator.registerUserAction(apmagent.actions.PerformanceToolIsRecording.class);
    registrator.registerUserAction(apmagent.actions.PerformanceToolIsRunning.class);
    registrator.registerUserAction(apmagent.actions.PerformHeapDump.class);
    registrator.registerUserAction(apmagent.actions.PrivateScheduledEventIsRunning.class);
    registrator.registerUserAction(apmagent.actions.ProcessLogMessagesInPerformanceTool.class);
    registrator.registerUserAction(apmagent.actions.ProcessPerformanceTool.class);
    registrator.registerUserAction(apmagent.actions.ProcessProfiler.class);
    registrator.registerUserAction(apmagent.actions.ProcessTrapMemoryInPerformanceTool.class);
    registrator.registerUserAction(apmagent.actions.ProcessTrappedMessagesInPerformanceTool.class);
    registrator.registerUserAction(apmagent.actions.ProfilerIsRecording.class);
    registrator.registerUserAction(apmagent.actions.ProfilerIsRunning.class);
    registrator.registerUserAction(apmagent.actions.ResetMicroflowStatistics2_Java.class);
    registrator.registerUserAction(apmagent.actions.ResetRuntimeStatisticsLogTool.class);
    registrator.registerUserAction(apmagent.actions.ResetRuntimeStatisticsPerformanceTool.class);
    registrator.registerUserAction(apmagent.actions.ResetRuntimeStatisticsStatisticsTool.class);
    registrator.registerUserAction(apmagent.actions.ResetRuntimeStatisticsTrapTool.class);
    registrator.registerUserAction(apmagent.actions.SaveRunningMicroflowPerformanceList_Java.class);
    registrator.registerUserAction(apmagent.actions.SetJMXBooleanValue.class);
    registrator.registerUserAction(apmagent.actions.SetJMXDateValue.class);
    registrator.registerUserAction(apmagent.actions.SetJMXFloatValue.class);
    registrator.registerUserAction(apmagent.actions.SetJMXLongValue.class);
    registrator.registerUserAction(apmagent.actions.SetJMXStringValue.class);
    registrator.registerUserAction(apmagent.actions.SetLogToolLevel.class);
    registrator.registerUserAction(apmagent.actions.SetOptionsLogTool.class);
    registrator.registerUserAction(apmagent.actions.SetOptionsPerformanceTool.class);
    registrator.registerUserAction(apmagent.actions.SetOptionsProfiler.class);
    registrator.registerUserAction(apmagent.actions.SetOptionsStatisticsTool.class);
    registrator.registerUserAction(apmagent.actions.SetOptionsTrapTool.class);
    registrator.registerUserAction(apmagent.actions.StartJavaConsoleLogging.class);
    registrator.registerUserAction(apmagent.actions.StartJavaUtilLogging.class);
    registrator.registerUserAction(apmagent.actions.StartJMX.class);
    registrator.registerUserAction(apmagent.actions.StartLog4jLogging.class);
    registrator.registerUserAction(apmagent.actions.StartLogToolSubscriber.class);
    registrator.registerUserAction(apmagent.actions.StartPerformanceTool.class);
    registrator.registerUserAction(apmagent.actions.StartPrivateScheduledEvent.class);
    registrator.registerUserAction(apmagent.actions.StartProfiler.class);
    registrator.registerUserAction(apmagent.actions.StartStatisticsTool.class);
    registrator.registerUserAction(apmagent.actions.StartTrapTool.class);
    registrator.registerUserAction(apmagent.actions.StatisticsToolIsRecording.class);
    registrator.registerUserAction(apmagent.actions.StatisticsToolIsRunning.class);
    registrator.registerUserAction(apmagent.actions.StopAllPrivateScheduledEvents.class);
    registrator.registerUserAction(apmagent.actions.StopJavaConsoleLogging.class);
    registrator.registerUserAction(apmagent.actions.StopJavaUtilLogging.class);
    registrator.registerUserAction(apmagent.actions.StopJMX.class);
    registrator.registerUserAction(apmagent.actions.StopLog4jLogging.class);
    registrator.registerUserAction(apmagent.actions.StopLogToolSubscriber.class);
    registrator.registerUserAction(apmagent.actions.StopPrivateScheduledEvent.class);
    registrator.registerUserAction(apmagent.actions.StopRecordingPerformanceTool.class);
    registrator.registerUserAction(apmagent.actions.StopRecordingProfiler.class);
    registrator.registerUserAction(apmagent.actions.StopStatisticsTool.class);
    registrator.registerUserAction(apmagent.actions.StopTrapTool.class);
    registrator.registerUserAction(apmagent.actions.TrapNow.class);
    registrator.registerUserAction(apmagent.actions.TrapToolIsRunning.class);
    registrator.registerUserAction(apmagent.actions.TrapToolTestRegex.class);
    registrator.registerUserAction(apmagent.actions.ValidateLicense.class);
    registrator.registerUserAction(audit.actions.AuditOnDelete.class);
    registrator.registerUserAction(audit.actions.AuditOnInsert.class);
    registrator.registerUserAction(audit.actions.AuditOnSnapshot.class);
    registrator.registerUserAction(audit.actions.AuditOnUpdate.class);
    registrator.registerUserAction(audit.actions.GetAuditRecord.class);
    registrator.registerUserAction(businesshours.actions.BusinessTimeAdd.class);
    registrator.registerUserAction(businesshours.actions.BusinessTimeDiff.class);
    registrator.registerUserAction(businesshours.actions.BusinessTimeNextBusinessDayStart.class);
    registrator.registerUserAction(businesshours.actions.BusinessTimeNextNBusinessDaysEnd.class);
    registrator.registerUserAction(businesshours.actions.BusinessTimeSubtract.class);
    registrator.registerUserAction(changeplanning.actions.GetWeekNumber.class);
    registrator.registerUserAction(cmdb.actions.Create_CIChart.class);
    registrator.registerUserAction(cmdb.actions.RetrieveCIByGuid.class);
    registrator.registerUserAction(communitycommons.actions.acquireLock.class);
    registrator.registerUserAction(communitycommons.actions.Base64Decode.class);
    registrator.registerUserAction(communitycommons.actions.Base64DecodeToFile.class);
    registrator.registerUserAction(communitycommons.actions.Base64Encode.class);
    registrator.registerUserAction(communitycommons.actions.Base64EncodeFile.class);
    registrator.registerUserAction(communitycommons.actions.Clone.class);
    registrator.registerUserAction(communitycommons.actions.commitInSeparateDatabaseTransaction.class);
    registrator.registerUserAction(communitycommons.actions.commitWithoutEvents.class);
    registrator.registerUserAction(communitycommons.actions.copyAttributes.class);
    registrator.registerUserAction(communitycommons.actions.DateTimeToLong.class);
    registrator.registerUserAction(communitycommons.actions.DecryptString.class);
    registrator.registerUserAction(communitycommons.actions.DeepClone.class);
    registrator.registerUserAction(communitycommons.actions.Delay.class);
    registrator.registerUserAction(communitycommons.actions.deleteAll.class);
    registrator.registerUserAction(communitycommons.actions.DuplicateFileDocument.class);
    registrator.registerUserAction(communitycommons.actions.DuplicateImageDocument.class);
    registrator.registerUserAction(communitycommons.actions.encryptMemberIfChanged.class);
    registrator.registerUserAction(communitycommons.actions.EncryptString.class);
    registrator.registerUserAction(communitycommons.actions.EndTransaction.class);
    registrator.registerUserAction(communitycommons.actions.EscapeHTML.class);
    registrator.registerUserAction(communitycommons.actions.executeMicroflowAsUser.class);
    registrator.registerUserAction(communitycommons.actions.executeMicroflowAsUser_1.class);
    registrator.registerUserAction(communitycommons.actions.executeMicroflowAsUser_2.class);
    registrator.registerUserAction(communitycommons.actions.executeMicroflowInBackground.class);
    registrator.registerUserAction(communitycommons.actions.executeMicroflowInBatches.class);
    registrator.registerUserAction(communitycommons.actions.FileDocumentFromFile.class);
    registrator.registerUserAction(communitycommons.actions.FileFromFileDocument.class);
    registrator.registerUserAction(communitycommons.actions.GenerateHMAC_SHA256_hash.class);
    registrator.registerUserAction(communitycommons.actions.GetApplicationUrl.class);
    registrator.registerUserAction(communitycommons.actions.getCreatedByUser.class);
    registrator.registerUserAction(communitycommons.actions.GetDefaultLanguage.class);
    registrator.registerUserAction(communitycommons.actions.getDTAPMode.class);
    registrator.registerUserAction(communitycommons.actions.GetFileContentsFromResource.class);
    registrator.registerUserAction(communitycommons.actions.getFileSize.class);
    registrator.registerUserAction(communitycommons.actions.getGUID.class);
    registrator.registerUserAction(communitycommons.actions.GetIntFromDateTime.class);
    registrator.registerUserAction(communitycommons.actions.getLastChangedByUser.class);
    registrator.registerUserAction(communitycommons.actions.getLockOwner.class);
    registrator.registerUserAction(communitycommons.actions.getOriginalValueAsString.class);
    registrator.registerUserAction(communitycommons.actions.GetRuntimeVersion.class);
    registrator.registerUserAction(communitycommons.actions.getTypeAsString.class);
    registrator.registerUserAction(communitycommons.actions.Hash.class);
    registrator.registerUserAction(communitycommons.actions.HTMLEncode.class);
    registrator.registerUserAction(communitycommons.actions.HTMLToPlainText.class);
    registrator.registerUserAction(communitycommons.actions.IsInDevelopment.class);
    registrator.registerUserAction(communitycommons.actions.Log.class);
    registrator.registerUserAction(communitycommons.actions.LongToDateTime.class);
    registrator.registerUserAction(communitycommons.actions.memberHasChanged.class);
    registrator.registerUserAction(communitycommons.actions.MergeMultiplePdfs.class);
    registrator.registerUserAction(communitycommons.actions.objectHasChanged.class);
    registrator.registerUserAction(communitycommons.actions.objectIsNew.class);
    registrator.registerUserAction(communitycommons.actions.OverlayPdfDocument.class);
    registrator.registerUserAction(communitycommons.actions.ParseDateTimeWithTimezone.class);
    registrator.registerUserAction(communitycommons.actions.RandomHash.class);
    registrator.registerUserAction(communitycommons.actions.RandomString.class);
    registrator.registerUserAction(communitycommons.actions.RandomStrongPassword.class);
    registrator.registerUserAction(communitycommons.actions.recommitInBatches.class);
    registrator.registerUserAction(communitycommons.actions.refreshClass.class);
    registrator.registerUserAction(communitycommons.actions.refreshClassByObject.class);
    registrator.registerUserAction(communitycommons.actions.RegexQuote.class);
    registrator.registerUserAction(communitycommons.actions.RegexReplaceAll.class);
    registrator.registerUserAction(communitycommons.actions.RegexTest.class);
    registrator.registerUserAction(communitycommons.actions.releaseAllInactiveLocks.class);
    registrator.registerUserAction(communitycommons.actions.releaseLock.class);
    registrator.registerUserAction(communitycommons.actions.retrieveURL.class);
    registrator.registerUserAction(communitycommons.actions.RunMicroflowAsyncInQueue.class);
    registrator.registerUserAction(communitycommons.actions.SimpleLog.class);
    registrator.registerUserAction(communitycommons.actions.StartTransaction.class);
    registrator.registerUserAction(communitycommons.actions.storeURLToFileDocument.class);
    registrator.registerUserAction(communitycommons.actions.StringFromFile.class);
    registrator.registerUserAction(communitycommons.actions.StringLeftPad.class);
    registrator.registerUserAction(communitycommons.actions.StringLength.class);
    registrator.registerUserAction(communitycommons.actions.StringRightPad.class);
    registrator.registerUserAction(communitycommons.actions.StringToFile.class);
    registrator.registerUserAction(communitycommons.actions.StringTrim.class);
    registrator.registerUserAction(communitycommons.actions.SubstituteTemplate.class);
    registrator.registerUserAction(communitycommons.actions.SubstituteTemplate2.class);
    registrator.registerUserAction(communitycommons.actions.ThrowException.class);
    registrator.registerUserAction(communitycommons.actions.ThrowWebserviceException.class);
    registrator.registerUserAction(communitycommons.actions.TimeMeasureEnd.class);
    registrator.registerUserAction(communitycommons.actions.TimeMeasureStart.class);
    registrator.registerUserAction(communitycommons.actions.waitForLock.class);
    registrator.registerUserAction(communitycommons.actions.XSSSanitize.class);
    registrator.registerUserAction(communitycommons.actions.YearsBetween.class);
    registrator.registerUserAction(core_security.actions.checkCurrentUserPassword.class);
    registrator.registerUserAction(core_security.actions.HashValue_SHA1.class);
    registrator.registerUserAction(customlvnl.actions.GenerateDocument.class);
    registrator.registerUserAction(customlvnl.actions.ZipFileDocuments.class);
    registrator.registerUserAction(da.actions.InitDataAccess.class);
    registrator.registerUserAction(da.actions.SetAutomaticDataAccessWithRules.class);
    registrator.registerUserAction(databasereplication.actions.AbortRunningMapping.class);
    registrator.registerUserAction(databasereplication.actions.CreateZipFile.class);
    registrator.registerUserAction(databasereplication.actions.EncryptServerPassword.class);
    registrator.registerUserAction(databasereplication.actions.ImportActivitySet.class);
    registrator.registerUserAction(databasereplication.actions.ImportByImportCall.class);
    registrator.registerUserAction(databasereplication.actions.ImportByMapping.class);
    registrator.registerUserAction(databasereplication.actions.SyncDatabaseInfo.class);
    registrator.registerUserAction(databasereplication.actions.UpdateByMapping.class);
    registrator.registerUserAction(databasereplication.actions.UpdateToken.class);
    registrator.registerUserAction(deeplink.actions.ExecuteDeeplink.class);
    registrator.registerUserAction(deeplink.actions.GetApplicationURL.class);
    registrator.registerUserAction(deeplink.actions.GetCurrentSessionID.class);
    registrator.registerUserAction(deeplink.actions.ReadMicroflows.class);
    registrator.registerUserAction(deeplink.actions.StartDeeplinkJava.class);
    registrator.registerUserAction(donotuse_concurrency_donotuse.actions.ClearThreadLock.class);
    registrator.registerUserAction(donotuse_concurrency_donotuse.actions.GenerateStatistics.class);
    registrator.registerUserAction(donotuse_concurrency_donotuse.actions.randomTime.class);
    registrator.registerUserAction(donotuse_concurrency_donotuse.actions.RollbackTransaction.class);
    registrator.registerUserAction(donotuse_concurrency_donotuse.actions.ScheduledEventInPrivateThread.class);
    registrator.registerUserAction(donotuse_concurrency_donotuse.actions.SetThreadFlag.class);
    registrator.registerUserAction(donotuse_concurrency_donotuse.actions.SetThreadNumber.class);
    registrator.registerUserAction(emailplus.actions.FetchPop3_EmailPlus.class);
    registrator.registerUserAction(emailplus.actions.GetHostname.class);
    registrator.registerUserAction(emailplus.actions.GetImagesFromHTML.class);
    registrator.registerUserAction(emailplus.actions.GetRecipientsJava.class);
    registrator.registerUserAction(emailplus.actions.ReProcessEmailMessageJava.class);
    registrator.registerUserAction(emailplus.actions.SendMail_BCC_HTML.class);
    registrator.registerUserAction(excelimporter.actions.GetHeaderInformationFromExcelFile.class);
    registrator.registerUserAction(excelimporter.actions.RefreshClass.class);
    registrator.registerUserAction(excelimporter.actions.StartImportByTemplate.class);
    registrator.registerUserAction(importexport.actions.BatchDeleteEntity.class);
    registrator.registerUserAction(importexport.actions.CopyToDataPatchRecord.class);
    registrator.registerUserAction(importexport.actions.CopyToDataPatchRecordList.class);
    registrator.registerUserAction(importexport.actions.ExecMicroflowAsOtherUser.class);
    registrator.registerUserAction(importexport.actions.ExportAuditListObjectsToExcel.class);
    registrator.registerUserAction(importexport.actions.ExportDataPatchRecordListObjectsToExcel.class);
    registrator.registerUserAction(importexport.actions.ExportToExcelWithContents.class);
    registrator.registerUserAction(importexport.actions.GenerateDataPatchRecordsForSet.class);
    registrator.registerUserAction(importexport.actions.GenerateDataPatchRelatedRecordsForSet.class);
    registrator.registerUserAction(importexport.actions.ImportDataFromExcelByContents.class);
    registrator.registerUserAction(importexport.actions.ImportScanFiles_Java.class);
    registrator.registerUserAction(interfaceconfiguration.actions.CheckDateTimeFormat.class);
    registrator.registerUserAction(interfaceconfiguration.actions.CreateNewWebServiceHeaderSpecialization.class);
    registrator.registerUserAction(interfaceconfiguration.actions.DynamicAttributesDomainToDynamic.class);
    registrator.registerUserAction(interfaceconfiguration.actions.DynamicAttributesDynamicToDomain.class);
    registrator.registerUserAction(interfaceconfiguration.actions.DynamicAttributesValueToDomain.class);
    registrator.registerUserAction(interfaceconfiguration.actions.GetHostName.class);
    registrator.registerUserAction(interfaceconfiguration.actions.getLDAPEnabledForServer.class);
    registrator.registerUserAction(interfaceconfiguration.actions.GetObjectSpecializations.class);
    registrator.registerUserAction(interfaceconfiguration.actions.ImportLDAPImportType.class);
    registrator.registerUserAction(interfaceconfiguration.actions.ReadLDAP.class);
    registrator.registerUserAction(interfaceconfiguration.actions.StartLDAPJava.class);
    registrator.registerUserAction(interfacerequests.actions.CastStringToEnum.class);
    registrator.registerUserAction(interfaceshared.actions.CreateAndSetSingle.class);
    registrator.registerUserAction(interfaceshared.actions.ExecuteMicroflow.class);
    registrator.registerUserAction(interfaceshared.actions.ExecuteMicroflow_1.class);
    registrator.registerUserAction(interfaceshared.actions.ExecuteMicroflow_2.class);
    registrator.registerUserAction(interfaceshared.actions.ExecuteMicroflowInSysContext.class);
    registrator.registerUserAction(interfaceshared.actions.GenerateUUID.class);
    registrator.registerUserAction(interfaceshared.actions.GetEntityType.class);
    registrator.registerUserAction(interfaceshared.actions.GetSingleUser.class);
    registrator.registerUserAction(interfaceshared.actions.ValidateDateString.class);
    registrator.registerUserAction(interfaceshared_fileimport.actions.WatchDirectoryImport.class);
    registrator.registerUserAction(jobs.actions.ExecuteTransformationJob.class);
    registrator.registerUserAction(mendix.actions.AddActionListener.class);
    registrator.registerUserAction(mendix.actions.CheckCurrentPassword.class);
    registrator.registerUserAction(mendix.actions.CheckFileDocuments.class);
    registrator.registerUserAction(mendix.actions.Create_IncomingMessagesWidget.class);
    registrator.registerUserAction(mendix.actions.ExecuteDynamicRequestInComingMicroflow.class);
    registrator.registerUserAction(mendix.actions.ExecuteDynamicRequestOutgoingMicroflow.class);
    registrator.registerUserAction(mendix.actions.ExecuteMicroflowAsync.class);
    registrator.registerUserAction(mendix.actions.executeWithDelay.class);
    registrator.registerUserAction(mendix.actions.FormatDecimal.class);
    registrator.registerUserAction(mendix.actions.GenerateHTMLFromPlain.class);
    registrator.registerUserAction(mendix.actions.GetAdminUser.class);
    registrator.registerUserAction(mendix.actions.GetDefaultLanguage.class);
    registrator.registerUserAction(mendix.actions.GetStartOfWeek.class);
    registrator.registerUserAction(mendix.actions.GetYearWeekString.class);
    registrator.registerUserAction(mendix.actions.HTMLToText.class);
    registrator.registerUserAction(mendix.actions.Java_GetDTAP.class);
    registrator.registerUserAction(mendix.actions.Java_GetGUID.class);
    registrator.registerUserAction(mendix.actions.Java_GetID.class);
    registrator.registerUserAction(mendix.actions.JavaClearSystemFileDocument.class);
    registrator.registerUserAction(mendix.actions.ReadNamesMicroflows.class);
    registrator.registerUserAction(mendix.actions.XSSSanitizeAdvanced.class);
    registrator.registerUserAction(metamodel.actions.ClearEntityInfoCache.class);
    registrator.registerUserAction(metamodel.actions.GenerateMetaModelDataJavaAction.class);
    registrator.registerUserAction(mobile.actions.SaveMobileImage.class);
    registrator.registerUserAction(mxmodelreflection.actions.ReplaceToken.class);
    registrator.registerUserAction(mxmodelreflection.actions.SyncObjects.class);
    registrator.registerUserAction(mxmodelreflection.actions.ValidateTokensInMessage.class);
    registrator.registerUserAction(nap.actions.MatchCountry.class);
    registrator.registerUserAction(privatescheduledevents.actions.CommitToDatabaseAndStartNewTransaction.class);
    registrator.registerUserAction(privatescheduledevents.actions.IsRunningPrivateScheduledEvent.class);
    registrator.registerUserAction(privatescheduledevents.actions.StartPrivateScheduledEvent.class);
    registrator.registerUserAction(privatescheduledevents.actions.StopAllPrivateScheduledEvents.class);
    registrator.registerUserAction(privatescheduledevents.actions.StopPrivateScheduledEvent.class);
    registrator.registerUserAction(process.actions.Create_AngularGauge.class);
    registrator.registerUserAction(process.actions.Create_Cylinder.class);
    registrator.registerUserAction(process.actions.JAVA_GetRequestType.class);
    registrator.registerUserAction(queryrequests.actions.CountRequestsByXpath.class);
    registrator.registerUserAction(queryrequests.actions.GetRequestByXpath.class);
    registrator.registerUserAction(queryrequests.actions.GetSelectableEnumValues.class);
    registrator.registerUserAction(queryrequests.actions.GetSelectableObjectValues.class);
    registrator.registerUserAction(queryrequests.actions.UpdateQueryParts.class);
    registrator.registerUserAction(replacement.actions.ReplaceAllCodes.class);
    registrator.registerUserAction(replacement.actions.ValidateString.class);
    registrator.registerUserAction(reporting.actions.CheckAdvancedBooleanSyntax.class);
    registrator.registerUserAction(reporting.actions.GenerateDGHeatMapReportXMLFromOQL_Java.class);
    registrator.registerUserAction(reporting.actions.GenerateDoubleGroupReportXMLFromOQL_Java.class);
    registrator.registerUserAction(reporting.actions.GenerateMSHeatMapReportXMLFromOQL_Java.class);
    registrator.registerUserAction(reporting.actions.GenerateMultiSeriesReportXMLFromOQL_Java.class);
    registrator.registerUserAction(reporting.actions.GenerateSingleSeriesReportXMLFromOQL_Java.class);
    registrator.registerUserAction(reporting.actions.GetAdvancedFilterTagged.class);
    registrator.registerUserAction(reporting.actions.GetIndividualCIsFromOQLJava.class);
    registrator.registerUserAction(reporting.actions.GetIndividualPersonsFromOQLJava.class);
    registrator.registerUserAction(reporting.actions.GetIndividualRequestsFromOQLJava.class);
    registrator.registerUserAction(reporting.actions.RunOQL.class);
    registrator.registerUserAction(saml20.actions.CreateSSOMetadataFile.class);
    registrator.registerUserAction(saml20.actions.DelegatedAuthentication.class);
    registrator.registerUserAction(saml20.actions.GetApplicationRootURL.class);
    registrator.registerUserAction(saml20.actions.PrepareAuthnContext.class);
    registrator.registerUserAction(saml20.actions.PreValidateIdPFile.class);
    registrator.registerUserAction(saml20.actions.ReEvaluateImportedData.class);
    registrator.registerUserAction(saml20.actions.ReloadConfiguration.class);
    registrator.registerUserAction(saml20.actions.StartSSO.class);
    registrator.registerUserAction(saml20.actions.StoreURLToFileDocument.class);
    registrator.registerUserAction(scheduling.actions.CopyTemplateRequestAttachment.class);
    registrator.registerUserAction(scheduling.actions.CopyTemplateRequestAttachmentToRequestAttachment.class);
    registrator.registerUserAction(scheduling.actions.GenerateScheduleFromTo.class);
    registrator.registerUserAction(sdemigration.actions.ATMDateConversion.class);
    registrator.registerUserAction(sdemigration.actions.DeleteAllObjectsOfEntityName.class);
    registrator.registerUserAction(sdemigration.actions.DeleteListAsync.class);
    registrator.registerUserAction(sdemigration.actions.UUEncodeToFile.class);
    registrator.registerUserAction(serviceroutes.actions.CalculateYPositionEven.class);
    registrator.registerUserAction(serviceroutes.actions.CalculateYPositionUneven.class);
    registrator.registerUserAction(serviceroutes.actions.GetContractByID.class);
    registrator.registerUserAction(serviceroutes.actions.GetObjectID.class);
    registrator.registerUserAction(slm.actions.AddAllSelectableCIsToContract.class);
    registrator.registerUserAction(slm.actions.AddAllSelectableDeliveringOrganisationsToContract.class);
    registrator.registerUserAction(slm.actions.AddAllSelectableReceivingOrganisationsToContract.class);
    registrator.registerUserAction(slm.actions.AddAllSelectableServicesToContract.class);
    registrator.registerUserAction(slm.actions.GetContractAddedCIsChunk.class);
    registrator.registerUserAction(slm.actions.GetContractAddedCIsCount.class);
    registrator.registerUserAction(slm.actions.GetContractAddedDeliveringOrganisationsChunk.class);
    registrator.registerUserAction(slm.actions.GetContractAddedDeliveringOrganisationsCount.class);
    registrator.registerUserAction(slm.actions.GetContractAddedReceivingOrganisationsChunk.class);
    registrator.registerUserAction(slm.actions.GetContractAddedReceivingOrganisationsCount.class);
    registrator.registerUserAction(slm.actions.GetContractAddedServicesChunk.class);
    registrator.registerUserAction(slm.actions.GetContractAddedServicesCount.class);
    registrator.registerUserAction(slm.actions.GetContractAvailableCIsChunk.class);
    registrator.registerUserAction(slm.actions.GetContractAvailableCIsCount.class);
    registrator.registerUserAction(slm.actions.GetContractAvailableDeliveringOrganisationsCount.class);
    registrator.registerUserAction(slm.actions.GetContractAvailableDeliveringOrgansationsChunk.class);
    registrator.registerUserAction(slm.actions.GetContractAvailableReceivingOrganisationsChunk.class);
    registrator.registerUserAction(slm.actions.GetContractAvailableReceivingOrganisationsCount.class);
    registrator.registerUserAction(slm.actions.GetContractAvailableServicesChunk.class);
    registrator.registerUserAction(slm.actions.GetContractAvailableServicesCount.class);
    registrator.registerUserAction(slm.actions.RemoveAllSelectableCIsFromContract.class);
    registrator.registerUserAction(slm.actions.RemoveAllSelectableDeliveringOrganisationsFromContract.class);
    registrator.registerUserAction(slm.actions.RemoveAllSelectableReceivingOrganisationsFromContract.class);
    registrator.registerUserAction(slm.actions.RemoveAllSelectableServicesFromContract.class);
    registrator.registerUserAction(statetransitiongraph.actions.CreateCircleLayout.class);
    registrator.registerUserAction(statetransitiongraph.actions.CreateTreeLayout.class);
    registrator.registerUserAction(system.actions.VerifyPassword.class);
    registrator.registerUserAction(trigger.actions.CheckIfMicroflowExists.class);
    registrator.registerUserAction(upgrade.actions.CommitToDatabaseAndStartNewTransaction.class);
    registrator.registerUserAction(upgrade.actions.ExecuteJDBCStatement.class);
    registrator.registerUserAction(usermenu.actions.LogOut.class);
    registrator.registerUserAction(usermenu.actions.OpenAnyFormModal.class);
    registrator.registerUserAction(userstatistics.actions.UpdateConcurrentUserInfo.class);
    registrator.registerUserAction(winsso.actions.StartWinSSO.class);
    registrator.registerUserAction(workflowinstance.actions.Create_WorkflowChart.class);
    registrator.registerUserAction(workflowtemplate.actions.Create_WorkflowChart.class);
    registrator.registerUserAction(xlsreport.actions.GenerateExcelDoc.class);
  }
}
