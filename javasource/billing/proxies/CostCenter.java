// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package billing.proxies;

public class CostCenter
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject costCenterMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Billing.CostCenter";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		CostCenterName("CostCenterName"),
		CostCenterCode("CostCenterCode"),
		Organisation_CostCenter("NAP.Organisation_CostCenter");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public CostCenter(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Billing.CostCenter"));
	}

	protected CostCenter(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject costCenterMendixObject)
	{
		if (costCenterMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Billing.CostCenter", costCenterMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Billing.CostCenter");

		this.costCenterMendixObject = costCenterMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'CostCenter.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static billing.proxies.CostCenter initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return billing.proxies.CostCenter.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static billing.proxies.CostCenter initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new billing.proxies.CostCenter(context, mendixObject);
	}

	public static billing.proxies.CostCenter load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return billing.proxies.CostCenter.initialize(context, mendixObject);
	}

	public static java.util.List<billing.proxies.CostCenter> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<billing.proxies.CostCenter> result = new java.util.ArrayList<billing.proxies.CostCenter>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Billing.CostCenter" + xpathConstraint))
			result.add(billing.proxies.CostCenter.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of CostCenterName
	 */
	public final java.lang.String getCostCenterName()
	{
		return getCostCenterName(getContext());
	}

	/**
	 * @param context
	 * @return value of CostCenterName
	 */
	public final java.lang.String getCostCenterName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.CostCenterName.toString());
	}

	/**
	 * Set value of CostCenterName
	 * @param costcentername
	 */
	public final void setCostCenterName(java.lang.String costcentername)
	{
		setCostCenterName(getContext(), costcentername);
	}

	/**
	 * Set value of CostCenterName
	 * @param context
	 * @param costcentername
	 */
	public final void setCostCenterName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String costcentername)
	{
		getMendixObject().setValue(context, MemberNames.CostCenterName.toString(), costcentername);
	}

	/**
	 * @return value of CostCenterCode
	 */
	public final java.lang.String getCostCenterCode()
	{
		return getCostCenterCode(getContext());
	}

	/**
	 * @param context
	 * @return value of CostCenterCode
	 */
	public final java.lang.String getCostCenterCode(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.CostCenterCode.toString());
	}

	/**
	 * Set value of CostCenterCode
	 * @param costcentercode
	 */
	public final void setCostCenterCode(java.lang.String costcentercode)
	{
		setCostCenterCode(getContext(), costcentercode);
	}

	/**
	 * Set value of CostCenterCode
	 * @param context
	 * @param costcentercode
	 */
	public final void setCostCenterCode(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String costcentercode)
	{
		getMendixObject().setValue(context, MemberNames.CostCenterCode.toString(), costcentercode);
	}

	/**
	 * @return value of Organisation_CostCenter
	 */
	public final java.util.List<nap.proxies.Organisation> getOrganisation_CostCenter() throws com.mendix.core.CoreException
	{
		return getOrganisation_CostCenter(getContext());
	}

	/**
	 * @param context
	 * @return value of Organisation_CostCenter
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<nap.proxies.Organisation> getOrganisation_CostCenter(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<nap.proxies.Organisation> result = new java.util.ArrayList<nap.proxies.Organisation>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.Organisation_CostCenter.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(nap.proxies.Organisation.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of Organisation_CostCenter
	 * @param organisation_costcenter
	 */
	public final void setOrganisation_CostCenter(java.util.List<nap.proxies.Organisation> organisation_costcenter)
	{
		setOrganisation_CostCenter(getContext(), organisation_costcenter);
	}

	/**
	 * Set value of Organisation_CostCenter
	 * @param context
	 * @param organisation_costcenter
	 */
	public final void setOrganisation_CostCenter(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<nap.proxies.Organisation> organisation_costcenter)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (nap.proxies.Organisation proxyObject : organisation_costcenter)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.Organisation_CostCenter.toString(), identifiers);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return costCenterMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final billing.proxies.CostCenter that = (billing.proxies.CostCenter) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Billing.CostCenter";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
