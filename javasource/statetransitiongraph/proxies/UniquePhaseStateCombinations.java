// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package statetransitiongraph.proxies;

public class UniquePhaseStateCombinations
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject uniquePhaseStateCombinationsMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "StateTransitionGraph.UniquePhaseStateCombinations";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		State("State"),
		Phase("Phase"),
		StartPoint("StartPoint"),
		PhaseOrder("PhaseOrder"),
		StateOrder("StateOrder"),
		ChartOrder("ChartOrder"),
		UniquePhaseStateCombinations_Matrix("StateTransitionGraph.UniquePhaseStateCombinations_Matrix");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public UniquePhaseStateCombinations(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "StateTransitionGraph.UniquePhaseStateCombinations"));
	}

	protected UniquePhaseStateCombinations(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject uniquePhaseStateCombinationsMendixObject)
	{
		if (uniquePhaseStateCombinationsMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("StateTransitionGraph.UniquePhaseStateCombinations", uniquePhaseStateCombinationsMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a StateTransitionGraph.UniquePhaseStateCombinations");

		this.uniquePhaseStateCombinationsMendixObject = uniquePhaseStateCombinationsMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'UniquePhaseStateCombinations.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static statetransitiongraph.proxies.UniquePhaseStateCombinations initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return statetransitiongraph.proxies.UniquePhaseStateCombinations.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static statetransitiongraph.proxies.UniquePhaseStateCombinations initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new statetransitiongraph.proxies.UniquePhaseStateCombinations(context, mendixObject);
	}

	public static statetransitiongraph.proxies.UniquePhaseStateCombinations load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return statetransitiongraph.proxies.UniquePhaseStateCombinations.initialize(context, mendixObject);
	}

	public static java.util.List<statetransitiongraph.proxies.UniquePhaseStateCombinations> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<statetransitiongraph.proxies.UniquePhaseStateCombinations> result = new java.util.ArrayList<statetransitiongraph.proxies.UniquePhaseStateCombinations>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//StateTransitionGraph.UniquePhaseStateCombinations" + xpathConstraint))
			result.add(statetransitiongraph.proxies.UniquePhaseStateCombinations.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of State
	 */
	public final java.lang.String getState()
	{
		return getState(getContext());
	}

	/**
	 * @param context
	 * @return value of State
	 */
	public final java.lang.String getState(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.State.toString());
	}

	/**
	 * Set value of State
	 * @param state
	 */
	public final void setState(java.lang.String state)
	{
		setState(getContext(), state);
	}

	/**
	 * Set value of State
	 * @param context
	 * @param state
	 */
	public final void setState(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String state)
	{
		getMendixObject().setValue(context, MemberNames.State.toString(), state);
	}

	/**
	 * @return value of Phase
	 */
	public final java.lang.String getPhase()
	{
		return getPhase(getContext());
	}

	/**
	 * @param context
	 * @return value of Phase
	 */
	public final java.lang.String getPhase(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Phase.toString());
	}

	/**
	 * Set value of Phase
	 * @param phase
	 */
	public final void setPhase(java.lang.String phase)
	{
		setPhase(getContext(), phase);
	}

	/**
	 * Set value of Phase
	 * @param context
	 * @param phase
	 */
	public final void setPhase(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String phase)
	{
		getMendixObject().setValue(context, MemberNames.Phase.toString(), phase);
	}

	/**
	 * @return value of StartPoint
	 */
	public final java.lang.Boolean getStartPoint()
	{
		return getStartPoint(getContext());
	}

	/**
	 * @param context
	 * @return value of StartPoint
	 */
	public final java.lang.Boolean getStartPoint(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.StartPoint.toString());
	}

	/**
	 * Set value of StartPoint
	 * @param startpoint
	 */
	public final void setStartPoint(java.lang.Boolean startpoint)
	{
		setStartPoint(getContext(), startpoint);
	}

	/**
	 * Set value of StartPoint
	 * @param context
	 * @param startpoint
	 */
	public final void setStartPoint(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean startpoint)
	{
		getMendixObject().setValue(context, MemberNames.StartPoint.toString(), startpoint);
	}

	/**
	 * @return value of PhaseOrder
	 */
	public final java.lang.Integer getPhaseOrder()
	{
		return getPhaseOrder(getContext());
	}

	/**
	 * @param context
	 * @return value of PhaseOrder
	 */
	public final java.lang.Integer getPhaseOrder(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.PhaseOrder.toString());
	}

	/**
	 * Set value of PhaseOrder
	 * @param phaseorder
	 */
	public final void setPhaseOrder(java.lang.Integer phaseorder)
	{
		setPhaseOrder(getContext(), phaseorder);
	}

	/**
	 * Set value of PhaseOrder
	 * @param context
	 * @param phaseorder
	 */
	public final void setPhaseOrder(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer phaseorder)
	{
		getMendixObject().setValue(context, MemberNames.PhaseOrder.toString(), phaseorder);
	}

	/**
	 * @return value of StateOrder
	 */
	public final java.lang.Integer getStateOrder()
	{
		return getStateOrder(getContext());
	}

	/**
	 * @param context
	 * @return value of StateOrder
	 */
	public final java.lang.Integer getStateOrder(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.StateOrder.toString());
	}

	/**
	 * Set value of StateOrder
	 * @param stateorder
	 */
	public final void setStateOrder(java.lang.Integer stateorder)
	{
		setStateOrder(getContext(), stateorder);
	}

	/**
	 * Set value of StateOrder
	 * @param context
	 * @param stateorder
	 */
	public final void setStateOrder(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer stateorder)
	{
		getMendixObject().setValue(context, MemberNames.StateOrder.toString(), stateorder);
	}

	/**
	 * @return value of ChartOrder
	 */
	public final java.lang.Integer getChartOrder()
	{
		return getChartOrder(getContext());
	}

	/**
	 * @param context
	 * @return value of ChartOrder
	 */
	public final java.lang.Integer getChartOrder(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.ChartOrder.toString());
	}

	/**
	 * Set value of ChartOrder
	 * @param chartorder
	 */
	public final void setChartOrder(java.lang.Integer chartorder)
	{
		setChartOrder(getContext(), chartorder);
	}

	/**
	 * Set value of ChartOrder
	 * @param context
	 * @param chartorder
	 */
	public final void setChartOrder(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer chartorder)
	{
		getMendixObject().setValue(context, MemberNames.ChartOrder.toString(), chartorder);
	}

	/**
	 * @return value of UniquePhaseStateCombinations_Matrix
	 */
	public final statetransition.proxies.Matrix getUniquePhaseStateCombinations_Matrix() throws com.mendix.core.CoreException
	{
		return getUniquePhaseStateCombinations_Matrix(getContext());
	}

	/**
	 * @param context
	 * @return value of UniquePhaseStateCombinations_Matrix
	 */
	public final statetransition.proxies.Matrix getUniquePhaseStateCombinations_Matrix(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		statetransition.proxies.Matrix result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.UniquePhaseStateCombinations_Matrix.toString());
		if (identifier != null)
			result = statetransition.proxies.Matrix.load(context, identifier);
		return result;
	}

	/**
	 * Set value of UniquePhaseStateCombinations_Matrix
	 * @param uniquephasestatecombinations_matrix
	 */
	public final void setUniquePhaseStateCombinations_Matrix(statetransition.proxies.Matrix uniquephasestatecombinations_matrix)
	{
		setUniquePhaseStateCombinations_Matrix(getContext(), uniquephasestatecombinations_matrix);
	}

	/**
	 * Set value of UniquePhaseStateCombinations_Matrix
	 * @param context
	 * @param uniquephasestatecombinations_matrix
	 */
	public final void setUniquePhaseStateCombinations_Matrix(com.mendix.systemwideinterfaces.core.IContext context, statetransition.proxies.Matrix uniquephasestatecombinations_matrix)
	{
		if (uniquephasestatecombinations_matrix == null)
			getMendixObject().setValue(context, MemberNames.UniquePhaseStateCombinations_Matrix.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.UniquePhaseStateCombinations_Matrix.toString(), uniquephasestatecombinations_matrix.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return uniquePhaseStateCombinationsMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final statetransitiongraph.proxies.UniquePhaseStateCombinations that = (statetransitiongraph.proxies.UniquePhaseStateCombinations) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "StateTransitionGraph.UniquePhaseStateCombinations";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
