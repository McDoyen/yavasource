// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package portal.proxies;

public class FAQ
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject fAQMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Portal.FAQ";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Question("Question"),
		FAQ_FAQSubject("Portal.FAQ_FAQSubject");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public FAQ(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Portal.FAQ"));
	}

	protected FAQ(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject fAQMendixObject)
	{
		if (fAQMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Portal.FAQ", fAQMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Portal.FAQ");

		this.fAQMendixObject = fAQMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'FAQ.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static portal.proxies.FAQ initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return portal.proxies.FAQ.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static portal.proxies.FAQ initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new portal.proxies.FAQ(context, mendixObject);
	}

	public static portal.proxies.FAQ load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return portal.proxies.FAQ.initialize(context, mendixObject);
	}

	public static java.util.List<portal.proxies.FAQ> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<portal.proxies.FAQ> result = new java.util.ArrayList<portal.proxies.FAQ>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Portal.FAQ" + xpathConstraint))
			result.add(portal.proxies.FAQ.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Question
	 */
	public final java.lang.String getQuestion()
	{
		return getQuestion(getContext());
	}

	/**
	 * @param context
	 * @return value of Question
	 */
	public final java.lang.String getQuestion(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Question.toString());
	}

	/**
	 * Set value of Question
	 * @param question
	 */
	public final void setQuestion(java.lang.String question)
	{
		setQuestion(getContext(), question);
	}

	/**
	 * Set value of Question
	 * @param context
	 * @param question
	 */
	public final void setQuestion(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String question)
	{
		getMendixObject().setValue(context, MemberNames.Question.toString(), question);
	}

	/**
	 * @return value of FAQ_FAQSubject
	 */
	public final java.util.List<portal.proxies.FAQSubject> getFAQ_FAQSubject() throws com.mendix.core.CoreException
	{
		return getFAQ_FAQSubject(getContext());
	}

	/**
	 * @param context
	 * @return value of FAQ_FAQSubject
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<portal.proxies.FAQSubject> getFAQ_FAQSubject(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<portal.proxies.FAQSubject> result = new java.util.ArrayList<portal.proxies.FAQSubject>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.FAQ_FAQSubject.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(portal.proxies.FAQSubject.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of FAQ_FAQSubject
	 * @param faq_faqsubject
	 */
	public final void setFAQ_FAQSubject(java.util.List<portal.proxies.FAQSubject> faq_faqsubject)
	{
		setFAQ_FAQSubject(getContext(), faq_faqsubject);
	}

	/**
	 * Set value of FAQ_FAQSubject
	 * @param context
	 * @param faq_faqsubject
	 */
	public final void setFAQ_FAQSubject(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<portal.proxies.FAQSubject> faq_faqsubject)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (portal.proxies.FAQSubject proxyObject : faq_faqsubject)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.FAQ_FAQSubject.toString(), identifiers);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return fAQMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final portal.proxies.FAQ that = (portal.proxies.FAQ) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Portal.FAQ";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
