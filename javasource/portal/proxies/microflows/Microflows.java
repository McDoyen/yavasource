// This file was generated by Mendix Modeler 7.7.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package portal.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the Portal module
	public static void addPortalRequestAffectedCI(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Portal.addPortalRequestAffectedCI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void addPortalRequestAttachment(IContext context, process.proxies.Request _inputRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputRequest", _inputRequest == null ? null : _inputRequest.getMendixObject());
			Core.execute(context, "Portal.addPortalRequestAttachment", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void apply_FAQ(IContext context, portal.proxies.FAQ _fAQ)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FAQ", _fAQ == null ? null : _fAQ.getMendixObject());
			Core.execute(context, "Portal.Apply_FAQ", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void auditSLMPortalQuickCall_AfterCommit(IContext context, portal.proxies.SLMPortalQuickCall _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			Core.execute(context, "Portal.AuditSLMPortalQuickCall_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean auditSLMPortalQuickCall_AfterDelete(IContext context, portal.proxies.SLMPortalQuickCall _object)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Object", _object == null ? null : _object.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Portal.AuditSLMPortalQuickCall_AfterDelete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bC_ValidateSLMPortalQuickCall(IContext context, portal.proxies.SLMPortalQuickCall _sLMPortalQuickCall)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SLMPortalQuickCall", _sLMPortalQuickCall == null ? null : _sLMPortalQuickCall.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Portal.BC_ValidateSLMPortalQuickCall", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3073] Need to reset the values for Portal links availability, as the dataView with the action links will not be re-executed. It only refreshes the object in the dataview
	 */
	public static void close_PortalRequest(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Portal.Close_PortalRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void create_Ticket_From_AssetList(IContext context, cmdb.proxies.ConfigurationItem _configurationItem, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ConfigurationItem", _configurationItem == null ? null : _configurationItem.getMendixObject());
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "Portal.Create_Ticket_From_AssetList", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void delete_FAQ(IContext context, portal.proxies.FAQ _fAQ)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FAQ", _fAQ == null ? null : _fAQ.getMendixObject());
			Core.execute(context, "Portal.Delete_FAQ", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deletePortalRequestAffectedCI(IContext context, process.proxies.Request _request, cmdb.proxies.AffectedCI _affectedCI)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("AffectedCI", _affectedCI == null ? null : _affectedCI.getMendixObject());
			Core.execute(context, "Portal.deletePortalRequestAffectedCI", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deletePortalRequestAttachment(IContext context, process.proxies.RequestAttachment _requestAttachment, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RequestAttachment", _requestAttachment == null ? null : _requestAttachment.getMendixObject());
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Portal.deletePortalRequestAttachment", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [809110] Added microflow to return the count of external references for portal users
	 */
	public static java.lang.String dS_GetNumberOfExternalReferences(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Portal.DS_GetNumberOfExternalReferences", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3073] Moved and renamed this flow. Old name 'Process.AC_SetPortalFields'.
	 * Modified return to be an instance of Process.Request. Added checks if Matrix is set and allows portal actions.
	 * Use separate flow for solution display.
	 * Added check if input parameter is not empty.
	 * 
	 */
	public static process.proxies.Request dS_GetPortalRequestButtons(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Portal.DS_GetPortalRequestButtons", params);
			return result == null ? null : process.proxies.Request.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3073] Check if solution should be visible on the mobile
	 */
	public static process.proxies.Request dS_GetPortalRequestShowSolution(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Portal.DS_GetPortalRequestShowSolution", params);
			return result == null ? null : process.proxies.Request.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String dSo_GetFAQSubjects(IContext context, portal.proxies.FAQ _fAQ)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FAQ", _fAQ == null ? null : _fAQ.getMendixObject());
			return (java.lang.String)Core.execute(context, "Portal.DSo_GetFAQSubjects", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void edit_FAQ(IContext context, portal.proxies.FAQ _fAQ)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FAQ", _fAQ == null ? null : _fAQ.getMendixObject());
			Core.execute(context, "Portal.Edit_FAQ", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void edit_Set_Aspects_Show_Fields(IContext context, portal.proxies.SLMPortalQuickCall _sLMPortalQuickCall, slm.proxies.Contract _contract)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SLMPortalQuickCall", _sLMPortalQuickCall == null ? null : _sLMPortalQuickCall.getMendixObject());
			params.put("Contract", _contract == null ? null : _contract.getMendixObject());
			Core.execute(context, "Portal.Edit_Set_Aspects_Show_Fields", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void fill_Fields_PortalRequest_NoEntityAccess(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Portal.Fill_Fields_PortalRequest_NoEntityAccess", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<notes.proxies.Note> getExternalNotes(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Portal.getExternalNotes", params);
			java.util.List<notes.proxies.Note> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<notes.proxies.Note>();
				for (IMendixObject obj : objs)
					result.add(notes.proxies.Note.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getLocalizedQueryName(IContext context, portal.proxies.PortalQueries _portalQueries)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PortalQueries", _portalQueries == null ? null : _portalQueries.name());
			return (java.lang.String)Core.execute(context, "Portal.getLocalizedQueryName", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void getMyAssets(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Portal.getMyAssets", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void getMyOrderHistory(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Portal.getMyOrderHistory", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void getMyOrdersWaitingForApproval(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Portal.getMyOrdersWaitingForApproval", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void getMyOrganizationRequestHistory(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Portal.getMyOrganizationRequestHistory", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void getMyOrganizationRequests(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Portal.getMyOrganizationRequests", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void getMyRequestHistory(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Portal.getMyRequestHistory", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void getMyRequests(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Portal.getMyRequests", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void getMySolvedRequests(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Portal.getMySolvedRequests", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getNumberOfAffectedCIs(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Portal.getNumberOfAffectedCIs", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [801176] Update for input parameters for calling microflow 'GetDateTimeStringForLanguage':
	 * Additional input 'AsUTC' set to false for all
	 */
	public static java.lang.String getPortalRequestSnippetBody(IContext context, process.proxies.OverviewRequest _overviewRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OverviewRequest", _overviewRequest == null ? null : _overviewRequest.getMendixObject());
			return (java.lang.String)Core.execute(context, "Portal.GetPortalRequestSnippetBody", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getPortalRequestSnippetHeader(IContext context, process.proxies.OverviewRequest _overviewRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OverviewRequest", _overviewRequest == null ? null : _overviewRequest.getMendixObject());
			return (java.lang.String)Core.execute(context, "Portal.GetPortalRequestSnippetHeader", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getPortalRequestSnippetSLMAspect(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.String)Core.execute(context, "Portal.GetPortalRequestSnippetSLMAspect", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static process.proxies.Request getRequestAndPortalActionsRequest(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Portal.GetRequestAndPortalActionsRequest", params);
			return result == null ? null : process.proxies.Request.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [801176] Update for input parameters for calling microflow 'GetDateTimeStringForLanguage':
	 * Additional input 'AsUTC' set to false for all
	 */
	public static java.lang.String getShoppingCartSnippetBody(IContext context, servicecatalogue.proxies.ShoppingCart _shoppingCart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ShoppingCart", _shoppingCart == null ? null : _shoppingCart.getMendixObject());
			return (java.lang.String)Core.execute(context, "Portal.GetShoppingCartSnippetBody", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getShoppingCartSnippetHeader(IContext context, servicecatalogue.proxies.ShoppingCart _shoppingCart)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ShoppingCart", _shoppingCart == null ? null : _shoppingCart.getMendixObject());
			return (java.lang.String)Core.execute(context, "Portal.GetShoppingCartSnippetHeader", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AddNewFAQ(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Portal.IVK_AddNewFAQ", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AdvancedPortalRequestSaveAndClose(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Portal.IVK_AdvancedPortalRequestSaveAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_AdvancedPortalRequestSaveAndNew(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Portal.IVK_AdvancedPortalRequestSaveAndNew", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean iVK_AdvancedPortalRequestSaveAndOpen(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Portal.IVK_AdvancedPortalRequestSaveAndOpen", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean iVK_CreateAndOpenPortalRequest(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Portal.IVK_CreateAndOpenPortalRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean iVK_CreatePortalRequestAndClose(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Portal.IVK_CreatePortalRequestAndClose", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_CreatePortalRequestAndOpenNew(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Portal.IVK_CreatePortalRequestAndOpenNew", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DeleteAttachment(IContext context, process.proxies.RequestAttachment _requestAttachment)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RequestAttachment", _requestAttachment == null ? null : _requestAttachment.getMendixObject());
			Core.execute(context, "Portal.IVK_DeleteAttachment", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [809110] Added microflow to open popup to display the External References
	 */
	public static void iVK_OpenPortalRequestExternalReferences(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Portal.IVK_OpenPortalRequestExternalReferences", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_PortalRequestCancel(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Portal.IVK_PortalRequestCancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean mCa_CheckQueuedRequestRequirements(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.Boolean)Core.execute(context, "Portal.MCa_CheckQueuedRequestRequirements", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mCa_SetPortalQuickRequest(IContext context, process.proxies.Request _inputRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputRequest", _inputRequest == null ? null : _inputRequest.getMendixObject());
			Core.execute(context, "Portal.MCa_SetPortalQuickRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void new_PortalRequest(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Portal.New_PortalRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void new_PortalRequest_Deeplink(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Portal.New_PortalRequest_Deeplink", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void new_PortalRequestWithTemplate_Deeplink(IContext context, java.lang.String _templateCode)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TemplateCode", _templateCode);
			Core.execute(context, "Portal.New_PortalRequestWithTemplate_Deeplink", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void new_Set_Aspects_Show_Fields(IContext context, slm.proxies.Contract _contract)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Contract", _contract == null ? null : _contract.getMendixObject());
			Core.execute(context, "Portal.New_Set_Aspects_Show_Fields", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oCh_RequestCallerOrganisationPortalRequest(IContext context, process.proxies.Request _inputRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputRequest", _inputRequest == null ? null : _inputRequest.getMendixObject());
			Core.execute(context, "Portal.OCh_RequestCallerOrganisationPortalRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void open_CloseForm_PortalRequest(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Portal.Open_CloseForm_PortalRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void open_FAQ(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Portal.Open_FAQ", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void open_RejectSolutionForm_PortalRequest(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Portal.Open_RejectSolutionForm_PortalRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openPortalRequestAffectedCIs(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Portal.openPortalRequestAffectedCIs", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openPortalRequestAttachments(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Portal.openPortalRequestAttachments", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openPortalView(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Portal.OpenPortalView", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openSingleOverviewRequest(IContext context, process.proxies.OverviewRequest _overviewRequest)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OverviewRequest", _overviewRequest == null ? null : _overviewRequest.getMendixObject());
			Core.execute(context, "Portal.openSingleOverviewRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3073] Removed checks if Matrix not empty, and if matrix has portal actions enabled. Added check if transition can be handled in current state. If not, do not show the button.
	 */
	public static boolean request_PortalCancelAvailable(IContext context, process.proxies.Request _request, statetransition.proxies.State _state, statetransition.proxies.Matrix _matrix, statetransition.proxies.Phase _phase)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("State", _state == null ? null : _state.getMendixObject());
			params.put("Matrix", _matrix == null ? null : _matrix.getMendixObject());
			params.put("Phase", _phase == null ? null : _phase.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Portal.Request_PortalCancelAvailable", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3073] Removed checks if Matrix not empty, and if matrix has portal actions enabled. Added check if transition can be handled in current state. If not, do not show the button.
	 */
	public static boolean request_PortalClosedAvailable(IContext context, process.proxies.Request _request, statetransition.proxies.State _state, statetransition.proxies.Phase _phase, statetransition.proxies.Matrix _matrix)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("State", _state == null ? null : _state.getMendixObject());
			params.put("Phase", _phase == null ? null : _phase.getMendixObject());
			params.put("Matrix", _matrix == null ? null : _matrix.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Portal.Request_PortalClosedAvailable", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3073] Removed checks if Matrix not empty, and if matrix has portal actions enabled. Added check if transition can be handled in current state. If not, do not show the button.
	 */
	public static boolean request_PortalRejectAvailable(IContext context, process.proxies.Request _request, statetransition.proxies.State _state, statetransition.proxies.Matrix _matrix, statetransition.proxies.Phase _phase)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("State", _state == null ? null : _state.getMendixObject());
			params.put("Matrix", _matrix == null ? null : _matrix.getMendixObject());
			params.put("Phase", _phase == null ? null : _phase.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Portal.Request_PortalRejectAvailable", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean request_PortalRequestIsSolved(IContext context, process.proxies.Request _request, statetransition.proxies.State _state, statetransition.proxies.Matrix _matrix, statetransition.proxies.Phase _phase)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			params.put("State", _state == null ? null : _state.getMendixObject());
			params.put("Matrix", _matrix == null ? null : _matrix.getMendixObject());
			params.put("Phase", _phase == null ? null : _phase.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Portal.Request_PortalRequestIsSolved", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<nap.proxies.Organisation> retrieveOrganisation_NoEntityAccess(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Portal.RetrieveOrganisation_NoEntityAccess", params);
			java.util.List<nap.proxies.Organisation> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<nap.proxies.Organisation>();
				for (IMendixObject obj : objs)
					result.add(nap.proxies.Organisation.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean sanitizeFAQQuestionHTML(IContext context, portal.proxies.FAQ _fAQ)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FAQ", _fAQ == null ? null : _fAQ.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Portal.SanitizeFAQQuestionHTML", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3073] Need to reset the values for Portal links availability, as the dataView with the action links will not be re-executed. It only refreshes the object in the dataview
	 */
	public static void save_CancelReason_PortalRequest(IContext context, notes.proxies.Note _note)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Note", _note == null ? null : _note.getMendixObject());
			Core.execute(context, "Portal.Save_CancelReason_PortalRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * [3073] Need to reset the values for Portal links availability, as the dataView with the action links will not be re-executed. It only refreshes the object in the dataview
	 */
	public static void save_RejectSolutionReason_PortalRequest(IContext context, notes.proxies.Note _note)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Note", _note == null ? null : _note.getMendixObject());
			Core.execute(context, "Portal.Save_RejectSolutionReason_PortalRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void saveAndClosePortalQuickRequest(IContext context, portal.proxies.SLMPortalQuickCall _inputSLMPortalQuickCall)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InputSLMPortalQuickCall", _inputSLMPortalQuickCall == null ? null : _inputSLMPortalQuickCall.getMendixObject());
			Core.execute(context, "Portal.SaveAndClosePortalQuickRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void saveFAQ(IContext context, portal.proxies.FAQ _fAQ)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FAQ", _fAQ == null ? null : _fAQ.getMendixObject());
			Core.execute(context, "Portal.SaveFAQ", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void set_Aspect_Fields(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Portal.Set_Aspect_Fields", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean set_NoHtmlDescription_QuickCall(IContext context, portal.proxies.PortalQuickCall _portalQuickCall)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PortalQuickCall", _portalQuickCall == null ? null : _portalQuickCall.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Portal.Set_NoHtmlDescription_QuickCall", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setSLMPortalQuickCall(IContext context, portal.proxies.SLMPortalQuickCall _sLMPortalQuickCall, nap.proxies.Organisation _organisation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SLMPortalQuickCall", _sLMPortalQuickCall == null ? null : _sLMPortalQuickCall.getMendixObject());
			params.put("Organisation", _organisation == null ? null : _organisation.getMendixObject());
			Core.execute(context, "Portal.SetSLMPortalQuickCall", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void show_PortalHomePage_Debug(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Portal.Show_PortalHomePage_Debug", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void showAndClearFields(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Portal.ShowAndClearFields", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<cmdb.proxies.ConfigurationItem> showCIForPersons(IContext context, nap.proxies.Person _person)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Portal.ShowCIForPersons", params);
			java.util.List<cmdb.proxies.ConfigurationItem> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<cmdb.proxies.ConfigurationItem>();
				for (IMendixObject obj : objs)
					result.add(cmdb.proxies.ConfigurationItem.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void showCustomerPortalRequestGrid(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Portal.showCustomerPortalRequestGrid", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void showCustomerPortalRequestView(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Portal.showCustomerPortalRequestView", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void showNoResultsPage(IContext context, queryrequests.proxies.QueryPanel _queryPanel)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryPanel", _queryPanel == null ? null : _queryPanel.getMendixObject());
			Core.execute(context, "Portal.showNoResultsPage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * 3540
	 * Changed xpath of MyRequestList. Portaluser now also sees tickets which are created on his behalf.
	 * 
	 */
	public static void showQueryResults(IContext context, portal.proxies.PortalQueries _portalQueries)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PortalQueries", _portalQueries == null ? null : _portalQueries.name());
			Core.execute(context, "Portal.showQueryResults", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sLMPortalQuickCall(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Portal.SLMPortalQuickCall", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validate_Fields_SLMPortalDescription(IContext context, portal.proxies.SLMPortalQuickCall _sLMPortalQuickCall)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SLMPortalQuickCall", _sLMPortalQuickCall == null ? null : _sLMPortalQuickCall.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Portal.Validate_Fields_SLMPortalDescription", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validateFAQ_Unique(IContext context, portal.proxies.FAQSubject _fAQSubject)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FAQSubject", _fAQSubject == null ? null : _fAQSubject.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Portal.ValidateFAQ_Unique", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void validateSLMPortalQuickCall(IContext context, slm.proxies.Contract _contract, portal.proxies.SLMPortalQuickCall _sLMPortalQuickCall)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Contract", _contract == null ? null : _contract.getMendixObject());
			params.put("SLMPortalQuickCall", _sLMPortalQuickCall == null ? null : _sLMPortalQuickCall.getMendixObject());
			Core.execute(context, "Portal.ValidateSLMPortalQuickCall", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void view_All_PublicNotes_CurrentRequest(IContext context, process.proxies.Request _request)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Request", _request == null ? null : _request.getMendixObject());
			Core.execute(context, "Portal.View_All_PublicNotes_CurrentRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}