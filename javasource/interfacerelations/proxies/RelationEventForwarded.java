// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package interfacerelations.proxies;

public class RelationEventForwarded
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject relationEventForwardedMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "InterfaceRelations.RelationEventForwarded";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Successful("Successful"),
		ErrorMessage("ErrorMessage"),
		RelationEventForwarded_TicketRelations("InterfaceRelations.RelationEventForwarded_TicketRelations"),
		RelationEventForwarded_InterfaceConfiguration("InterfaceRelations.RelationEventForwarded_InterfaceConfiguration"),
		RelationEventForwarded_RequestEvent("InterfaceRelations.RelationEventForwarded_RequestEvent");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public RelationEventForwarded(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "InterfaceRelations.RelationEventForwarded"));
	}

	protected RelationEventForwarded(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject relationEventForwardedMendixObject)
	{
		if (relationEventForwardedMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("InterfaceRelations.RelationEventForwarded", relationEventForwardedMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a InterfaceRelations.RelationEventForwarded");

		this.relationEventForwardedMendixObject = relationEventForwardedMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'RelationEventForwarded.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static interfacerelations.proxies.RelationEventForwarded initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return interfacerelations.proxies.RelationEventForwarded.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static interfacerelations.proxies.RelationEventForwarded initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new interfacerelations.proxies.RelationEventForwarded(context, mendixObject);
	}

	public static interfacerelations.proxies.RelationEventForwarded load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return interfacerelations.proxies.RelationEventForwarded.initialize(context, mendixObject);
	}

	public static java.util.List<interfacerelations.proxies.RelationEventForwarded> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<interfacerelations.proxies.RelationEventForwarded> result = new java.util.ArrayList<interfacerelations.proxies.RelationEventForwarded>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//InterfaceRelations.RelationEventForwarded" + xpathConstraint))
			result.add(interfacerelations.proxies.RelationEventForwarded.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Successful
	 */
	public final java.lang.Boolean getSuccessful()
	{
		return getSuccessful(getContext());
	}

	/**
	 * @param context
	 * @return value of Successful
	 */
	public final java.lang.Boolean getSuccessful(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.Successful.toString());
	}

	/**
	 * Set value of Successful
	 * @param successful
	 */
	public final void setSuccessful(java.lang.Boolean successful)
	{
		setSuccessful(getContext(), successful);
	}

	/**
	 * Set value of Successful
	 * @param context
	 * @param successful
	 */
	public final void setSuccessful(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean successful)
	{
		getMendixObject().setValue(context, MemberNames.Successful.toString(), successful);
	}

	/**
	 * @return value of ErrorMessage
	 */
	public final java.lang.String getErrorMessage()
	{
		return getErrorMessage(getContext());
	}

	/**
	 * @param context
	 * @return value of ErrorMessage
	 */
	public final java.lang.String getErrorMessage(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ErrorMessage.toString());
	}

	/**
	 * Set value of ErrorMessage
	 * @param errormessage
	 */
	public final void setErrorMessage(java.lang.String errormessage)
	{
		setErrorMessage(getContext(), errormessage);
	}

	/**
	 * Set value of ErrorMessage
	 * @param context
	 * @param errormessage
	 */
	public final void setErrorMessage(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String errormessage)
	{
		getMendixObject().setValue(context, MemberNames.ErrorMessage.toString(), errormessage);
	}

	/**
	 * @return value of RelationEventForwarded_TicketRelations
	 */
	public final process.proxies.TicketRelations getRelationEventForwarded_TicketRelations() throws com.mendix.core.CoreException
	{
		return getRelationEventForwarded_TicketRelations(getContext());
	}

	/**
	 * @param context
	 * @return value of RelationEventForwarded_TicketRelations
	 */
	public final process.proxies.TicketRelations getRelationEventForwarded_TicketRelations(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		process.proxies.TicketRelations result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.RelationEventForwarded_TicketRelations.toString());
		if (identifier != null)
			result = process.proxies.TicketRelations.load(context, identifier);
		return result;
	}

	/**
	 * Set value of RelationEventForwarded_TicketRelations
	 * @param relationeventforwarded_ticketrelations
	 */
	public final void setRelationEventForwarded_TicketRelations(process.proxies.TicketRelations relationeventforwarded_ticketrelations)
	{
		setRelationEventForwarded_TicketRelations(getContext(), relationeventforwarded_ticketrelations);
	}

	/**
	 * Set value of RelationEventForwarded_TicketRelations
	 * @param context
	 * @param relationeventforwarded_ticketrelations
	 */
	public final void setRelationEventForwarded_TicketRelations(com.mendix.systemwideinterfaces.core.IContext context, process.proxies.TicketRelations relationeventforwarded_ticketrelations)
	{
		if (relationeventforwarded_ticketrelations == null)
			getMendixObject().setValue(context, MemberNames.RelationEventForwarded_TicketRelations.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.RelationEventForwarded_TicketRelations.toString(), relationeventforwarded_ticketrelations.getMendixObject().getId());
	}

	/**
	 * @return value of RelationEventForwarded_InterfaceConfiguration
	 */
	public final interfaceconfiguration.proxies.InterfaceConfiguration getRelationEventForwarded_InterfaceConfiguration() throws com.mendix.core.CoreException
	{
		return getRelationEventForwarded_InterfaceConfiguration(getContext());
	}

	/**
	 * @param context
	 * @return value of RelationEventForwarded_InterfaceConfiguration
	 */
	public final interfaceconfiguration.proxies.InterfaceConfiguration getRelationEventForwarded_InterfaceConfiguration(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfaceconfiguration.proxies.InterfaceConfiguration result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.RelationEventForwarded_InterfaceConfiguration.toString());
		if (identifier != null)
			result = interfaceconfiguration.proxies.InterfaceConfiguration.load(context, identifier);
		return result;
	}

	/**
	 * Set value of RelationEventForwarded_InterfaceConfiguration
	 * @param relationeventforwarded_interfaceconfiguration
	 */
	public final void setRelationEventForwarded_InterfaceConfiguration(interfaceconfiguration.proxies.InterfaceConfiguration relationeventforwarded_interfaceconfiguration)
	{
		setRelationEventForwarded_InterfaceConfiguration(getContext(), relationeventforwarded_interfaceconfiguration);
	}

	/**
	 * Set value of RelationEventForwarded_InterfaceConfiguration
	 * @param context
	 * @param relationeventforwarded_interfaceconfiguration
	 */
	public final void setRelationEventForwarded_InterfaceConfiguration(com.mendix.systemwideinterfaces.core.IContext context, interfaceconfiguration.proxies.InterfaceConfiguration relationeventforwarded_interfaceconfiguration)
	{
		if (relationeventforwarded_interfaceconfiguration == null)
			getMendixObject().setValue(context, MemberNames.RelationEventForwarded_InterfaceConfiguration.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.RelationEventForwarded_InterfaceConfiguration.toString(), relationeventforwarded_interfaceconfiguration.getMendixObject().getId());
	}

	/**
	 * @return value of RelationEventForwarded_RequestEvent
	 */
	public final process.proxies.RequestEvent getRelationEventForwarded_RequestEvent() throws com.mendix.core.CoreException
	{
		return getRelationEventForwarded_RequestEvent(getContext());
	}

	/**
	 * @param context
	 * @return value of RelationEventForwarded_RequestEvent
	 */
	public final process.proxies.RequestEvent getRelationEventForwarded_RequestEvent(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		process.proxies.RequestEvent result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.RelationEventForwarded_RequestEvent.toString());
		if (identifier != null)
			result = process.proxies.RequestEvent.load(context, identifier);
		return result;
	}

	/**
	 * Set value of RelationEventForwarded_RequestEvent
	 * @param relationeventforwarded_requestevent
	 */
	public final void setRelationEventForwarded_RequestEvent(process.proxies.RequestEvent relationeventforwarded_requestevent)
	{
		setRelationEventForwarded_RequestEvent(getContext(), relationeventforwarded_requestevent);
	}

	/**
	 * Set value of RelationEventForwarded_RequestEvent
	 * @param context
	 * @param relationeventforwarded_requestevent
	 */
	public final void setRelationEventForwarded_RequestEvent(com.mendix.systemwideinterfaces.core.IContext context, process.proxies.RequestEvent relationeventforwarded_requestevent)
	{
		if (relationeventforwarded_requestevent == null)
			getMendixObject().setValue(context, MemberNames.RelationEventForwarded_RequestEvent.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.RelationEventForwarded_RequestEvent.toString(), relationeventforwarded_requestevent.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return relationEventForwardedMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final interfacerelations.proxies.RelationEventForwarded that = (interfacerelations.proxies.RelationEventForwarded) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "InterfaceRelations.RelationEventForwarded";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
