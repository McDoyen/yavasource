// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package interfacerelations.proxies;

public class OutgoingRelationsExpertDesk extends interfaceshared.proxies.AuditableEntity
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "InterfaceRelations.OutgoingRelationsExpertDesk";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		MessageID("MessageID"),
		InterfaceName("InterfaceName"),
		ExternalReferenceID("ExternalReferenceID"),
		InternalReferenceID("InternalReferenceID"),
		RelationsContainerExpertDesk_OutgoingRelationsExpertDesk("InterfaceRelations.RelationsContainerExpertDesk_OutgoingRelationsExpertDesk"),
		OutgoingRelationsExpertDesk_OutgoingRelationsMessageExpertDesk("InterfaceRelations.OutgoingRelationsExpertDesk_OutgoingRelationsMessageExpertDesk");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public OutgoingRelationsExpertDesk(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "InterfaceRelations.OutgoingRelationsExpertDesk"));
	}

	protected OutgoingRelationsExpertDesk(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject outgoingRelationsExpertDeskMendixObject)
	{
		super(context, outgoingRelationsExpertDeskMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("InterfaceRelations.OutgoingRelationsExpertDesk", outgoingRelationsExpertDeskMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a InterfaceRelations.OutgoingRelationsExpertDesk");
	}

	/**
	 * @deprecated Use 'OutgoingRelationsExpertDesk.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static interfacerelations.proxies.OutgoingRelationsExpertDesk initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return interfacerelations.proxies.OutgoingRelationsExpertDesk.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static interfacerelations.proxies.OutgoingRelationsExpertDesk initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new interfacerelations.proxies.OutgoingRelationsExpertDesk(context, mendixObject);
	}

	public static interfacerelations.proxies.OutgoingRelationsExpertDesk load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return interfacerelations.proxies.OutgoingRelationsExpertDesk.initialize(context, mendixObject);
	}

	public static java.util.List<interfacerelations.proxies.OutgoingRelationsExpertDesk> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<interfacerelations.proxies.OutgoingRelationsExpertDesk> result = new java.util.ArrayList<interfacerelations.proxies.OutgoingRelationsExpertDesk>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//InterfaceRelations.OutgoingRelationsExpertDesk" + xpathConstraint))
			result.add(interfacerelations.proxies.OutgoingRelationsExpertDesk.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of MessageID
	 */
	public final java.lang.String getMessageID()
	{
		return getMessageID(getContext());
	}

	/**
	 * @param context
	 * @return value of MessageID
	 */
	public final java.lang.String getMessageID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.MessageID.toString());
	}

	/**
	 * Set value of MessageID
	 * @param messageid
	 */
	public final void setMessageID(java.lang.String messageid)
	{
		setMessageID(getContext(), messageid);
	}

	/**
	 * Set value of MessageID
	 * @param context
	 * @param messageid
	 */
	public final void setMessageID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String messageid)
	{
		getMendixObject().setValue(context, MemberNames.MessageID.toString(), messageid);
	}

	/**
	 * @return value of InterfaceName
	 */
	public final java.lang.String getInterfaceName()
	{
		return getInterfaceName(getContext());
	}

	/**
	 * @param context
	 * @return value of InterfaceName
	 */
	public final java.lang.String getInterfaceName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.InterfaceName.toString());
	}

	/**
	 * Set value of InterfaceName
	 * @param interfacename
	 */
	public final void setInterfaceName(java.lang.String interfacename)
	{
		setInterfaceName(getContext(), interfacename);
	}

	/**
	 * Set value of InterfaceName
	 * @param context
	 * @param interfacename
	 */
	public final void setInterfaceName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String interfacename)
	{
		getMendixObject().setValue(context, MemberNames.InterfaceName.toString(), interfacename);
	}

	/**
	 * @return value of ExternalReferenceID
	 */
	public final java.lang.String getExternalReferenceID()
	{
		return getExternalReferenceID(getContext());
	}

	/**
	 * @param context
	 * @return value of ExternalReferenceID
	 */
	public final java.lang.String getExternalReferenceID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ExternalReferenceID.toString());
	}

	/**
	 * Set value of ExternalReferenceID
	 * @param externalreferenceid
	 */
	public final void setExternalReferenceID(java.lang.String externalreferenceid)
	{
		setExternalReferenceID(getContext(), externalreferenceid);
	}

	/**
	 * Set value of ExternalReferenceID
	 * @param context
	 * @param externalreferenceid
	 */
	public final void setExternalReferenceID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String externalreferenceid)
	{
		getMendixObject().setValue(context, MemberNames.ExternalReferenceID.toString(), externalreferenceid);
	}

	/**
	 * @return value of InternalReferenceID
	 */
	public final java.lang.String getInternalReferenceID()
	{
		return getInternalReferenceID(getContext());
	}

	/**
	 * @param context
	 * @return value of InternalReferenceID
	 */
	public final java.lang.String getInternalReferenceID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.InternalReferenceID.toString());
	}

	/**
	 * Set value of InternalReferenceID
	 * @param internalreferenceid
	 */
	public final void setInternalReferenceID(java.lang.String internalreferenceid)
	{
		setInternalReferenceID(getContext(), internalreferenceid);
	}

	/**
	 * Set value of InternalReferenceID
	 * @param context
	 * @param internalreferenceid
	 */
	public final void setInternalReferenceID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String internalreferenceid)
	{
		getMendixObject().setValue(context, MemberNames.InternalReferenceID.toString(), internalreferenceid);
	}

	/**
	 * @return value of RelationsContainerExpertDesk_OutgoingRelationsExpertDesk
	 */
	public final interfacerelations.proxies.RelationsContainerExpertDesk getRelationsContainerExpertDesk_OutgoingRelationsExpertDesk() throws com.mendix.core.CoreException
	{
		return getRelationsContainerExpertDesk_OutgoingRelationsExpertDesk(getContext());
	}

	/**
	 * @param context
	 * @return value of RelationsContainerExpertDesk_OutgoingRelationsExpertDesk
	 */
	public final interfacerelations.proxies.RelationsContainerExpertDesk getRelationsContainerExpertDesk_OutgoingRelationsExpertDesk(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfacerelations.proxies.RelationsContainerExpertDesk result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.RelationsContainerExpertDesk_OutgoingRelationsExpertDesk.toString());
		if (identifier != null)
			result = interfacerelations.proxies.RelationsContainerExpertDesk.load(context, identifier);
		return result;
	}

	/**
	 * Set value of RelationsContainerExpertDesk_OutgoingRelationsExpertDesk
	 * @param relationscontainerexpertdesk_outgoingrelationsexpertdesk
	 */
	public final void setRelationsContainerExpertDesk_OutgoingRelationsExpertDesk(interfacerelations.proxies.RelationsContainerExpertDesk relationscontainerexpertdesk_outgoingrelationsexpertdesk)
	{
		setRelationsContainerExpertDesk_OutgoingRelationsExpertDesk(getContext(), relationscontainerexpertdesk_outgoingrelationsexpertdesk);
	}

	/**
	 * Set value of RelationsContainerExpertDesk_OutgoingRelationsExpertDesk
	 * @param context
	 * @param relationscontainerexpertdesk_outgoingrelationsexpertdesk
	 */
	public final void setRelationsContainerExpertDesk_OutgoingRelationsExpertDesk(com.mendix.systemwideinterfaces.core.IContext context, interfacerelations.proxies.RelationsContainerExpertDesk relationscontainerexpertdesk_outgoingrelationsexpertdesk)
	{
		if (relationscontainerexpertdesk_outgoingrelationsexpertdesk == null)
			getMendixObject().setValue(context, MemberNames.RelationsContainerExpertDesk_OutgoingRelationsExpertDesk.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.RelationsContainerExpertDesk_OutgoingRelationsExpertDesk.toString(), relationscontainerexpertdesk_outgoingrelationsexpertdesk.getMendixObject().getId());
	}

	/**
	 * @return value of OutgoingRelationsExpertDesk_OutgoingRelationsMessageExpertDesk
	 */
	public final interfacerelations.proxies.OutgoingRelationsMessageExpertDesk getOutgoingRelationsExpertDesk_OutgoingRelationsMessageExpertDesk() throws com.mendix.core.CoreException
	{
		return getOutgoingRelationsExpertDesk_OutgoingRelationsMessageExpertDesk(getContext());
	}

	/**
	 * @param context
	 * @return value of OutgoingRelationsExpertDesk_OutgoingRelationsMessageExpertDesk
	 */
	public final interfacerelations.proxies.OutgoingRelationsMessageExpertDesk getOutgoingRelationsExpertDesk_OutgoingRelationsMessageExpertDesk(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		interfacerelations.proxies.OutgoingRelationsMessageExpertDesk result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.OutgoingRelationsExpertDesk_OutgoingRelationsMessageExpertDesk.toString());
		if (identifier != null)
			result = interfacerelations.proxies.OutgoingRelationsMessageExpertDesk.load(context, identifier);
		return result;
	}

	/**
	 * Set value of OutgoingRelationsExpertDesk_OutgoingRelationsMessageExpertDesk
	 * @param outgoingrelationsexpertdesk_outgoingrelationsmessageexpertdesk
	 */
	public final void setOutgoingRelationsExpertDesk_OutgoingRelationsMessageExpertDesk(interfacerelations.proxies.OutgoingRelationsMessageExpertDesk outgoingrelationsexpertdesk_outgoingrelationsmessageexpertdesk)
	{
		setOutgoingRelationsExpertDesk_OutgoingRelationsMessageExpertDesk(getContext(), outgoingrelationsexpertdesk_outgoingrelationsmessageexpertdesk);
	}

	/**
	 * Set value of OutgoingRelationsExpertDesk_OutgoingRelationsMessageExpertDesk
	 * @param context
	 * @param outgoingrelationsexpertdesk_outgoingrelationsmessageexpertdesk
	 */
	public final void setOutgoingRelationsExpertDesk_OutgoingRelationsMessageExpertDesk(com.mendix.systemwideinterfaces.core.IContext context, interfacerelations.proxies.OutgoingRelationsMessageExpertDesk outgoingrelationsexpertdesk_outgoingrelationsmessageexpertdesk)
	{
		if (outgoingrelationsexpertdesk_outgoingrelationsmessageexpertdesk == null)
			getMendixObject().setValue(context, MemberNames.OutgoingRelationsExpertDesk_OutgoingRelationsMessageExpertDesk.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.OutgoingRelationsExpertDesk_OutgoingRelationsMessageExpertDesk.toString(), outgoingrelationsexpertdesk_outgoingrelationsmessageexpertdesk.getMendixObject().getId());
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final interfacerelations.proxies.OutgoingRelationsExpertDesk that = (interfacerelations.proxies.OutgoingRelationsExpertDesk) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "InterfaceRelations.OutgoingRelationsExpertDesk";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
